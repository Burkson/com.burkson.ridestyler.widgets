{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ac",
				"activeImage"
			],
			[
				"state",
				"stateData\tlet"
			],
			[
				"create",
				"createElement\tfunction"
			],
			[
				"HTML",
				"HTMLHelper\tmodule"
			],
			[
				"geyt",
				"getElementsByClassName\tmethod"
			],
			[
				"options",
				"optionsCount\tlet"
			],
			[
				"option",
				"optionsCount\tlet"
			],
			[
				"opti",
				"optionsCount\tlet"
			],
			[
				"op",
				"optionsCount\tlet"
			],
			[
				"get",
				"getElementsByClassName\tmethod"
			],
			[
				"child",
				"childElementCount\tproperty"
			],
			[
				"chi",
				"childrenArray\tlet"
			],
			[
				"chidr",
				"children2\tlet"
			],
			[
				"padding",
				"paddingBottom\tproperty"
			],
			[
				"ba",
				"backgroundColor\tproperty"
			],
			[
				"ve",
				"vechileResetData\tlet"
			],
			[
				"Ve",
				"vehicleReset"
			],
			[
				"in",
				"instructions"
			],
			[
				"has",
				"hasChanges"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseVehicleSelection.ts",
			"settings":
			{
				"buffer_size": 6330,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/PromiseHelper.ts",
			"settings":
			{
				"buffer_size": 4060,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.api.settings.ts",
			"settings":
			{
				"buffer_size": 2574,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/index.html",
			"settings":
			{
				"buffer_size": 979,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseProductModal.scss",
			"settings":
			{
				"buffer_size": 1157,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop-xl/_showcase-table.scss",
			"settings":
			{
				"buffer_size": 170,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_showcase-table.scss",
			"settings":
			{
				"buffer_size": 168,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_showcase-table.scss",
			"settings":
			{
				"buffer_size": 169,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_showcase-table.scss",
			"settings":
			{
				"buffer_size": 169,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/gulpfile.js",
			"settings":
			{
				"buffer_size": 10531,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/ridestyler.showcase.js",
			"settings":
			{
				"buffer_size": 3002845,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcasePaginationComponent.scss",
			"settings":
			{
				"buffer_size": 3268,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/package.json",
			"settings":
			{
				"buffer_size": 1081,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/VehicleDetails.scss",
			"settings":
			{
				"buffer_size": 465,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 22076 files for \"try {\"\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\babel-runtime\\helpers\\asyncGenerator.js:\n   41  \n   42      function resume(key, arg) {\n   43:       try {\n   44          var result = gen[key](arg);\n   45          var value = result.value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:\n   14      return new _promise2.default(function (resolve, reject) {\n   15        function step(key, arg) {\n   16:         try {\n   17            var info = gen[key](arg);\n   18            var value = info.value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\babel-runtime\\helpers\\slicedToArray.js:\n   20      var _e = undefined;\n   21  \n   22:     try {\n   23        for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n   24          _arr.push(_s.value);\n   ..\n   30        _e = err;\n   31      } finally {\n   32:       try {\n   33          if (!_n && _i[\"return\"]) _i[\"return\"]();\n   34        } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime-module.js:\n   28  } else {\n   29    // Remove the global property added by runtime.js.\n   30:   try {\n   31      delete g.regeneratorRuntime;\n   32    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\babel-runtime\\node_modules\\regenerator-runtime\\runtime.js:\n   59    // has a stable shape and so hopefully should be cheap to allocate.\n   60    function tryCatch(fn, obj, arg) {\n   61:     try {\n   62        return { type: \"normal\", arg: fn.call(obj, arg) };\n   63      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\commander\\index.js:\n 1222  // for versions before node v0.8 when there weren't `fs.existsSync`\n 1223  function exists(file) {\n 1224:   try {\n 1225      if (fs.statSync(file).isFile()) {\n 1226        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\README.md:\n  771  \n  772  (async () => {\n  773:   try {\n  774      console.log('Run');                // => Run\n  775      console.log(await sleepRandom(5)); // => 936, after 5 sec.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\client\\core.js:\n  158  \n  159  module.exports = function (exec) {\n  160:   try {\n  161      return !!exec();\n  162    } catch (e) {\n  ...\n  196    P = toPrimitive(P, true);\n  197    anObject(Attributes);\n  198:   if (IE8_DOM_DEFINE) try {\n  199      return dP(O, P, Attributes);\n  200    } catch (e) { /* empty */ }\n  ...\n  336    O = toIObject(O);\n  337    P = toPrimitive(P, true);\n  338:   if (IE8_DOM_DEFINE) try {\n  339      return gOPD(O, P);\n  340    } catch (e) { /* empty */ }\n  ...\n 1332  // fallback for IE11 Script Access Denied error\n 1333  var tryGet = function (it, key) {\n 1334:   try {\n 1335      return it[key];\n 1336    } catch (e) { /* empty */ }\n ....\n 1667  var SAFE_CLOSING = false;\n 1668  \n 1669: try {\n 1670    var riter = [7][ITERATOR]();\n 1671    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 1677    if (!skipClosing && !SAFE_CLOSING) return false;\n 1678    var safe = false;\n 1679:   try {\n 1680      var arr = [7];\n 1681      var iter = arr[ITERATOR]();\n ....\n 2067    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 2068      function (test, buggy, set) {\n 2069:       try {\n 2070          set = __webpack_require__(19)(Function.call, __webpack_require__(15).f(Object.prototype, '__proto__').set, 2);\n 2071          set(test, []);\n ....\n 2218  module.exports = function (KEY) {\n 2219    var re = /./;\n 2220:   try {\n 2221      '/./'[KEY](re);\n 2222    } catch (e) {\n 2223:     try {\n 2224        re[MATCH] = false;\n 2225        return !'/./'[KEY](re);\n ....\n 2452        fn = head.fn;\n 2453        head = head.next;\n 2454:       try {\n 2455          fn();\n 2456        } catch (e) {\n ....\n 2925  \n 2926  var getWindowNames = function (it) {\n 2927:   try {\n 2928      return gOPN(it);\n 2929    } catch (e) {\n ....\n 3067  var anObject = __webpack_require__(1);\n 3068  module.exports = function (iterator, fn, value, entries) {\n 3069:   try {\n 3070      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 3071    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 3161  \n 3162  module.exports = function (exec) {\n 3163:   try {\n 3164      return { e: false, v: exec() };\n 3165    } catch (e) {\n ....\n 4501    configurable: true,\n 4502    get: function () {\n 4503:     try {\n 4504        return ('' + this).match(nameRE)[1];\n 4505      } catch (e) {\n ....\n 6195  \n 6196  var USE_NATIVE = !!function () {\n 6197:   try {\n 6198      // correct subclassing with @@species support\n 6199      var promise = $Promise.resolve(1);\n ....\n 6225        var domain = reaction.domain;\n 6226        var result, then, exited;\n 6227:       try {\n 6228          if (handler) {\n 6229            if (!ok) {\n ....\n 6307    promise._d = true;\n 6308    promise = promise._w || promise; // unwrap\n 6309:   try {\n 6310      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 6311      if (then = isThenable(value)) {\n 6312        microtask(function () {\n 6313          var wrapper = { _w: promise, _d: false }; // wrap\n 6314:         try {\n 6315            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 6316          } catch (e) {\n ....\n 6335      aFunction(executor);\n 6336      Internal.call(this);\n 6337:     try {\n 6338        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 6339      } catch (err) {\n ....\n 6563      propertyKey = toPrimitive(propertyKey, true);\n 6564      anObject(attributes);\n 6565:     try {\n 6566        dP.f(target, propertyKey, attributes);\n 6567        return true;\n ....\n 6735    preventExtensions: function preventExtensions(target) {\n 6736      anObject(target);\n 6737:     try {\n 6738        if ($preventExtensions) $preventExtensions(target);\n 6739        return true;\n ....\n 6795    setPrototypeOf: function setPrototypeOf(target, proto) {\n 6796      setProto.check(target, proto);\n 6797:     try {\n 6798        setProto.set(target, proto);\n 6799        return true;\n ....\n 8029    this._o = observer;\n 8030    observer = new SubscriptionObserver(this);\n 8031:   try {\n 8032      var cleanup = subscriber(observer);\n 8033      var subscription = cleanup;\n ....\n 8056      if (!subscriptionClosed(subscription)) {\n 8057        var observer = subscription._o;\n 8058:       try {\n 8059          var m = getMethod(observer.next);\n 8060          if (m) return m.call(observer, value);\n 8061        } catch (e) {\n 8062:         try {\n 8063            closeSubscription(subscription);\n 8064          } finally {\n ....\n 8073      var observer = subscription._o;\n 8074      subscription._o = undefined;\n 8075:     try {\n 8076        var m = getMethod(observer.error);\n 8077        if (!m) throw value;\n 8078        value = m.call(observer, value);\n 8079      } catch (e) {\n 8080:       try {\n 8081          cleanupSubscription(subscription);\n 8082        } finally {\n ....\n 8091        var observer = subscription._o;\n 8092        subscription._o = undefined;\n 8093:       try {\n 8094          var m = getMethod(observer.complete);\n 8095          value = m ? m.call(observer, value) : undefined;\n 8096        } catch (e) {\n 8097:         try {\n 8098            cleanupSubscription(subscription);\n 8099          } finally {\n ....\n 8120        var subscription = that.subscribe({\n 8121          next: function (value) {\n 8122:           try {\n 8123              return fn(value);\n 8124            } catch (e) {\n ....\n 8148        microtask(function () {\n 8149          if (!done) {\n 8150:           try {\n 8151              if (forOf(x, false, function (it) {\n 8152                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\client\\library.js:\n  177  \n  178  module.exports = function (exec) {\n  179:   try {\n  180      return !!exec();\n  181    } catch (e) {\n  ...\n  227    P = toPrimitive(P, true);\n  228    anObject(Attributes);\n  229:   if (IE8_DOM_DEFINE) try {\n  230      return dP(O, P, Attributes);\n  231    } catch (e) { /* empty */ }\n  ...\n  396    O = toIObject(O);\n  397    P = toPrimitive(P, true);\n  398:   if (IE8_DOM_DEFINE) try {\n  399      return gOPD(O, P);\n  400    } catch (e) { /* empty */ }\n  ...\n 1291  // fallback for IE11 Script Access Denied error\n 1292  var tryGet = function (it, key) {\n 1293:   try {\n 1294      return it[key];\n 1295    } catch (e) { /* empty */ }\n ....\n 2035  module.exports = function (KEY) {\n 2036    var re = /./;\n 2037:   try {\n 2038      '/./'[KEY](re);\n 2039    } catch (e) {\n 2040:     try {\n 2041        re[MATCH] = false;\n 2042        return !'/./'[KEY](re);\n ....\n 2082  var SAFE_CLOSING = false;\n 2083  \n 2084: try {\n 2085    var riter = [7][ITERATOR]();\n 2086    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 2092    if (!skipClosing && !SAFE_CLOSING) return false;\n 2093    var safe = false;\n 2094:   try {\n 2095      var arr = [7];\n 2096      var iter = arr[ITERATOR]();\n ....\n 2297        fn = head.fn;\n 2298        head = head.next;\n 2299:       try {\n 2300          fn();\n 2301        } catch (e) {\n ....\n 2770  \n 2771  var getWindowNames = function (it) {\n 2772:   try {\n 2773      return gOPN(it);\n 2774    } catch (e) {\n ....\n 2797    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 2798      function (test, buggy, set) {\n 2799:       try {\n 2800          set = __webpack_require__(16)(Function.call, __webpack_require__(18).f(Object.prototype, '__proto__').set, 2);\n 2801          set(test, []);\n ....\n 2957  var anObject = __webpack_require__(1);\n 2958  module.exports = function (iterator, fn, value, entries) {\n 2959:   try {\n 2960      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 2961    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 3040  \n 3041  module.exports = function (exec) {\n 3042:   try {\n 3043      return { e: false, v: exec() };\n 3044    } catch (e) {\n ....\n 5772  \n 5773  var USE_NATIVE = !!function () {\n 5774:   try {\n 5775      // correct subclassing with @@species support\n 5776      var promise = $Promise.resolve(1);\n ....\n 5802        var domain = reaction.domain;\n 5803        var result, then, exited;\n 5804:       try {\n 5805          if (handler) {\n 5806            if (!ok) {\n ....\n 5884    promise._d = true;\n 5885    promise = promise._w || promise; // unwrap\n 5886:   try {\n 5887      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 5888      if (then = isThenable(value)) {\n 5889        microtask(function () {\n 5890          var wrapper = { _w: promise, _d: false }; // wrap\n 5891:         try {\n 5892            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 5893          } catch (e) {\n ....\n 5912      aFunction(executor);\n 5913      Internal.call(this);\n 5914:     try {\n 5915        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 5916      } catch (err) {\n ....\n 6140      propertyKey = toPrimitive(propertyKey, true);\n 6141      anObject(attributes);\n 6142:     try {\n 6143        dP.f(target, propertyKey, attributes);\n 6144        return true;\n ....\n 6312    preventExtensions: function preventExtensions(target) {\n 6313      anObject(target);\n 6314:     try {\n 6315        if ($preventExtensions) $preventExtensions(target);\n 6316        return true;\n ....\n 6372    setPrototypeOf: function setPrototypeOf(target, proto) {\n 6373      setProto.check(target, proto);\n 6374:     try {\n 6375        setProto.set(target, proto);\n 6376        return true;\n ....\n 7552    this._o = observer;\n 7553    observer = new SubscriptionObserver(this);\n 7554:   try {\n 7555      var cleanup = subscriber(observer);\n 7556      var subscription = cleanup;\n ....\n 7579      if (!subscriptionClosed(subscription)) {\n 7580        var observer = subscription._o;\n 7581:       try {\n 7582          var m = getMethod(observer.next);\n 7583          if (m) return m.call(observer, value);\n 7584        } catch (e) {\n 7585:         try {\n 7586            closeSubscription(subscription);\n 7587          } finally {\n ....\n 7596      var observer = subscription._o;\n 7597      subscription._o = undefined;\n 7598:     try {\n 7599        var m = getMethod(observer.error);\n 7600        if (!m) throw value;\n 7601        value = m.call(observer, value);\n 7602      } catch (e) {\n 7603:       try {\n 7604          cleanupSubscription(subscription);\n 7605        } finally {\n ....\n 7614        var observer = subscription._o;\n 7615        subscription._o = undefined;\n 7616:       try {\n 7617          var m = getMethod(observer.complete);\n 7618          value = m ? m.call(observer, value) : undefined;\n 7619        } catch (e) {\n 7620:         try {\n 7621            cleanupSubscription(subscription);\n 7622          } finally {\n ....\n 7643        var subscription = that.subscribe({\n 7644          next: function (value) {\n 7645:           try {\n 7646              return fn(value);\n 7647            } catch (e) {\n ....\n 7671        microtask(function () {\n 7672          if (!done) {\n 7673:           try {\n 7674              if (forOf(x, false, function (it) {\n 7675                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\client\\shim.js:\n  149  \n  150  module.exports = function (exec) {\n  151:   try {\n  152      return !!exec();\n  153    } catch (e) {\n  ...\n  206    P = toPrimitive(P, true);\n  207    anObject(Attributes);\n  208:   if (IE8_DOM_DEFINE) try {\n  209      return dP(O, P, Attributes);\n  210    } catch (e) { /* empty */ }\n  ...\n  361    O = toIObject(O);\n  362    P = toPrimitive(P, true);\n  363:   if (IE8_DOM_DEFINE) try {\n  364      return gOPD(O, P);\n  365    } catch (e) { /* empty */ }\n  ...\n 1460  // fallback for IE11 Script Access Denied error\n 1461  var tryGet = function (it, key) {\n 1462:   try {\n 1463      return it[key];\n 1464    } catch (e) { /* empty */ }\n ....\n 1557  var SAFE_CLOSING = false;\n 1558  \n 1559: try {\n 1560    var riter = [7][ITERATOR]();\n 1561    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 1567    if (!skipClosing && !SAFE_CLOSING) return false;\n 1568    var safe = false;\n 1569:   try {\n 1570      var arr = [7];\n 1571      var iter = arr[ITERATOR]();\n ....\n 1916    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 1917      function (test, buggy, set) {\n 1918:       try {\n 1919          set = __webpack_require__(18)(Function.call, __webpack_require__(16).f(Object.prototype, '__proto__').set, 2);\n 1920          set(test, []);\n ....\n 2045  module.exports = function (KEY) {\n 2046    var re = /./;\n 2047:   try {\n 2048      '/./'[KEY](re);\n 2049    } catch (e) {\n 2050:     try {\n 2051        re[MATCH] = false;\n 2052        return !'/./'[KEY](re);\n ....\n 2380        fn = head.fn;\n 2381        head = head.next;\n 2382:       try {\n 2383          fn();\n 2384        } catch (e) {\n ....\n 2823  \n 2824  var getWindowNames = function (it) {\n 2825:   try {\n 2826      return gOPN(it);\n 2827    } catch (e) {\n ....\n 3028  var anObject = __webpack_require__(1);\n 3029  module.exports = function (iterator, fn, value, entries) {\n 3030:   try {\n 3031      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 3032    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 3131  \n 3132  module.exports = function (exec) {\n 3133:   try {\n 3134      return { e: false, v: exec() };\n 3135    } catch (e) {\n ....\n 4399    configurable: true,\n 4400    get: function () {\n 4401:     try {\n 4402        return ('' + this).match(nameRE)[1];\n 4403      } catch (e) {\n ....\n 6093  \n 6094  var USE_NATIVE = !!function () {\n 6095:   try {\n 6096      // correct subclassing with @@species support\n 6097      var promise = $Promise.resolve(1);\n ....\n 6123        var domain = reaction.domain;\n 6124        var result, then, exited;\n 6125:       try {\n 6126          if (handler) {\n 6127            if (!ok) {\n ....\n 6205    promise._d = true;\n 6206    promise = promise._w || promise; // unwrap\n 6207:   try {\n 6208      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 6209      if (then = isThenable(value)) {\n 6210        microtask(function () {\n 6211          var wrapper = { _w: promise, _d: false }; // wrap\n 6212:         try {\n 6213            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 6214          } catch (e) {\n ....\n 6233      aFunction(executor);\n 6234      Internal.call(this);\n 6235:     try {\n 6236        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 6237      } catch (err) {\n ....\n 6461      propertyKey = toPrimitive(propertyKey, true);\n 6462      anObject(attributes);\n 6463:     try {\n 6464        dP.f(target, propertyKey, attributes);\n 6465        return true;\n ....\n 6633    preventExtensions: function preventExtensions(target) {\n 6634      anObject(target);\n 6635:     try {\n 6636        if ($preventExtensions) $preventExtensions(target);\n 6637        return true;\n ....\n 6693    setPrototypeOf: function setPrototypeOf(target, proto) {\n 6694      setProto.check(target, proto);\n 6695:     try {\n 6696        setProto.set(target, proto);\n 6697        return true;\n ....\n 7927    this._o = observer;\n 7928    observer = new SubscriptionObserver(this);\n 7929:   try {\n 7930      var cleanup = subscriber(observer);\n 7931      var subscription = cleanup;\n ....\n 7954      if (!subscriptionClosed(subscription)) {\n 7955        var observer = subscription._o;\n 7956:       try {\n 7957          var m = getMethod(observer.next);\n 7958          if (m) return m.call(observer, value);\n 7959        } catch (e) {\n 7960:         try {\n 7961            closeSubscription(subscription);\n 7962          } finally {\n ....\n 7971      var observer = subscription._o;\n 7972      subscription._o = undefined;\n 7973:     try {\n 7974        var m = getMethod(observer.error);\n 7975        if (!m) throw value;\n 7976        value = m.call(observer, value);\n 7977      } catch (e) {\n 7978:       try {\n 7979          cleanupSubscription(subscription);\n 7980        } finally {\n ....\n 7989        var observer = subscription._o;\n 7990        subscription._o = undefined;\n 7991:       try {\n 7992          var m = getMethod(observer.complete);\n 7993          value = m ? m.call(observer, value) : undefined;\n 7994        } catch (e) {\n 7995:         try {\n 7996            cleanupSubscription(subscription);\n 7997          } finally {\n ....\n 8018        var subscription = that.subscribe({\n 8019          next: function (value) {\n 8020:           try {\n 8021              return fn(value);\n 8022            } catch (e) {\n ....\n 8046        microtask(function () {\n 8047          if (!done) {\n 8048:           try {\n 8049              if (forOf(x, false, function (it) {\n 8050                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_classof.js:\n    7  // fallback for IE11 Script Access Denied error\n    8  var tryGet = function (it, key) {\n    9:   try {\n   10      return it[key];\n   11    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_fails-is-regexp.js:\n    2  module.exports = function (KEY) {\n    3    var re = /./;\n    4:   try {\n    5      '/./'[KEY](re);\n    6    } catch (e) {\n    7:     try {\n    8        re[MATCH] = false;\n    9        return !'/./'[KEY](re);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_fails.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return !!exec();\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_iter-call.js:\n    2  var anObject = require('./_an-object');\n    3  module.exports = function (iterator, fn, value, entries) {\n    4:   try {\n    5      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n    6    // 7.4.6 IteratorClose(iterator, completion)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_iter-detect.js:\n    2  var SAFE_CLOSING = false;\n    3  \n    4: try {\n    5    var riter = [7][ITERATOR]();\n    6    riter['return'] = function () { SAFE_CLOSING = true; };\n    .\n   12    if (!skipClosing && !SAFE_CLOSING) return false;\n   13    var safe = false;\n   14:   try {\n   15      var arr = [7];\n   16      var iter = arr[ITERATOR]();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_microtask.js:\n   15        fn = head.fn;\n   16        head = head.next;\n   17:       try {\n   18          fn();\n   19        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_object-dp.js:\n    8    P = toPrimitive(P, true);\n    9    anObject(Attributes);\n   10:   if (IE8_DOM_DEFINE) try {\n   11      return dP(O, P, Attributes);\n   12    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_object-gopd.js:\n   10    O = toIObject(O);\n   11    P = toPrimitive(P, true);\n   12:   if (IE8_DOM_DEFINE) try {\n   13      return gOPD(O, P);\n   14    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_object-gopn-ext.js:\n    8  \n    9  var getWindowNames = function (it) {\n   10:   try {\n   11      return gOPN(it);\n   12    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_perform.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return { e: false, v: exec() };\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\_set-proto.js:\n   10    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n   11      function (test, buggy, set) {\n   12:       try {\n   13          set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n   14          set(test, []);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\es6.promise.js:\n   25  \n   26  var USE_NATIVE = !!function () {\n   27:   try {\n   28      // correct subclassing with @@species support\n   29      var promise = $Promise.resolve(1);\n   ..\n   55        var domain = reaction.domain;\n   56        var result, then, exited;\n   57:       try {\n   58          if (handler) {\n   59            if (!ok) {\n   ..\n  137    promise._d = true;\n  138    promise = promise._w || promise; // unwrap\n  139:   try {\n  140      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n  141      if (then = isThenable(value)) {\n  142        microtask(function () {\n  143          var wrapper = { _w: promise, _d: false }; // wrap\n  144:         try {\n  145            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n  146          } catch (e) {\n  ...\n  165      aFunction(executor);\n  166      Internal.call(this);\n  167:     try {\n  168        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n  169      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\es6.reflect.define-property.js:\n   14      propertyKey = toPrimitive(propertyKey, true);\n   15      anObject(attributes);\n   16:     try {\n   17        dP.f(target, propertyKey, attributes);\n   18        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\es6.reflect.prevent-extensions.js:\n    7    preventExtensions: function preventExtensions(target) {\n    8      anObject(target);\n    9:     try {\n   10        if ($preventExtensions) $preventExtensions(target);\n   11        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\es6.reflect.set-prototype-of.js:\n    6    setPrototypeOf: function setPrototypeOf(target, proto) {\n    7      setProto.check(target, proto);\n    8:     try {\n    9        setProto.set(target, proto);\n   10        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\library\\modules\\es7.observable.js:\n   42    this._o = observer;\n   43    observer = new SubscriptionObserver(this);\n   44:   try {\n   45      var cleanup = subscriber(observer);\n   46      var subscription = cleanup;\n   ..\n   69      if (!subscriptionClosed(subscription)) {\n   70        var observer = subscription._o;\n   71:       try {\n   72          var m = getMethod(observer.next);\n   73          if (m) return m.call(observer, value);\n   74        } catch (e) {\n   75:         try {\n   76            closeSubscription(subscription);\n   77          } finally {\n   ..\n   86      var observer = subscription._o;\n   87      subscription._o = undefined;\n   88:     try {\n   89        var m = getMethod(observer.error);\n   90        if (!m) throw value;\n   91        value = m.call(observer, value);\n   92      } catch (e) {\n   93:       try {\n   94          cleanupSubscription(subscription);\n   95        } finally {\n   ..\n  104        var observer = subscription._o;\n  105        subscription._o = undefined;\n  106:       try {\n  107          var m = getMethod(observer.complete);\n  108          value = m ? m.call(observer, value) : undefined;\n  109        } catch (e) {\n  110:         try {\n  111            cleanupSubscription(subscription);\n  112          } finally {\n  ...\n  133        var subscription = that.subscribe({\n  134          next: function (value) {\n  135:           try {\n  136              return fn(value);\n  137            } catch (e) {\n  ...\n  161        microtask(function () {\n  162          if (!done) {\n  163:           try {\n  164              if (forOf(x, false, function (it) {\n  165                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_classof.js:\n    7  // fallback for IE11 Script Access Denied error\n    8  var tryGet = function (it, key) {\n    9:   try {\n   10      return it[key];\n   11    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_fails-is-regexp.js:\n    2  module.exports = function (KEY) {\n    3    var re = /./;\n    4:   try {\n    5      '/./'[KEY](re);\n    6    } catch (e) {\n    7:     try {\n    8        re[MATCH] = false;\n    9        return !'/./'[KEY](re);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_fails.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return !!exec();\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_iter-call.js:\n    2  var anObject = require('./_an-object');\n    3  module.exports = function (iterator, fn, value, entries) {\n    4:   try {\n    5      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n    6    // 7.4.6 IteratorClose(iterator, completion)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_iter-detect.js:\n    2  var SAFE_CLOSING = false;\n    3  \n    4: try {\n    5    var riter = [7][ITERATOR]();\n    6    riter['return'] = function () { SAFE_CLOSING = true; };\n    .\n   12    if (!skipClosing && !SAFE_CLOSING) return false;\n   13    var safe = false;\n   14:   try {\n   15      var arr = [7];\n   16      var iter = arr[ITERATOR]();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_microtask.js:\n   15        fn = head.fn;\n   16        head = head.next;\n   17:       try {\n   18          fn();\n   19        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_object-dp.js:\n    8    P = toPrimitive(P, true);\n    9    anObject(Attributes);\n   10:   if (IE8_DOM_DEFINE) try {\n   11      return dP(O, P, Attributes);\n   12    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_object-gopd.js:\n   10    O = toIObject(O);\n   11    P = toPrimitive(P, true);\n   12:   if (IE8_DOM_DEFINE) try {\n   13      return gOPD(O, P);\n   14    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_object-gopn-ext.js:\n    8  \n    9  var getWindowNames = function (it) {\n   10:   try {\n   11      return gOPN(it);\n   12    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_perform.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return { e: false, v: exec() };\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\_set-proto.js:\n   10    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n   11      function (test, buggy, set) {\n   12:       try {\n   13          set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n   14          set(test, []);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\es6.function.name.js:\n    8    configurable: true,\n    9    get: function () {\n   10:     try {\n   11        return ('' + this).match(nameRE)[1];\n   12      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\es6.promise.js:\n   25  \n   26  var USE_NATIVE = !!function () {\n   27:   try {\n   28      // correct subclassing with @@species support\n   29      var promise = $Promise.resolve(1);\n   ..\n   55        var domain = reaction.domain;\n   56        var result, then, exited;\n   57:       try {\n   58          if (handler) {\n   59            if (!ok) {\n   ..\n  137    promise._d = true;\n  138    promise = promise._w || promise; // unwrap\n  139:   try {\n  140      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n  141      if (then = isThenable(value)) {\n  142        microtask(function () {\n  143          var wrapper = { _w: promise, _d: false }; // wrap\n  144:         try {\n  145            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n  146          } catch (e) {\n  ...\n  165      aFunction(executor);\n  166      Internal.call(this);\n  167:     try {\n  168        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n  169      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\es6.reflect.define-property.js:\n   14      propertyKey = toPrimitive(propertyKey, true);\n   15      anObject(attributes);\n   16:     try {\n   17        dP.f(target, propertyKey, attributes);\n   18        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\es6.reflect.prevent-extensions.js:\n    7    preventExtensions: function preventExtensions(target) {\n    8      anObject(target);\n    9:     try {\n   10        if ($preventExtensions) $preventExtensions(target);\n   11        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\es6.reflect.set-prototype-of.js:\n    6    setPrototypeOf: function setPrototypeOf(target, proto) {\n    7      setProto.check(target, proto);\n    8:     try {\n    9        setProto.set(target, proto);\n   10        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-js\\modules\\es7.observable.js:\n   42    this._o = observer;\n   43    observer = new SubscriptionObserver(this);\n   44:   try {\n   45      var cleanup = subscriber(observer);\n   46      var subscription = cleanup;\n   ..\n   69      if (!subscriptionClosed(subscription)) {\n   70        var observer = subscription._o;\n   71:       try {\n   72          var m = getMethod(observer.next);\n   73          if (m) return m.call(observer, value);\n   74        } catch (e) {\n   75:         try {\n   76            closeSubscription(subscription);\n   77          } finally {\n   ..\n   86      var observer = subscription._o;\n   87      subscription._o = undefined;\n   88:     try {\n   89        var m = getMethod(observer.error);\n   90        if (!m) throw value;\n   91        value = m.call(observer, value);\n   92      } catch (e) {\n   93:       try {\n   94          cleanupSubscription(subscription);\n   95        } finally {\n   ..\n  104        var observer = subscription._o;\n  105        subscription._o = undefined;\n  106:       try {\n  107          var m = getMethod(observer.complete);\n  108          value = m ? m.call(observer, value) : undefined;\n  109        } catch (e) {\n  110:         try {\n  111            cleanupSubscription(subscription);\n  112          } finally {\n  ...\n  133        var subscription = that.subscribe({\n  134          next: function (value) {\n  135:           try {\n  136              return fn(value);\n  137            } catch (e) {\n  ...\n  161        microtask(function () {\n  162          if (!done) {\n  163:           try {\n  164              if (forOf(x, false, function (it) {\n  165                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\core-util-is\\float.patch:\n   27  -      case '%d': return Number(args[i++]);\n   28  -      case '%j':\n   29: -        try {\n   30  -          return JSON.stringify(args[i++]);\n   31  -        } catch (_) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\debug\\src\\browser.js:\n   62  \n   63  exports.formatters.j = function(v) {\n   64:   try {\n   65      return JSON.stringify(v);\n   66    } catch (err) {\n   ..\n  132  \n  133  function save(namespaces) {\n  134:   try {\n  135      if (null == namespaces) {\n  136        exports.storage.removeItem('debug');\n  ...\n  150  function load() {\n  151    var r;\n  152:   try {\n  153      r = exports.storage.debug;\n  154    } catch(e) {}\n  ...\n  180  \n  181  function localstorage() {\n  182:   try {\n  183      return window.localStorage;\n  184    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\decode-uri-component\\index.js:\n    5  \n    6  function decodeComponents(components, split) {\n    7: \ttry {\n    8  \t\t// Try to decode the entire string first\n    9  \t\treturn decodeURIComponent(components.join(''));\n   ..\n   26  \n   27  function decode(input) {\n   28: \ttry {\n   29  \t\treturn decodeURIComponent(input);\n   30  \t} catch (err) {\n   ..\n   50  \tvar match = multiMatcher.exec(input);\n   51  \twhile (match) {\n   52: \t\ttry {\n   53  \t\t\t// Decode as big chunks as possible\n   54  \t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n   ..\n   83  \t}\n   84  \n   85: \ttry {\n   86  \t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n   87  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\detect-file\\index.js:\n   97  function tryReaddir(filepath) {\n   98    var ctx = { path: filepath, files: [] };\n   99:   try {\n  100      ctx.files = fs.readdirSync(filepath);\n  101      return ctx;\n  102    } catch (err) {}\n  103:   try {\n  104      ctx.path = path.dirname(filepath);\n  105      ctx.files = fs.readdirSync(ctx.path);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\findup-sync\\index.js:\n   79  \n   80  function tryReaddirSync(fp) {\n   81:   try {\n   82      return fs.readdirSync(fp);\n   83    } catch(err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\fined\\index.js:\n   94    for (var i = 0, n = extArr.length; i < n; i++) {\n   95      var filepath = noExtPath + extArr[i];\n   96:     try {\n   97        fs.statSync(filepath);\n   98        return { path: filepath, extension: extArr[i] };\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gaze\\lib\\gaze.js:\n  286    var self = this;\n  287    var timeoutId;\n  288:   try {\n  289      this._watchers[dir] = fs.watch(dir, function(event) {\n  290        // race condition. Let's give the fs a little time to settle down. so we\n  ...\n  326        done(null, file);\n  327      };\n  328:     try {\n  329        fs.watchFile(file, opts, this._pollers[file]);\n  330      } catch (err) {\n  ...\n  364          if (!current) { return; }\n  365  \n  366:         try {\n  367            // append path.sep to directories so they match previous.\n  368            current = current.map(function(curPath) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\glob\\sync.js:\n   56        var set = self.matches[index] = Object.create(null)\n   57        for (var p in matchset) {\n   58:         try {\n   59            p = self._makeAbs(p)\n   60            var real = fs.realpathSync(p, this.realpathCache)\n   ..\n  237    var lstat\n  238    var stat\n  239:   try {\n  240      lstat = fs.lstatSync(abs)\n  241    } catch (er) {\n  ...\n  272    }\n  273  \n  274:   try {\n  275      return this._readdirEntries(abs, fs.readdirSync(abs))\n  276    } catch (er) {\n  ...\n  421    if (!stat) {\n  422      var lstat\n  423:     try {\n  424        lstat = fs.lstatSync(abs)\n  425      } catch (er) {\n  ...\n  428  \n  429      if (lstat.isSymbolicLink()) {\n  430:       try {\n  431          stat = fs.statSync(abs)\n  432        } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\global-prefix\\index.js:\n   70  \n   71  function tryNpmPath() {\n   72:   try {\n   73      return fs.realpathSync(require('which').sync('npm'));\n   74    } catch (err) {}\n   ..\n   77  \n   78  function tryConfigPath(configPath) {\n   79:   try {\n   80      var data = fs.readFileSync(configPath, 'utf-8');\n   81      var config = ini.parse(data);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\globule\\lib\\globule.js:\n   91          filepath = path.join(srcBase, filepath);\n   92        }\n   93:       try {\n   94          if (_.isFunction(options.filter)) {\n   95            return options.filter(filepath, options);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\globule\\node_modules\\glob\\glob.js:\n  497    if (this.sync) {\n  498      var er, stat\n  499:     try {\n  500        stat = fs.statSync(abs)\n  501      } catch (e) {\n  ...\n  574    if (this.sync) {\n  575      var er, entries\n  576:     try {\n  577        entries = fs.readdirSync(abs)\n  578      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\globule\\node_modules\\graceful-fs\\graceful-fs.js:\n  104  \n  105  fs.closeSync = function (fd) {\n  106:   try {\n  107      return fs._originalFs.closeSync.call(fs, fd)\n  108    } finally {\n  ...\n  262      // but still try to close, and report closing errors if they occur.\n  263      var err, err2\n  264:     try {\n  265        var ret = fs.fchmodSync(fd, mode)\n  266      } catch (er) {\n  267        err = er\n  268      }\n  269:     try {\n  270        fs.closeSync(fd)\n  271      } catch (er) {\n  ...\n  299          , ret\n  300  \n  301:       try {\n  302          var ret = fs.futimesSync(fd, at, mt)\n  303        } catch (er) {\n  304          err = er\n  305        }\n  306:       try {\n  307          fs.closeSync(fd)\n  308        } catch (er) {\n  ...\n  354    if (!orig) return orig\n  355    return function (target, uid, gid) {\n  356:     try {\n  357        return orig.call(fs, target, uid, gid)\n  358      } catch (er) {\n  ...\n  430    var eagCounter = 0\n  431    while (true) {\n  432:     try {\n  433        return readSync.call(fs, fd, buffer, offset, length, position)\n  434      } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\globule\\node_modules\\graceful-fs\\test\\open.js:\n   27    var start = fs._curOpen\n   28    var er\n   29:   try {\n   30      var fd = fs.openSync('this file does not exist', 'r')\n   31    } catch (x) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\globule\\node_modules\\minimatch\\minimatch.js:\n  806    if (this.negate) re = \"^(?!\" + re + \").*$\"\n  807  \n  808:   try {\n  809      return this.regexp = new RegExp(re, flags)\n  810    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\graceful-fs\\graceful-fs.js:\n  109  \n  110  function closeSync (fd) {\n  111:   try {\n  112      return originalCloseSync(fd)\n  113    } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\graceful-fs\\polyfills.js:\n   47      // but still try to close, and report closing errors if they occur.\n   48      var err, err2\n   49:     try {\n   50        var ret = fs.fchmodSync(fd, mode)\n   51      } catch (er) {\n   52        err = er\n   53      }\n   54:     try {\n   55        fs.closeSync(fd)\n   56      } catch (er) {\n   ..\n   84          , ret\n   85  \n   86:       try {\n   87          var ret = fs.futimesSync(fd, at, mt)\n   88        } catch (er) {\n   89          err = er\n   90        }\n   91:       try {\n   92          fs.closeSync(fd)\n   93        } catch (er) {\n   ..\n  149    if (!orig) return orig\n  150    return function (target, uid, gid) {\n  151:     try {\n  152        return orig.call(fs, target, uid, gid)\n  153      } catch (er) {\n  ...\n  242    var eagCounter = 0\n  243    while (true) {\n  244:     try {\n  245        return readSync.call(fs, fd, buffer, offset, length, position)\n  246      } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\graceful-fs\\test\\open.js:\n   22  test('open a non-existing file throws', function (t) {\n   23    var er\n   24:   try {\n   25      var fd = fs.openSync('this file does not exist', 'r')\n   26    } catch (x) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp\\lib\\completion.js:\n    9    }\n   10    var file = path.join(__dirname, '../completion', name);\n   11:   try {\n   12      console.log(fs.readFileSync(file, 'utf8'));\n   13      process.exit(0);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\composer.js:\n    7      var minifier = minify(uglify, logger)(opts);\n    8      return through.obj(function(file, encoding, callback) {\n    9:       try {\n   10          var newFile = minifier(file);\n   11          callback(null, newFile);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\node_modules\\lodash\\_defineProperty.js:\n    2  \n    3  var defineProperty = (function() {\n    4:   try {\n    5      var func = getNative(Object, 'defineProperty');\n    6      func({}, '', {});\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\node_modules\\lodash\\_getRawTag.js:\n   28        tag = value[symToStringTag];\n   29  \n   30:   try {\n   31      value[symToStringTag] = undefined;\n   32      var unmasked = true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\node_modules\\lodash\\_nodeUtil.js:\n   15  /** Used to access faster Node.js helpers. */\n   16  var nodeUtil = (function() {\n   17:   try {\n   18      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n   19    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\node_modules\\lodash\\_toSource.js:\n   14  function toSource(func) {\n   15    if (func != null) {\n   16:     try {\n   17        return funcToString.call(func);\n   18      } catch (e) {}\n   19:     try {\n   20        return (func + '');\n   21      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\node_modules\\lodash\\attempt.js:\n   26   */\n   27  var attempt = baseRest(function(func, args) {\n   28:   try {\n   29      return apply(func, undefined, args);\n   30    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\gulp-uglify\\node_modules\\lodash\\lodash.js:\n  436    /** Used to access faster Node.js helpers. */\n  437    var nodeUtil = (function() {\n  438:     try {\n  439        return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  440      } catch (e) {}\n  ...\n 1480  \n 1481      var defineProperty = (function() {\n 1482:       try {\n 1483          var func = getNative(Object, 'defineProperty');\n 1484          func({}, '', {});\n ....\n 5998            tag = value[symToStringTag];\n 5999  \n 6000:       try {\n 6001          value[symToStringTag] = undefined;\n 6002          var unmasked = true;\n ....\n 6760      function toSource(func) {\n 6761        if (func != null) {\n 6762:         try {\n 6763            return funcToString.call(func);\n 6764          } catch (e) {}\n 6765:         try {\n 6766            return (func + '');\n 6767          } catch (e) {}\n ....\n 15237       */\n 15238      var attempt = baseRest(function(func, args) {\n 15239:       try {\n 15240          return apply(func, undefined, args);\n 15241        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\homedir-polyfill\\index.js:\n   72  \n   73  function tryReadFileSync(fp) {\n   74:   try {\n   75      return fs.readFileSync(fp, 'utf8');\n   76    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\inflight\\inflight.js:\n   27      // choice is likely as surprising as the other.\n   28      // As it happens, we do go ahead and schedule it for later execution.\n   29:     try {\n   30        for (var i = 0; i < len; i++) {\n   31          cbs[i].apply(null, args)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\inherits\\inherits.js:\n    1: try {\n    2    var util = require('util');\n    3    if (typeof util.inherits !== 'function') throw '';\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\ini\\ini.js:\n  164        val = val.substr(1, val.length - 2)\n  165      }\n  166:     try { val = JSON.parse(val) } catch (_) {}\n  167    } else {\n  168      // walk the val to find the first not-escaped ; character\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\isexe\\index.js:\n   46  function sync (path, options) {\n   47    // my kingdom for a filtered catch\n   48:   try {\n   49      return core.sync(path, options || {})\n   50    } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\kind-of\\index.js:\n  105  \n  106  function isArguments(val) {\n  107:   try {\n  108      if (typeof val.length === 'number' && typeof val.callee === 'function') {\n  109        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\liftoff\\index.js:\n   28  \n   29  Liftoff.prototype.requireLocal = function (module, basedir) {\n   30:   try {\n   31      var result = require(resolve.sync(module, {basedir: basedir}));\n   32      this.emit('require', module, result);\n   ..\n   92    // locate local module and package next to config or explicitly provided cwd\n   93    var modulePath, modulePackage;\n   94:   try {\n   95      var delim = path.delimiter,\n   96          paths = (process.env.NODE_PATH ? process.env.NODE_PATH.split(delim) : []);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\liftoff\\lib\\silent_require.js:\n    1  module.exports = function (path) {\n    2:   try {\n    3      return require(path);\n    4    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\lodash\\dist\\lodash.compat.js:\n  191     * a string without a `toString` function.\n  192     */\n  193:   try {\n  194      var noNodeClass = toString.call(document) == objectClass && !({ 'toString': 0 } + '');\n  195    } catch(e) { }\n  ...\n 4752      var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n 4753  \n 4754:     try {\n 4755        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n 4756      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\lodash\\dist\\lodash.js:\n 4602      var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n 4603  \n 4604:     try {\n 4605        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n 4606      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\lodash\\dist\\lodash.underscore.js:\n 3919        'return __p\\n}';\n 3920  \n 3921:     try {\n 3922        var result = Function('_', 'return ' + source)(lodash);\n 3923      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\lodash.template\\index.js:\n  380   */\n  381  var attempt = restParam(function(func, args) {\n  382:   try {\n  383      return func.apply(undefined, args);\n  384    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\make-error\\index.js:\n   85      })\n   86    }\n   87:   try {\n   88      var f = function () {}\n   89      setFunctionName(f, 'foo')\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\make-error\\README.md:\n   63  //-----\n   64  \n   65: try {\n   66    throw new CustomError(42)\n   67  } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\minimatch\\browser.js:\n    4  \n    5  var path = { sep: '/' }\n    6: try {\n    7    path = require('path')\n    8  } catch (er) {}\n    .\n  463            // to do safely.  For now, this is safe and works.\n  464            var cs = pattern.substring(classStart + 1, i)\n  465:           try {\n  466              RegExp('[' + cs + ']')\n  467            } catch (er) {\n  ...\n  667    if (this.negate) re = '^(?!' + re + ').*$'\n  668  \n  669:   try {\n  670      this.regexp = new RegExp(re, flags)\n  671    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\minimatch\\minimatch.js:\n    3  \n    4  var path = { sep: '/' }\n    5: try {\n    6    path = require('path')\n    7  } catch (er) {}\n    .\n  462            // to do safely.  For now, this is safe and works.\n  463            var cs = pattern.substring(classStart + 1, i)\n  464:           try {\n  465              RegExp('[' + cs + ']')\n  466            } catch (er) {\n  ...\n  666    if (this.negate) re = '^(?!' + re + ').*$'\n  667  \n  668:   try {\n  669      this.regexp = new RegExp(re, flags)\n  670    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\mkdirp\\index.js:\n   68      p = path.resolve(p);\n   69  \n   70:     try {\n   71          xfs.mkdirSync(p, mode);\n   72          made = made || p;\n   ..\n   84              default:\n   85                  var stat;\n   86:                 try {\n   87                      stat = xfs.statSync(p);\n   88                  }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\mkdirp\\test\\sync.js:\n   15      var file = '/tmp/' + [x,y,z].join('/');\n   16  \n   17:     try {\n   18          mkdirp.sync(file, _0755);\n   19      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\mkdirp\\test\\umask_sync.js:\n   15      var file = '/tmp/' + [x,y,z].join('/');\n   16  \n   17:     try {\n   18          mkdirp.sync(file);\n   19      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\natives\\index.js:\n    9  var runInThisContext, ContextifyScript, Script\n   10  /*istanbul ignore next*/\n   11: try {\n   12    ContextifyScript = process.binding('contextify').ContextifyScript;\n   13    /*istanbul ignore next*/\n   ..\n  120    var fn\n  121    var setV8Flags = false\n  122:   try {\n  123      require('v8').setFlagsFromString('--allow_natives_syntax')\n  124      setV8Flags = true\n  125    } catch (e) {}\n  126:   try {\n  127      /* istanbul ignore else */\n  128      if (ContextifyScript) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\orchestrator\\index.js:\n  112  \t\t}\n  113  \t\tseq = [];\n  114: \t\ttry {\n  115  \t\t\tthis.sequence(this.tasks, names, seq, []);\n  116  \t\t} catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\orchestrator\\lib\\runTask.js:\n   30  \t};\n   31  \n   32: \ttry {\n   33  \t\tstart = process.hrtime();\n   34  \t\tr = task(cb);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\ordered-read-streams\\test\\main.js:\n   15      var writable = { readable: false };\n   16  \n   17:     try {\n   18        new OrderedStreams(writable);\n   19      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\path-parse\\test.js:\n   56  function checkErrors(parse) {\n   57    errors.forEach(function(errorCase) {\n   58:     try {\n   59        parse(errorCase.input);\n   60      } catch(err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\readable-stream\\float.patch:\n   59  +if (util.debuglog)\n   60  +  debug = util.debuglog('stream');\n   61: +else try {\n   62  +  debug = require('debuglog')('stream');\n   63  +} catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\rechoir\\lib\\register.js:\n    3  \n    4  module.exports = function (cwd, moduleName, register) {\n    5:   try {\n    6      var modulePath = resolve.sync(moduleName, {basedir: cwd});\n    7      var result = require(modulePath);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\regenerator-runtime\\runtime-module.js:\n   24  } else {\n   25    // Remove the global property added by runtime.js.\n   26:   try {\n   27      delete g.regeneratorRuntime;\n   28    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\regenerator-runtime\\runtime.js:\n   62    // has a stable shape and so hopefully should be cheap to allocate.\n   63    function tryCatch(fn, obj, arg) {\n   64:     try {\n   65        return { type: \"normal\", arg: fn.call(obj, arg) };\n   66      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\resolve\\readme.markdown:\n  144      readFileSync: fs.readFileSync,\n  145      isFile: function isFile(file) {\n  146:         try {\n  147              var stat = fs.statSync(file);\n  148          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\resolve\\lib\\async.js:\n  124              readFile(pkgfile, function (err, body) {\n  125                  if (err) cb(err);\n  126:                 try { var pkg = JSON.parse(body); } catch (jsonErr) {}\n  127  \n  128                  if (pkg && opts.packageFilter) {\n  ...\n  149              readFile(pkgfile, function (err, body) {\n  150                  if (err) return cb(err);\n  151:                 try {\n  152                      var pkg = JSON.parse(body);\n  153                  } catch (jsonErr) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\resolve\\lib\\node-modules-paths.js:\n   13  \n   14      if (opts && opts.preserveSymlinks === false) {\n   15:         try {\n   16              absoluteStart = fs.realpathSync(absoluteStart);\n   17          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\resolve\\lib\\sync.js:\n    6  \n    7  var defaultIsFile = function isFile(file) {\n    8:     try {\n    9          var stat = fs.statSync(file);\n   10      } catch (e) {\n   ..\n   82          var body = readFileSync(pkgfile);\n   83  \n   84:         try {\n   85              var pkg = JSON.parse(body);\n   86          } catch (jsonErr) {}\n   ..\n   96          var pkgfile = path.join(x, '/package.json');\n   97          if (isFile(pkgfile)) {\n   98:             try {\n   99                  var body = readFileSync(pkgfile, 'UTF8');\n  100                  var pkg = JSON.parse(body);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\resolve\\test\\resolver_sync.js:\n  183      var fs = require('fs');\n  184      var statSync = fs.statSync;\n  185:     try {\n  186          fs.statSync = function () {\n  187              throw new EvalError('Unknown Error');\n  ...\n  236          st.throws(run, 'throws an error');\n  237  \n  238:         try {\n  239              run();\n  240          } catch (e) {\n  ...\n  269  test('not a directory', function (t) {\n  270      var path = './foo';\n  271:     try {\n  272          resolve.sync(path, { basedir: __filename });\n  273          t.fail();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\resolve\\test\\symlinks.js:\n    5  \n    6  var symlinkDir = path.join(__dirname, 'resolver', 'symlinked', 'symlink');\n    7: try {\n    8      fs.unlinkSync(symlinkDir);\n    9  } catch (err) {}\n   10: try {\n   11      fs.symlinkSync('./_/symlink_target', symlinkDir, 'dir');\n   12  } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\safe-regex\\index.js:\n    9      else if (typeof re !== 'string') re = String(re);\n   10      \n   11:     try { re = parse(re) }\n   12      catch (err) { return false }\n   13      \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\semver\\semver.browser.js:\n  240      return null;\n  241  \n  242:   try {\n  243      return new SemVer(version, loose);\n  244    } catch (er) {\n  ...\n  484    }\n  485  \n  486:   try {\n  487      return new SemVer(version, loose).inc(release, identifier).version;\n  488    } catch (er) {\n  ...\n 1081  exports.satisfies = satisfies;\n 1082  function satisfies(version, range, loose) {\n 1083:   try {\n 1084      range = new Range(range, loose);\n 1085    } catch (er) {\n ....\n 1100  exports.validRange = validRange;\n 1101  function validRange(range, loose) {\n 1102:   try {\n 1103      // Return '*' instead of '' so that truthiness works.\n 1104      // This will throw if it's invalid anyway\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\semver\\semver.js:\n  250      return null;\n  251  \n  252:   try {\n  253      return new SemVer(version, loose);\n  254    } catch (er) {\n  ...\n  494    }\n  495  \n  496:   try {\n  497      return new SemVer(version, loose).inc(release, identifier).version;\n  498    } catch (er) {\n  ...\n 1091  exports.satisfies = satisfies;\n 1092  function satisfies(version, range, loose) {\n 1093:   try {\n 1094      range = new Range(range, loose);\n 1095    } catch (er) {\n ....\n 1110  exports.validRange = validRange;\n 1111  function validRange(range, loose) {\n 1112:   try {\n 1113      // Return '*' instead of '' so that truthiness works.\n 1114      // This will throw if it's invalid anyway\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\source-map-resolve\\source-map-resolve.js:\n   23  \n   24    function parseMapToJSON(string, data) {\n   25:     try {\n   26        return JSON.parse(string.replace(/^\\)\\]\\}'/, \"\"))\n   27      } catch (error) {\n   ..\n   33    function readSync(read, url, data) {\n   34      var readUrl = url\n   35:     try {\n   36        return String(read(readUrl))\n   37      } catch (error) {\n   ..\n   45    function resolveSourceMap(code, codeUrl, read, callback) {\n   46      var mapData\n   47:     try {\n   48        mapData = resolveSourceMapHelper(code, codeUrl)\n   49      } catch (error) {\n   ..\n   60        }\n   61        mapData.map = String(result)\n   62:       try {\n   63          mapData.map = parseMapToJSON(mapData.map, mapData)\n   64        } catch (error) {\n   ..\n  177          } else {\n  178            var readUrl = fullUrl\n  179:           try {\n  180              result.sourcesContent[index] = String(read(readUrl))\n  181            } catch (error) {\n  ...\n  240          }\n  241          data.map = String(result)\n  242:         try {\n  243            data.map = parseMapToJSON(data.map, data)\n  244          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\source-map-resolve\\lib\\source-map-resolve-node.js:\n   15  \n   16  function parseMapToJSON(string, data) {\n   17:   try {\n   18      return JSON.parse(string.replace(/^\\)\\]\\}'/, \"\"))\n   19    } catch (error) {\n   ..\n   25  function readSync(read, url, data) {\n   26    var readUrl = decodeUriComponent(url)\n   27:   try {\n   28      return String(read(readUrl))\n   29    } catch (error) {\n   ..\n   37  function resolveSourceMap(code, codeUrl, read, callback) {\n   38    var mapData\n   39:   try {\n   40      mapData = resolveSourceMapHelper(code, codeUrl)\n   41    } catch (error) {\n   ..\n   52      }\n   53      mapData.map = String(result)\n   54:     try {\n   55        mapData.map = parseMapToJSON(mapData.map, mapData)\n   56      } catch (error) {\n   ..\n  171        } else {\n  172          var readUrl = decodeUriComponent(fullUrl)\n  173:         try {\n  174            result.sourcesContent[index] = String(read(readUrl))\n  175          } catch (error) {\n  ...\n  235        }\n  236        data.map = String(result)\n  237:       try {\n  238          data.map = parseMapToJSON(data.map, data)\n  239        } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\stream-consume\\index.js:\n    4          if (!state || state.pipesCount === 0) {\n    5              // Either a classic stream or streams2 that's not piped to another destination\n    6:             try {\n    7                  stream.resume();\n    8              } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\through2\\node_modules\\readable-stream\\lib\\_stream_writable.js:\n  220  \n  221  (function () {\n  222:   try {\n  223      Object.defineProperty(WritableState.prototype, 'buffer', {\n  224        get: internalUtil.deprecate(function () {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\to-regex\\index.js:\n   84    }\n   85  \n   86:   try {\n   87      if (opts.negate || typeof opts.strictNegate === 'boolean') {\n   88        pattern = not.create(pattern, opts);\n   ..\n  105      }\n  106  \n  107:     try {\n  108        regex = new RegExp('^' + pattern.replace(/(\\W)/g, '\\\\$1') + '$');\n  109      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\bin\\uglifyjs:\n  183      }\n  184      if (program.timings) options.timings = true;\n  185:     try {\n  186          if (program.parse) {\n  187              if (program.parse.acorn) {\n  ...\n  302      if (glob.match(/\\*|\\?/)) {\n  303          var dir = path.dirname(glob);\n  304:         try {\n  305              var entries = fs.readdirSync(dir);\n  306          } catch (ex) {}\n  ...\n  324  \n  325  function read_file(path, default_value) {\n  326:     try {\n  327          return fs.readFileSync(path, \"utf8\");\n  328      } catch (ex) {\n  ...\n  335      return function(value, options) {\n  336          options = options || {};\n  337:         try {\n  338              UglifyJS.minify(value, {\n  339                  parse: {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\lib\\compress.js:\n 2670                      args.push(value);\n 2671                  }\n 2672:                 try {\n 2673                      return val[key].apply(val, args);\n 2674                  } catch (ex) {\n ....\n 4454                      return arg !== value;\n 4455                  })) {\n 4456:                     try {\n 4457                          return best_of(compressor, self, make_node(AST_RegExp, self, {\n 4458                              value: RegExp.apply(RegExp, params),\n ....\n 4598                  //   https://github.com/mishoo/UglifyJS2/issues/203\n 4599                  // if the code argument is a constant, then we can minify it.\n 4600:                 try {\n 4601                      var code = \"n(function(\" + self.args.slice(0, -1).map(function(arg) {\n 4602                          return arg.value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\lib\\minify.js:\n   18  \n   19  function parse_source_map(content) {\n   20:     try {\n   21          return JSON.parse(content);\n   22      } catch (ex) {\n   ..\n   53  function minify(files, options) {\n   54      var warn_function = AST_Node.warn_function;\n   55:     try {\n   56          options = defaults(options, {\n   57              compress: {},\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\lib\\output.js:\n  210      var do_add_mapping = mappings ? function() {\n  211          mappings.forEach(function(mapping) {\n  212:             try {\n  213                  options.source_map.add(\n  214                      mapping.token.file,\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\lib\\parse.js:\n  505          }\n  506          var mods = read_name();\n  507:         try {\n  508              var regexp = new RegExp(source, mods);\n  509              regexp.raw_source = source;\n  ...\n  559      function with_eof_error(eof_error, cont) {\n  560          return function(x) {\n  561:             try {\n  562                  return cont(x);\n  563              } catch(ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\lib\\scope.js:\n  525      options = _default_mangler_options(options);\n  526      base54.reset();\n  527:     try {\n  528          AST_Node.prototype.print = function(stream, force_parens) {\n  529              this._print(stream, force_parens);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\lib\\utils.js:\n   73              var err = new Error(this.message);\n   74              err.name = this.name;\n   75:             try {\n   76                  throw err;\n   77              } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\uglify-js\\tools\\props.html:\n    8        function addObject(obj) {\n    9          if (obj == null) return;\n   10:         try {\n   11            Object.getOwnPropertyNames(obj).forEach(add);\n   12          } catch(ex) {}\n   ..\n   15          }\n   16          if (typeof obj == \"function\") {\n   17:           try {\n   18              Object.getOwnPropertyNames(new obj).forEach(add);\n   19            } catch(ex) {}\n   ..\n   29        });\n   30  \n   31:       try {\n   32          addObject(new Event(\"click\"));\n   33          addObject(new Event(\"contextmenu\"));\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\util-deprecate\\browser.js:\n   57  function config (name) {\n   58    // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n   59:   try {\n   60      if (!global.localStorage) return false;\n   61    } catch (_) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\v8flags\\index.js:\n   41  \n   42  function tryOpenConfig (configpath, cb) {\n   43:   try {\n   44      // if the config file is valid, it should be json and therefore\n   45      // node should be able to require it directly. if this doesn't\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\which\\which.js:\n  114        var cur = p + pathExt[j]\n  115        var is\n  116:       try {\n  117          is = isexe.sync(cur, { pathExt: pathExtExe })\n  118          if (is) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\layer-builder\\node_modules\\which\\bin\\which:\n   40  \n   41  process.exit(args.reduce(function (pv, current) {\n   42:   try {\n   43      var f = which.sync(current, { all: all })\n   44      if (all)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\dist\\ridestyler.showcase.js:\n  167  \t\tvar supportsPassive = false;\n  168  \n  169: \t\ttry {\n  170  \n  171  \t\t\tvar opts = Object.defineProperty({}, 'passive', {\n  ...\n 3676          var passiveSupported = false;\n 3677  \n 3678:         try {\n 3679              var options = Object.defineProperty({}, \"passive\", {\n 3680                  get: function get() {\n ....\n 5181  // fallback for IE11 Script Access Denied error\n 5182  var tryGet = function (it, key) {\n 5183:   try {\n 5184      return it[key];\n 5185    } catch (e) { /* empty */ }\n ....\n 5704  module.exports = function (KEY) {\n 5705    var re = /./;\n 5706:   try {\n 5707      '/./'[KEY](re);\n 5708    } catch (e) {\n 5709:     try {\n 5710        re[MATCH] = false;\n 5711        return !'/./'[KEY](re);\n ....\n 5716  },{\"128\":128}],35:[function(_dereq_,module,exports){\n 5717  module.exports = function (exec) {\n 5718:   try {\n 5719      return !!exec();\n 5720    } catch (e) {\n ....\n 5950  var anObject = _dereq_(7);\n 5951  module.exports = function (iterator, fn, value, entries) {\n 5952:   try {\n 5953      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 5954    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 6051  var SAFE_CLOSING = false;\n 6052  \n 6053: try {\n 6054    var riter = [7][ITERATOR]();\n 6055    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 6061    if (!skipClosing && !SAFE_CLOSING) return false;\n 6062    var safe = false;\n 6063:   try {\n 6064      var arr = [7];\n 6065      var iter = arr[ITERATOR]();\n ....\n 6289        fn = head.fn;\n 6290        head = head.next;\n 6291:       try {\n 6292          fn();\n 6293        } catch (e) {\n ....\n 6451    P = toPrimitive(P, true);\n 6452    anObject(Attributes);\n 6453:   if (IE8_DOM_DEFINE) try {\n 6454      return dP(O, P, Attributes);\n 6455    } catch (e) { /* empty */ }\n ....\n 6497    O = toIObject(O);\n 6498    P = toPrimitive(P, true);\n 6499:   if (IE8_DOM_DEFINE) try {\n 6500      return gOPD(O, P);\n 6501    } catch (e) { /* empty */ }\n ....\n 6513  \n 6514  var getWindowNames = function (it) {\n 6515:   try {\n 6516      return gOPN(it);\n 6517    } catch (e) {\n ....\n 6677  },{\"40\":40}],90:[function(_dereq_,module,exports){\n 6678  module.exports = function (exec) {\n 6679:   try {\n 6680      return { e: false, v: exec() };\n 6681    } catch (e) {\n ....\n 6817    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 6818      function (test, buggy, set) {\n 6819:       try {\n 6820          set = _dereq_(25)(Function.call, _dereq_(75).f(Object.prototype, '__proto__').set, 2);\n 6821          set(test, []);\n ....\n 8444    configurable: true,\n 8445    get: function () {\n 8446:     try {\n 8447        return ('' + this).match(nameRE)[1];\n 8448      } catch (e) {\n ....\n 9142  \n 9143  var USE_NATIVE = !!function () {\n 9144:   try {\n 9145      // correct subclassing with @@species support\n 9146      var promise = $Promise.resolve(1);\n ....\n 9178        var domain = reaction.domain;\n 9179        var result, then;\n 9180:       try {\n 9181          if (handler) {\n 9182            if (!ok) {\n ....\n 9263    promise._d = true;\n 9264    promise = promise._w || promise; // unwrap\n 9265:   try {\n 9266      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 9267      if (then = isThenable(value)) {\n 9268        microtask(function () {\n 9269          var wrapper = { _w: promise, _d: false }; // wrap\n 9270:         try {\n 9271            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 9272          } catch (e) {\n ....\n 9291      aFunction(executor);\n 9292      Internal.call(this);\n 9293:     try {\n 9294        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 9295      } catch (err) {\n ....\n 9488      propertyKey = toPrimitive(propertyKey, true);\n 9489      anObject(attributes);\n 9490:     try {\n 9491        dP.f(target, propertyKey, attributes);\n 9492        return true;\n ....\n 9623    preventExtensions: function preventExtensions(target) {\n 9624      anObject(target);\n 9625:     try {\n 9626        if ($preventExtensions) $preventExtensions(target);\n 9627        return true;\n ....\n 9640    setPrototypeOf: function setPrototypeOf(target, proto) {\n 9641      setProto.check(target, proto);\n 9642:     try {\n 9643        setProto.set(target, proto);\n 9644        return true;\n ....\n 10981    this._o = observer;\n 10982    observer = new SubscriptionObserver(this);\n 10983:   try {\n 10984      var cleanup = subscriber(observer);\n 10985      var subscription = cleanup;\n .....\n 11008      if (!subscriptionClosed(subscription)) {\n 11009        var observer = subscription._o;\n 11010:       try {\n 11011          var m = getMethod(observer.next);\n 11012          if (m) return m.call(observer, value);\n 11013        } catch (e) {\n 11014:         try {\n 11015            closeSubscription(subscription);\n 11016          } finally {\n .....\n 11025      var observer = subscription._o;\n 11026      subscription._o = undefined;\n 11027:     try {\n 11028        var m = getMethod(observer.error);\n 11029        if (!m) throw value;\n 11030        value = m.call(observer, value);\n 11031      } catch (e) {\n 11032:       try {\n 11033          cleanupSubscription(subscription);\n 11034        } finally {\n .....\n 11043        var observer = subscription._o;\n 11044        subscription._o = undefined;\n 11045:       try {\n 11046          var m = getMethod(observer.complete);\n 11047          value = m ? m.call(observer, value) : undefined;\n 11048        } catch (e) {\n 11049:         try {\n 11050            cleanupSubscription(subscription);\n 11051          } finally {\n .....\n 11072        var subscription = that.subscribe({\n 11073          next: function (value) {\n 11074:           try {\n 11075              return fn(value);\n 11076            } catch (e) {\n .....\n 11100        microtask(function () {\n 11101          if (!done) {\n 11102:           try {\n 11103              if (forOf(x, false, function (it) {\n 11104                observer.next(it);\n .....\n 11791    // has a stable shape and so hopefully should be cheap to allocate.\n 11792    function tryCatch(fn, obj, arg) {\n 11793:     try {\n 11794        return { type: \"normal\", arg: fn.call(obj, arg) };\n 11795      } catch (err) {\n .....\n 12532              function parseSuspensionRanges(suspensionRangesSetting) {\n 12533                  if (!suspensionRangesSetting) return defaultSettings.SuspensionRanges;\n 12534:                 try {\n 12535                      var suspensionRanges = JSON.parse(suspensionRangesSetting);\n 12536                      return suspensionRanges;\n .....\n 12685                      var _iteratorError = undefined;\n 12686  \n 12687:                     try {\n 12688                          for (var _iterator = this.eventHandlers[eventName][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 12689                              var eventHandler = _step.value;\n .....\n 12695                          _iteratorError = err;\n 12696                      } finally {\n 12697:                         try {\n 12698                              if (!_iteratorNormalCompletion && _iterator.return) {\n 12699                                  _iterator.return();\n .....\n 12792                      var _iteratorError = undefined;\n 12793  \n 12794:                     try {\n 12795                          for (var _iterator = filterValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 12796                              var filterValue = _step.value;\n .....\n 12804                          _iteratorError = err;\n 12805                      } finally {\n 12806:                         try {\n 12807                              if (!_iteratorNormalCompletion && _iterator.return) {\n 12808                                  _iterator.return();\n .....\n 12866                      var _iteratorError2 = undefined;\n 12867  \n 12868:                     try {\n 12869                          for (var _iterator2 = this.filterOptions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 12870                              var filter = _step2.value;\n .....\n 12878                          _iteratorError2 = err;\n 12879                      } finally {\n 12880:                         try {\n 12881                              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 12882                                  _iterator2.return();\n .....\n 12909                      var _iteratorError3 = undefined;\n 12910  \n 12911:                     try {\n 12912                          for (var _iterator3 = selectedFilters[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 12913                              var selectedFilter = _step3.value;\n .....\n 12921                          _iteratorError3 = err;\n 12922                      } finally {\n 12923:                         try {\n 12924                              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 12925                                  _iterator3.return();\n .....\n 13227              var _iteratorError4 = undefined;\n 13228  \n 13229:             try {\n 13230                  for (var _iterator4 = (filters.FitmentFilters || [])[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n 13231                      var fitmentFilter = _step4.value;\n .....\n 13239                  _iteratorError4 = err;\n 13240              } finally {\n 13241:                 try {\n 13242                      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n 13243                          _iterator4.return();\n .....\n 13260              var _iteratorError5 = undefined;\n 13261  \n 13262:             try {\n 13263                  for (var _iterator5 = fitmentFilters[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n 13264                      var appliedFitmentFilter = _step5.value;\n .....\n 13273                  _iteratorError5 = err;\n 13274              } finally {\n 13275:                 try {\n 13276                      if (!_iteratorNormalCompletion5 && _iterator5.return) {\n 13277                          _iterator5.return();\n .....\n 13337                      var _iteratorError = undefined;\n 13338  \n 13339:                     try {\n 13340                          for (var _iterator = this.exitCallbacks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 13341                              var exitCallback = _step.value;\n .....\n 13347                          _iteratorError = err;\n 13348                      } finally {\n 13349:                         try {\n 13350                              if (!_iteratorNormalCompletion && _iterator.return) {\n 13351                                  _iterator.return();\n .....\n 13372                      var _iteratorError2 = undefined;\n 13373  \n 13374:                     try {\n 13375                          for (var _iterator2 = this.enterCallbacks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 13376                              var enterCallback = _step2.value;\n .....\n 13382                          _iteratorError2 = err;\n 13383                      } finally {\n 13384:                         try {\n 13385                              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 13386                                  _iterator2.return();\n .....\n 13447                      var _iteratorError3 = undefined;\n 13448  \n 13449:                     try {\n 13450                          for (var _iterator3 = this.dataChangedCallbacks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 13451                              var dataChangedCallback = _step3.value;\n .....\n 13459                          _iteratorError3 = err;\n 13460                      } finally {\n 13461:                         try {\n 13462                              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 13463                                  _iterator3.return();\n .....\n 13474                      var _iteratorError4 = undefined;\n 13475  \n 13476:                     try {\n 13477                          for (var _iterator4 = beforeCallbacks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n 13478                              var callback = _step4.value;\n .....\n 13484                          _iteratorError4 = err;\n 13485                      } finally {\n 13486:                         try {\n 13487                              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n 13488                                  _iterator4.return();\n .....\n 13500                      var _iteratorError5 = undefined;\n 13501  \n 13502:                     try {\n 13503                          for (var _iterator5 = afterCallbacks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n 13504                              var _callback = _step5.value;\n .....\n 13510                          _iteratorError5 = err;\n 13511                      } finally {\n 13512:                         try {\n 13513                              if (!_iteratorNormalCompletion5 && _iterator5.return) {\n 13514                                  _iterator5.return();\n .....\n 13633                      var _iteratorError6 = undefined;\n 13634  \n 13635:                     try {\n 13636                          for (var _iterator6 = this.changeCallbacks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n 13637                              var callback = _step6.value;\n .....\n 13644                          _iteratorError6 = err;\n 13645                      } finally {\n 13646:                         try {\n 13647                              if (!_iteratorNormalCompletion6 && _iterator6.return) {\n 13648                                  _iterator6.return();\n .....\n 14140                  var _iteratorError = undefined;\n 14141  \n 14142:                 try {\n 14143                      for (var _iterator = this.otherComponents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 14144                          var component = _step.value;\n .....\n 14150                      _iteratorError = err;\n 14151                  } finally {\n 14152:                     try {\n 14153                          if (!_iteratorNormalCompletion && _iterator.return) {\n 14154                              _iterator.return();\n .....\n 14165                  var _iteratorError2 = undefined;\n 14166  \n 14167:                 try {\n 14168                      for (var _iterator2 = this.mainComponents[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 14169                          var _component = _step2.value;\n .....\n 14176                      _iteratorError2 = err;\n 14177                  } finally {\n 14178:                     try {\n 14179                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 14180                              _iterator2.return();\n .....\n 14485  //# sourceMappingURL=data:application/json;charset=utf8;base64,\n 14486  \n 14487: var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n 14488  \n 14489  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n .....\n 14572                  var _iteratorError = undefined;\n 14573  \n 14574:                 try {\n 14575                      for (var _iterator = this.events[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 14576                          var registeredEvent = _step.value;\n .....\n 14587                      _iteratorError = err;\n 14588                  } finally {\n 14589:                     try {\n 14590                          if (!_iteratorNormalCompletion && _iterator.return) {\n 14591                              _iterator.return();\n .....\n 14861                  var _iteratorError = undefined;\n 14862  \n 14863:                 try {\n 14864                      for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 14865                          var option = _step.value;\n .....\n 14878                      _iteratorError = err;\n 14879                  } finally {\n 14880:                     try {\n 14881                          if (!_iteratorNormalCompletion && _iterator.return) {\n 14882                              _iterator.return();\n .....\n 14904                          var _iteratorError2 = undefined;\n 14905  \n 14906:                         try {\n 14907                              for (var _iterator2 = RideStylerShowcase.HTMLHelper.childrenWithClasses(this.optionContainer, activeClass)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 14908                                  var child = _step2.value;\n .....\n 14914                              _iteratorError2 = err;\n 14915                          } finally {\n 14916:                             try {\n 14917                                  if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 14918                                      _iterator2.return();\n .....\n 14974                  var _iteratorError = undefined;\n 14975  \n 14976:                 try {\n 14977                      for (var _iterator = fitments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 14978                          var fitment = _step.value;\n .....\n 14988                      _iteratorError = err;\n 14989                  } finally {\n 14990:                     try {\n 14991                          if (!_iteratorNormalCompletion && _iterator.return) {\n 14992                              _iterator.return();\n .....\n 15104                  var _iteratorError = undefined;\n 15105  \n 15106:                 try {\n 15107                      for (var _iterator = actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 15108                          var action = _step.value;\n .....\n 15114                      _iteratorError = err;\n 15115                  } finally {\n 15116:                     try {\n 15117                          if (!_iteratorNormalCompletion && _iterator.return) {\n 15118                              _iterator.return();\n .....\n 15344                  var _iteratorError = undefined;\n 15345  \n 15346:                 try {\n 15347                      for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 15348                          var option = _step.value;\n .....\n 15354                      _iteratorError = err;\n 15355                  } finally {\n 15356:                     try {\n 15357                          if (!_iteratorNormalCompletion && _iterator.return) {\n 15358                              _iterator.return();\n .....\n 15602                          var _iteratorError = undefined;\n 15603  \n 15604:                         try {\n 15605                              for (var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 15606                                  var element = _step.value;\n .....\n 15612                              _iteratorError = err;\n 15613                          } finally {\n 15614:                             try {\n 15615                                  if (!_iteratorNormalCompletion && _iterator.return) {\n 15616                                      _iterator.return();\n .....\n 15770                  var _iteratorError = undefined;\n 15771  \n 15772:                 try {\n 15773                      for (var _iterator = schemes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 15774                          var scheme = _step.value;\n .....\n 15808                      _iteratorError = err;\n 15809                  } finally {\n 15810:                     try {\n 15811                          if (!_iteratorNormalCompletion && _iterator.return) {\n 15812                              _iterator.return();\n .....\n 15953                      var _iteratorError = undefined;\n 15954  \n 15955:                     try {\n 15956                          for (var _iterator = _this2.pages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 15957                              var page = _step.value;\n .....\n 15966                          _iteratorError = err;\n 15967                      } finally {\n 15968:                         try {\n 15969                              if (!_iteratorNormalCompletion && _iterator.return) {\n 15970                                  _iterator.return();\n .....\n 16033                  var _iteratorError2 = undefined;\n 16034  \n 16035:                 try {\n 16036                      for (var _iterator2 = this.pages[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 16037                          var page = _step2.value;\n .....\n 16043                      _iteratorError2 = err;\n 16044                  } finally {\n 16045:                     try {\n 16046                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 16047                              _iterator2.return();\n .....\n 16160                  var _iteratorError = undefined;\n 16161  \n 16162:                 try {\n 16163                      for (var _iterator = products[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 16164                          var product = _step.value;\n .....\n 16204                      _iteratorError = err;\n 16205                  } finally {\n 16206:                     try {\n 16207                          if (!_iteratorNormalCompletion && _iterator.return) {\n 16208                              _iterator.return();\n .....\n 16625                  var _iteratorError = undefined;\n 16626  \n 16627:                 try {\n 16628                      for (var _iterator = this.shareButtons[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 16629                          var shareButton = _step.value;\n .....\n 16635                      _iteratorError = err;\n 16636                  } finally {\n 16637:                     try {\n 16638                          if (!_iteratorNormalCompletion && _iterator.return) {\n 16639                              _iterator.return();\n .....\n 16718                  var _iteratorError2 = undefined;\n 16719  \n 16720:                 try {\n 16721                      for (var _iterator2 = this.shareButtons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 16722                          var shareButton = _step2.value;\n .....\n 16728                      _iteratorError2 = err;\n 16729                  } finally {\n 16730:                     try {\n 16731                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 16732                              _iterator2.return();\n .....\n 16750                  var _iteratorError3 = undefined;\n 16751  \n 16752:                 try {\n 16753                      for (var _iterator3 = this.shareButtons[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 16754                          var shareButton = _step3.value;\n .....\n 16762                      _iteratorError3 = err;\n 16763                  } finally {\n 16764:                     try {\n 16765                          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 16766                              _iterator3.return();\n .....\n 17032                  var _iteratorError = undefined;\n 17033  \n 17034:                 try {\n 17035                      for (var _iterator = this.tabs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 17036                          var tab = _step.value;\n .....\n 17049                      _iteratorError = err;\n 17050                  } finally {\n 17051:                     try {\n 17052                          if (!_iteratorNormalCompletion && _iterator.return) {\n 17053                              _iterator.return();\n .....\n 17082                  var _iteratorError2 = undefined;\n 17083  \n 17084:                 try {\n 17085                      for (var _iterator2 = tabs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 17086                          var tab = _step2.value;\n .....\n 17092                      _iteratorError2 = err;\n 17093                  } finally {\n 17094:                     try {\n 17095                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 17096                              _iterator2.return();\n .....\n 17157                  var _iteratorError3 = undefined;\n 17158  \n 17159:                 try {\n 17160                      for (var _iterator3 = this.tabs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 17161                          var tab = _step3.value;\n .....\n 17169                      _iteratorError3 = err;\n 17170                  } finally {\n 17171:                     try {\n 17172                          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 17173                              _iterator3.return();\n .....\n 17189                  var _iteratorError4 = undefined;\n 17190  \n 17191:                 try {\n 17192                      for (var _iterator4 = this.tabs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n 17193                          var tab = _step4.value;\n .....\n 17201                      _iteratorError4 = err;\n 17202                  } finally {\n 17203:                     try {\n 17204                          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n 17205                              _iterator4.return();\n .....\n 17355                  var _iteratorError = undefined;\n 17356  \n 17357:                 try {\n 17358                      for (var _iterator = this.columns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 17359                          var column = _step.value;\n .....\n 17365                      _iteratorError = err;\n 17366                  } finally {\n 17367:                     try {\n 17368                          if (!_iteratorNormalCompletion && _iterator.return) {\n 17369                              _iterator.return();\n .....\n 17401                  var _iteratorError2 = undefined;\n 17402  \n 17403:                 try {\n 17404                      for (var _iterator2 = this.columns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 17405                          var column = _step2.value;\n .....\n 17411                      _iteratorError2 = err;\n 17412                  } finally {\n 17413:                     try {\n 17414                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 17415                              _iterator2.return();\n .....\n 17433                  var _iteratorError3 = undefined;\n 17434  \n 17435:                 try {\n 17436                      for (var _iterator3 = rows[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 17437                          var row = _step3.value;\n .....\n 17443                      _iteratorError3 = err;\n 17444                  } finally {\n 17445:                     try {\n 17446                          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 17447                              _iterator3.return();\n .....\n 17649                  var _iteratorError = undefined;\n 17650  \n 17651:                 try {\n 17652                      for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 17653                          var option = _step.value;\n .....\n 17659                      _iteratorError = err;\n 17660                  } finally {\n 17661:                     try {\n 17662                          if (!_iteratorNormalCompletion && _iterator.return) {\n 17663                              _iterator.return();\n .....\n 17817                      var _iteratorError = undefined;\n 17818  \n 17819:                     try {\n 17820                          for (var _iterator = modelImages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 17821                              var modelImage = _step.value;\n .....\n 17827                          _iteratorError = err;\n 17828                      } finally {\n 17829:                         try {\n 17830                              if (!_iteratorNormalCompletion && _iterator.return) {\n 17831                                  _iterator.return();\n .....\n 17844                  var _iteratorError2 = undefined;\n 17845  \n 17846:                 try {\n 17847                      for (var _iterator2 = models[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 17848                          var model = _step2.value;\n .....\n 17868                      _iteratorError2 = err;\n 17869                  } finally {\n 17870:                     try {\n 17871                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 17872                              _iterator2.return();\n .....\n 18001                  var _iteratorError = undefined;\n 18002  \n 18003:                 try {\n 18004                      for (var _iterator = this.components[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 18005                          var component = _step.value;\n .....\n 18011                      _iteratorError = err;\n 18012                  } finally {\n 18013:                     try {\n 18014                          if (!_iteratorNormalCompletion && _iterator.return) {\n 18015                              _iterator.return();\n .....\n 18087                  var _iteratorError2 = undefined;\n 18088  \n 18089:                 try {\n 18090                      for (var _iterator2 = this.customizationComponentOrder[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 18091                          var key = _step2.value;\n .....\n 18099                      _iteratorError2 = err;\n 18100                  } finally {\n 18101:                     try {\n 18102                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 18103                              _iterator2.return();\n .....\n 18205                      var _iteratorError3 = undefined;\n 18206  \n 18207:                     try {\n 18208                          for (var _iterator3 = responses[1].Details[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 18209                              var tireOption = _step3.value;\n .....\n 18218                          _iteratorError3 = err;\n 18219                      } finally {\n 18220:                         try {\n 18221                              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 18222                                  _iterator3.return();\n .....\n 18313                  var _iteratorError4 = undefined;\n 18314  \n 18315:                 try {\n 18316                      for (var _iterator4 = RideStylerShowcase.ObjectHelper.getValues(this.customizationComponents)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n 18317                          var customizationComponent = _step4.value;\n .....\n 18324                      _iteratorError4 = err;\n 18325                  } finally {\n 18326:                     try {\n 18327                          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n 18328                              _iterator4.return();\n .....\n 18490                  var _iteratorError = undefined;\n 18491  \n 18492:                 try {\n 18493                      for (var _iterator = fitments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 18494                          var fitment = _step.value;\n .....\n 18521                      _iteratorError = err;\n 18522                  } finally {\n 18523:                     try {\n 18524                          if (!_iteratorNormalCompletion && _iterator.return) {\n 18525                              _iterator.return();\n .....\n 18538                  var _iteratorError2 = undefined;\n 18539  \n 18540:                 try {\n 18541                      for (var _iterator2 = allSizePriceCombinations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 18542                          var sizePriceCombo = _step2.value;\n .....\n 18564                      _iteratorError2 = err;\n 18565                  } finally {\n 18566:                     try {\n 18567                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 18568                              _iterator2.return();\n .....\n 19112                  var _iteratorError = undefined;\n 19113  \n 19114:                 try {\n 19115                      for (var _iterator = filterProvider.filterOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 19116                          var filterOption = _step.value;\n .....\n 19124                      _iteratorError = err;\n 19125                  } finally {\n 19126:                     try {\n 19127                          if (!_iteratorNormalCompletion && _iterator.return) {\n 19128                              _iterator.return();\n .....\n 19160                  var _iteratorError2 = undefined;\n 19161  \n 19162:                 try {\n 19163                      for (var _iterator2 = this.menus[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 19164                          var _menu = _step2.value;\n .....\n 19173                      _iteratorError2 = err;\n 19174                  } finally {\n 19175:                     try {\n 19176                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 19177                              _iterator2.return();\n .....\n 19500              var _iteratorError = undefined;\n 19501  \n 19502:             try {\n 19503                  for (var _iterator = childrenWithClasses.apply(undefined, [element].concat(classes))[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 19504                      var child = _step.value;\n .....\n 19510                  _iteratorError = err;\n 19511              } finally {\n 19512:                 try {\n 19513                      if (!_iteratorNormalCompletion && _iterator.return) {\n 19514                          _iterator.return();\n .....\n 19604                      var _iteratorError2 = undefined;\n 19605  \n 19606:                     try {\n 19607                          for (var _iterator2 = options.append[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 19608                              var childElement = _step2.value;\n .....\n 19614                          _iteratorError2 = err;\n 19615                      } finally {\n 19616:                         try {\n 19617                              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 19618                                  _iterator2.return();\n .....\n 19749              var _iteratorError3 = undefined;\n 19750  \n 19751:             try {\n 19752                  for (var _iterator3 = values[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 19753                      var value = _step3.value;\n .....\n 19766                  _iteratorError3 = err;\n 19767              } finally {\n 19768:                 try {\n 19769                      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 19770                          _iterator3.return();\n .....\n 19881              var _iteratorError = undefined;\n 19882  \n 19883:             try {\n 19884                  for (var _iterator = assignObjects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 19885                      var source = _step.value;\n .....\n 19894                  _iteratorError = err;\n 19895              } finally {\n 19896:                 try {\n 19897                      if (!_iteratorNormalCompletion && _iterator.return) {\n 19898                          _iterator.return();\n .....\n 20182              var _iteratorError = undefined;\n 20183  \n 20184:             try {\n 20185                  for (var _iterator = offsetPositionings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n 20186                      var positioning = _step.value;\n .....\n 20192                  _iteratorError = err;\n 20193              } finally {\n 20194:                 try {\n 20195                      if (!_iteratorNormalCompletion && _iterator.return) {\n 20196                          _iterator.return();\n .....\n 20218                  var _iteratorError2 = undefined;\n 20219  \n 20220:                 try {\n 20221                      for (var _iterator2 = subclassList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n 20222                          var c = _step2.value;\n .....\n 20228                      _iteratorError2 = err;\n 20229                  } finally {\n 20230:                     try {\n 20231                          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n 20232                              _iterator2.return();\n .....\n 20283              var _iteratorError3 = undefined;\n 20284  \n 20285:             try {\n 20286                  for (var _iterator3 = classes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n 20287                      var className = _step3.value;\n .....\n 20293                  _iteratorError3 = err;\n 20294              } finally {\n 20295:                 try {\n 20296                      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n 20297                          _iterator3.return();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\bin\\acorn:\n   42  function run(code) {\n   43    var result;\n   44:   try {\n   45      if (!tokenize) {\n   46        result = acorn.parse(code, options);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\dist\\acorn.es.js:\n 3296  \n 3297  function tryCreateRegexp(src, flags, throwErrorAt, parser) {\n 3298:   try {\n 3299      return new RegExp(src, flags)\n 3300    } catch (e) {\n ....\n 3481  pp$8.tryReadTemplateToken = function() {\n 3482    this.inTemplateElement = true;\n 3483:   try {\n 3484      this.readTmplToken();\n 3485    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\dist\\acorn.js:\n 3302  \n 3303  function tryCreateRegexp(src, flags, throwErrorAt, parser) {\n 3304:   try {\n 3305      return new RegExp(src, flags)\n 3306    } catch (e) {\n ....\n 3487  pp$8.tryReadTemplateToken = function() {\n 3488    this.inTemplateElement = true;\n 3489:   try {\n 3490      this.readTmplToken();\n 3491    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\dist\\acorn_loose.es.js:\n  202  \n  203    for (;;) {\n  204:     try {\n  205        this$1.toks.next();\n  206        if (this$1.toks.type === tokTypes.dot &&\n  ...\n  222          } else if (/regular expr/i.test(msg)) {\n  223            var re = this$1.input.slice(e.pos, pos);\n  224:           try { re = new RegExp(re); } catch (e) { /* ignore compilation error due to new syntax */ }\n  225            replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re};\n  226          } else if (/template/.test(msg)) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\dist\\acorn_loose.js:\n  206  \n  207    for (;;) {\n  208:     try {\n  209        this$1.toks.next();\n  210        if (this$1.toks.type === __acorn.tokTypes.dot &&\n  ...\n  226          } else if (/regular expr/i.test(msg)) {\n  227            var re = this$1.input.slice(e.pos, pos);\n  228:           try { re = new RegExp(re); } catch (e) { /* ignore compilation error due to new syntax */ }\n  229            replace = {start: e.pos, end: pos, type: __acorn.tokTypes.regexp, value: re};\n  230          } else if (/template/.test(msg)) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\dist\\walk.es.js:\n   93    test = makeTest(test);\n   94    if (!base) { base = exports.base; }\n   95:   try {\n   96      (function c(node, st, override) {\n   97        var type = override || node.type;\n   ..\n  115    test = makeTest(test);\n  116    if (!base) { base = exports.base; }\n  117:   try {\n  118      (function c(node, st, override) {\n  119        var type = override || node.type;\n  ...\n  132    test = makeTest(test);\n  133    if (!base) { base = exports.base; }\n  134:   try {\n  135      (function c(node, st, override) {\n  136        if (node.end < pos) { return }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\@gulp-sourcemaps\\identity-map\\node_modules\\acorn\\dist\\walk.js:\n   99    test = makeTest(test);\n  100    if (!base) { base = exports.base; }\n  101:   try {\n  102      (function c(node, st, override) {\n  103        var type = override || node.type;\n  ...\n  121    test = makeTest(test);\n  122    if (!base) { base = exports.base; }\n  123:   try {\n  124      (function c(node, st, override) {\n  125        var type = override || node.type;\n  ...\n  138    test = makeTest(test);\n  139    if (!base) { base = exports.base; }\n  140:   try {\n  141      (function c(node, st, override) {\n  142        if (node.end < pos) { return }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\bin\\acorn:\n   43    var result\n   44    if (!tokenize) {\n   45:     try { result = acorn.parse(code, options) }\n   46      catch(e) { console.error(e.message); process.exit(1) }\n   47    } else {\n   ..\n   49      var tokenizer = acorn.tokenizer(code, options), token\n   50      while (true) {\n   51:       try { token = tokenizer.getToken() }\n   52        catch(e) { console.error(e.message); process.exit(1) }\n   53        result.push(token)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\dist\\acorn.es.js:\n 3017  \n 3018  function tryCreateRegexp(src, flags, throwErrorAt, parser) {\n 3019:   try {\n 3020      return new RegExp(src, flags)\n 3021    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\dist\\acorn.js:\n 3023  \n 3024  function tryCreateRegexp(src, flags, throwErrorAt, parser) {\n 3025:   try {\n 3026      return new RegExp(src, flags)\n 3027    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\dist\\acorn_loose.es.js:\n  197  \n  198    for (;;) {\n  199:     try {\n  200        this$1.toks.next()\n  201        if (this$1.toks.type === tokTypes.dot &&\n  ...\n  217          } else if (/regular expr/i.test(msg)) {\n  218            var re = this$1.input.slice(e.pos, pos)\n  219:           try { re = new RegExp(re) } catch(e) {}\n  220            replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re}\n  221          } else if (/template/.test(msg)) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\dist\\acorn_loose.js:\n  201  \n  202    for (;;) {\n  203:     try {\n  204        this$1.toks.next()\n  205        if (this$1.toks.type === __acorn.tokTypes.dot &&\n  ...\n  221          } else if (/regular expr/i.test(msg)) {\n  222            var re = this$1.input.slice(e.pos, pos)\n  223:           try { re = new RegExp(re) } catch(e) {}\n  224            replace = {start: e.pos, end: pos, type: __acorn.tokTypes.regexp, value: re}\n  225          } else if (/template/.test(msg)) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\dist\\walk.es.js:\n   71    test = makeTest(test)\n   72    if (!base) base = exports.base\n   73:   try {\n   74      ;(function c(node, st, override) {\n   75        var type = override || node.type\n   ..\n   93    test = makeTest(test)\n   94    if (!base) base = exports.base\n   95:   try {\n   96      ;(function c(node, st, override) {\n   97        var type = override || node.type\n   ..\n  110    test = makeTest(test)\n  111    if (!base) base = exports.base\n  112:   try {\n  113      ;(function c(node, st, override) {\n  114        if (node.end < pos) return\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\dist\\walk.js:\n   77    test = makeTest(test)\n   78    if (!base) base = exports.base\n   79:   try {\n   80      ;(function c(node, st, override) {\n   81        var type = override || node.type\n   ..\n   99    test = makeTest(test)\n  100    if (!base) base = exports.base\n  101:   try {\n  102      ;(function c(node, st, override) {\n  103        var type = override || node.type\n  ...\n  116    test = makeTest(test)\n  117    if (!base) base = exports.base\n  118:   try {\n  119      ;(function c(node, st, override) {\n  120        if (node.end < pos) return\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\src\\tokenize.js:\n  374  \n  375  function tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  376:   try {\n  377      return new RegExp(src, flags)\n  378    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\src\\bin\\acorn.js:\n   36    let result\n   37    if (!tokenize) {\n   38:     try { result = acorn.parse(code, options) }\n   39      catch(e) { console.error(e.message); process.exit(1) }\n   40    } else {\n   ..\n   42      let tokenizer = acorn.tokenizer(code, options), token\n   43      while (true) {\n   44:       try { token = tokenizer.getToken() }\n   45        catch(e) { console.error(e.message); process.exit(1) }\n   46        result.push(token)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\src\\loose\\tokenize.js:\n   26  lp.readToken = function() {\n   27    for (;;) {\n   28:     try {\n   29        this.toks.next()\n   30        if (this.toks.type === tt.dot &&\n   ..\n   46          } else if (/regular expr/i.test(msg)) {\n   47            let re = this.input.slice(e.pos, pos)\n   48:           try { re = new RegExp(re) } catch(e) {}\n   49            replace = {start: e.pos, end: pos, type: tt.regexp, value: re}\n   50          } else if (/template/.test(msg)) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\acorn\\src\\walk\\index.js:\n   73    test = makeTest(test)\n   74    if (!base) base = exports.base\n   75:   try {\n   76      ;(function c(node, st, override) {\n   77        let type = override || node.type\n   ..\n   95    test = makeTest(test)\n   96    if (!base) base = exports.base\n   97:   try {\n   98      ;(function c(node, st, override) {\n   99        let type = override || node.type\n  ...\n  112    test = makeTest(test)\n  113    if (!base) base = exports.base\n  114:   try {\n  115      ;(function c(node, st, override) {\n  116        if (node.end < pos) return\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\dist\\ajv.bundle.js:\n   69  function checkGenerators(opts, required) {\n   70    /* jshint evil: true */\n   71:   try {\n   72      (new Function('(function*(){})()'))();\n   73      return true;\n   ..\n   81  function checkAsyncFunction(opts, required) {\n   82    /* jshint evil: true */\n   83:   try {\n   84      (new Function('(async function(){})()'))();\n   85      /* istanbul ignore next */\n   ..\n   92  \n   93  function getRegenerator(opts, required) {\n   94:   try {\n   95      if (!regenerator) {\n   96        var name = 'regenerator';\n   ..\n  115  function getNodent(opts, required) {\n  116    /* jshint evil: true */\n  117:   try {\n  118      if (!nodent) {\n  119        var name = 'nodent';\n  ...\n  149    var schemaObj;\n  150    var self = this;\n  151:   try {\n  152      schemaObj = this._addSchema(schema);\n  153    } catch(e) {\n  ...\n  166    function _compileAsync(schema, callback, firstCall) {\n  167      var validate;\n  168:     try { validate = self.compile(schema); }\n  169      catch(e) {\n  170        if (e.missingSchema) loadMissingSchema(e);\n  ...\n  201          if (err) return callback(err);\n  202          if (!(self._refs[ref] || self._schemas[ref])) {\n  203:           try {\n  204              self.addSchema(sch, ref);\n  205            } catch(e) {\n  ...\n  451  \n  452  function regex(str) {\n  453:   try {\n  454      new RegExp(str);\n  455      return true;\n  ...\n  503    if (beautify === undefined) {\n  504      var name = 'js-beautify';\n  505:     try { beautify = require(name).js_beautify; }\n  506      catch(e) { beautify = false; }\n  507    }\n  ...\n  556    var RULES = this.RULES;\n  557  \n  558:   try {\n  559      var v = localCompile(schema, root, localRefs, baseId);\n  560      compilation.validate = v;\n  ...\n  624      var validate, validateCode\n  625        , transpile = opts._transpileFunc;\n  626:     try {\n  627        validateCode = $async && transpile\n  628                        ? transpile(sourceCode)\n  ...\n 2310        if ($asyncKeyword) {\n 2311          $ruleErrs = 'customErrors' + $lvl;\n 2312:         out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = ' + (it.yieldAwait) + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n 2313        } else {\n 2314          out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n ....\n 3854      if ($async) {\n 3855        if (!it.async) throw new Error('async schema referenced by sync schema');\n 3856:       out += ' try { ';\n 3857        if ($breakOnError) {\n 3858          out += 'var ' + ($valid) + ' =';\n ....\n 5434      function onFulfilled(res) {\n 5435        var ret;\n 5436:       try {\n 5437          ret = gen.next(res);\n 5438        } catch (e) {\n ....\n 5450      function onRejected(err) {\n 5451        var ret;\n 5452:       try {\n 5453          ret = gen.throw(err);\n 5454        } catch (e) {\n ....\n 7760                          : SCHEMA_URI_FORMAT;\n 7761      var valid;\n 7762:     try { valid = validate($schema, schema); }\n 7763      finally { self._formats.uri = currentUriFormat; }\n 7764      if (!valid && throwOrLogError) {\n ....\n 7926  \n 7927      var v;\n 7928:     try { v = compileSchema.call(self, schemaObj.schema, root, schemaObj.localRefs); }\n 7929      finally {\n 7930        schemaObj.compiling = false;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\dist\\ajv.min.js:\n    1  /* ajv 4.11.8: Another JSON Schema Validator */\n    2  !function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r;r=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,r.Ajv=e()}}(function(){var e;return function e(r,t,a){function s(i,n){if(!t[i]){if(!r[i]){var l=\"function\"==typeof require&&require;if(!n&&l)return l(i,!0);if(o)return o(i,!0);var c=new Error(\"Cannot find module '\"+i+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var h=t[i]={exports:{}};r[i][0].call(h.exports,function(e){var t=r[i][1][e];return s(t||e)},h,h.exports,e,r,t,a)}return t[i].exports}for(var o=\"function\"==typeof require&&require,i=0;i<a.length;i++)s(a[i]);return s}({1:[function(e,r,t){\"use strict\";function a(e,r){!1!==r&&(r=!0);var t,s=e.async,o=e.transpile;switch(typeof o){case\"string\":var i=m[o];if(!i)throw new Error(\"bad transpiler: \"+o);return e._transpileFunc=i(e,r);case\"undefined\":case\"boolean\":if(\"string\"==typeof s){if(!(t=p[s]))throw new Error(\"bad async mode: \"+s);return e.transpile=t(e,r)}for(var n=0;n<v.length;n++){var l=v[n];if(a(l,!1))return d.copy(l,e),e.transpile}throw new Error(\"generators, nodent and regenerator are not available\");case\"function\":return e._transpileFunc=e.transpile;default:throw new Error(\"bad transpiler: \"+o)}}function s(e,r){try{return new Function(\"(function*(){})()\")(),!0}catch(e){if(r)throw new Error(\"generators not supported\")}}function o(e,r){try{return new Function(\"(async function(){})()\")(),!0}catch(e){if(r)throw new Error(\"es7 async functions not supported\")}}function i(r,t){try{if(!u){u=e(\"regenerator\"),u.runtime()}return r.async&&!0!==r.async||(r.async=\"es7\"),n}catch(e){if(t)throw new Error(\"regenerator not available\")}}function n(e){return u.compile(e).code}function l(r,t){try{if(!f){f=e(\"nodent\")({log:!1,dontInstallRequireHook:!0})}return\"es7\"!=r.async&&(r.async&&!0!==r.async&&console.warn(\"nodent transpiles only es7 async functions\"),r.async=\"es7\"),c}catch(e){if(t)throw new Error(\"nodent not available\")}}function c(e){return f.compile(e,\"\",{promises:!0,sourcemap:!1}).code}function h(e,r){function t(e,r,a){function o(e,t){if(!a)return r(e,t);setTimeout(function(){r(e,t)})}var i;try{i=s.compile(e)}catch(a){return void(a.missingSchema?function(a){function o(a,o){if(a)return r(a);if(!s._refs[i]&&!s._schemas[i])try{s.addSchema(o,i)}catch(e){return void r(e)}t(e,r)}var i=a.missingSchema;if(s._refs[i]||s._schemas[i])return r(new Error(\"Schema \"+i+\" is loaded but \"+a.missingRef+\" cannot be resolved\"));var n=s._loadingSchemas[i];n?\"function\"==typeof n?s._loadingSchemas[i]=[n,o]:n[n.length]=o:(s._loadingSchemas[i]=o,s._opts.loadSchema(i,function(e,r){var t=s._loadingSchemas[i];if(delete s._loadingSchemas[i],\"function\"==typeof t)t(e,r);else for(var a=0;a<t.length;a++)t[a](e,r)}))}(a):o(a))}o(null,i)}var a,s=this;try{a=this._addSchema(e)}catch(e){return void setTimeout(function(){r(e)})}if(a.validate)setTimeout(function(){r(null,a.validate)});else{if(\"function\"!=typeof this._opts.loadSchema)throw new Error(\"options.loadSchema should be a function\");t(e,r,!0)}}r.exports={setup:a,compile:h};var u,f,d=e(\"./compile/util\"),p={\"*\":s,\"co*\":s,es7:o},m={nodent:l,regenerator:i},v=[{async:\"co*\"},{async:\"es7\",transpile:\"nodent\"},{async:\"co*\",transpile:\"regenerator\"}]},{\"./compile/util\":11}],2:[function(e,r,t){\"use strict\";var a=r.exports=function(){this._cache={}};a.prototype.put=function(e,r){this._cache[e]=r},a.prototype.get=function(e){return this._cache[e]},a.prototype.del=function(e){delete this._cache[e]},a.prototype.clear=function(){this._cache={}}},{}],3:[function(e,r,t){\"use strict\";r.exports={$ref:e(\"../dotjs/ref\"),allOf:e(\"../dotjs/allOf\"),anyOf:e(\"../dotjs/anyOf\"),dependencies:e(\"../dotjs/dependencies\"),enum:e(\"../dotjs/enum\"),format:e(\"../dotjs/format\"),items:e(\"../dotjs/items\"),maximum:e(\"../dotjs/_limit\"),minimum:e(\"../dotjs/_limit\"),maxItems:e(\"../dotjs/_limitItems\"),minItems:e(\"../dotjs/_limitItems\"),maxLength:e(\"../dotjs/_limitLength\"),minLength:e(\"../dotjs/_limitLength\"),maxProperties:e(\"../dotjs/_limitProperties\"),minProperties:e(\"../dotjs/_limitProperties\"),multipleOf:e(\"../dotjs/multipleOf\"),not:e(\"../dotjs/not\"),oneOf:e(\"../dotjs/oneOf\"),pattern:e(\"../dotjs/pattern\"),properties:e(\"../dotjs/properties\"),required:e(\"../dotjs/required\"),uniqueItems:e(\"../dotjs/uniqueItems\"),validate:e(\"../dotjs/validate\")}},{\"../dotjs/_limit\":14,\"../dotjs/_limitItems\":15,\"../dotjs/_limitLength\":16,\"../dotjs/_limitProperties\":17,\"../dotjs/allOf\":18,\"../dotjs/anyOf\":19,\"../dotjs/dependencies\":22,\"../dotjs/enum\":23,\"../dotjs/format\":24,\"../dotjs/items\":25,\"../dotjs/multipleOf\":26,\"../dotjs/not\":27,\"../dotjs/oneOf\":28,\"../dotjs/pattern\":29,\"../dotjs/properties\":31,\"../dotjs/ref\":32,\"../dotjs/required\":33,\"../dotjs/uniqueItems\":35,\"../dotjs/validate\":36}],4:[function(e,r,t){\"use strict\";r.exports=function e(r,t){if(r===t)return!0;var a,s=Array.isArray(r),o=Array.isArray(t);if(s&&o){if(r.length!=t.length)return!1;for(a=0;a<r.length;a++)if(!e(r[a],t[a]))return!1;return!0}if(s!=o)return!1;if(r&&t&&\"object\"==typeof r&&\"object\"==typeof t){var i=Object.keys(r);if(i.length!==Object.keys(t).length)return!1;var n=r instanceof Date,l=t instanceof Date;if(n&&l)return r.getTime()==t.getTime();if(n!=l)return!1;var c=r instanceof RegExp,h=t instanceof RegExp;if(c&&h)return r.toString()==t.toString();if(c!=h)return!1;for(a=0;a<i.length;a++)if(!Object.prototype.hasOwnProperty.call(t,i[a]))return!1;for(a=0;a<i.length;a++)if(!e(r[i[a]],t[i[a]]))return!1;return!0}return!1}},{}],5:[function(e,r,t){\"use strict\";function a(e){e=\"full\"==e?\"full\":\"fast\";var r=d.copy(a[e]);for(var t in a.compare)r[t]={validate:r[t],compare:a.compare[t]};return r}function s(e){var r=e.match(p);if(!r)return!1;var t=+r[1],a=+r[2];return t>=1&&t<=12&&a>=1&&a<=m[t]}function o(e,r){var t=e.match(v);if(!t)return!1;var a=t[1],s=t[2],o=t[3],i=t[5];return a<=23&&s<=59&&o<=59&&(!r||i)}function i(e){var r=e.split(b);return 2==r.length&&s(r[0])&&o(r[1],!0)}function n(e){return e.length<=255&&y.test(e)}function l(e){return w.test(e)&&g.test(e)}function c(e){try{return new RegExp(e),!0}catch(e){return!1}}function h(e,r){if(e&&r)return e>r?1:e<r?-1:e===r?0:void 0}function u(e,r){if(e&&r&&(e=e.match(v),r=r.match(v),e&&r))return e=e[1]+e[2]+e[3]+(e[4]||\"\"),r=r[1]+r[2]+r[3]+(r[4]||\"\"),e>r?1:e<r?-1:e===r?0:void 0}function f(e,r){if(e&&r){e=e.split(b),r=r.split(b);var t=h(e[0],r[0]);if(void 0!==t)return t||u(e[1],r[1])}}var d=e(\"./util\"),p=/^\\d\\d\\d\\d-(\\d\\d)-(\\d\\d)$/,m=[0,31,29,31,30,31,30,31,31,30,31,30,31],v=/^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i,y=/^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,g=/^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?(?:\\#(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?$/i,P=/^(?:urn\\:uuid\\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,E=/^(?:\\/(?:[^~\\/]|~0|~1)*)*$|^\\#(?:\\/(?:[a-z0-9_\\-\\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;r.exports=a,a.fast={date:/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,time:/^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\"date-time\":/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,uri:/^(?:[a-z][a-z0-9+-.]*)?(?:\\:|\\/)\\/?[^\\s]*$/i,email:/^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:y,ipv4:/^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,ipv6:/^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,regex:c,uuid:P,\"json-pointer\":E,\"relative-json-pointer\":/^(?:0|[1-9][0-9]*)(?:\\#|(?:\\/(?:[^~\\/]|~0|~1)*)*)$/},a.full={date:s,time:o,\"date-time\":i,uri:l,email:/^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&''*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:n,ipv4:/^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,ipv6:/^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,regex:c,uuid:P,\"json-pointer\":E,\"relative-json-pointer\":/^(?:0|[1-9][0-9]*)(?:\\#|(?:\\/(?:[^~\\/]|~0|~1)*)*)$/},a.compare={date:h,time:u,\"date-time\":f};var b=/t|\\s/i,w=/\\/|\\:/},{\"./util\":11}],6:[function(e,r,t){\"use strict\";function a(){if(void 0===d){try{d=e(\"js-beautify\").js_beautify}catch(e){d=!1}}}function s(e,r,t,n){function j(){var e=N.validate,r=e.apply(null,arguments);return j.errors=e.errors,r}function S(e,t,o,i){var n=!t||t&&t.schema==e;if(t.schema!=r.schema)return s.call(k,e,t,o,i);var v=!0===e.$async;v&&!q.transpile&&y.setup(q);var j=g({isTop:!0,schema:e,isRoot:n,baseId:i,root:t,schemaPath:\"\",errSchemaPath:\"#\",errorPath:'\"\"',RULES:H,validate:g,util:m,resolve:p,resolveRef:$,usePattern:R,useDefault:I,useCustomRule:A,opts:q,formats:F,self:k});j=f(D,h)+f(Q,l)+f(V,c)+f(U,u)+j,q.beautify&&(a(),d?j=d(j,q.beautify):console.error('\"npm install js-beautify\" to use beautify option'));var S,x,_=q._transpileFunc;try{x=v&&_?_(j):j;S=new Function(\"self\",\"RULES\",\"formats\",\"root\",\"refVal\",\"defaults\",\"customRules\",\"co\",\"equal\",\"ucs2length\",\"ValidationError\",x)(k,H,F,r,D,V,U,P,b,E,w),D[0]=S}catch(e){throw console.error(\"Error compiling schema, function code:\",x),e}return S.schema=e,S.errors=null,S.refs=L,S.refVal=D,S.root=n?S:t,v&&(S.$async=!0),T&&(S.sourceCode=j),!0===q.sourceCode&&(S.source={patterns:Q,defaults:V}),S}function $(e,a,o){a=p.url(e,a);var i,n,l=L[a];if(void 0!==l)return i=D[l],n=\"refVal[\"+l+\"]\",O(i,n);if(!o&&r.refs){var c=r.refs[a];if(void 0!==c)return i=r.refVal[c],n=x(a,i),O(i,n)}n=x(a);var h=p.call(k,S,r,a);if(!h){var u=t&&t[a];u&&(h=p.inlineRef(u,q.inlineRefs)?u:s.call(k,u,r,t,e))}return h?(_(a,h),O(h,n)):void 0}function x(e,r){var t=D.length;return D[t]=r,L[e]=t,\"refVal\"+t}function _(e,r){D[L[e]]=r}function O(e,r){return\"object\"==typeof e?{code:r,schema:e,inline:!0}:{code:r,$async:e&&e.$async}}function R(e){var r=C[e];return void 0===r&&(r=C[e]=Q.length,Q[r]=e),\"pattern\"+r}function I(e){switch(typeof e){case\"boolean\":case\"number\":return\"\"+e;case\"string\":return m.toQuotedString(e);case\"object\":if(null===e)return\"null\";var r=v(e),t=z[r];return void 0===t&&(t=z[r]=V.length,V[t]=e),\"default\"+t}}function A(e,r,t,a){var s=e.definition.validateSchema;if(s&&!1!==k._opts.validateSchema){if(!s(r)){var o=\"keyword schema is invalid: \"+k.errorsText(s.errors);if(\"log\"!=k._opts.validateSchema)throw new Error(o);console.error(o)}}var i,n=e.definition.compile,l=e.definition.inline,c=e.definition.macro;n?i=n.call(k,r,t,a):c?(i=c.call(k,r,t,a),!1!==q.validateSchema&&k.validateSchema(i,!0)):i=l?l.call(k,a,e.keyword,r,t):e.definition.validate;var h=U.length;return U[h]=i,{code:\"customRule\"+h,validate:i}}var k=this,q=this._opts,D=[void 0],L={},Q=[],C={},V=[],z={},U=[],T=!1!==q.sourceCode;r=r||{schema:e,refVal:D,refs:L};var M=o.call(this,e,r,n),N=this._compilations[M.index];if(M.compiling)return N.callValidate=j;var F=this._formats,H=this.RULES;try{var J=S(e,r,t,n);N.validate=J;var G=N.callValidate;return G&&(G.schema=J.schema,G.errors=null,G.refs=J.refs,G.refVal=J.refVal,G.root=J.root,G.$async=J.$async,T&&(G.sourceCode=J.sourceCode)),J}finally{i.call(this,e,r,n)}}function o(e,r,t){var a=n.call(this,e,r,t);return a>=0?{index:a,compiling:!0}:(a=this._compilations.length,this._compilations[a]={schema:e,root:r,baseId:t},{index:a,compiling:!1})}function i(e,r,t){var a=n.call(this,e,r,t);a>=0&&this._compilations.splice(a,1)}function n(e,r,t){for(var a=0;a<this._compilations.length;a++){var s=this._compilations[a];if(s.schema==e&&s.root==r&&s.baseId==t)return a}return-1}function l(e,r){return\"var pattern\"+e+\" = new RegExp(\"+m.toQuotedString(r[e])+\");\"}function c(e){return\"var default\"+e+\" = defaults[\"+e+\"];\"}function h(e,r){return r[e]?\"var refVal\"+e+\" = refVal[\"+e+\"];\":\"\"}function u(e){return\"var customRule\"+e+\" = customRules[\"+e+\"];\"}function f(e,r){if(!e.length)return\"\";for(var t=\"\",a=0;a<e.length;a++)t+=r(a,e);return t}var d,p=e(\"./resolve\"),m=e(\"./util\"),v=e(\"json-stable-stringify\"),y=e(\"../async\"),g=e(\"../dotjs/validate\"),P=e(\"co\"),E=m.ucs2length,b=e(\"./equal\"),w=e(\"./validation_error\");r.exports=s},{\"../async\":1,\"../dotjs/validate\":36,\"./equal\":4,\"./resolve\":7,\"./util\":11,\"./validation_error\":12,co:41,\"json-stable-stringify\":42}],7:[function(e,r,t){\"use strict\";function a(e,r,t){var o=this._refs[t];if(\"string\"==typeof o){if(!this._refs[o])return a.call(this,e,r,o);o=this._refs[o]}if((o=o||this._schemas[t])instanceof g)return n(o.schema,this._opts.inlineRefs)?o.schema:o.validate||this._compile(o);var i,l,c,h=s.call(this,r,t);return h&&(i=h.schema,r=h.root,c=h.baseId),i instanceof g?l=i.validate||e.call(this,i.schema,r,void 0,c):i&&(l=n(i,this._opts.inlineRefs)?i:e.call(this,i,r,void 0,c)),l}function s(e,r){var t=m.parse(r,!1,!0),a=u(t),s=h(e.schema.id);if(a!==s){var n=f(a),l=this._refs[n];if(\"string\"==typeof l)return o.call(this,e,l,t);if(l instanceof g)l.validate||this._compile(l),e=l;else{if(!((l=this._schemas[n])instanceof g))return;if(l.validate||this._compile(l),n==f(r))return{schema:l,root:e,baseId:s};e=l}if(!e.schema)return;s=h(e.schema.id)}return i.call(this,t,s,e.schema,e)}function o(e,r,t){var a=s.call(this,e,r);if(a){var o=a.schema,n=a.baseId;return e=a.root,o.id&&(n=d(n,o.id)),i.call(this,t,n,o,e)}}function i(e,r,t,a){if(e.hash=e.hash||\"\",\"#/\"==e.hash.slice(0,2)){for(var o=e.hash.split(\"/\"),i=1;i<o.length;i++){var n=o[i];if(n){if(n=y.unescapeFragment(n),!(t=t[n]))break;if(t.id&&!P[n]&&(r=d(r,t.id)),t.$ref){var l=d(r,t.$ref),c=s.call(this,a,l);c&&(t=c.schema,a=c.root,r=c.baseId)}}}return t&&t!=a.schema?{schema:t,root:a,baseId:r}:void 0}}function n(e,r){return!1!==r&&(void 0===r||!0===r?l(e):r?c(e)<=r:void 0)}function l(e){var r;if(Array.isArray(e)){for(var t=0;t<e.length;t++)if(\"object\"==typeof(r=e[t])&&!l(r))return!1}else for(var a in e){if(\"$ref\"==a)return!1;if(\"object\"==typeof(r=e[a])&&!l(r))return!1}return!0}function c(e){var r,t=0;if(Array.isArray(e)){for(var a=0;a<e.length;a++)if(r=e[a],\"object\"==typeof r&&(t+=c(r)),t==1/0)return 1/0}else for(var s in e){if(\"$ref\"==s)return 1/0;if(E[s])t++;else if(r=e[s],\"object\"==typeof r&&(t+=c(r)+1),t==1/0)return 1/0}return t}function h(e,r){return!1!==r&&(e=f(e)),u(m.parse(e,!1,!0))}function u(e){var r=e.protocol||\"//\"==e.href.slice(0,2)?\"//\":\"\";return(e.protocol||\"\")+r+(e.host||\"\")+(e.path||\"\")+\"#\"}function f(e){return e?e.replace(b,\"\"):\"\"}function d(e,r){return r=f(r),m.resolve(e,r)}function p(e){function r(e,t,s){if(Array.isArray(e))for(var o=0;o<e.length;o++)r.call(this,e[o],t+\"/\"+o,s);else if(e&&\"object\"==typeof e){if(\"string\"==typeof e.id){var i=s=s?m.resolve(s,e.id):e.id;i=f(i);var n=this._refs[i];if(\"string\"==typeof n&&(n=this._refs[n]),n&&n.schema){if(!v(e,n.schema))throw new Error('id \"'+i+'\" resolves to more than one schema')}else if(i!=f(t))if(\"#\"==i[0]){if(a[i]&&!v(e,a[i]))throw new Error('id \"'+i+'\" resolves to more than one schema');a[i]=e}else this._refs[i]=t}for(var l in e)r.call(this,e[l],t+\"/\"+y.escapeFragment(l),s)}}var t=f(e.id),a={};return r.call(this,e,h(t,!1),t),a}var m=e(\"url\"),v=e(\"./equal\"),y=e(\"./util\"),g=e(\"./schema_obj\");r.exports=a,a.normalizeId=f,a.fullPath=h,a.url=d,a.ids=p,a.inlineRef=n,a.schema=s;var P=y.toHash([\"properties\",\"patternProperties\",\"enum\",\"dependencies\",\"definitions\"]),E=y.toHash([\"type\",\"format\",\"pattern\",\"maxLength\",\"minLength\",\"maxProperties\",\"minProperties\",\"maxItems\",\"minItems\",\"maximum\",\"minimum\",\"uniqueItems\",\"multipleOf\",\"required\",\"enum\"]),b=/#\\/?$/},{\"./equal\":4,\"./schema_obj\":9,\"./util\":11,url:50}],8:[function(e,r,t){\"use strict\";var a=e(\"./_rules\"),s=e(\"./util\").toHash;r.exports=function(){var e=[{type:\"number\",rules:[\"maximum\",\"minimum\",\"multipleOf\"]},{type:\"string\",rules:[\"maxLength\",\"minLength\",\"pattern\",\"format\"]},{type:\"array\",rules:[\"maxItems\",\"minItems\",\"uniqueItems\",\"items\"]},{type:\"object\",rules:[\"maxProperties\",\"minProperties\",\"required\",\"dependencies\",\"properties\"]},{rules:[\"$ref\",\"enum\",\"not\",\"anyOf\",\"oneOf\",\"allOf\"]}],r=[\"type\",\"additionalProperties\",\"patternProperties\"],t=[\"additionalItems\",\"$schema\",\"id\",\"title\",\"description\",\"default\"],o=[\"number\",\"integer\",\"string\",\"array\",\"object\",\"boolean\",\"null\"];return e.all=s(r),e.forEach(function(t){t.rules=t.rules.map(function(t){return r.push(t),e.all[t]={keyword:t,code:a[t]}})}),e.keywords=s(r.concat(t)),e.types=s(o),e.custom={},e}},{\"./_rules\":3,\"./util\":11}],9:[function(e,r,t){\"use strict\";function a(e){s.copy(e,this)}var s=e(\"./util\");r.exports=a},{\"./util\":11}],10:[function(e,r,t){\"use strict\";r.exports=function(e){for(var r,t=0,a=e.length,s=0;s<a;)t++,(r=e.charCodeAt(s++))>=55296&&r<=56319&&s<a&&56320==(64512&(r=e.charCodeAt(s)))&&s++;return t}},{}],11:[function(e,r,t){\"use strict\";function a(e,r){r=r||{};for(var t in e)r[t]=e[t];return r}function s(e,r,t){var a=t?\" !== \":\" === \",s=t?\" || \":\" && \",o=t?\"!\":\"\",i=t?\"\":\"!\";switch(e){case\"null\":return r+a+\"null\";case\"array\":return o+\"Array.isArray(\"+r+\")\";case\"object\":return\"(\"+o+r+s+\"typeof \"+r+a+'\"object\"'+s+i+\"Array.isArray(\"+r+\"))\";case\"integer\":return\"(typeof \"+r+a+'\"number\"'+s+i+\"(\"+r+\" % 1)\"+s+r+a+r+\")\";default:return\"typeof \"+r+a+'\"'+e+'\"'}}function o(e,r){switch(e.length){case 1:return s(e[0],r,!0);default:var t=\"\",a=n(e);a.array&&a.object&&(t=a.null?\"(\":\"(!\"+r+\" || \",t+=\"typeof \"+r+' !== \"object\")',delete a.null,delete a.array,delete a.object),a.number&&delete a.integer;for(var o in a)t+=(t?\" && \":\"\")+s(o,r,!0);return t}}function i(e,r){if(Array.isArray(r)){for(var t=[],a=0;a<r.length;a++){var s=r[a];$[s]?t[t.length]=s:\"array\"===e&&\"array\"===s&&(t[t.length]=s)}if(t.length)return t}else{if($[r])return[r];if(\"array\"===e&&\"array\"===r)return[\"array\"]}}function n(e){for(var r={},t=0;t<e.length;t++)r[e[t]]=!0;return r}function l(e){return\"number\"==typeof e?\"[\"+e+\"]\":x.test(e)?\".\"+e:\"['\"+c(e)+\"']\"}function c(e){return e.replace(_,\"\\\\$&\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\f/g,\"\\\\f\").replace(/\\t/g,\"\\\\t\")}function h(e,r){r+=\"[^0-9]\";var t=e.match(new RegExp(r,\"g\"));return t?t.length:0}function u(e,r,t){return r+=\"([^0-9])\",t=t.replace(/\\$/g,\"$$$$\"),e.replace(new RegExp(r,\"g\"),t+\"$1\")}function f(e){return e.replace(O,\"\").replace(R,\"\").replace(I,\"if (!($1))\")}function d(e,r){var t=e.match(A);return t&&2===t.length?r?e.replace(q,\"\").replace(Q,C):e.replace(k,\"\").replace(D,L):e}function p(e,r){for(var t in e)if(r[t])return!0}function m(e,r,t){for(var a in e)if(a!=t&&r[a])return!0}function v(e){return\"'\"+c(e)+\"'\"}function y(e,r,t,a){return E(e,t?\"'/' + \"+r+(a?\"\":\".replace(/~/g, '~0').replace(/\\\\//g, '~1')\"):a?\"'[' + \"+r+\" + ']'\":\"'[\\\\'' + \"+r+\" + '\\\\']'\")}function g(e,r,t){return E(e,v(t?\"/\"+j(r):l(r)))}function P(e,r,t){var a,s,o,i;if(\"\"===e)return\"rootData\";if(\"/\"==e[0]){if(!V.test(e))throw new Error(\"Invalid JSON-pointer: \"+e);s=e,o=\"rootData\"}else{if(!(i=e.match(z)))throw new Error(\"Invalid JSON-pointer: \"+e);if(a=+i[1],\"#\"==(s=i[2])){if(a>=r)throw new Error(\"Cannot access property/index \"+a+\" levels up, current level is \"+r);return t[r-a]}if(a>r)throw new Error(\"Cannot access data \"+a+\" levels up, current level is \"+r);if(o=\"data\"+(r-a||\"\"),!s)return o}for(var n=o,c=s.split(\"/\"),h=0;h<c.length;h++){var u=c[h];u&&(o+=l(S(u)),n+=\" && \"+o)}return n}function E(e,r){return'\"\"'==e?r:(e+\" + \"+r).replace(/' \\+ '/g,\"\")}function b(e){return S(decodeURIComponent(e))}function w(e){return encodeURIComponent(j(e))}function j(e){return e.replace(/~/g,\"~0\").replace(/\\//g,\"~1\")}function S(e){return e.replace(/~1/g,\"/\").replace(/~0/g,\"~\")}r.exports={copy:a,checkDataType:s,checkDataTypes:o,coerceToTypes:i,toHash:n,getProperty:l,escapeQuotes:c,ucs2length:e(\"./ucs2length\"),varOccurences:h,varReplace:u,cleanUpCode:f,cleanUpVarErrors:d,schemaHasRules:p,schemaHasRulesExcept:m,stableStringify:e(\"json-stable-stringify\"),toQuotedString:v,getPathExpr:y,getPath:g,getData:P,unescapeFragment:b,escapeFragment:w,escapeJsonPointer:j};var $=n([\"string\",\"number\",\"integer\",\"boolean\",\"null\"]),x=/^[a-z$_][a-z$_0-9]*$/i,_=/'|\\\\/g,O=/else\\s*{\\s*}/g,R=/if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g,I=/if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g,A=/[^v\\.]errors/g,k=/var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,q=/var errors = 0;|var vErrors = null;/g,D=\"return errors === 0;\",L=\"validate.errors = null; return true;\",Q=/if \\(errors === 0\\) return true;\\s*else throw new ValidationError\\(vErrors\\);/,C=\"return true;\",V=/^\\/(?:[^~]|~0|~1)*$/,z=/^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/},{\"./ucs2length\":10,\"json-stable-stringify\":42}],12:[function(e,r,t){\"use strict\";function a(e){this.message=\"validation failed\",this.errors=e,this.ajv=this.validation=!0}r.exports=a,a.prototype=Object.create(Error.prototype),a.prototype.constructor=a},{}],13:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s;if(a+=\"var \"+u+\" = undefined;\",!1===e.opts.format)return a+=\" \"+u+\" = true; \";var f=e.schema.format,d=e.opts.v5&&f.$data,p=\"\";if(d){var m=e.util.getData(f.$data,o,e.dataPathArr),v=\"format\"+s,y=\"compare\"+s;a+=\" var \"+v+\" = formats[\"+m+\"] , \"+y+\" = \"+v+\" && \"+v+\".compare;\"}else{var v=e.formats[f];if(!v||!v.compare)return a+=\"  \"+u+\" = true; \";var y=\"formats\"+e.util.getProperty(f)+\".compare\"}var g,P=\"formatMaximum\"==r,E=\"formatExclusive\"+(P?\"Maximum\":\"Minimum\"),b=e.schema[E],w=e.opts.v5&&b&&b.$data,j=P?\"<\":\">\",S=\"result\"+s,$=e.opts.v5&&i&&i.$data;if($?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",g=\"schema\"+s):g=i,w){var x=e.util.getData(b.$data,o,e.dataPathArr),_=\"exclusive\"+s,O=\"op\"+s,R=\"' + \"+O+\" + '\";a+=\" var schemaExcl\"+s+\" = \"+x+\"; \",x=\"schemaExcl\"+s,a+=\" if (typeof \"+x+\" != 'boolean' && \"+x+\" !== undefined) { \"+u+\" = false; \";var t=E,I=I||[];I.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: '\"+(t||\"_formatExclusiveLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: {} \",!1!==e.opts.messages&&(a+=\" , message: '\"+E+\" should be boolean' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+n+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var A=a;a=I.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+A+\"]); \":\" validate.errors = [\"+A+\"]; return false; \":\" var err = \"+A+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }  \",c&&(p+=\"}\",a+=\" else { \"),$&&(a+=\" if (\"+g+\" === undefined) \"+u+\" = true; else if (typeof \"+g+\" != 'string') \"+u+\" = false; else { \",p+=\"}\"),d&&(a+=\" if (!\"+y+\") \"+u+\" = true; else { \",p+=\"}\"),a+=\" var \"+S+\" = \"+y+\"(\"+h+\",  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" ); if (\"+S+\" === undefined) \"+u+\" = false; var \"+_+\" = \"+x+\" === true; if (\"+u+\" === undefined) { \"+u+\" = \"+_+\" ? \"+S+\" \"+j+\" 0 : \"+S+\" \"+j+\"= 0; } if (!\"+u+\") var op\"+s+\" = \"+_+\" ? '\"+j+\"' : '\"+j+\"=';\"}else{var _=!0===b,R=j;_||(R+=\"=\");var O=\"'\"+R+\"'\";$&&(a+=\" if (\"+g+\" === undefined) \"+u+\" = true; else if (typeof \"+g+\" != 'string') \"+u+\" = false; else { \",p+=\"}\"),d&&(a+=\" if (!\"+y+\") \"+u+\" = true; else { \",p+=\"}\"),a+=\" var \"+S+\" = \"+y+\"(\"+h+\",  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" ); if (\"+S+\" === undefined) \"+u+\" = false; if (\"+u+\" === undefined) \"+u+\" = \"+S+\" \"+j,_||(a+=\"=\"),a+=\" 0;\"}a+=p+\"if (!\"+u+\") { \";var t=r,I=I||[];I.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: '\"+(t||\"_formatLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { comparison: \"+O+\", limit:  \",a+=$?\"\"+g:\"\"+e.util.toQuotedString(i),a+=\" , exclusive: \"+_+\" } \",!1!==e.opts.messages&&(a+=\" , message: 'should be \"+R+' \"',a+=$?\"' + \"+g+\" + '\":\"\"+e.util.escapeQuotes(i),a+=\"\\\"' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=$?\"validate.schema\"+n:\"\"+e.util.toQuotedString(i),a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var A=a;return a=I.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+A+\"]); \":\" validate.errors = [\"+A+\"]; return false; \":\" var err = \"+A+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"}\"}},{}],14:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maximum\"==r,p=d?\"exclusiveMaximum\":\"exclusiveMinimum\",m=e.schema[p],v=e.opts.v5&&m&&m.$data,y=d?\"<\":\">\",g=d?\">\":\"<\";if(v){var P=e.util.getData(m.$data,i,e.dataPathArr),E=\"exclusive\"+o,b=\"op\"+o,w=\"' + \"+b+\" + '\";s+=\" var schemaExcl\"+o+\" = \"+P+\"; \",P=\"schemaExcl\"+o,s+=\" var exclusive\"+o+\"; if (typeof \"+P+\" != 'boolean' && typeof \"+P+\" != 'undefined') { \";var t=p,j=j||[];j.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"_exclusiveLimit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: {} \",!1!==e.opts.messages&&(s+=\" , message: '\"+p+\" should be boolean' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var S=s;s=j.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } else if( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" ((exclusive\"+o+\" = \"+P+\" === true) ? \"+u+\" \"+g+\"= \"+a+\" : \"+u+\" \"+g+\" \"+a+\") || \"+u+\" !== \"+u+\") { var op\"+o+\" = exclusive\"+o+\" ? '\"+y+\"' : '\"+y+\"=';\"}else{var E=!0===m,w=y;E||(w+=\"=\");var b=\"'\"+w+\"'\";s+=\" if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" \"+u+\" \"+g,E&&(s+=\"=\"),s+=\" \"+a+\" || \"+u+\" !== \"+u+\") {\"}var t=r,j=j||[];j.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"_limit\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { comparison: \"+b+\", limit: \"+a+\", exclusive: \"+E+\" } \",!1!==e.opts.messages&&(s+=\" , message: 'should be \"+w+\" \",s+=f?\"' + \"+a:n+\"'\"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var S=s;return s=j.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\" } \",h&&(s+=\" else { \"),s}},{}],15:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxItems\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" \"+u+\".length \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"_limitItems\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",!1!==e.opts.messages&&(s+=\" , message: 'should NOT have \",s+=\"maxItems\"==r?\"more\":\"less\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" items' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],16:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxLength\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=!1===e.opts.unicode?\" \"+u+\".length \":\" ucs2length(\"+u+\") \",s+=\" \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"_limitLength\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",!1!==e.opts.messages&&(s+=\" , message: 'should NOT be \",s+=\"maxLength\"==r?\"longer\":\"shorter\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" characters' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,\n    3: s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],17:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=e.opts.v5&&n&&n.$data;f?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var d=\"maxProperties\"==r?\">\":\"<\";s+=\"if ( \",f&&(s+=\" (\"+a+\" !== undefined && typeof \"+a+\" != 'number') || \"),s+=\" Object.keys(\"+u+\").length \"+d+\" \"+a+\") { \";var t=r,p=p||[];p.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"_limitProperties\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { limit: \"+a+\" } \",!1!==e.opts.messages&&(s+=\" , message: 'should NOT have \",s+=\"maxProperties\"==r?\"more\":\"less\",s+=\" than \",s+=f?\"' + \"+a+\" + '\":\"\"+n,s+=\" properties' \"),e.opts.verbose&&(s+=\" , schema:  \",s+=f?\"validate.schema\"+l:\"\"+n,s+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var m=s;return s=p.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",s+=\"} \",h&&(s+=\" else { \"),s}},{}],18:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.schema[r],s=e.schemaPath+e.util.getProperty(r),o=e.errSchemaPath+\"/\"+r,i=!e.opts.allErrors,n=e.util.copy(e),l=\"\";n.level++;var c=\"valid\"+n.level,h=n.baseId,u=!0,f=a;if(f)for(var d,p=-1,m=f.length-1;p<m;)d=f[p+=1],e.util.schemaHasRules(d,e.RULES.all)&&(u=!1,n.schema=d,n.schemaPath=s+\"[\"+p+\"]\",n.errSchemaPath=o+\"/\"+p,t+=\"  \"+e.validate(n)+\" \",n.baseId=h,i&&(t+=\" if (\"+c+\") { \",l+=\"}\"));return i&&(t+=u?\" if (true) { \":\" \"+l.slice(0,-1)+\" \"),t=e.util.cleanUpCode(t)}},{}],19:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=\"errs__\"+a,f=e.util.copy(e),d=\"\";f.level++;var p=\"valid\"+f.level;if(o.every(function(r){return e.util.schemaHasRules(r,e.RULES.all)})){var m=f.baseId;t+=\" var \"+u+\" = errors; var \"+h+\" = false;  \";var v=e.compositeRule;e.compositeRule=f.compositeRule=!0;var y=o;if(y)for(var g,P=-1,E=y.length-1;P<E;)g=y[P+=1],f.schema=g,f.schemaPath=i+\"[\"+P+\"]\",f.errSchemaPath=n+\"/\"+P,t+=\"  \"+e.validate(f)+\" \",f.baseId=m,t+=\" \"+h+\" = \"+h+\" || \"+p+\"; if (!\"+h+\") { \",d+=\"}\";e.compositeRule=f.compositeRule=v,t+=\" \"+d+\" if (!\"+h+\") {  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'anyOf' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: {} \",!1!==e.opts.messages&&(t+=\" , message: 'should match some schema in anyOf' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = \"+u+\"; if (vErrors !== null) { if (\"+u+\") vErrors.length = \"+u+\"; else vErrors = null; } \",e.opts.allErrors&&(t+=\" } \"),t=e.util.cleanUpCode(t)}else l&&(t+=\" if (true) { \");return t}},{}],20:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=e.opts.v5&&o&&o.$data;u&&(t+=\" var schema\"+a+\" = \"+e.util.getData(o.$data,s,e.dataPathArr)+\"; \"),u||(t+=\" var schema\"+a+\" = validate.schema\"+i+\";\"),t+=\"var \"+h+\" = equal(\"+c+\", schema\"+a+\"); if (!\"+h+\") {   \";var f=f||[];f.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'constant' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: {} \",!1!==e.opts.messages&&(t+=\" , message: 'should be equal to constant' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var d=t;return t=f.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+d+\"]); \":\" validate.errors = [\"+d+\"]; return false; \":\" var err = \"+d+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" }\"}},{}],21:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.schemaPath+e.util.getProperty(r),c=e.errSchemaPath+\"/\"+r,h=!e.opts.allErrors,u=\"data\"+(i||\"\"),f=\"valid\"+o,d=\"errs__\"+o,p=e.opts.v5&&n&&n.$data;p?(s+=\" var schema\"+o+\" = \"+e.util.getData(n.$data,i,e.dataPathArr)+\"; \",a=\"schema\"+o):a=n;var m,v,y,g,P,E=this,b=\"definition\"+o,w=E.definition;if(p&&w.$data){P=\"keywordValidate\"+o;var j=w.validateSchema;s+=\" var \"+b+\" = RULES.custom['\"+r+\"'].definition; var \"+P+\" = \"+b+\".validate;\"}else g=e.useCustomRule(E,n,e.schema,e),a=\"validate.schema\"+l,P=g.code,m=w.compile,v=w.inline,y=w.macro;var S=P+\".errors\",$=\"i\"+o,x=\"ruleErr\"+o,_=w.async;if(_&&!e.async)throw new Error(\"async keyword in sync schema\");if(v||y||(s+=S+\" = null;\"),s+=\"var \"+d+\" = errors;var \"+f+\";\",j&&(s+=\" \"+f+\" = \"+b+\".validateSchema(\"+a+\"); if (\"+f+\") {\"),v)s+=w.statements?\" \"+g.validate+\" \":\" \"+f+\" = \"+g.validate+\"; \";else if(y){var O=e.util.copy(e);O.level++;var R=\"valid\"+O.level;O.schema=g.validate,O.schemaPath=\"\";var I=e.compositeRule;e.compositeRule=O.compositeRule=!0;var A=e.validate(O).replace(/validate\\.schema/g,P);e.compositeRule=O.compositeRule=I,s+=\" \"+A}else{var k=k||[];k.push(s),s=\"\",s+=\"  \"+P+\".call( \",s+=e.opts.passContext?\"this\":\"self\",s+=m||!1===w.schema?\" , \"+u+\" \":\" , \"+a+\" , \"+u+\" , validate.schema\"+e.schemaPath+\" \",s+=\" , (dataPath || '')\",'\"\"'!=e.errorPath&&(s+=\" + \"+e.errorPath);var q=i?\"data\"+(i-1||\"\"):\"parentData\",D=i?e.dataPathArr[i]:\"parentDataProperty\";s+=\" , \"+q+\" , \"+D+\" , rootData )  \";var L=s;s=k.pop(),!1===w.errors?(s+=\" \"+f+\" = \",_&&(s+=\"\"+e.yieldAwait),s+=L+\"; \"):_?(S=\"customErrors\"+o,s+=\" var \"+S+\" = null; try { \"+f+\" = \"+e.yieldAwait+L+\"; } catch (e) { \"+f+\" = false; if (e instanceof ValidationError) \"+S+\" = e.errors; else throw e; } \"):s+=\" \"+S+\" = null; \"+f+\" = \"+L+\"; \"}if(w.modifying&&(s+=\" \"+u+\" = \"+q+\"[\"+D+\"];\"),j&&(s+=\" }\"),w.valid)h&&(s+=\" if (true) { \");else{s+=\" if ( \",void 0===w.valid?(s+=\" !\",s+=y?\"\"+R:\"\"+f):s+=\" \"+!w.valid+\" \",s+=\") { \",t=E.keyword;var k=k||[];k.push(s),s=\"\";var k=k||[];k.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"custom\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { keyword: '\"+E.keyword+\"' } \",!1!==e.opts.messages&&(s+=\" , message: 'should pass \\\"\"+E.keyword+\"\\\" keyword validation' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \";var Q=s;s=k.pop(),s+=!e.compositeRule&&h?e.async?\" throw new ValidationError([\"+Q+\"]); \":\" validate.errors = [\"+Q+\"]; return false; \":\" var err = \"+Q+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \";var C=s;s=k.pop(),v?w.errors?\"full\"!=w.errors&&(s+=\"  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\"; if (\"+x+\".schemaPath === undefined) { \"+x+'.schemaPath = \"'+c+'\"; } ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } \"):!1===w.errors?s+=\" \"+C+\" \":(s+=\" if (\"+d+\" == errors) { \"+C+\" } else {  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\"; if (\"+x+\".schemaPath === undefined) { \"+x+'.schemaPath = \"'+c+'\"; } ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } } \"):y?(s+=\"   var err =   \",!1!==e.createErrors?(s+=\" { keyword: '\"+(t||\"custom\")+\"' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(c)+\" , params: { keyword: '\"+E.keyword+\"' } \",!1!==e.opts.messages&&(s+=\" , message: 'should pass \\\"\"+E.keyword+\"\\\" keyword validation' \"),e.opts.verbose&&(s+=\" , schema: validate.schema\"+l+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+u+\" \"),s+=\" } \"):s+=\" {} \",s+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",!e.compositeRule&&h&&(s+=e.async?\" throw new ValidationError(vErrors); \":\" validate.errors = vErrors; return false; \")):!1===w.errors?s+=\" \"+C+\" \":(s+=\" if (Array.isArray(\"+S+\")) { if (vErrors === null) vErrors = \"+S+\"; else vErrors = vErrors.concat(\"+S+\"); errors = vErrors.length;  for (var \"+$+\"=\"+d+\"; \"+$+\"<errors; \"+$+\"++) { var \"+x+\" = vErrors[\"+$+\"]; if (\"+x+\".dataPath === undefined) \"+x+\".dataPath = (dataPath || '') + \"+e.errorPath+\";  \"+x+'.schemaPath = \"'+c+'\";  ',e.opts.verbose&&(s+=\" \"+x+\".schema = \"+a+\"; \"+x+\".data = \"+u+\"; \"),s+=\" } } else { \"+C+\" } \"),s+=\" } \",h&&(s+=\" else { \")}return s}},{}],22:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"errs__\"+a,u=e.util.copy(e),f=\"\";u.level++;var d=\"valid\"+u.level,p={},m={};for(P in o){var v=o[P],y=Array.isArray(v)?m:p;y[P]=v}t+=\"var \"+h+\" = errors;\";var g=e.errorPath;t+=\"var missing\"+a+\";\";for(var P in m){if(y=m[P],t+=\" if (\"+c+e.util.getProperty(P)+\" !== undefined \",l){t+=\" && ( \";var E=y;if(E)for(var b,w=-1,j=E.length-1;w<j;){b=E[w+=1],w&&(t+=\" || \");var S=e.util.getProperty(b);t+=\" ( \"+c+S+\" === undefined && (missing\"+a+\" = \"+e.util.toQuotedString(e.opts.jsonPointers?b:S)+\") ) \"}t+=\")) {  \";var $=\"missing\"+a,x=\"' + \"+$+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(g,$,!0):g+\" + \"+$);var _=_||[];_.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'dependencies' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { property: '\"+e.util.escapeQuotes(P)+\"', missingProperty: '\"+x+\"', depsCount: \"+y.length+\", deps: '\"+e.util.escapeQuotes(1==y.length?y[0]:y.join(\", \"))+\"' } \",!1!==e.opts.messages&&(t+=\" , message: 'should have \",t+=1==y.length?\"property \"+e.util.escapeQuotes(y[0]):\"properties \"+e.util.escapeQuotes(y.join(\", \")),t+=\" when property \"+e.util.escapeQuotes(P)+\" is present' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var O=t;t=_.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+O+\"]); \":\" validate.errors = [\"+O+\"]; return false; \":\" var err = \"+O+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}else{t+=\" ) { \";var R=y;if(R)for(var I,A=-1,k=R.length-1;A<k;){I=R[A+=1];var S=e.util.getProperty(I),x=e.util.escapeQuotes(I);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(g,I,e.opts.jsonPointers)),t+=\" if (\"+c+S+\" === undefined) {  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'dependencies' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { property: '\"+e.util.escapeQuotes(P)+\"', missingProperty: '\"+x+\"', depsCount: \"+y.length+\", deps: '\"+e.util.escapeQuotes(1==y.length?y[0]:y.join(\", \"))+\"' } \",!1!==e.opts.messages&&(t+=\" , message: 'should have \",t+=1==y.length?\"property \"+e.util.escapeQuotes(y[0]):\"properties \"+e.util.escapeQuotes(y.join(\", \")),t+=\" when property \"+e.util.escapeQuotes(P)+\" is present' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } \"}}t+=\" }   \",l&&(f+=\"}\",t+=\" else { \")}e.errorPath=g;var q=u.baseId;for(var P in p){var v=p[P];e.util.schemaHasRules(v,e.RULES.all)&&(t+=\" \"+d+\" = true; if (\"+c+e.util.getProperty(P)+\" !== undefined) { \",u.schema=v,u.schemaPath=i+e.util.getProperty(P),u.errSchemaPath=n+\"/\"+e.util.escapeFragment(P),t+=\"  \"+e.validate(u)+\" \",u.baseId=q,t+=\" }  \",l&&(t+=\" if (\"+d+\") { \",f+=\"}\"))}return l&&(t+=\"   \"+f+\" if (\"+h+\" == errors) {\"),t=e.util.cleanUpCode(t)}},{}],23:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=e.opts.v5&&o&&o.$data;u&&(t+=\" var schema\"+a+\" = \"+e.util.getData(o.$data,s,e.dataPathArr)+\"; \");var f=\"i\"+a,d=\"schema\"+a;u||(t+=\" var \"+d+\" = validate.schema\"+i+\";\"),t+=\"var \"+h+\";\",u&&(t+=\" if (schema\"+a+\" === undefined) \"+h+\" = true; else if (!Array.isArray(schema\"+a+\")) \"+h+\" = false; else {\"),t+=h+\" = false;for (var \"+f+\"=0; \"+f+\"<\"+d+\".length; \"+f+\"++) if (equal(\"+c+\", \"+d+\"[\"+f+\"])) { \"+h+\" = true; break; }\",u&&(t+=\"  }  \"),t+=\" if (!\"+h+\") {   \";var p=p||[];p.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'enum' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { allowedValues: schema\"+a+\" } \",!1!==e.opts.messages&&(t+=\" , message: 'should be equal to one of the allowed values' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var m=t;return t=p.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" }\",l&&(t+=\" else { \"),t}},{}],24:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\");if(!1===e.opts.format)return l&&(t+=\" if (true) { \"),t;var h,u=e.opts.v5&&o&&o.$data;u?(t+=\" var schema\"+a+\" = \"+e.util.getData(o.$data,s,e.dataPathArr)+\"; \",h=\"schema\"+a):h=o;var f=e.opts.unknownFormats,d=Array.isArray(f);if(u){var p=\"format\"+a;t+=\" var \"+p+\" = formats[\"+h+\"]; var isObject\"+a+\" = typeof \"+p+\" == 'object' && !(\"+p+\" instanceof RegExp) && \"+p+\".validate; if (isObject\"+a+\") { \",e.async&&(t+=\" var async\"+a+\" = \"+p+\".async; \"),t+=\" \"+p+\" = \"+p+\".validate; } if (  \",u&&(t+=\" (\"+h+\" !== undefined && typeof \"+h+\" != 'string') || \"),t+=\" (\",(!0===f||d)&&(t+=\" (\"+h+\" && !\"+p+\" \",d&&(t+=\" && self._opts.unknownFormats.indexOf(\"+h+\") == -1 \"),t+=\") || \"),t+=\" (\"+p+\" && !(typeof \"+p+\" == 'function' ? \",t+=e.async?\" (async\"+a+\" ? \"+e.yieldAwait+\" \"+p+\"(\"+c+\") : \"+p+\"(\"+c+\")) \":\" \"+p+\"(\"+c+\") \",t+=\" : \"+p+\".test(\"+c+\"))))) {\"}else{var p=e.formats[o];if(!p){if(!0===f||d&&-1==f.indexOf(o))throw new Error('unknown format \"'+o+'\" is used in schema at path \"'+e.errSchemaPath+'\"');return d||(console.warn('unknown format \"'+o+'\" ignored in schema at path \"'+e.errSchemaPath+'\"'),\"ignore\"!==f&&console.warn(\"In the next major version it will throw exception. See option unknownFormats for more information\")),l&&(t+=\" if (true) { \"),t}var m=\"object\"==typeof p&&!(p instanceof RegExp)&&p.validate;if(m){var v=!0===p.async;p=p.validate}if(v){if(!e.async)throw new Error(\"async format in sync schema\");var y=\"formats\"+e.util.getProperty(o)+\".validate\";t+=\" if (!(\"+e.yieldAwait+\" \"+y+\"(\"+c+\"))) { \"}else{t+=\" if (! \";var y=\"formats\"+e.util.getProperty(o);m&&(y+=\".validate\"),t+=\"function\"==typeof p?\" \"+y+\"(\"+c+\") \":\" \"+y+\".test(\"+c+\") \",t+=\") { \"}}var g=g||[];g.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'format' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { format:  \",t+=u?\"\"+h:\"\"+e.util.toQuotedString(o),t+=\"  } \",!1!==e.opts.messages&&(t+=\" , message: 'should match format \\\"\",t+=u?\"' + \"+h+\" + '\":\"\"+e.util.escapeQuotes(o),t+=\"\\\"' \"),e.opts.verbose&&(t+=\" , schema:  \",t+=u?\"validate.schema\"+i:\"\"+e.util.toQuotedString(o),t+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var P=t;return t=g.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+P+\"]); \":\" validate.errors = [\"+P+\"]; return false; \":\" var err = \"+P+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } \",l&&(t+=\" else { \"),t}},{}],25:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=\"errs__\"+a,f=e.util.copy(e),d=\"\";f.level++;var p=\"valid\"+f.level,m=\"i\"+a,v=f.dataLevel=e.dataLevel+1,y=\"data\"+v,g=e.baseId;if(t+=\"var \"+u+\" = errors;var \"+h+\";\",Array.isArray(o)){var P=e.schema.additionalItems;if(!1===P){t+=\" \"+h+\" = \"+c+\".length <= \"+o.length+\"; \";var E=n;n=e.errSchemaPath+\"/additionalItems\",t+=\"  if (!\"+h+\") {   \";var b=b||[];b.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'additionalItems' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { limit: \"+o.length+\" } \",!1!==e.opts.messages&&(t+=\" , message: 'should NOT have more than \"+o.length+\" items' \"),e.opts.verbose&&(t+=\" , schema: false , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var w=t;t=b.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+w+\"]); \":\" validate.errors = [\"+w+\"]; return false; \":\" var err = \"+w+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } \",n=E,l&&(d+=\"}\",t+=\" else { \")}var j=o;if(j)for(var S,$=-1,x=j.length-1;$<x;)if(S=j[$+=1],e.util.schemaHasRules(S,e.RULES.all)){t+=\" \"+p+\" = true; if (\"+c+\".length > \"+$+\") { \";var _=c+\"[\"+$+\"]\";f.schema=S,f.schemaPath=i+\"[\"+$+\"]\",f.errSchemaPath=n+\"/\"+$,f.errorPath=e.util.getPathExpr(e.errorPath,$,e.opts.jsonPointers,!0),f.dataPathArr[v]=$;var O=e.validate(f);f.baseId=g,e.util.varOccurences(O,y)<2?t+=\" \"+e.util.varReplace(O,y,_)+\" \":t+=\" var \"+y+\" = \"+_+\"; \"+O+\" \",t+=\" }  \",l&&(t+=\" if (\"+p+\") { \",d+=\"}\")}if(\"object\"==typeof P&&e.util.schemaHasRules(P,e.RULES.all)){f.schema=P,f.schemaPath=e.schemaPath+\".additionalItems\",f.errSchemaPath=e.errSchemaPath+\"/additionalItems\",t+=\" \"+p+\" = true; if (\"+c+\".length > \"+o.length+\") {  for (var \"+m+\" = \"+o.length+\"; \"+m+\" < \"+c+\".length; \"+m+\"++) { \",f.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers,!0);var _=c+\"[\"+m+\"]\";f.dataPathArr[v]=m;var O=e.validate(f);f.baseId=g,e.util.varOccurences(O,y)<2?t+=\" \"+e.util.varReplace(O,y,_)+\" \":t+=\" var \"+y+\" = \"+_+\"; \"+O+\" \",l&&(t+=\" if (!\"+p+\") break; \"),t+=\" } }  \",l&&(t+=\" if (\"+p+\") { \",d+=\"}\")}}else if(e.util.schemaHasRules(o,e.RULES.all)){f.schema=o,f.schemaPath=i,f.errSchemaPath=n,t+=\"  for (var \"+m+\" = 0; \"+m+\" < \"+c+\".length; \"+m+\"++) { \",f.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers,!0);var _=c+\"[\"+m+\"]\";f.dataPathArr[v]=m;var O=e.validate(f);f.baseId=g,e.util.varOccurences(O,y)<2?t+=\" \"+e.util.varReplace(O,y,_)+\" \":t+=\" var \"+y+\" = \"+_+\"; \"+O+\" \",l&&(t+=\" if (!\"+p+\") break; \"),t+=\" }  \",l&&(t+=\" if (\"+p+\") { \",d+=\"}\")}return l&&(t+=\" \"+d+\" if (\"+u+\" == errors) {\"),t=e.util.cleanUpCode(t)}},{}],26:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=e.opts.v5&&i&&i.$data;u?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",t=\"schema\"+s):t=i,a+=\"var division\"+s+\";if (\",u&&(a+=\" \"+t+\" !== undefined && ( typeof \"+t+\" != 'number' || \"),a+=\" (division\"+s+\" = \"+h+\" / \"+t+\", \",a+=e.opts.multipleOfPrecision?\" Math.abs(Math.round(division\"+s+\") - division\"+s+\") > 1e-\"+e.opts.multipleOfPrecision+\" \":\" division\"+s+\" !== parseInt(division\"+s+\") \",a+=\" ) \",u&&(a+=\"  )  \"),a+=\" ) {   \";var f=f||[];f.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: 'multipleOf' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { multipleOf: \"+t+\" } \",!1!==e.opts.messages&&(a+=\" , message: 'should be multiple of \",a+=u?\"' + \"+t:i+\"'\"),e.opts.verbose&&(a+=\" , schema:  \",a+=u?\"validate.schema\"+n:\"\"+i,a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var d=a;return a=f.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+d+\"]); \":\" validate.errors = [\"+d+\"]; return false; \":\" var err = \"+d+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"} \",c&&(a+=\" else { \"),a}},{}],27:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"errs__\"+a,u=e.util.copy(e);u.level++;var f=\"valid\"+u.level;if(e.util.schemaHasRules(o,e.RULES.all)){u.schema=o,u.schemaPath=i,u.errSchemaPath=n,t+=\" var \"+h+\" = errors;  \";var d=e.compositeRule;e.compositeRule=u.compositeRule=!0,u.createErrors=!1;var p;u.opts.allErrors&&(p=u.opts.allErrors,u.opts.allErrors=!1),t+=\" \"+e.validate(u)+\" \",u.createErrors=!0,p&&(u.opts.allErrors=p),e.compositeRule=u.compositeRule=d,t+=\" if (\"+f+\") {   \";var m=m||[];m.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'not' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: {} \",!1!==e.opts.messages&&(t+=\" , message: 'should NOT be valid' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var v=t;t=m.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+v+\"]); \":\" validate.errors = [\"+v+\"]; return false; \":\" var err = \"+v+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } else {  errors = \"+h+\"; if (vErrors !== null) { if (\"+h+\") vErrors.length = \"+h+\"; else vErrors = null; } \",e.opts.allErrors&&(t+=\" } \")}else t+=\"  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'not' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: {} \",!1!==e.opts.messages&&(t+=\" , message: 'should NOT be valid' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",l&&(t+=\" if (false) { \");return t}},{}],28:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=\"errs__\"+a,f=e.util.copy(e),d=\"\";f.level++;var p=\"valid\"+f.level;t+=\"var \"+u+\" = errors;var prevValid\"+a+\" = false;var \"+h+\" = false;\";var m=f.baseId,v=e.compositeRule;e.compositeRule=f.compositeRule=!0;var y=o;if(y)for(var g,P=-1,E=y.length-1;P<E;)g=y[P+=1],e.util.schemaHasRules(g,e.RULES.all)?(f.schema=g,f.schemaPath=i+\"[\"+P+\"]\",f.errSchemaPath=n+\"/\"+P,t+=\"  \"+e.validate(f)+\" \",f.baseId=m):t+=\" var \"+p+\" = true; \",P&&(t+=\" if (\"+p+\" && prevValid\"+a+\") \"+h+\" = false; else { \",d+=\"}\"),t+=\" if (\"+p+\") \"+h+\" = prevValid\"+a+\" = true;\";e.compositeRule=f.compositeRule=v,t+=d+\"if (!\"+h+\") {   \";var b=b||[];b.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'oneOf' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: {} \",!1!==e.opts.messages&&(t+=\" , message: 'should match exactly one schema in oneOf' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var w=t;return t=b.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+w+\"]); \":\" validate.errors = [\"+w+\"]; return false; \":\" var err = \"+w+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\"} else {  errors = \"+u+\"; if (vErrors !== null) { if (\"+u+\") vErrors.length = \"+u+\"; else vErrors = null; }\",e.opts.allErrors&&(t+=\" } \"),t}},{}],29:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=e.opts.v5&&i&&i.$data;u?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",t=\"schema\"+s):t=i;var f=u?\"(new RegExp(\"+t+\"))\":e.usePattern(i);a+=\"if ( \",u&&(a+=\" (\"+t+\" !== undefined && typeof \"+t+\" != 'string') || \"),a+=\" !\"+f+\".test(\"+h+\") ) {   \";var d=d||[];d.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: 'pattern' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { pattern:  \",a+=u?\"\"+t:\"\"+e.util.toQuotedString(i),a+=\"  } \",!1!==e.opts.messages&&(a+=\" , message: 'should match pattern \\\"\",a+=u?\"' + \"+t+\" + '\":\"\"+e.util.escapeQuotes(i),a+=\"\\\"' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=u?\"validate.schema\"+n:\"\"+e.util.toQuotedString(i),a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var p=a;return a=d.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+p+\"]); \":\" validate.errors = [\"+p+\"]; return false; \":\" var err = \"+p+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\"} \",c&&(a+=\" else { \"),a}},{}],30:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=\"key\"+a,f=\"patternMatched\"+a,d=\"\",p=e.opts.ownProperties;t+=\"var \"+h+\" = true;\";var m=o;if(m)for(var v,y=-1,g=m.length-1;y<g;){v=m[y+=1],t+=\" var \"+f+\" = false; for (var \"+u+\" in \"+c+\") {  \",p&&(t+=\" if (!Object.prototype.hasOwnProperty.call(\"+c+\", \"+u+\")) continue; \"),t+=\" \"+f+\" = \"+e.usePattern(v)+\".test(\"+u+\"); if (\"+f+\") break; } \";var P=e.util.escapeQuotes(v);t+=\" if (!\"+f+\") { \"+h+\" = false;  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'patternRequired' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingPattern: '\"+P+\"' } \",!1!==e.opts.messages&&(t+=\" , message: 'should have property matching pattern \\\\'\"+P+\"\\\\'' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   \",l&&(d+=\"}\",t+=\" else { \")}return t+=\"\"+d}},{}],31:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=\"errs__\"+a,f=e.util.copy(e),d=\"\";f.level++;var p=\"valid\"+f.level,m=\"key\"+a,v=f.dataLevel=e.dataLevel+1,y=\"data\"+v,g=Object.keys(o||{}),P=e.schema.patternProperties||{},E=Object.keys(P),b=e.schema.additionalProperties,w=g.length||E.length,j=!1===b,S=\"object\"==typeof b&&Object.keys(b).length,$=e.opts.removeAdditional,x=j||S||$,_=e.opts.ownProperties,O=e.baseId,R=e.schema.required;if(R&&(!e.opts.v5||!R.$data)&&R.length<e.opts.loopRequired)var I=e.util.toHash(R);if(e.opts.v5)var A=e.schema.patternGroups||{},k=Object.keys(A);if(t+=\"var \"+u+\" = errors;var \"+p+\" = true;\",x){if(t+=\" for (var \"+m+\" in \"+c+\") {  \",_&&(t+=\" if (!Object.prototype.hasOwnProperty.call(\"+c+\", \"+m+\")) continue; \"),w){if(t+=\" var isAdditional\"+a+\" = !(false \",g.length)if(g.length>5)t+=\" || validate.schema\"+i+\"[\"+m+\"] \";else{var q=g;if(q)for(var D,L=-1,Q=q.length-1;L<Q;)D=q[L+=1],t+=\" || \"+m+\" == \"+e.util.toQuotedString(D)+\" \"}if(E.length){var C=E;if(C)for(var V,z=-1,U=C.length-1;z<U;)V=C[z+=1],t+=\" || \"+e.usePattern(V)+\".test(\"+m+\") \"}if(e.opts.v5&&k&&k.length){var T=k;if(T)for(var M,z=-1,N=T.length-1;z<N;)M=T[z+=1],t+=\" || \"+e.usePattern(M)+\".test(\"+m+\") \"}t+=\" ); if (isAdditional\"+a+\") { \"}if(\"all\"==$)t+=\" delete \"+c+\"[\"+m+\"]; \";else{var F=e.errorPath,H=\"' + \"+m+\" + '\";if(e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers)),j)if($)t+=\" delete \"+c+\"[\"+m+\"]; \";else{t+=\" \"+p+\" = false; \";var J=n;n=e.errSchemaPath+\"/additionalProperties\";var G=G||[];G.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'additionalProperties' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { additionalProperty: '\"+H+\"' } \",!1!==e.opts.messages&&(t+=\" , message: 'should NOT have additional properties' \"),e.opts.verbose&&(t+=\" , schema: false , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var K=t;t=G.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+K+\"]); \":\" validate.errors = [\"+K+\"]; return false; \":\" var err = \"+K+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",n=J,l&&(t+=\" break; \")}else if(S)if(\"failing\"==$){t+=\" var \"+u+\" = errors;  \";var B=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.schema=b,f.schemaPath=e.schemaPath+\".additionalProperties\",f.errSchemaPath=e.errSchemaPath+\"/additionalProperties\",f.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);var Z=c+\"[\"+m+\"]\";f.dataPathArr[v]=m;var Y=e.validate(f);f.baseId=O,e.util.varOccurences(Y,y)<2?t+=\" \"+e.util.varReplace(Y,y,Z)+\" \":t+=\" var \"+y+\" = \"+Z+\"; \"+Y+\" \",t+=\" if (!\"+p+\") { errors = \"+u+\"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete \"+c+\"[\"+m+\"]; }  \",e.compositeRule=f.compositeRule=B}else{f.schema=b,f.schemaPath=e.schemaPath+\".additionalProperties\",f.errSchemaPath=e.errSchemaPath+\"/additionalProperties\",f.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);var Z=c+\"[\"+m+\"]\";f.dataPathArr[v]=m;var Y=e.validate(f);f.baseId=O,e.util.varOccurences(Y,y)<2?t+=\" \"+e.util.varReplace(Y,y,Z)+\" \":t+=\" var \"+y+\" = \"+Z+\"; \"+Y+\" \",l&&(t+=\" if (!\"+p+\") break; \")}e.errorPath=F}w&&(t+=\" } \"),t+=\" }  \",l&&(t+=\" if (\"+p+\") { \",d+=\"}\")}var W=e.opts.useDefaults&&!e.compositeRule;if(g.length){var X=g;if(X)for(var D,ee=-1,re=X.length-1;ee<re;){D=X[ee+=1];var te=o[D];if(e.util.schemaHasRules(te,e.RULES.all)){var ae=e.util.getProperty(D),Z=c+ae,se=W&&void 0!==te.default;f.schema=te,f.schemaPath=i+ae,f.errSchemaPath=n+\"/\"+e.util.escapeFragment(D),f.errorPath=e.util.getPath(e.errorPath,D,e.opts.jsonPointers),f.dataPathArr[v]=e.util.toQuotedString(D);var Y=e.validate(f);if(f.baseId=O,e.util.varOccurences(Y,y)<2){Y=e.util.varReplace(Y,y,Z);var oe=Z}else{var oe=y;t+=\" var \"+y+\" = \"+Z+\"; \"}if(se)t+=\" \"+Y+\" \";else{if(I&&I[D]){t+=\" if (\"+oe+\" === undefined) { \"+p+\" = false; \";var F=e.errorPath,J=n,ie=e.util.escapeQuotes(D);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(F,D,e.opts.jsonPointers)),n=e.errSchemaPath+\"/required\";var G=G||[];G.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'required' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingProperty: '\"+ie+\"' } \",!1!==e.opts.messages&&(t+=\" , message: '\",t+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+ie+\"\\\\'\",t+=\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var K=t;t=G.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+K+\"]); \":\" validate.errors = [\"+K+\"]; return false; \":\" var err = \"+K+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",n=J,e.errorPath=F,t+=\" } else { \"}else t+=l?\" if (\"+oe+\" === undefined) { \"+p+\" = true; } else { \":\" if (\"+oe+\" !== undefined) { \"\n    4: ;t+=\" \"+Y+\" } \"}}l&&(t+=\" if (\"+p+\") { \",d+=\"}\")}}var ne=E;if(ne)for(var V,le=-1,ce=ne.length-1;le<ce;){V=ne[le+=1];var te=P[V];if(e.util.schemaHasRules(te,e.RULES.all)){f.schema=te,f.schemaPath=e.schemaPath+\".patternProperties\"+e.util.getProperty(V),f.errSchemaPath=e.errSchemaPath+\"/patternProperties/\"+e.util.escapeFragment(V),t+=\" for (var \"+m+\" in \"+c+\") {  \",_&&(t+=\" if (!Object.prototype.hasOwnProperty.call(\"+c+\", \"+m+\")) continue; \"),t+=\" if (\"+e.usePattern(V)+\".test(\"+m+\")) { \",f.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);var Z=c+\"[\"+m+\"]\";f.dataPathArr[v]=m;var Y=e.validate(f);f.baseId=O,e.util.varOccurences(Y,y)<2?t+=\" \"+e.util.varReplace(Y,y,Z)+\" \":t+=\" var \"+y+\" = \"+Z+\"; \"+Y+\" \",l&&(t+=\" if (!\"+p+\") break; \"),t+=\" } \",l&&(t+=\" else \"+p+\" = true; \"),t+=\" }  \",l&&(t+=\" if (\"+p+\") { \",d+=\"}\")}}if(e.opts.v5){var he=k;if(he)for(var M,ue=-1,fe=he.length-1;ue<fe;){M=he[ue+=1];var de=A[M],te=de.schema;if(e.util.schemaHasRules(te,e.RULES.all)){f.schema=te,f.schemaPath=e.schemaPath+\".patternGroups\"+e.util.getProperty(M)+\".schema\",f.errSchemaPath=e.errSchemaPath+\"/patternGroups/\"+e.util.escapeFragment(M)+\"/schema\",t+=\" var pgPropCount\"+a+\" = 0; for (var \"+m+\" in \"+c+\") {  \",_&&(t+=\" if (!Object.prototype.hasOwnProperty.call(\"+c+\", \"+m+\")) continue; \"),t+=\" if (\"+e.usePattern(M)+\".test(\"+m+\")) { pgPropCount\"+a+\"++; \",f.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);var Z=c+\"[\"+m+\"]\";f.dataPathArr[v]=m;var Y=e.validate(f);f.baseId=O,e.util.varOccurences(Y,y)<2?t+=\" \"+e.util.varReplace(Y,y,Z)+\" \":t+=\" var \"+y+\" = \"+Z+\"; \"+Y+\" \",l&&(t+=\" if (!\"+p+\") break; \"),t+=\" } \",l&&(t+=\" else \"+p+\" = true; \"),t+=\" }  \",l&&(t+=\" if (\"+p+\") { \",d+=\"}\");var pe=de.minimum,me=de.maximum;if(void 0!==pe||void 0!==me){t+=\" var \"+h+\" = true; \";var J=n;if(void 0!==pe){var ve=pe,ye=\"minimum\",ge=\"less\";t+=\" \"+h+\" = pgPropCount\"+a+\" >= \"+pe+\"; \",n=e.errSchemaPath+\"/patternGroups/minimum\",t+=\"  if (!\"+h+\") {   \";var G=G||[];G.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'patternGroups' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { reason: '\"+ye+\"', limit: \"+ve+\", pattern: '\"+e.util.escapeQuotes(M)+\"' } \",!1!==e.opts.messages&&(t+=\" , message: 'should NOT have \"+ge+\" than \"+ve+' properties matching pattern \"'+e.util.escapeQuotes(M)+\"\\\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var K=t;t=G.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+K+\"]); \":\" validate.errors = [\"+K+\"]; return false; \":\" var err = \"+K+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } \",void 0!==me&&(t+=\" else \")}if(void 0!==me){var ve=me,ye=\"maximum\",ge=\"more\";t+=\" \"+h+\" = pgPropCount\"+a+\" <= \"+me+\"; \",n=e.errSchemaPath+\"/patternGroups/maximum\",t+=\"  if (!\"+h+\") {   \";var G=G||[];G.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'patternGroups' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { reason: '\"+ye+\"', limit: \"+ve+\", pattern: '\"+e.util.escapeQuotes(M)+\"' } \",!1!==e.opts.messages&&(t+=\" , message: 'should NOT have \"+ge+\" than \"+ve+' properties matching pattern \"'+e.util.escapeQuotes(M)+\"\\\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var K=t;t=G.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+K+\"]); \":\" validate.errors = [\"+K+\"]; return false; \":\" var err = \"+K+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } \"}n=J,l&&(t+=\" if (\"+h+\") { \",d+=\"}\")}}}}return l&&(t+=\" \"+d+\" if (\"+u+\" == errors) {\"),t=e.util.cleanUpCode(t)}},{}],32:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a,s=\" \",o=e.level,i=e.dataLevel,n=e.schema[r],l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(i||\"\"),u=\"valid\"+o;if(\"#\"==n||\"#/\"==n)e.isRoot?(t=e.async,a=\"validate\"):(t=!0===e.root.schema.$async,a=\"root.refVal[0]\");else{var f=e.resolveRef(e.baseId,n,e.isRoot);if(void 0===f){var d=\"can't resolve reference \"+n+\" from id \"+e.baseId;if(\"fail\"==e.opts.missingRefs){console.log(d);var p=p||[];p.push(s),s=\"\",!1!==e.createErrors?(s+=\" { keyword: '$ref' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { ref: '\"+e.util.escapeQuotes(n)+\"' } \",!1!==e.opts.messages&&(s+=\" , message: 'can\\\\'t resolve reference \"+e.util.escapeQuotes(n)+\"' \"),e.opts.verbose&&(s+=\" , schema: \"+e.util.toQuotedString(n)+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),s+=\" } \"):s+=\" {} \";var m=s;s=p.pop(),s+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+m+\"]); \":\" validate.errors = [\"+m+\"]; return false; \":\" var err = \"+m+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",c&&(s+=\" if (false) { \")}else{if(\"ignore\"!=e.opts.missingRefs){var v=new Error(d);throw v.missingRef=e.resolve.url(e.baseId,n),v.missingSchema=e.resolve.normalizeId(e.resolve.fullPath(v.missingRef)),v}console.log(d),c&&(s+=\" if (true) { \")}}else if(f.inline){var y=e.util.copy(e);y.level++;var g=\"valid\"+y.level;y.schema=f.schema,y.schemaPath=\"\",y.errSchemaPath=n;var P=e.validate(y).replace(/validate\\.schema/g,f.code);s+=\" \"+P+\" \",c&&(s+=\" if (\"+g+\") { \")}else t=!0===f.$async,a=f.code}if(a){var p=p||[];p.push(s),s=\"\",s+=e.opts.passContext?\" \"+a+\".call(this, \":\" \"+a+\"( \",s+=\" \"+h+\", (dataPath || '')\",'\"\"'!=e.errorPath&&(s+=\" + \"+e.errorPath);s+=\" , \"+(i?\"data\"+(i-1||\"\"):\"parentData\")+\" , \"+(i?e.dataPathArr[i]:\"parentDataProperty\")+\", rootData)  \";var E=s;if(s=p.pop(),t){if(!e.async)throw new Error(\"async schema referenced by sync schema\");s+=\" try { \",c&&(s+=\"var \"+u+\" =\"),s+=\" \"+e.yieldAwait+\" \"+E+\"; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } \",c&&(s+=\" if (\"+u+\") { \")}else s+=\" if (!\"+E+\") { if (vErrors === null) vErrors = \"+a+\".errors; else vErrors = vErrors.concat(\"+a+\".errors); errors = vErrors.length; } \",c&&(s+=\" else { \")}return s}},{}],33:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=e.opts.v5&&o&&o.$data;u&&(t+=\" var schema\"+a+\" = \"+e.util.getData(o.$data,s,e.dataPathArr)+\"; \");var f=\"schema\"+a;if(!u)if(o.length<e.opts.loopRequired&&e.schema.properties&&Object.keys(e.schema.properties).length){var d=[],p=o;if(p)for(var m,v=-1,y=p.length-1;v<y;){m=p[v+=1];var g=e.schema.properties[m];g&&e.util.schemaHasRules(g,e.RULES.all)||(d[d.length]=m)}}else var d=o;if(u||d.length){var P=e.errorPath,E=u||d.length>=e.opts.loopRequired;if(l)if(t+=\" var missing\"+a+\"; \",E){u||(t+=\" var \"+f+\" = validate.schema\"+i+\"; \");var b=\"i\"+a,w=\"schema\"+a+\"[\"+b+\"]\",j=\"' + \"+w+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(P,w,e.opts.jsonPointers)),t+=\" var \"+h+\" = true; \",u&&(t+=\" if (schema\"+a+\" === undefined) \"+h+\" = true; else if (!Array.isArray(schema\"+a+\")) \"+h+\" = false; else {\"),t+=\" for (var \"+b+\" = 0; \"+b+\" < \"+f+\".length; \"+b+\"++) { \"+h+\" = \"+c+\"[\"+f+\"[\"+b+\"]] !== undefined; if (!\"+h+\") break; } \",u&&(t+=\"  }  \"),t+=\"  if (!\"+h+\") {   \";var S=S||[];S.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'required' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingProperty: '\"+j+\"' } \",!1!==e.opts.messages&&(t+=\" , message: '\",t+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+j+\"\\\\'\",t+=\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var $=t;t=S.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+$+\"]); \":\" validate.errors = [\"+$+\"]; return false; \":\" var err = \"+$+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } else { \"}else{t+=\" if ( \";var x=d;if(x)for(var _,b=-1,O=x.length-1;b<O;){_=x[b+=1],b&&(t+=\" || \");var R=e.util.getProperty(_);t+=\" ( \"+c+R+\" === undefined && (missing\"+a+\" = \"+e.util.toQuotedString(e.opts.jsonPointers?_:R)+\") ) \"}t+=\") {  \";var w=\"missing\"+a,j=\"' + \"+w+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(P,w,!0):P+\" + \"+w);var S=S||[];S.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'required' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingProperty: '\"+j+\"' } \",!1!==e.opts.messages&&(t+=\" , message: '\",t+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+j+\"\\\\'\",t+=\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var $=t;t=S.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+$+\"]); \":\" validate.errors = [\"+$+\"]; return false; \":\" var err = \"+$+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",t+=\" } else { \"}else if(E){u||(t+=\" var \"+f+\" = validate.schema\"+i+\"; \");var b=\"i\"+a,w=\"schema\"+a+\"[\"+b+\"]\",j=\"' + \"+w+\" + '\";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(P,w,e.opts.jsonPointers)),u&&(t+=\" if (\"+f+\" && !Array.isArray(\"+f+\")) {  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'required' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingProperty: '\"+j+\"' } \",!1!==e.opts.messages&&(t+=\" , message: '\",t+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+j+\"\\\\'\",t+=\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (\"+f+\" !== undefined) { \"),t+=\" for (var \"+b+\" = 0; \"+b+\" < \"+f+\".length; \"+b+\"++) { if (\"+c+\"[\"+f+\"[\"+b+\"]] === undefined) {  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'required' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingProperty: '\"+j+\"' } \",!1!==e.opts.messages&&(t+=\" , message: '\",t+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+j+\"\\\\'\",t+=\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } \",u&&(t+=\"  }  \")}else{var I=d;if(I)for(var A,k=-1,q=I.length-1;k<q;){A=I[k+=1];var R=e.util.getProperty(A),j=e.util.escapeQuotes(A);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(P,A,e.opts.jsonPointers)),t+=\" if (\"+c+R+\" === undefined) {  var err =   \",!1!==e.createErrors?(t+=\" { keyword: 'required' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { missingProperty: '\"+j+\"' } \",!1!==e.opts.messages&&(t+=\" , message: '\",t+=e.opts._errorDataPathProperty?\"is a required property\":\"should have required property \\\\'\"+j+\"\\\\'\",t+=\"' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \",t+=\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } \"}}e.errorPath=P}else l&&(t+=\" if (true) {\");return t}},{}],34:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t=\" \",a=e.level,s=e.dataLevel,o=e.schema[r],i=e.schemaPath+e.util.getProperty(r),n=e.errSchemaPath+\"/\"+r,l=!e.opts.allErrors,c=\"data\"+(s||\"\"),h=\"valid\"+a,u=\"errs__\"+a,f=e.util.copy(e),d=\"\";f.level++;var p,m=\"valid\"+f.level,v=\"ifPassed\"+e.level,y=f.baseId;t+=\"var \"+v+\";\";var g=o;if(g)for(var P,E=-1,b=g.length-1;E<b;){if(P=g[E+=1],E&&!p&&(t+=\" if (!\"+v+\") { \",d+=\"}\"),P.if&&e.util.schemaHasRules(P.if,e.RULES.all)){t+=\" var \"+u+\" = errors;   \";var w=e.compositeRule;if(e.compositeRule=f.compositeRule=!0,f.createErrors=!1,f.schema=P.if,f.schemaPath=i+\"[\"+E+\"].if\",f.errSchemaPath=n+\"/\"+E+\"/if\",t+=\"  \"+e.validate(f)+\" \",f.baseId=y,f.createErrors=!0,e.compositeRule=f.compositeRule=w,t+=\" \"+v+\" = \"+m+\"; if (\"+v+\") {  \",\"boolean\"==typeof P.then){if(!1===P.then){var j=j||[];j.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'switch' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { caseIndex: \"+E+\" } \",!1!==e.opts.messages&&(t+=\" , message: 'should pass \\\"switch\\\" keyword validation' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var S=t;t=j.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}t+=\" var \"+m+\" = \"+P.then+\"; \"}else f.schema=P.then,f.schemaPath=i+\"[\"+E+\"].then\",f.errSchemaPath=n+\"/\"+E+\"/then\",t+=\"  \"+e.validate(f)+\" \",f.baseId=y;t+=\"  } else {  errors = \"+u+\"; if (vErrors !== null) { if (\"+u+\") vErrors.length = \"+u+\"; else vErrors = null; } } \"}else if(t+=\" \"+v+\" = true;  \",\"boolean\"==typeof P.then){if(!1===P.then){var j=j||[];j.push(t),t=\"\",!1!==e.createErrors?(t+=\" { keyword: 'switch' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(n)+\" , params: { caseIndex: \"+E+\" } \",!1!==e.opts.messages&&(t+=\" , message: 'should pass \\\"switch\\\" keyword validation' \"),e.opts.verbose&&(t+=\" , schema: validate.schema\"+i+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+c+\" \"),t+=\" } \"):t+=\" {} \";var S=t;t=j.pop(),t+=!e.compositeRule&&l?e.async?\" throw new ValidationError([\"+S+\"]); \":\" validate.errors = [\"+S+\"]; return false; \":\" var err = \"+S+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \"}t+=\" var \"+m+\" = \"+P.then+\"; \"}else f.schema=P.then,f.schemaPath=i+\"[\"+E+\"].then\",f.errSchemaPath=n+\"/\"+E+\"/then\",t+=\"  \"+e.validate(f)+\" \",f.baseId=y;p=P.continue}return t+=d+\"var \"+h+\" = \"+m+\"; \",t=e.util.cleanUpCode(t)}},{}],35:[function(e,r,t){\"use strict\";r.exports=function(e,r){var t,a=\" \",s=e.level,o=e.dataLevel,i=e.schema[r],n=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+\"/\"+r,c=!e.opts.allErrors,h=\"data\"+(o||\"\"),u=\"valid\"+s,f=e.opts.v5&&i&&i.$data;if(f?(a+=\" var schema\"+s+\" = \"+e.util.getData(i.$data,o,e.dataPathArr)+\"; \",t=\"schema\"+s):t=i,(i||f)&&!1!==e.opts.uniqueItems){f&&(a+=\" var \"+u+\"; if (\"+t+\" === false || \"+t+\" === undefined) \"+u+\" = true; else if (typeof \"+t+\" != 'boolean') \"+u+\" = false; else { \"),a+=\" var \"+u+\" = true; if (\"+h+\".length > 1) { var i = \"+h+\".length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(\"+h+\"[i], \"+h+\"[j])) { \"+u+\" = false; break outer; } } } } \",f&&(a+=\"  }  \"),a+=\" if (!\"+u+\") {   \";var d=d||[];d.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: 'uniqueItems' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(l)+\" , params: { i: i, j: j } \",!1!==e.opts.messages&&(a+=\" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' \"),e.opts.verbose&&(a+=\" , schema:  \",a+=f?\"validate.schema\"+n:\"\"+i,a+=\"         , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+h+\" \"),a+=\" } \"):a+=\" {} \";var p=a;a=d.pop(),a+=!e.compositeRule&&c?e.async?\" throw new ValidationError([\"+p+\"]); \":\" validate.errors = [\"+p+\"]; return false; \":\" var err = \"+p+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \",c&&(a+=\" else { \")}else c&&(a+=\" if (true) { \");return a}},{}],36:[function(e,r,t){\"use strict\";r.exports=function(e,r){function t(r){return void 0!==e.schema[r.keyword]||\"properties\"==r.keyword&&(!1===e.schema.additionalProperties||\"object\"==typeof e.schema.additionalProperties||e.schema.patternProperties&&Object.keys(e.schema.patternProperties).length||e.opts.v5&&e.schema.patternGroups&&Object.keys(e.schema.patternGroups).length)}var a=\"\",s=!0===e.schema.$async;if(e.isTop){var o=e.isTop,i=e.level=0,n=e.dataLevel=0,l=\"data\";if(e.rootId=e.resolve.fullPath(e.root.schema.id),e.baseId=e.baseId||e.rootId,s){e.async=!0;var c=\"es7\"==e.opts.async;e.yieldAwait=c?\"await\":\"yield\"}delete e.isTop,e.dataPathArr=[void 0],a+=\" var validate = \",s?c?a+=\" (async function \":(\"co*\"==e.opts.async&&(a+=\"co.wrap\"),a+=\"(function* \"):a+=\" (function \",a+=\" (data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; var vErrors = null; \",a+=\" var errors = 0;     \",a+=\" if (rootData === undefined) rootData = data;\"}else{var i=e.level,n=e.dataLevel,l=\"data\"+(n||\"\");if(e.schema.id&&(e.baseId=e.resolve.url(e.baseId,e.schema.id)),s&&!e.async)throw new Error(\"async schema in sync schema\");a+=\" var errs_\"+i+\" = errors;\"}var h=\"valid\"+i,u=!e.opts.allErrors,f=\"\",d=\"\",p=e.schema.type,m=Array.isArray(p);if(p&&e.opts.coerceTypes){var v=e.util.coerceToTypes(e.opts.coerceTypes,p);if(v){var y=e.schemaPath+\".type\",g=e.errSchemaPath+\"/type\",P=m?\"checkDataTypes\":\"checkDataType\";a+=\" if (\"+e.util[P](p,l,!0)+\") {  \";var E=\"dataType\"+i,b=\"coerced\"+i;a+=\" var \"+E+\" = typeof \"+l+\"; \",\"array\"==e.opts.coerceTypes&&(a+=\" if (\"+E+\" == 'object' && Array.isArray(\"+l+\")) \"+E+\" = 'array'; \"),a+=\" var \"+b+\" = undefined; \";var w=\"\",j=v;if(j)for(var S,$=-1,x=j.length-1;$<x;)S=j[$+=1],$&&(a+=\" if (\"+b+\" === undefined) { \",w+=\"}\"),\"array\"==e.opts.coerceTypes&&\"array\"!=S&&(a+=\" if (\"+E+\" == 'array' && \"+l+\".length == 1) { \"+b+\" = \"+l+\" = \"+l+\"[0]; \"+E+\" = typeof \"+l+\";  } \"),\"string\"==S?a+=\" if (\"+E+\" == 'number' || \"+E+\" == 'boolean') \"+b+\" = '' + \"+l+\"; else if (\"+l+\" === null) \"+b+\" = ''; \":\"number\"==S||\"integer\"==S?(a+=\" if (\"+E+\" == 'boolean' || \"+l+\" === null || (\"+E+\" == 'string' && \"+l+\" && \"+l+\" == +\"+l+\" \",\"integer\"==S&&(a+=\" && !(\"+l+\" % 1)\"),a+=\")) \"+b+\" = +\"+l+\"; \"):\"boolean\"==S?a+=\" if (\"+l+\" === 'false' || \"+l+\" === 0 || \"+l+\" === null) \"+b+\" = false; else if (\"+l+\" === 'true' || \"+l+\" === 1) \"+b+\" = true; \":\"null\"==S?a+=\" if (\"+l+\" === '' || \"+l+\" === 0 || \"+l+\" === false) \"+b+\" = null; \":\"array\"==e.opts.coerceTypes&&\"array\"==S&&(a+=\" if (\"+E+\" == 'string' || \"+E+\" == 'number' || \"+E+\" == 'boolean' || \"+l+\" == null) \"+b+\" = [\"+l+\"]; \");a+=\" \"+w+\" if (\"+b+\" === undefined) {   \";var _=_||[];_.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: 'type' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(g)+\" , params: { type: '\",a+=m?\"\"+p.join(\",\"):\"\"+p,a+=\"' } \",!1!==e.opts.messages&&(a+=\" , message: 'should be \",a+=m?\"\"+p.join(\",\"):\"\"+p,a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+y+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+l+\" \"),a+=\" } \"):a+=\" {} \";var O=a;a=_.pop(),a+=!e.compositeRule&&u?e.async?\" throw new ValidationError([\"+O+\"]); \":\" validate.errors = [\"+O+\"]; return false; \":\" var err = \"+O+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } else {  \";var R=n?\"data\"+(n-1||\"\"):\"parentData\",I=n?e.dataPathArr[n]:\"parentDataProperty\";a+=\" \"+l+\" = \"+b+\"; \",n||(a+=\"if (\"+R+\" !== undefined)\"),a+=\" \"+R+\"[\"+I+\"] = \"+b+\"; } } \"}}var A;if(e.schema.$ref&&(A=e.util.schemaHasRulesExcept(e.schema,e.RULES.all,\"$ref\"))){if(\"fail\"==e.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path \"'+e.errSchemaPath+'\"');\"ignore\"==e.opts.extendRefs?(A=!1,console.log('$ref: keywords ignored in schema at path \"'+e.errSchemaPath+'\"')):!0!==e.opts.extendRefs&&console.log('$ref: all keywords used in schema at path \"'+e.errSchemaPath+'\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour')}if(e.schema.$ref&&!A)a+=\" \"+e.RULES.all.$ref.code(e,\"$ref\")+\" \",u&&(a+=\" } if (errors === \",a+=o?\"0\":\"errs_\"+i,a+=\") { \",d+=\"}\");else{var k=e.RULES;if(k)for(var q,D=-1,L=k.length-1;D<L;)if(q=k[D+=1],function(e){for(var r=0;r<e.rules.length;r++)if(t(e.rules[r]))return!0}(q)){if(q.type&&(a+=\" if (\"+e.util.checkDataType(q.type,l)+\") { \"),e.opts.useDefaults&&!e.compositeRule)if(\"object\"==q.type&&e.schema.properties){var Q=e.schema.properties,C=Object.keys(Q),V=C;if(V)for(var z,U=-1,T=V.length-1;U<T;){z=V[U+=1];var M=Q[z];if(void 0!==M.default){var N=l+e.util.getProperty(z);a+=\"  if (\"+N+\" === undefined) \"+N+\" = \",a+=\"shared\"==e.opts.useDefaults?\" \"+e.useDefault(M.default)+\" \":\" \"+JSON.stringify(M.default)+\" \",a+=\"; \"}}}else if(\"array\"==q.type&&Array.isArray(e.schema.items)){var F=e.schema.items;if(F)for(var M,$=-1,H=F.length-1;$<H;)if(M=F[$+=1],void 0!==M.default){var N=l+\"[\"+$+\"]\";a+=\"  if (\"+N+\" === undefined) \"+N+\" = \",a+=\"shared\"==e.opts.useDefaults?\" \"+e.useDefault(M.default)+\" \":\" \"+JSON.stringify(M.default)+\" \",a+=\"; \"}}var J=q.rules;if(J)for(var G,K=-1,B=J.length-1;K<B;)G=J[K+=1],t(G)&&(a+=\" \"+G.code(e,G.keyword)+\" \",u&&(f+=\"}\"));if(u&&(a+=\" \"+f+\" \",f=\"\"),q.type&&(a+=\" } \",p&&p===q.type&&!v)){var Z=!0;a+=\" else { \";var y=e.schemaPath+\".type\",g=e.errSchemaPath+\"/type\",_=_||[];_.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: 'type' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(g)+\" , params: { type: '\",a+=m?\"\"+p.join(\",\"):\"\"+p,a+=\"' } \",!1!==e.opts.messages&&(a+=\" , message: 'should be \",a+=m?\"\"+p.join(\",\"):\"\"+p,a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+y+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+l+\" \"),a+=\" } \"):a+=\" {} \";var O=a;a=_.pop(),a+=!e.compositeRule&&u?e.async?\" throw new ValidationError([\"+O+\"]); \":\" validate.errors = [\"+O+\"]; return false; \":\" var err = \"+O+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" } \"}u&&(a+=\" if (errors === \",a+=o?\"0\":\"errs_\"+i,a+=\") { \",d+=\"}\")}}if(p&&!Z&&!v){var y=e.schemaPath+\".type\",g=e.errSchemaPath+\"/type\",P=m?\"checkDataTypes\":\"checkDataType\";a+=\" if (\"+e.util[P](p,l,!0)+\") {   \";var _=_||[];_.push(a),a=\"\",!1!==e.createErrors?(a+=\" { keyword: 'type' , dataPath: (dataPath || '') + \"+e.errorPath+\" , schemaPath: \"+e.util.toQuotedString(g)+\" , params: { type: '\",a+=m?\"\"+p.join(\",\"):\"\"+p,a+=\"' } \",!1!==e.opts.messages&&(a+=\" , message: 'should be \",a+=m?\"\"+p.join(\",\"):\"\"+p,a+=\"' \"),e.opts.verbose&&(a+=\" , schema: validate.schema\"+y+\" , parentSchema: validate.schema\"+e.schemaPath+\" , data: \"+l+\" \"),a+=\" } \"):a+=\" {} \";var O=a;a=_.pop(),a+=!e.compositeRule&&u?e.async?\" throw new ValidationError([\"+O+\"]); \":\" validate.errors = [\"+O+\"]; return false; \":\" var err = \"+O+\";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; \",a+=\" }\"}return u&&(a+=\" \"+d+\" \"),o?(s?(a+=\" if (errors === 0) return true;           \",a+=\" else throw new ValidationError(vErrors); \"):(a+=\" validate.errors = vErrors; \",a+=\" return errors === 0;       \"),a+=\" }); return validate;\"):a+=\" var \"+h+\" = errors === errs_\"+i+\";\",a=e.util.cleanUpCode(a),o&&u&&(a=e.util.cleanUpVarErrors(a,s)),a}},{}],37:[function(e,r,t){\"use strict\";function a(e,r){function t(e,r,t){for(var a,o=0;o<s.length;o++){var i=s[o];if(i.type==r){a=i;break}}a||(a={type:r,rules:[]},s.push(a));var l={keyword:e,definition:t,custom:!0,code:n};a.rules.push(l),s.custom[e]=l}function a(e){if(!s.types[e])throw new Error(\"Unknown type \"+e)}var s=this.RULES;if(s.keywords[e])throw new Error(\"Keyword \"+e+\" is already defined\");if(!i.test(e))throw new Error(\"Keyword \"+e+\" is not a valid identifier\");if(r){if(r.macro&&void 0!==r.valid)throw new Error('\"valid\" option cannot be used with macro keywords');var o=r.type;if(Array.isArray(o)){var l,c=o.length;for(l=0;l<c;l++)a(o[l]);for(l=0;l<c;l++)t(e,o[l],r)}else o&&a(o),t(e,o,r);var h=!0===r.$data&&this._opts.v5;if(h&&!r.validate)throw new Error('$data support: \"validate\" function is not defined');var u=r.metaSchema;u&&(h&&(u={anyOf:[u,{$ref:\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#/definitions/$data\"}]}),r.validateSchema=this.compile(u,!0))}s.keywords[e]=s.all[e]=!0}function s(e){var r=this.RULES.custom[e];return r?r.definition:this.RULES.keywords[e]||!1}function o(e){var r=this.RULES;delete r.keywords[e],delete r.all[e],delete r.custom[e];for(var t=0;t<r.length;t++)for(var a=r[t].rules,s=0;s<a.length;s++)if(a[s].keyword==e){a.splice(s,1);break}}var i=/^[a-z_$][a-z0-9_$\\-]*$/i,n=e(\"./dotjs/custom\");r.exports={add:a,get:s,remove:o}},{\"./dotjs/custom\":21}],38:[function(e,r,t){r.exports={id:\"http://json-schema.org/draft-04/schema#\",$schema:\"http://json-schema.org/draft-04/schema#\",description:\"Core schema meta-schema\",definitions:{schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},positiveInteger:{type:\"integer\",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:\"#/definitions/positiveInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},minItems:1,uniqueItems:!0}},type:\"object\",properties:{id:{type:\"string\",format:\"uri\"},$schema:{type:\"string\",format:\"uri\"},title:{type:\"string\"},description:{type:\"string\"},default:{},multipleOf:{type:\"number\",minimum:0,exclusiveMinimum:!0},maximum:{type:\"number\"},exclusiveMaximum:{type:\"boolean\",default:!1},minimum:{type:\"number\"},exclusiveMinimum:{type:\"boolean\",default:!1},maxLength:{$ref:\"#/definitions/positiveInteger\"},minLength:{$ref:\"#/definitions/positiveIntegerDefault0\"},pattern:{type:\"string\",format:\"regex\"},additionalItems:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}],default:{}},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:{}},maxItems:{$ref:\"#/definitions/positiveInteger\"},minItems:{$ref:\"#/definitions/positiveIntegerDefault0\"},uniqueItems:{type:\"boolean\",default:!1},maxProperties:{$ref:\"#/definitions/positiveInteger\"},minProperties:{$ref:\"#/definitions/positiveIntegerDefault0\"},required:{$ref:\"#/definitions/stringArray\"},additionalProperties:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}],default:{}},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},enum:{type:\"array\",minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"}},dependencies:{exclusiveMaximum:[\"maximum\"],exclusiveMinimum:[\"minimum\"]},default:{}}},{}],39:[function(e,r,t){r.exports={id:\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#\",$schema:\"http://json-schema.org/draft-04/schema#\",description:\"Core schema meta-schema (v5 proposals)\",definitions:{schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},positiveInteger:{type:\"integer\",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:\"#/definitions/positiveInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},minItems:1,uniqueItems:!0},$data:{type:\"object\",required:[\"$data\"],properties:{$data:{type:\"string\",anyOf:[{format:\"relative-json-pointer\"},{format:\"json-pointer\"}]}},additionalProperties:!1}},type:\"object\",properties:{id:{type:\"string\",format:\"uri\"},$schema:{type:\"string\",format:\"uri\"},title:{type:\"string\"},description:{type:\"string\"},default:{},multipleOf:{anyOf:[{type:\"number\",minimum:0,exclusiveMinimum:!0},{$ref:\"#/definitions/$data\"}]},maximum:{anyOf:[{type:\"number\"},{$ref:\"#/definitions/$data\"}]},exclusiveMaximum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},minimum:{anyOf:[{type:\"number\"},{$ref:\"#/definitions/$data\"}]},exclusiveMinimum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},maxLength:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minLength:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},pattern:{anyOf:[{type:\"string\",format:\"regex\"},{$ref:\"#/definitions/$data\"}]},additionalItems:{anyOf:[{type:\"boolean\"},{$ref:\"#\"},{$ref:\"#/definitions/$data\"}],default:{}},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:{}},maxItems:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minItems:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},uniqueItems:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},maxProperties:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minProperties:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},required:{anyOf:[{$ref:\"#/definitions/stringArray\"},{$ref:\"#/definitions/$data\"}]},additionalProperties:{anyOf:[{type:\"boolean\"},{$ref:\"#\"},{$ref:\"#/definitions/$data\"}],default:{}},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},enum:{anyOf:[{type:\"array\",minItems:1,uniqueItems:!0},{$ref:\"#/definitions/$data\"}]},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"},format:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatMaximum:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatMinimum:{anyOf:[{type:\"string\"},{$ref:\"#/definitions/$data\"}]},formatExclusiveMaximum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},formatExclusiveMinimum:{anyOf:[{type:\"boolean\",default:!1},{$ref:\"#/definitions/$data\"}]},constant:{anyOf:[{},{$ref:\"#/definitions/$data\"}]},contains:{$ref:\"#\"},patternGroups:{type:\"object\",additionalProperties:{type:\"object\",required:[\"schema\"],properties:{maximum:{anyOf:[{$ref:\"#/definitions/positiveInteger\"},{$ref:\"#/definitions/$data\"}]},minimum:{anyOf:[{$ref:\"#/definitions/positiveIntegerDefault0\"},{$ref:\"#/definitions/$data\"}]},schema:{$ref:\"#\"}},additionalProperties:!1},default:{}},switch:{type:\"array\",items:{required:[\"then\"],properties:{if:{$ref:\"#\"},then:{anyOf:[{type:\"boolean\"},{$ref:\"#\"}]},continue:{type:\"boolean\"}},additionalProperties:!1,dependencies:{continue:[\"if\"]}}}},dependencies:{exclusiveMaximum:[\"maximum\"],exclusiveMinimum:[\"minimum\"],formatMaximum:[\"format\"],formatMinimum:[\"format\"],formatExclusiveMaximum:[\"formatMaximum\"],formatExclusiveMinimum:[\"formatMinimum\"]},default:{}}},{}],40:[function(e,r,t){\"use strict\";function a(r){function t(e,t,s){var o={inline:s||a[e],statements:!0,errors:\"full\"};t&&(o.type=t),r.addKeyword(e,o)}var a={switch:e(\"./dotjs/switch\"),constant:e(\"./dotjs/constant\"),_formatLimit:e(\"./dotjs/_formatLimit\"),patternRequired:e(\"./dotjs/patternRequired\")};if(!1!==r._opts.meta){var i=e(\"./refs/json-schema-v5.json\");r.addMetaSchema(i,o)}t(\"constant\"),r.addKeyword(\"contains\",{type:\"array\",macro:s}),t(\"formatMaximum\",\"string\",a._formatLimit),t(\"formatMinimum\",\"string\",a._formatLimit),r.addKeyword(\"formatExclusiveMaximum\"),r.addKeyword(\"formatExclusiveMinimum\"),r.addKeyword(\"patternGroups\"),t(\"patternRequired\",\"object\"),t(\"switch\")}function s(e){return{not:{items:{not:e}}}}var o=\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json\";r.exports={enable:a,META_SCHEMA_ID:o}},{\"./dotjs/_formatLimit\":13,\"./dotjs/constant\":20,\"./dotjs/patternRequired\":30,\"./dotjs/switch\":34,\"./refs/json-schema-v5.json\":39}],\n    5  41:[function(e,r,t){function a(e){var r=this,t=f.call(arguments,1);return new Promise(function(a,o){function i(r){var t;try{t=e.next(r)}catch(e){return o(e)}c(t)}function n(r){var t;try{t=e.throw(r)}catch(e){return o(e)}c(t)}function c(e){if(e.done)return a(e.value);var t=s.call(r,e.value);return t&&l(t)?t.then(i,n):n(new TypeError('You may only yield a function, promise, generator, array, or object, but the following object was passed: \"'+String(e.value)+'\"'))}if(\"function\"==typeof e&&(e=e.apply(r,t)),!e||\"function\"!=typeof e.next)return a(e);i()})}function s(e){return e?l(e)?e:h(e)||c(e)?a.call(this,e):\"function\"==typeof e?o.call(this,e):Array.isArray(e)?i.call(this,e):u(e)?n.call(this,e):e:e}function o(e){var r=this;return new Promise(function(t,a){e.call(r,function(e,r){if(e)return a(e);arguments.length>2&&(r=f.call(arguments,1)),t(r)})})}function i(e){return Promise.all(e.map(s,this))}function n(e){for(var r=new e.constructor,t=Object.keys(e),a=[],o=0;o<t.length;o++){var i=t[o],n=s.call(this,e[i]);n&&l(n)?function(e,t){r[t]=void 0,a.push(e.then(function(e){r[t]=e}))}(n,i):r[i]=e[i]}return Promise.all(a).then(function(){return r})}function l(e){return\"function\"==typeof e.then}function c(e){return\"function\"==typeof e.next&&\"function\"==typeof e.throw}function h(e){var r=e.constructor;return!!r&&(\"GeneratorFunction\"===r.name||\"GeneratorFunction\"===r.displayName||c(r.prototype))}function u(e){return Object==e.constructor}var f=Array.prototype.slice;r.exports=a.default=a.co=a,a.wrap=function(e){function r(){return a.call(this,e.apply(this,arguments))}return r.__generatorFunction__=e,r}},{}],42:[function(e,r,t){var a=\"undefined\"!=typeof JSON?JSON:e(\"jsonify\");r.exports=function(e,r){r||(r={}),\"function\"==typeof r&&(r={cmp:r});var t=r.space||\"\";\"number\"==typeof t&&(t=Array(t+1).join(\" \"));var i=\"boolean\"==typeof r.cycles&&r.cycles,n=r.replacer||function(e,r){return r},l=r.cmp&&function(e){return function(r){return function(t,a){return e({key:t,value:r[t]},{key:a,value:r[a]})}}}(r.cmp),c=[];return function e(r,h,u,f){var d=t?\"\\n\"+new Array(f+1).join(t):\"\",p=t?\": \":\":\";if(u&&u.toJSON&&\"function\"==typeof u.toJSON&&(u=u.toJSON()),void 0!==(u=n.call(r,h,u))){if(\"object\"!=typeof u||null===u)return a.stringify(u);if(s(u)){for(var m=[],v=0;v<u.length;v++){var y=e(u,v,u[v],f+1)||a.stringify(null);m.push(d+t+y)}return\"[\"+m.join(\",\")+d+\"]\"}if(-1!==c.indexOf(u)){if(i)return a.stringify(\"__cycle__\");throw new TypeError(\"Converting circular structure to JSON\")}c.push(u);for(var g=o(u).sort(l&&l(u)),m=[],v=0;v<g.length;v++){var h=g[v],P=e(u,h,u[h],f+1);if(P){var E=a.stringify(h)+p+P;m.push(d+t+E)}}return c.splice(c.indexOf(u),1),\"{\"+m.join(\",\")+d+\"}\"}}({\"\":e},\"\",e,0)};var s=Array.isArray||function(e){return\"[object Array]\"==={}.toString.call(e)},o=Object.keys||function(e){var r=Object.prototype.hasOwnProperty||function(){return!0},t=[];for(var a in e)r.call(e,a)&&t.push(a);return t}},{jsonify:43}],43:[function(e,r,t){t.parse=e(\"./lib/parse\"),t.stringify=e(\"./lib/stringify\")},{\"./lib/parse\":44,\"./lib/stringify\":45}],44:[function(e,r,t){var a,s,o,i,n={'\"':'\"',\"\\\\\":\"\\\\\",\"/\":\"/\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"},l=function(e){throw{name:\"SyntaxError\",message:e,at:a,text:o}},c=function(e){return e&&e!==s&&l(\"Expected '\"+e+\"' instead of '\"+s+\"'\"),s=o.charAt(a),a+=1,s},h=function(){var e,r=\"\";for(\"-\"===s&&(r=\"-\",c(\"-\"));s>=\"0\"&&s<=\"9\";)r+=s,c();if(\".\"===s)for(r+=\".\";c()&&s>=\"0\"&&s<=\"9\";)r+=s;if(\"e\"===s||\"E\"===s)for(r+=s,c(),\"-\"!==s&&\"+\"!==s||(r+=s,c());s>=\"0\"&&s<=\"9\";)r+=s,c();if(e=+r,isFinite(e))return e;l(\"Bad number\")},u=function(){var e,r,t,a=\"\";if('\"'===s)for(;c();){if('\"'===s)return c(),a;if(\"\\\\\"===s)if(c(),\"u\"===s){for(t=0,r=0;r<4&&(e=parseInt(c(),16),isFinite(e));r+=1)t=16*t+e;a+=String.fromCharCode(t)}else{if(\"string\"!=typeof n[s])break;a+=n[s]}else a+=s}l(\"Bad string\")},f=function(){for(;s&&s<=\" \";)c()},d=function(){switch(s){case\"t\":return c(\"t\"),c(\"r\"),c(\"u\"),c(\"e\"),!0;case\"f\":return c(\"f\"),c(\"a\"),c(\"l\"),c(\"s\"),c(\"e\"),!1;case\"n\":return c(\"n\"),c(\"u\"),c(\"l\"),c(\"l\"),null}l(\"Unexpected '\"+s+\"'\")},p=function(){var e=[];if(\"[\"===s){if(c(\"[\"),f(),\"]\"===s)return c(\"]\"),e;for(;s;){if(e.push(i()),f(),\"]\"===s)return c(\"]\"),e;c(\",\"),f()}}l(\"Bad array\")},m=function(){var e,r={};if(\"{\"===s){if(c(\"{\"),f(),\"}\"===s)return c(\"}\"),r;for(;s;){if(e=u(),f(),c(\":\"),Object.hasOwnProperty.call(r,e)&&l('Duplicate key \"'+e+'\"'),r[e]=i(),f(),\"}\"===s)return c(\"}\"),r;c(\",\"),f()}}l(\"Bad object\")};i=function(){switch(f(),s){case\"{\":return m();case\"[\":return p();case'\"':return u();case\"-\":return h();default:return s>=\"0\"&&s<=\"9\"?h():d()}},r.exports=function(e,r){var t;return o=e,a=0,s=\" \",t=i(),f(),s&&l(\"Syntax error\"),\"function\"==typeof r?function e(t,a){var s,o,i=t[a];if(i&&\"object\"==typeof i)for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&(o=e(i,s),void 0!==o?i[s]=o:delete i[s]);return r.call(t,a,i)}({\"\":t},\"\"):t}},{}],45:[function(e,r,t){function a(e){return l.lastIndex=0,l.test(e)?'\"'+e.replace(l,function(e){var r=c[e];return\"string\"==typeof r?r:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)})+'\"':'\"'+e+'\"'}function s(e,r){var t,l,c,h,u,f=o,d=r[e];switch(d&&\"object\"==typeof d&&\"function\"==typeof d.toJSON&&(d=d.toJSON(e)),\"function\"==typeof n&&(d=n.call(r,e,d)),typeof d){case\"string\":return a(d);case\"number\":return isFinite(d)?String(d):\"null\";case\"boolean\":case\"null\":return String(d);case\"object\":if(!d)return\"null\";if(o+=i,u=[],\"[object Array]\"===Object.prototype.toString.apply(d)){for(h=d.length,t=0;t<h;t+=1)u[t]=s(t,d)||\"null\";return c=0===u.length?\"[]\":o?\"[\\n\"+o+u.join(\",\\n\"+o)+\"\\n\"+f+\"]\":\"[\"+u.join(\",\")+\"]\",o=f,c}if(n&&\"object\"==typeof n)for(h=n.length,t=0;t<h;t+=1)\"string\"==typeof(l=n[t])&&(c=s(l,d))&&u.push(a(l)+(o?\": \":\":\")+c);else for(l in d)Object.prototype.hasOwnProperty.call(d,l)&&(c=s(l,d))&&u.push(a(l)+(o?\": \":\":\")+c);return c=0===u.length?\"{}\":o?\"{\\n\"+o+u.join(\",\\n\"+o)+\"\\n\"+f+\"}\":\"{\"+u.join(\",\")+\"}\",o=f,c}}var o,i,n,l=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,c={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"};r.exports=function(e,r,t){var a;if(o=\"\",i=\"\",\"number\"==typeof t)for(a=0;a<t;a+=1)i+=\" \";else\"string\"==typeof t&&(i=t);if(n=r,r&&\"function\"!=typeof r&&(\"object\"!=typeof r||\"number\"!=typeof r.length))throw new Error(\"JSON.stringify\");return s(\"\",{\"\":e})}},{}],46:[function(r,t,a){(function(r){!function(s){function o(e){throw new RangeError(D[e])}function i(e,r){for(var t=e.length,a=[];t--;)a[t]=r(e[t]);return a}function n(e,r){var t=e.split(\"@\"),a=\"\";return t.length>1&&(a=t[0]+\"@\",e=t[1]),e=e.replace(q,\".\"),a+i(e.split(\".\"),r).join(\".\")}function l(e){for(var r,t,a=[],s=0,o=e.length;s<o;)r=e.charCodeAt(s++),r>=55296&&r<=56319&&s<o?(t=e.charCodeAt(s++),56320==(64512&t)?a.push(((1023&r)<<10)+(1023&t)+65536):(a.push(r),s--)):a.push(r);return a}function c(e){return i(e,function(e){var r=\"\";return e>65535&&(e-=65536,r+=C(e>>>10&1023|55296),e=56320|1023&e),r+=C(e)}).join(\"\")}function h(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:j}function u(e,r){return e+22+75*(e<26)-((0!=r)<<5)}function f(e,r,t){var a=0;for(e=t?Q(e/_):e>>1,e+=Q(e/r);e>L*$>>1;a+=j)e=Q(e/L);return Q(a+(L+1)*e/(e+x))}function d(e){var r,t,a,s,i,n,l,u,d,p,m=[],v=e.length,y=0,g=R,P=O;for(t=e.lastIndexOf(I),t<0&&(t=0),a=0;a<t;++a)e.charCodeAt(a)>=128&&o(\"not-basic\"),m.push(e.charCodeAt(a));for(s=t>0?t+1:0;s<v;){for(i=y,n=1,l=j;s>=v&&o(\"invalid-input\"),u=h(e.charCodeAt(s++)),(u>=j||u>Q((w-y)/n))&&o(\"overflow\"),y+=u*n,d=l<=P?S:l>=P+$?$:l-P,!(u<d);l+=j)p=j-d,n>Q(w/p)&&o(\"overflow\"),n*=p;r=m.length+1,P=f(y-i,r,0==i),Q(y/r)>w-g&&o(\"overflow\"),g+=Q(y/r),y%=r,m.splice(y++,0,g)}return c(m)}function p(e){var r,t,a,s,i,n,c,h,d,p,m,v,y,g,P,E=[];for(e=l(e),v=e.length,r=R,t=0,i=O,n=0;n<v;++n)(m=e[n])<128&&E.push(C(m));for(a=s=E.length,s&&E.push(I);a<v;){for(c=w,n=0;n<v;++n)(m=e[n])>=r&&m<c&&(c=m);for(y=a+1,c-r>Q((w-t)/y)&&o(\"overflow\"),t+=(c-r)*y,r=c,n=0;n<v;++n)if(m=e[n],m<r&&++t>w&&o(\"overflow\"),m==r){for(h=t,d=j;p=d<=i?S:d>=i+$?$:d-i,!(h<p);d+=j)P=h-p,g=j-p,E.push(C(u(p+P%g,0))),h=Q(P/g);E.push(C(u(h,0))),i=f(t,y,a==s),t=0,++a}++t,++r}return E.join(\"\")}function m(e){return n(e,function(e){return A.test(e)?d(e.slice(4).toLowerCase()):e})}function v(e){return n(e,function(e){return k.test(e)?\"xn--\"+p(e):e})}var y=\"object\"==typeof a&&a&&!a.nodeType&&a,g=\"object\"==typeof t&&t&&!t.nodeType&&t,P=\"object\"==typeof r&&r;P.global!==P&&P.window!==P&&P.self!==P||(s=P);var E,b,w=2147483647,j=36,S=1,$=26,x=38,_=700,O=72,R=128,I=\"-\",A=/^xn--/,k=/[^\\x20-\\x7E]/,q=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,D={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},L=j-S,Q=Math.floor,C=String.fromCharCode;if(E={version:\"1.4.1\",ucs2:{decode:l,encode:c},decode:d,encode:p,toASCII:v,toUnicode:m},\"function\"==typeof e&&\"object\"==typeof e.amd&&e.amd)e(\"punycode\",function(){return E});else if(y&&g)if(t.exports==y)g.exports=E;else for(b in E)E.hasOwnProperty(b)&&(y[b]=E[b]);else s.punycode=E}(this)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],47:[function(e,r,t){\"use strict\";function a(e,r){return Object.prototype.hasOwnProperty.call(e,r)}r.exports=function(e,r,t,o){r=r||\"&\",t=t||\"=\";var i={};if(\"string\"!=typeof e||0===e.length)return i;e=e.split(r);var n=1e3;o&&\"number\"==typeof o.maxKeys&&(n=o.maxKeys);var l=e.length;n>0&&l>n&&(l=n);for(var c=0;c<l;++c){var h,u,f,d,p=e[c].replace(/\\+/g,\"%20\"),m=p.indexOf(t);m>=0?(h=p.substr(0,m),u=p.substr(m+1)):(h=p,u=\"\"),f=decodeURIComponent(h),d=decodeURIComponent(u),a(i,f)?s(i[f])?i[f].push(d):i[f]=[i[f],d]:i[f]=d}return i};var s=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}},{}],48:[function(e,r,t){\"use strict\";function a(e,r){if(e.map)return e.map(r);for(var t=[],a=0;a<e.length;a++)t.push(r(e[a],a));return t}var s=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};r.exports=function(e,r,t,n){return r=r||\"&\",t=t||\"=\",null===e&&(e=void 0),\"object\"==typeof e?a(i(e),function(i){var n=encodeURIComponent(s(i))+t;return o(e[i])?a(e[i],function(e){return n+encodeURIComponent(s(e))}).join(r):n+encodeURIComponent(s(e[i]))}).join(r):n?encodeURIComponent(s(n))+t+encodeURIComponent(s(e)):\"\"};var o=Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},i=Object.keys||function(e){var r=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.push(t);return r}},{}],49:[function(e,r,t){\"use strict\";t.decode=t.parse=e(\"./decode\"),t.encode=t.stringify=e(\"./encode\")},{\"./decode\":47,\"./encode\":48}],50:[function(e,r,t){\"use strict\";function a(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}function s(e,r,t){if(e&&c.isObject(e)&&e instanceof a)return e;var s=new a;return s.parse(e,r,t),s}function o(e){return c.isString(e)&&(e=s(e)),e instanceof a?e.format():a.prototype.format.call(e)}function i(e,r){return s(e,!1,!0).resolve(r)}function n(e,r){return e?s(e,!1,!0).resolveObject(r):r}var l=e(\"punycode\"),c=e(\"./util\");t.parse=s,t.resolve=i,t.resolveObject=n,t.format=o,t.Url=a;var h=/^([a-z0-9.+-]+:)/i,u=/:[0-9]*$/,f=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,d=[\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"],p=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat(d),m=[\"'\"].concat(p),v=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(m),y=[\"/\",\"?\",\"#\"],g={javascript:!0,\"javascript:\":!0},P={javascript:!0,\"javascript:\":!0},E={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},b=e(\"querystring\");a.prototype.parse=function(e,r,t){if(!c.isString(e))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof e);var a=e.indexOf(\"?\"),s=-1!==a&&a<e.indexOf(\"#\")?\"?\":\"#\",o=e.split(s);o[0]=o[0].replace(/\\\\/g,\"/\"),e=o.join(s);var i=e;if(i=i.trim(),!t&&1===e.split(\"#\").length){var n=f.exec(i);if(n)return this.path=i,this.href=i,this.pathname=n[1],n[2]?(this.search=n[2],this.query=r?b.parse(this.search.substr(1)):this.search.substr(1)):r&&(this.search=\"\",this.query={}),this}var u=h.exec(i);if(u){u=u[0];var d=u.toLowerCase();this.protocol=d,i=i.substr(u.length)}if(t||u||i.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var p=\"//\"===i.substr(0,2);!p||u&&P[u]||(i=i.substr(2),this.slashes=!0)}if(!P[u]&&(p||u&&!E[u])){for(var w=-1,j=0;j<y.length;j++){var S=i.indexOf(y[j]);-1!==S&&(-1===w||S<w)&&(w=S)}var $,x;x=-1===w?i.lastIndexOf(\"@\"):i.lastIndexOf(\"@\",w),-1!==x&&($=i.slice(0,x),i=i.slice(x+1),this.auth=decodeURIComponent($)),w=-1;for(var j=0;j<v.length;j++){var S=i.indexOf(v[j]);-1!==S&&(-1===w||S<w)&&(w=S)}-1===w&&(w=i.length),this.host=i.slice(0,w),i=i.slice(w),this.parseHost(),this.hostname=this.hostname||\"\";var _=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!_)for(var O=this.hostname.split(/\\./),j=0,R=O.length;j<R;j++){var I=O[j];if(I&&!I.match(/^[+a-z0-9A-Z_-]{0,63}$/)){for(var A=\"\",k=0,q=I.length;k<q;k++)I.charCodeAt(k)>127?A+=\"x\":A+=I[k];if(!A.match(/^[+a-z0-9A-Z_-]{0,63}$/)){var D=O.slice(0,j),L=O.slice(j+1),Q=I.match(/^([+a-z0-9A-Z_-]{0,63})(.*)$/);Q&&(D.push(Q[1]),L.unshift(Q[2])),L.length&&(i=\"/\"+L.join(\".\")+i),this.hostname=D.join(\".\");break}}}this.hostname=this.hostname.length>255?\"\":this.hostname.toLowerCase(),_||(this.hostname=l.toASCII(this.hostname));var C=this.port?\":\"+this.port:\"\";this.host=(this.hostname||\"\")+C,this.href+=this.host,_&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),\"/\"!==i[0]&&(i=\"/\"+i))}if(!g[d])for(var j=0,R=m.length;j<R;j++){var V=m[j];if(-1!==i.indexOf(V)){var z=encodeURIComponent(V);z===V&&(z=escape(V)),i=i.split(V).join(z)}}var U=i.indexOf(\"#\");-1!==U&&(this.hash=i.substr(U),i=i.slice(0,U));var T=i.indexOf(\"?\");if(-1!==T?(this.search=i.substr(T),this.query=i.substr(T+1),r&&(this.query=b.parse(this.query)),i=i.slice(0,T)):r&&(this.search=\"\",this.query={}),i&&(this.pathname=i),E[d]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){var C=this.pathname||\"\";this.path=C+(this.search||\"\")}return this.href=this.format(),this},a.prototype.format=function(){var e=this.auth||\"\";e&&(e=encodeURIComponent(e),e=e.replace(/%3A/i,\":\"),e+=\"@\");var r=this.protocol||\"\",t=this.pathname||\"\",a=this.hash||\"\",s=!1,o=\"\";this.host?s=e+this.host:this.hostname&&(s=e+(-1===this.hostname.indexOf(\":\")?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(s+=\":\"+this.port)),this.query&&c.isObject(this.query)&&Object.keys(this.query).length&&(o=b.stringify(this.query));var i=this.search||o&&\"?\"+o||\"\";return r&&\":\"!==r.substr(-1)&&(r+=\":\"),this.slashes||(!r||E[r])&&!1!==s?(s=\"//\"+(s||\"\"),t&&\"/\"!==t.charAt(0)&&(t=\"/\"+t)):s||(s=\"\"),a&&\"#\"!==a.charAt(0)&&(a=\"#\"+a),i&&\"?\"!==i.charAt(0)&&(i=\"?\"+i),t=t.replace(/[?#]/g,function(e){return encodeURIComponent(e)}),i=i.replace(\"#\",\"%23\"),r+s+t+i+a},a.prototype.resolve=function(e){return this.resolveObject(s(e,!1,!0)).format()},a.prototype.resolveObject=function(e){if(c.isString(e)){var r=new a;r.parse(e,!1,!0),e=r}for(var t=new a,s=Object.keys(this),o=0;o<s.length;o++){var i=s[o];t[i]=this[i]}if(t.hash=e.hash,\"\"===e.href)return t.href=t.format(),t;if(e.slashes&&!e.protocol){for(var n=Object.keys(e),l=0;l<n.length;l++){var h=n[l];\"protocol\"!==h&&(t[h]=e[h])}return E[t.protocol]&&t.hostname&&!t.pathname&&(t.path=t.pathname=\"/\"),t.href=t.format(),t}if(e.protocol&&e.protocol!==t.protocol){if(!E[e.protocol]){for(var u=Object.keys(e),f=0;f<u.length;f++){var d=u[f];t[d]=e[d]}return t.href=t.format(),t}if(t.protocol=e.protocol,e.host||P[e.protocol])t.pathname=e.pathname;else{for(var p=(e.pathname||\"\").split(\"/\");p.length&&!(e.host=p.shift()););e.host||(e.host=\"\"),e.hostname||(e.hostname=\"\"),\"\"!==p[0]&&p.unshift(\"\"),p.length<2&&p.unshift(\"\"),t.pathname=p.join(\"/\")}if(t.search=e.search,t.query=e.query,t.host=e.host||\"\",t.auth=e.auth,t.hostname=e.hostname||e.host,t.port=e.port,t.pathname||t.search){t.path=(t.pathname||\"\")+(t.search||\"\")}return t.slashes=t.slashes||e.slashes,t.href=t.format(),t}var m=t.pathname&&\"/\"===t.pathname.charAt(0),v=e.host||e.pathname&&\"/\"===e.pathname.charAt(0),y=v||m||t.host&&e.pathname,g=y,b=t.pathname&&t.pathname.split(\"/\")||[],p=e.pathname&&e.pathname.split(\"/\")||[],w=t.protocol&&!E[t.protocol];if(w&&(t.hostname=\"\",t.port=null,t.host&&(\"\"===b[0]?b[0]=t.host:b.unshift(t.host)),t.host=\"\",e.protocol&&(e.hostname=null,e.port=null,e.host&&(\"\"===p[0]?p[0]=e.host:p.unshift(e.host)),e.host=null),y=y&&(\"\"===p[0]||\"\"===b[0])),v)t.host=e.host||\"\"===e.host?e.host:t.host,t.hostname=e.hostname||\"\"===e.hostname?e.hostname:t.hostname,t.search=e.search,t.query=e.query,b=p;else if(p.length)b||(b=[]),b.pop(),b=b.concat(p),t.search=e.search,t.query=e.query;else if(!c.isNullOrUndefined(e.search)){if(w){t.hostname=t.host=b.shift();var j=!!(t.host&&t.host.indexOf(\"@\")>0)&&t.host.split(\"@\");j&&(t.auth=j.shift(),t.host=t.hostname=j.shift())}return t.search=e.search,t.query=e.query,c.isNull(t.pathname)&&c.isNull(t.search)||(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.href=t.format(),t}if(!b.length)return t.pathname=null,t.path=t.search?\"/\"+t.search:null,t.href=t.format(),t;for(var S=b.slice(-1)[0],$=(t.host||e.host||b.length>1)&&(\".\"===S||\"..\"===S)||\"\"===S,x=0,_=b.length;_>=0;_--)S=b[_],\".\"===S?b.splice(_,1):\"..\"===S?(b.splice(_,1),x++):x&&(b.splice(_,1),x--);if(!y&&!g)for(;x--;x)b.unshift(\"..\");!y||\"\"===b[0]||b[0]&&\"/\"===b[0].charAt(0)||b.unshift(\"\"),$&&\"/\"!==b.join(\"/\").substr(-1)&&b.push(\"\");var O=\"\"===b[0]||b[0]&&\"/\"===b[0].charAt(0);if(w){t.hostname=t.host=O?\"\":b.length?b.shift():\"\";var j=!!(t.host&&t.host.indexOf(\"@\")>0)&&t.host.split(\"@\");j&&(t.auth=j.shift(),t.host=t.hostname=j.shift())}return y=y||t.host&&b.length,y&&!O&&b.unshift(\"\"),b.length?t.pathname=b.join(\"/\"):(t.pathname=null,t.path=null),c.isNull(t.pathname)&&c.isNull(t.search)||(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.auth=e.auth||t.auth,t.slashes=t.slashes||e.slashes,t.href=t.format(),t},a.prototype.parseHost=function(){var e=this.host,r=u.exec(e);r&&(r=r[0],\":\"!==r&&(this.port=r.substr(1)),e=e.substr(0,e.length-r.length)),e&&(this.hostname=e)}},{\"./util\":51,punycode:46,querystring:49}],51:[function(e,r,t){\"use strict\";r.exports={isString:function(e){return\"string\"==typeof e},isObject:function(e){return\"object\"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},{}],ajv:[function(e,r,t){\"use strict\";function a(e){return g.test(e)}function s(r){function t(e,r){var t;if(\"string\"==typeof e){if(!(t=S(e)))throw new Error('no schema with key or ref \"'+e+'\"')}else{var a=R(e);t=a.validate||I(a)}var s=t(r);return!0===t.$async?\"*\"==D._opts.async?m(s):s:(D.errors=t.errors,s)}function v(e,r){var t=R(e,void 0,r);return t.validate||I(t)}function E(e,r,t,a){if(Array.isArray(e))for(var s=0;s<e.length;s++)E(e[s],void 0,t,a);else r=i.normalizeId(r||e.id),q(r),D._schemas[r]=R(e,t,a,!0)}function b(e,r,t){E(e,r,t,!0)}function w(e,r){var s=e.$schema||D._opts.defaultMeta||j(),o=D._formats.uri;D._formats.uri=\"function\"==typeof o?a:g;var i;try{i=t(s,e)}finally{D._formats.uri=o}if(!i&&r){var n=\"schema is invalid: \"+A();if(\"log\"!=D._opts.validateSchema)throw new Error(n);console.error(n)}return i}function j(){var e=D._opts.meta;return D._opts.defaultMeta=\"object\"==typeof e?e.id||e:D._opts.v5?f.META_SCHEMA_ID:y}function S(e){var r=x(e);switch(typeof r){case\"object\":return r.validate||I(r);case\"string\":return S(r);case\"undefined\":return $(e)}}function $(e){var r=i.schema.call(D,{schema:{}},e);if(r){var t=r.schema,a=r.root,s=r.baseId,n=o.call(D,t,a,void 0,s);return D._fragments[e]=new l({ref:e,fragment:!0,schema:t,root:a,baseId:s,validate:n}),n}}function x(e){return e=i.normalizeId(e),D._schemas[e]||D._refs[e]||D._fragments[e]}function _(e){if(e instanceof RegExp)return O(D._schemas,e),void O(D._refs,e);switch(typeof e){case\"undefined\":return O(D._schemas),O(D._refs),void D._cache.clear();case\"string\":var r=x(e);return r&&D._cache.del(r.jsonStr),delete D._schemas[e],void delete D._refs[e];case\"object\":var t=c(e);D._cache.del(t);var a=e.id;a&&(a=i.normalizeId(a),delete D._schemas[a],delete D._refs[a])}}function O(e,r){for(var t in e){var a=e[t];a.meta||r&&!r.test(t)||(D._cache.del(a.jsonStr),delete e[t])}}function R(e,r,t,a){if(\"object\"!=typeof e)throw new Error(\"schema should be object\");var s=c(e),o=D._cache.get(s);if(o)return o;a=a||!1!==D._opts.addUsedSchema;var n=i.normalizeId(e.id);n&&a&&q(n);var h,u=!1!==D._opts.validateSchema&&!r;u&&!(h=e.id&&e.id==e.$schema)&&w(e,!0);var f=i.ids.call(D,e),d=new l({id:n,schema:e,localRefs:f,jsonStr:s,meta:t});return\"#\"!=n[0]&&a&&(D._refs[n]=d),D._cache.put(s,d),u&&h&&w(e,!0),d}function I(e,r){function t(){var r=e.validate,a=r.apply(null,arguments);return t.errors=r.errors,a}if(e.compiling)return e.validate=t,t.schema=e.schema,t.errors=null,t.root=r||t,!0===e.schema.$async&&(t.$async=!0),t;e.compiling=!0;var a;e.meta&&(a=D._opts,D._opts=D._metaOpts);var s;try{s=o.call(D,e.schema,r,e.localRefs)}finally{e.compiling=!1,e.meta&&(D._opts=a)}return e.validate=s,e.refs=s.refs,e.refVal=s.refVal,e.root=s.root,s}function A(e,r){if(!(e=e||D.errors))return\"No errors\";r=r||{};for(var t=void 0===r.separator?\", \":r.separator,a=void 0===r.dataVar?\"data\":r.dataVar,s=\"\",o=0;o<e.length;o++){var i=e[o];i&&(s+=a+i.dataPath+\" \"+i.message+t)}return s.slice(0,-t.length)}function k(e,r){\"string\"==typeof r&&(r=new RegExp(r)),D._formats[e]=r}function q(e){if(D._schemas[e]||D._refs[e])throw new Error('schema with key or id \"'+e+'\" already exists')}if(!(this instanceof s))return new s(r);var D=this;r=this._opts=d.copy(r)||{},this._schemas={},this._refs={},this._fragments={},this._formats=h(r.format),this._cache=r.cache||new n,this._loadingSchemas={},this._compilations=[],this.RULES=u(),this.validate=t,this.compile=v,this.addSchema=E,this.addMetaSchema=b,this.validateSchema=w,this.getSchema=S,this.removeSchema=_,this.addFormat=k,this.errorsText=A,this._addSchema=R,this._compile=I,r.loopRequired=r.loopRequired||1/0,(r.async||r.transpile)&&p.setup(r),!0===r.beautify&&(r.beautify={indent_size:2}),\"property\"==r.errorDataPath&&(r._errorDataPathProperty=!0),this._metaOpts=function(){for(var e=d.copy(D._opts),r=0;r<P.length;r++)delete e[P[r]];return e}(),r.formats&&function(){for(var e in D._opts.formats)k(e,D._opts.formats[e])}(),function(){!1!==D._opts.meta&&(b(e(\"./refs/json-schema-draft-04.json\"),y,!0),D._refs[\"http://json-schema.org/schema\"]=y)}(),r.v5&&f.enable(this),\"object\"==typeof r.meta&&b(r.meta),function(){var e=D._opts.schemas;if(e)if(Array.isArray(e))E(e);else for(var r in e)E(e[r],r)}()}var o=e(\"./compile\"),i=e(\"./compile/resolve\"),n=e(\"./cache\"),l=e(\"./compile/schema_obj\"),c=e(\"json-stable-stringify\"),h=e(\"./compile/formats\"),u=e(\"./compile/rules\"),f=e(\"./v5\"),d=e(\"./compile/util\"),p=e(\"./async\"),m=e(\"co\");r.exports=s,s.prototype.compileAsync=p.compile;var v=e(\"./keyword\");s.prototype.addKeyword=v.add,s.prototype.getKeyword=v.get,s.prototype.removeKeyword=v.remove,s.ValidationError=e(\"./compile/validation_error\");var y=\"http://json-schema.org/draft-04/schema\",g=/^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,P=[\"removeAdditional\",\"useDefaults\",\"coerceTypes\"]},{\"./async\":1,\"./cache\":2,\"./compile\":6,\"./compile/formats\":5,\"./compile/resolve\":7,\"./compile/rules\":8,\"./compile/schema_obj\":9,\"./compile/util\":11,\"./compile/validation_error\":12,\"./keyword\":37,\"./refs/json-schema-draft-04.json\":38,\"./v5\":40,co:41,\"json-stable-stringify\":42}]},{},[])(\"ajv\")});\n    6  //# sourceMappingURL=ajv.min.js.map\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\dist\\nodent.min.js:\n    1  /* nodent 3.0.17: NoDent - Asynchronous Javascript language extensions */\n    2  require=function e(t,n,r){function i(o,a){if(!n[o]){if(!t[o]){var u=\"function\"==typeof require&&require;if(!a&&u)return u(o,!0);if(s)return s(o,!0);var c=new Error(\"Cannot find module '\"+o+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return i(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var s=\"function\"==typeof require&&require,o=0;o<r.length;o++)i(r[o]);return i}({1:[function(e,t,n){t.exports=function(t){switch(parseInt(t.version)){case 2:case 3:t.plugins.asyncawait=e(\"./acorn-v3\");break;case 4:case 5:t.plugins.asyncawait=e(\"./acorn-v4\");break;default:throw new Error(\"acorn-es7-plugin requires Acorn v2, 3, 4 or 5\")}return t}},{\"./acorn-v3\":2,\"./acorn-v4\":3}],2:[function(e,t,n){function r(e,t){return e.lineStart>=t}function i(e,t,n){var r=t.input.slice(t.start);return n&&(r=r.replace(p,\"$1 $3\")),e.test(r)}function s(e,t,n,r){var i=new e.constructor(e.options,e.input,t);if(n)for(var s in n)i[s]=n[s];var o=e,a=i;return[\"inFunction\",\"inAsyncFunction\",\"inAsync\",\"inGenerator\",\"inModule\"].forEach(function(e){e in o&&(a[e]=o[e])}),r&&(i.options.preserveParens=!0),i.nextToken(),i}function o(e,t){var n=function(){};e.extend(\"initialContext\",function(r){return function(){return this.options.ecmaVersion<7&&(n=function(t){e.raise(t.start,\"async/await keywords only available when ecmaVersion>=7\")}),this.reservedWords=new RegExp(this.reservedWords.toString().replace(/await|async/g,\"\").replace(\"|/\",\"/\").replace(\"/|\",\"/\").replace(\"||\",\"|\")),this.reservedWordsStrict=new RegExp(this.reservedWordsStrict.toString().replace(/await|async/g,\"\").replace(\"|/\",\"/\").replace(\"/|\",\"/\").replace(\"||\",\"|\")),this.reservedWordsStrictBind=new RegExp(this.reservedWordsStrictBind.toString().replace(/await|async/g,\"\").replace(\"|/\",\"/\").replace(\"/|\",\"/\").replace(\"||\",\"|\")),this.inAsyncFunction=t.inAsyncFunction,t.awaitAnywhere&&t.inAsyncFunction&&e.raise(node.start,\"The options awaitAnywhere and inAsyncFunction are mutually exclusive\"),r.apply(this,arguments)}}),e.extend(\"shouldParseExportStatement\",function(e){return function(){return!(\"name\"!==this.type.label||\"async\"!==this.value||!i(c,this))||e.apply(this,arguments)}}),e.extend(\"parseStatement\",function(e){return function(n,r){var s=this.start,o=this.startLoc;if(\"name\"===this.type.label)if(i(c,this,!0)){var a=this.inAsyncFunction;try{this.inAsyncFunction=!0,this.next();var l=this.parseStatement(n,r);return l.async=!0,l.start=s,l.loc&&(l.loc.start=o),l.range&&(l.range[0]=s),l}finally{this.inAsyncFunction=a}}else if(\"object\"==typeof t&&t.asyncExits&&i(u,this)){this.next();var l=this.parseStatement(n,r);return l.async=!0,l.start=s,l.loc&&(l.loc.start=o),l.range&&(l.range[0]=s),l}return e.apply(this,arguments)}}),e.extend(\"parseIdent\",function(e){return function(t){var n=e.apply(this,arguments);return this.inAsyncFunction&&\"await\"===n.name&&0===arguments.length&&this.raise(n.start,\"'await' is reserved within async functions\"),n}}),e.extend(\"parseExprAtom\",function(e){return function(i){var o,u=this.start,c=this.startLoc,p=e.apply(this,arguments);if(\"Identifier\"===p.type)if(\"async\"!==p.name||r(this,p.end)){if(\"await\"===p.name){var h=this.startNodeAt(p.start,p.loc&&p.loc.start);if(this.inAsyncFunction)return o=this.parseExprSubscripts(),h.operator=\"await\",h.argument=o,h=this.finishNodeAt(h,\"AwaitExpression\",o.end,o.loc&&o.loc.end),n(h),h;if(this.input.slice(p.end).match(l))return t.awaitAnywhere||\"module\"!==this.options.sourceType?p:this.raise(p.start,\"'await' is reserved within modules\");if(\"object\"==typeof t&&t.awaitAnywhere&&(u=this.start,o=s(this,u-4).parseExprSubscripts(),o.end<=u))return o=s(this,u).parseExprSubscripts(),h.operator=\"await\",h.argument=o,h=this.finishNodeAt(h,\"AwaitExpression\",o.end,o.loc&&o.loc.end),this.pos=o.end,this.end=o.end,this.endLoc=o.endLoc,this.next(),n(h),h;if(!t.awaitAnywhere&&\"module\"===this.options.sourceType)return this.raise(p.start,\"'await' is reserved within modules\")}}else{var f=this.inAsyncFunction;try{this.inAsyncFunction=!0;var d=this,y=!1,m={parseFunctionBody:function(e,t){try{var n=y;return y=!0,d.parseFunctionBody.apply(this,arguments)}finally{y=n}},raise:function(){try{return d.raise.apply(this,arguments)}catch(e){throw y?e:a}}};if(o=s(this,this.start,m,!0).parseExpression(),\"SequenceExpression\"===o.type&&(o=o.expressions[0]),\"CallExpression\"===o.type&&(o=o.callee),\"FunctionExpression\"===o.type||\"FunctionDeclaration\"===o.type||\"ArrowFunctionExpression\"===o.type)return o=s(this,this.start,m).parseExpression(),\"SequenceExpression\"===o.type&&(o=o.expressions[0]),\"CallExpression\"===o.type&&(o=o.callee),o.async=!0,o.start=u,o.loc&&(o.loc.start=c),o.range&&(o.range[0]=u),this.pos=o.end,this.end=o.end,this.endLoc=o.endLoc,this.next(),n(o),o}catch(e){if(e!==a)throw e}finally{this.inAsyncFunction=f}}return p}}),e.extend(\"finishNodeAt\",function(e){return function(t,n,r,i){return t.__asyncValue&&(delete t.__asyncValue,t.value.async=!0),e.apply(this,arguments)}}),e.extend(\"finishNode\",function(e){return function(t,n){return t.__asyncValue&&(delete t.__asyncValue,t.value.async=!0),e.apply(this,arguments)}});e.extend(\"parsePropertyName\",function(e){return function(t){var i=(t.key&&t.key.name,e.apply(this,arguments));return\"Identifier\"!==i.type||\"async\"!==i.name||r(this,i.end)||this.input.slice(i.end).match(l)||(h.test(this.input.slice(i.end))?(i=e.apply(this,arguments),t.__asyncValue=!0):(n(t),\"set\"===t.kind&&this.raise(i.start,\"'set <member>(value)' cannot be be async\"),i=e.apply(this,arguments),\"Identifier\"===i.type&&\"set\"===i.name&&this.raise(i.start,\"'set <member>(value)' cannot be be async\"),t.__asyncValue=!0)),i}}),e.extend(\"parseClassMethod\",function(e){return function(t,n,r){var i;n.__asyncValue&&(\"constructor\"===n.kind&&this.raise(n.start,\"class constructor() cannot be be async\"),i=this.inAsyncFunction,this.inAsyncFunction=!0);var s=e.apply(this,arguments);return this.inAsyncFunction=i,s}}),e.extend(\"parseMethod\",function(e){return function(t){var n;this.__currentProperty&&this.__currentProperty.__asyncValue&&(n=this.inAsyncFunction,this.inAsyncFunction=!0);var r=e.apply(this,arguments);return this.inAsyncFunction=n,r}}),e.extend(\"parsePropertyValue\",function(e){return function(t,n,r,i,s,o){var a=this.__currentProperty;this.__currentProperty=t;var u;t.__asyncValue&&(u=this.inAsyncFunction,this.inAsyncFunction=!0);var c=e.apply(this,arguments);return this.inAsyncFunction=u,this.__currentProperty=a,c}})}var a={},u=/^async[\\t ]+(return|throw)/,c=/^async[\\t ]+function/,l=/^\\s*[():;]/,p=/([^\\n])\\/\\*(\\*(?!\\/)|[^\\n*])*\\*\\/([^\\n])/g,h=/\\s*(get|set)\\s*\\(/;t.exports=o},{}],3:[function(e,t,n){function r(e,t){return e.lineStart>=t}function i(e,t,n){var r=t.input.slice(t.start);return n&&(r=r.replace(c,\"$1 $3\")),e.test(r)}function s(e,t,n){var r=new e.constructor(e.options,e.input,t);if(n)for(var i in n)r[i]=n[i];var s=e,o=r;return[\"inFunction\",\"inAsync\",\"inGenerator\",\"inModule\"].forEach(function(e){e in s&&(o[e]=s[e])}),r.nextToken(),r}function o(e,t){t&&\"object\"==typeof t||(t={}),e.extend(\"parse\",function(n){return function(){return this.inAsync=t.inAsyncFunction,t.awaitAnywhere&&t.inAsyncFunction&&e.raise(node.start,\"The options awaitAnywhere and inAsyncFunction are mutually exclusive\"),n.apply(this,arguments)}}),e.extend(\"parseStatement\",function(e){return function(n,r){var s=this.start,o=this.startLoc;if(\"name\"===this.type.label&&t.asyncExits&&i(a,this)){this.next();var u=this.parseStatement(n,r);return u.async=!0,u.start=s,u.loc&&(u.loc.start=o),u.range&&(u.range[0]=s),u}return e.apply(this,arguments)}}),e.extend(\"parseIdent\",function(e){return function(n){return\"module\"===this.options.sourceType&&this.options.ecmaVersion>=8&&t.awaitAnywhere?e.call(this,!0):e.apply(this,arguments)}}),e.extend(\"parseExprAtom\",function(e){var n={};return function(r){var i,o=this.start,a=(this.startLoc,e.apply(this,arguments));if(\"Identifier\"===a.type&&\"await\"===a.name&&!this.inAsync&&t.awaitAnywhere){var u=this.startNodeAt(a.start,a.loc&&a.loc.start);o=this.start;var c={raise:function(){try{return pp.raise.apply(this,arguments)}catch(e){throw n}}};try{if(i=s(this,o-4,c).parseExprSubscripts(),i.end<=o)return i=s(this,o,c).parseExprSubscripts(),u.argument=i,u=this.finishNodeAt(u,\"AwaitExpression\",i.end,i.loc&&i.loc.end),this.pos=i.end,this.end=i.end,this.endLoc=i.endLoc,this.next(),u}catch(e){if(e===n)return a;throw e}}return a}});var n={undefined:!0,get:!0,set:!0,static:!0,async:!0,constructor:!0};e.extend(\"parsePropertyName\",function(e){return function(t){var i=t.key&&t.key.name,s=e.apply(this,arguments);\"get\"===this.value&&(t.__maybeStaticAsyncGetter=!0);return n[this.value]?s:(\"Identifier\"!==s.type||\"async\"!==s.name&&\"async\"!==i||r(this,s.end)||this.input.slice(s.end).match(u)?delete t.__maybeStaticAsyncGetter:\"set\"===t.kind||\"set\"===s.name?this.raise(s.start,\"'set <member>(value)' cannot be be async\"):(this.__isAsyncProp=!0,s=e.apply(this,arguments),\"Identifier\"===s.type&&\"set\"===s.name&&this.raise(s.start,\"'set <member>(value)' cannot be be async\")),s)}}),e.extend(\"parseClassMethod\",function(e){return function(t,n,r){var i=e.apply(this,arguments);return n.__maybeStaticAsyncGetter&&(delete n.__maybeStaticAsyncGetter,\"get\"!==n.key.name&&(n.kind=\"get\")),i}}),e.extend(\"parseFunctionBody\",function(e){return function(t,n){var r=this.inAsync;this.__isAsyncProp&&(t.async=!0,this.inAsync=!0,delete this.__isAsyncProp);var i=e.apply(this,arguments);return this.inAsync=r,i}})}var a=/^async[\\t ]+(return|throw)/,u=/^\\s*[):;]/,c=/([^\\n])\\/\\*(\\*(?!\\/)|[^\\n*])*\\*\\/([^\\n])/g;t.exports=o},{}],4:[function(e,t,n){\"use strict\";function r(e){var t=e.length;if(t%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");return\"=\"===e[t-2]?2:\"=\"===e[t-1]?1:0}function i(e){return 3*e.length/4-r(e)}function s(e){var t,n,i,s,o,a,u=e.length;o=r(e),a=new p(3*u/4-o),i=o>0?u-4:u;var c=0;for(t=0,n=0;t<i;t+=4,n+=3)s=l[e.charCodeAt(t)]<<18|l[e.charCodeAt(t+1)]<<12|l[e.charCodeAt(t+2)]<<6|l[e.charCodeAt(t+3)],a[c++]=s>>16&255,a[c++]=s>>8&255,a[c++]=255&s;return 2===o?(s=l[e.charCodeAt(t)]<<2|l[e.charCodeAt(t+1)]>>4,a[c++]=255&s):1===o&&(s=l[e.charCodeAt(t)]<<10|l[e.charCodeAt(t+1)]<<4|l[e.charCodeAt(t+2)]>>2,a[c++]=s>>8&255,a[c++]=255&s),a}function o(e){return c[e>>18&63]+c[e>>12&63]+c[e>>6&63]+c[63&e]}function a(e,t,n){for(var r,i=[],s=t;s<n;s+=3)r=(e[s]<<16)+(e[s+1]<<8)+e[s+2],i.push(o(r));return i.join(\"\")}function u(e){for(var t,n=e.length,r=n%3,i=\"\",s=[],o=0,u=n-r;o<u;o+=16383)s.push(a(e,o,o+16383>u?u:o+16383));return 1===r?(t=e[n-1],i+=c[t>>2],i+=c[t<<4&63],i+=\"==\"):2===r&&(t=(e[n-2]<<8)+e[n-1],i+=c[t>>10],i+=c[t>>4&63],i+=c[t<<2&63],i+=\"=\"),s.push(i),s.join(\"\")}n.byteLength=i,n.toByteArray=s,n.fromByteArray=u;for(var c=[],l=[],p=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,h=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",f=0,d=h.length;f<d;++f)c[f]=h[f],l[h.charCodeAt(f)]=f;l[\"-\".charCodeAt(0)]=62,l[\"_\".charCodeAt(0)]=63},{}],5:[function(e,t,n){},{}],6:[function(e,t,n){\"use strict\";function r(e){if(e>H)throw new RangeError(\"Invalid typed array length\");var t=new Uint8Array(e);return t.__proto__=i.prototype,t}function i(e,t,n){if(\"number\"==typeof e){if(\"string\"==typeof t)throw new Error(\"If encoding is specified then the first argument must be a string\");return u(e)}return s(e,t,n)}function s(e,t,n){if(\"number\"==typeof e)throw new TypeError('\"value\" argument must not be a number');return e instanceof ArrayBuffer?p(e,t,n):\"string\"==typeof e?c(e,t):h(e)}function o(e){if(\"number\"!=typeof e)throw new TypeError('\"size\" argument must be a number');if(e<0)throw new RangeError('\"size\" argument must not be negative')}function a(e,t,n){return o(e),e<=0?r(e):void 0!==t?\"string\"==typeof n?r(e).fill(t,n):r(e).fill(t):r(e)}function u(e){return o(e),r(e<0?0:0|f(e))}function c(e,t){if(\"string\"==typeof t&&\"\"!==t||(t=\"utf8\"),!i.isEncoding(t))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|y(e,t),s=r(n),o=s.write(e,t);return o!==n&&(s=s.slice(0,o)),s}function l(e){for(var t=e.length<0?0:0|f(e.length),n=r(t),i=0;i<t;i+=1)n[i]=255&e[i];return n}function p(e,t,n){if(t<0||e.byteLength<t)throw new RangeError(\"'offset' is out of bounds\");if(e.byteLength<t+(n||0))throw new RangeError(\"'length' is out of bounds\");var r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),r.__proto__=i.prototype,r}function h(e){if(i.isBuffer(e)){var t=0|f(e.length),n=r(t);return 0===n.length?n:(e.copy(n,0,0,t),n)}if(e){if(ArrayBuffer.isView(e)||\"length\"in e)return\"number\"!=typeof e.length||G(e.length)?r(0):l(e);if(\"Buffer\"===e.type&&Array.isArray(e.data))return l(e.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}function f(e){if(e>=H)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+H.toString(16)+\" bytes\");return 0|e}function d(e){return+e!=e&&(e=0),i.alloc(+e)}function y(e,t){if(i.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||e instanceof ArrayBuffer)return e.byteLength;\"string\"!=typeof e&&(e=\"\"+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return n;case\"utf8\":case\"utf-8\":case void 0:return V(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*n;case\"hex\":return n>>>1;case\"base64\":return z(e).length;default:if(r)return V(e).length;t=(\"\"+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return\"\";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return\"\";if(n>>>=0,t>>>=0,n<=t)return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return T(this,t,n);case\"utf8\":case\"utf-8\":return C(this,t,n);case\"ascii\":return P(this,t,n);case\"latin1\":case\"binary\":return N(this,t,n);case\"base64\":return _(this,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return F(this,t,n);default:if(r)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),r=!0}}function g(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,s){if(0===e.length)return-1;if(\"string\"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if(\"string\"==typeof t&&(t=i.from(t,r)),i.isBuffer(t))return 0===t.length?-1:b(e,t,n,r,s);if(\"number\"==typeof t)return t&=255,\"function\"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,r,s);throw new TypeError(\"val must be string, number or Buffer\")}function b(e,t,n,r,i){function s(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}var o=1,a=e.length,u=t.length;if(void 0!==r&&(\"ucs2\"===(r=String(r).toLowerCase())||\"ucs-2\"===r||\"utf16le\"===r||\"utf-16le\"===r)){if(e.length<2||t.length<2)return-1;o=2,a/=2,u/=2,n/=2}var c;if(i){var l=-1;for(c=n;c<a;c++)if(s(e,c)===s(t,-1===l?0:c-l)){if(-1===l&&(l=c),c-l+1===u)return l*o}else-1!==l&&(c-=c-l),l=-1}else for(n+u>a&&(n=a-u),c=n;c>=0;c--){for(var p=!0,h=0;h<u;h++)if(s(e,c+h)!==s(t,h)){p=!1;break}if(p)return c}return-1}function x(e,t,n,r){n=Number(n)||0;var i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;var s=t.length;if(s%2!=0)throw new TypeError(\"Invalid hex string\");r>s/2&&(r=s/2);for(var o=0;o<r;++o){var a=parseInt(t.substr(2*o,2),16);if(G(a))return o;e[n+o]=a}return o}function w(e,t,n,r){return W(V(t,e.length-n),e,n,r)}function E(e,t,n,r){return W(q(t),e,n,r)}function S(e,t,n,r){return E(e,t,n,r)}function k(e,t,n,r){return W(z(t),e,n,r)}function A(e,t,n,r){return W(U(t,e.length-n),e,n,r)}function _(e,t,n){return 0===t&&n===e.length?J.fromByteArray(e):J.fromByteArray(e.slice(t,n))}function C(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var s=e[i],o=null,a=s>239?4:s>223?3:s>191?2:1;if(i+a<=n){var u,c,l,p;switch(a){case 1:s<128&&(o=s);break;case 2:u=e[i+1],128==(192&u)&&(p=(31&s)<<6|63&u)>127&&(o=p);break;case 3:u=e[i+1],c=e[i+2],128==(192&u)&&128==(192&c)&&(p=(15&s)<<12|(63&u)<<6|63&c)>2047&&(p<55296||p>57343)&&(o=p);break;case 4:u=e[i+1],c=e[i+2],l=e[i+3],128==(192&u)&&128==(192&c)&&128==(192&l)&&(p=(15&s)<<18|(63&u)<<12|(63&c)<<6|63&l)>65535&&p<1114112&&(o=p)}}null===o?(o=65533,a=1):o>65535&&(o-=65536,r.push(o>>>10&1023|55296),o=56320|1023&o),r.push(o),i+=a}return L(r)}function L(e){var t=e.length;if(t<=Z)return String.fromCharCode.apply(String,e);for(var n=\"\",r=0;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=Z));return n}function P(e,t,n){var r=\"\";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function N(e,t,n){var r=\"\";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function T(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var i=\"\",s=t;s<n;++s)i+=D(e[s]);return i}function F(e,t,n){for(var r=e.slice(t,n),i=\"\",s=0;s<r.length;s+=2)i+=String.fromCharCode(r[s]+256*r[s+1]);return i}function $(e,t,n){if(e%1!=0||e<0)throw new RangeError(\"offset is not uint\");if(e+t>n)throw new RangeError(\"Trying to access beyond buffer length\")}function O(e,t,n,r,s,o){if(!i.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(t>s||t<o)throw new RangeError('\"value\" argument is out of bounds');if(n+r>e.length)throw new RangeError(\"Index out of range\")}function B(e,t,n,r,i,s){if(n+r>e.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"Index out of range\")}function R(e,t,n,r,i){return t=+t,n>>>=0,i||B(e,t,n,4,3.4028234663852886e38,-3.4028234663852886e38),Y.write(e,t,n,r,23,4),n+4}function I(e,t,n,r,i){return t=+t,n>>>=0,i||B(e,t,n,8,1.7976931348623157e308,-1.7976931348623157e308),Y.write(e,t,n,r,52,8),n+8}function j(e){if(e=M(e).replace(Q,\"\"),e.length<2)return\"\";for(;e.length%4!=0;)e+=\"=\";return e}function M(e){return e.trim?e.trim():e.replace(/^\\s+|\\s+$/g,\"\")}function D(e){return e<16?\"0\"+e.toString(16):e.toString(16)}function V(e,t){t=t||1/0;for(var n,r=e.length,i=null,s=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&s.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&s.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error(\"Invalid code point\");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function q(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function U(e,t){for(var n,r,i,s=[],o=0;o<e.length&&!((t-=2)<0);++o)n=e.charCodeAt(o),r=n>>8,i=n%256,s.push(i),s.push(r);return s}function z(e){return J.toByteArray(j(e))}function W(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function G(e){return e!==e}var J=e(\"base64-js\"),Y=e(\"ieee754\");n.Buffer=i,n.SlowBuffer=d,n.INSPECT_MAX_BYTES=50;var H=2147483647;n.kMaxLength=H,i.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(e){return!1}}(),i.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),\"undefined\"!=typeof Symbol&&Symbol.species&&i[Symbol.species]===i&&Object.defineProperty(i,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),i.poolSize=8192,i.from=function(e,t,n){return s(e,t,n)},i.prototype.__proto__=Uint8Array.prototype,i.__proto__=Uint8Array,i.alloc=function(e,t,n){return a(e,t,n)},i.allocUnsafe=function(e){return u(e)},i.allocUnsafeSlow=function(e){return u(e)},i.isBuffer=function(e){return null!=e&&!0===e._isBuffer},i.compare=function(e,t){if(!i.isBuffer(e)||!i.isBuffer(t))throw new TypeError(\"Arguments must be Buffers\");if(e===t)return 0;for(var n=e.length,r=t.length,s=0,o=Math.min(n,r);s<o;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},i.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},i.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===e.length)return i.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=i.allocUnsafe(t),s=0;for(n=0;n<e.length;++n){var o=e[n];if(!i.isBuffer(o))throw new TypeError('\"list\" argument must be an Array of Buffers');o.copy(r,s),s+=o.length}return r},i.byteLength=y,i.prototype._isBuffer=!0,i.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},i.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},i.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},i.prototype.toString=function(){var e=this.length;return 0===e?\"\":0===arguments.length?C(this,0,e):m.apply(this,arguments)},i.prototype.equals=function(e){if(!i.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===i.compare(this,e)},i.prototype.inspect=function(){var e=\"\",t=n.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString(\"hex\",0,t).match(/.{2}/g).join(\" \"),this.length>t&&(e+=\" ... \")),\"<Buffer \"+e+\">\"},i.prototype.compare=function(e,t,n,r,s){if(!i.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError(\"out of range index\");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,s>>>=0,this===e)return 0;for(var o=s-r,a=n-t,u=Math.min(o,a),c=this.slice(r,s),l=e.slice(t,n),p=0;p<u;++p)if(c[p]!==l[p]){o=c[p],a=l[p];break}return o<a?-1:a<o?1:0},i.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},i.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},i.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},i.prototype.write=function(e,t,n,r){if(void 0===t)r=\"utf8\",n=this.length,t=0;else if(void 0===n&&\"string\"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r=\"utf8\")):(r=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");r||(r=\"utf8\");for(var s=!1;;)switch(r){case\"hex\":return x(this,e,t,n);case\"utf8\":case\"utf-8\":return w(this,e,t,n);case\"ascii\":return E(this,e,t,n);case\"latin1\":case\"binary\":return S(this,e,t,n);case\"base64\":return k(this,e,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return A(this,e,t,n);default:if(s)throw new TypeError(\"Unknown encoding: \"+r);r=(\"\"+r).toLowerCase(),s=!0}},i.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var Z=4096;i.prototype.slice=function(e,t){var n=this.length;e=~~e,t=void 0===t?n:~~t,e<0?(e+=n)<0&&(e=0):e>n&&(e=n),t<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return r.__proto__=i.prototype,r},i.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||$(e,t,this.length);for(var r=this[e],i=1,s=0;++s<t&&(i*=256);)r+=this[e+s]*i;return r},i.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||$(e,t,this.length);for(var r=this[e+--t],i=1;t>0&&(i*=256);)r+=this[e+--t]*i;return r},i.prototype.readUInt8=function(e,t){return e>>>=0,t||$(e,1,this.length),this[e]},i.prototype.readUInt16LE=function(e,t){return e>>>=0,t||$(e,2,this.length),this[e]|this[e+1]<<8},i.prototype.readUInt16BE=function(e,t){return e>>>=0,t||$(e,2,this.length),this[e]<<8|this[e+1]},i.prototype.readUInt32LE=function(e,t){return e>>>=0,t||$(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},i.prototype.readUInt32BE=function(e,t){return e>>>=0,t||$(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},i.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||$(e,t,this.length);for(var r=this[e],i=1,s=0;++s<t&&(i*=256);)r+=this[e+s]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},i.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||$(e,t,this.length);for(var r=t,i=1,s=this[e+--r];r>0&&(i*=256);)s+=this[e+--r]*i;return i*=128,s>=i&&(s-=Math.pow(2,8*t)),s},i.prototype.readInt8=function(e,t){return e>>>=0,t||$(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},i.prototype.readInt16LE=function(e,t){e>>>=0,t||$(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt16BE=function(e,t){e>>>=0,t||$(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt32LE=function(e,t){return e>>>=0,t||$(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},i.prototype.readInt32BE=function(e,t){return e>>>=0,t||$(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},i.prototype.readFloatLE=function(e,t){return e>>>=0,t||$(e,4,this.length),Y.read(this,e,!0,23,4)},i.prototype.readFloatBE=function(e,t){return e>>>=0,t||$(e,4,this.length),Y.read(this,e,!1,23,4)},i.prototype.readDoubleLE=function(e,t){return e>>>=0,t||$(e,8,this.length),Y.read(this,e,!0,52,8)},i.prototype.readDoubleBE=function(e,t){return e>>>=0,t||$(e,8,this.length),Y.read(this,e,!1,52,8)},i.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){O(this,e,t,n,Math.pow(2,8*n)-1,0)}var i=1,s=0;for(this[t]=255&e;++s<n&&(i*=256);)this[t+s]=e/i&255;return t+n},i.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){O(this,e,t,n,Math.pow(2,8*n)-1,0)}var i=n-1,s=1;for(this[t+i]=255&e;--i>=0&&(s*=256);)this[t+i]=e/s&255;return t+n},i.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,1,255,0),this[t]=255&e,t+1},i.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},i.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},i.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},i.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},i.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var i=Math.pow(2,8*n-1);O(this,e,t,n,i-1,-i)}var s=0,o=1,a=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===a&&0!==this[t+s-1]&&(a=1),this[t+s]=(e/o>>0)-a&255;return t+n},i.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var i=Math.pow(2,8*n-1);O(this,e,t,n,i-1,-i)}var s=n-1,o=1,a=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===a&&0!==this[t+s+1]&&(a=1),this[t+s]=(e/o>>0)-a&255;return t+n},i.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},i.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},i.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},i.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},i.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||O(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},i.prototype.writeFloatLE=function(e,t,n){return R(this,e,t,!0,n)},i.prototype.writeFloatBE=function(e,t,n){return R(this,e,t,!1,n)},i.prototype.writeDoubleLE=function(e,t,n){return I(this,e,t,!0,n)},i.prototype.writeDoubleBE=function(e,t,n){return I(this,e,t,!1,n)},i.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(n<0||n>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(r<0)throw new RangeError(\"sourceEnd out of bounds\");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,s=r-n;if(this===e&&n<t&&t<r)for(i=s-1;i>=0;--i)e[i+t]=this[i+n];else if(s<1e3)for(i=0;i<s;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},i.prototype.fill=function(e,t,n,r){if(\"string\"==typeof e){if(\"string\"==typeof t?(r=t,t=0,n=this.length):\"string\"==typeof n&&(r=n,n=this.length),1===e.length){var s=e.charCodeAt(0);s<256&&(e=s)}if(void 0!==r&&\"string\"!=typeof r)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof r&&!i.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r)}else\"number\"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError(\"Out of range index\");if(n<=t)return this;t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0);var o;if(\"number\"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var a=i.isBuffer(e)?e:new i(e,r),u=a.length;for(o=0;o<n-t;++o)this[o+t]=a[o%u]}return this};var Q=/[^+\\/0-9A-Za-z-_]/g},{\"base64-js\":4,ieee754:7}],7:[function(e,t,n){n.read=function(e,t,n,r,i){var s,o,a=8*i-r-1,u=(1<<a)-1,c=u>>1,l=-7,p=n?i-1:0,h=n?-1:1,f=e[t+p];for(p+=h,s=f&(1<<-l)-1,f>>=-l,l+=a;l>0;s=256*s+e[t+p],p+=h,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=r;l>0;o=256*o+e[t+p],p+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,r),s-=c}return(f?-1:1)*o*Math.pow(2,s-r)},n.write=function(e,t,n,r,i,s){var o,a,u,c=8*s-i-1,l=(1<<c)-1,p=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,f=r?0:s-1,d=r?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),t+=o+p>=1?h/u:h*Math.pow(2,1-p),t*u>=2&&(o++,u/=2),o+p>=l?(a=0,o=l):o+p>=1?(a=(t*u-1)*Math.pow(2,i),o+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,i),o=0));i>=8;e[n+f]=255&a,f+=d,a/=256,i-=8);for(o=o<<i|a,c+=i;c>0;e[n+f]=255&o,f+=d,o/=256,c-=8);e[n+f-d]|=128*y}},{}],8:[function(e,t,n){\"use strict\";function r(e,t){if(Function.prototype.$asyncspawn||Object.defineProperty(Function.prototype,\"$asyncspawn\",{value:r,enumerable:!1,configurable:!0,writable:!0}),this instanceof Function){var n=this;return new e(function(e,r){function i(t,n){var o;try{if(o=t.call(s,n),o.done){if(o.value!==e){if(o.value&&o.value===o.value.then)return o.value(e,r);e&&e(o.value),e=null}return}o.value.then?o.value.then(function(e){i(s.next,e)},function(e){i(s.throw,e)}):i(s.next,o.value)}catch(e){return r&&r(e),void(r=null)}}var s=n.call(t,e,r);i(s.next)})}}var i=function(e,t){for(var n=t.toString(),r=\"return \"+n,i=n.match(/.*\\(([^)]*)\\)/)[1],s=/['\"]!!!([^'\"]*)['\"]/g,o=[];;){var a=s.exec(r);if(!a)break;o.push(a)}return o.reverse().forEach(function(t){r=r.slice(0,t.index)+e[t[1]]+r.substr(t.index+t[0].length)}),r=r.replace(/\\/\\*[^*]*\\*\\//g,\" \").replace(/\\s+/g,\" \"),new Function(i,r)()}({zousan:e(\"./zousan\").toString(),thenable:e(\"./thenableFactory\").toString()},function e(t,n){function r(){return i.apply(t,arguments)}Function.prototype.$asyncbind||Object.defineProperty(Function.prototype,\"$asyncbind\",{value:e,enumerable:!1,configurable:!0,writable:!0}),e.trampoline||(e.trampoline=function(e,t,n,r,i){return function s(o){for(;o;){if(o.then)return o=o.then(s,r),i?void 0:o;try{\n    3: if(o.pop){if(o.length)return o.pop()?t.call(e):o;o=n}else o=o.call(e)}catch(e){return r(e)}}}}),e.LazyThenable||(e.LazyThenable=\"!!!thenable\"(),e.EagerThenable=e.Thenable=(e.EagerThenableFactory=\"!!!zousan\")());var i=this;switch(n){case!0:return new e.Thenable(r);case 0:return new e.LazyThenable(r);case void 0:return r.then=r,r;default:return function(){try{return i.apply(t,arguments)}catch(e){return n(e)}}}});i(),r(),t.exports={$asyncbind:i,$asyncspawn:r}},{\"./thenableFactory\":9,\"./zousan\":10}],9:[function(e,t,n){t.exports=function(){function e(e){return e&&e instanceof Object&&\"function\"==typeof e.then}function t(n,r,i){try{var s=i?i(r):r;if(n===s)return n.reject(new TypeError(\"Promise resolution loop\"));e(s)?s.then(function(e){t(n,e)},function(e){n.reject(e)}):n.resolve(s)}catch(e){n.reject(e)}}function n(){}function r(e){}function i(e,t){this.resolve=e,this.reject=t}function s(r,i){var s=new n;try{this._resolver(function(n){return e(n)?n.then(r,i):t(s,n,r)},function(e){t(s,e,i)})}catch(e){t(s,e,i)}return s}function o(e){this._resolver=e,this.then=s}return n.prototype={resolve:r,reject:r,then:i},o.resolve=function(e){return o.isThenable(e)?e:{then:function(t){return t(e)}}},o.isThenable=e,o}},{}],10:[function(e,t,n){(function(e){\"use strict\";t.exports=function(t){function n(e){if(e){var t=this;e(function(e){t.resolve(e)},function(e){t.reject(e)})}}function r(e,t){if(\"function\"==typeof e.y)try{var n=e.y.call(void 0,t);e.p.resolve(n)}catch(t){e.p.reject(t)}else e.p.resolve(t)}function i(e,t){if(\"function\"==typeof e.n)try{var n=e.n.call(void 0,t);e.p.resolve(n)}catch(t){e.p.reject(t)}else e.p.reject(t)}t=t||\"object\"==typeof e&&e.nextTick||\"function\"==typeof setImmediate&&setImmediate||function(e){setTimeout(e,0)};var s=function(){function e(){for(;n.length-r;){try{n[r]()}catch(e){}n[r++]=void 0,r===i&&(n.splice(0,i),r=0)}}var n=[],r=0,i=1024;return function(i){n.push(i),n.length-r==1&&t(e)}}();return n.prototype={resolve:function(e){if(void 0===this.state){if(e===this)return this.reject(new TypeError(\"Attempt to resolve promise with self\"));var t=this;if(e&&(\"function\"==typeof e||\"object\"==typeof e))try{var n=0,i=e.then;if(\"function\"==typeof i)return void i.call(e,function(e){n++||t.resolve(e)},function(e){n++||t.reject(e)})}catch(e){return void(n||this.reject(e))}this.state=r,this.v=e,t.c&&s(function(){for(var n=0,i=t.c.length;n<i;n++)r(t.c[n],e)})}},reject:function(e){if(void 0===this.state){this.state=i,this.v=e;var t=this.c;t&&s(function(){for(var n=0,r=t.length;n<r;n++)i(t[n],e)})}},then:function(e,t){var r=new n,i={y:e,n:t,p:r};if(void 0===this.state)this.c?this.c.push(i):this.c=[i];else{var o=this.state,a=this.v;s(function(){o(i,a)})}return r}},n.resolve=function(e){if(e&&e instanceof n)return e;var t=new n;return t.resolve(e),t},n.reject=function(e){if(e&&e instanceof n)return e;var t=new n;return t.reject(e),t},n.version=\"2.3.3-nodent\",n}}).call(this,e(\"_process\"))},{_process:31}],11:[function(e,t,n){t.exports=function(e,t,n,r){var i=[[],[]],s=[/(.*)(<script[^>]*>)(.*)/i,/(.*)(<\\/script>)(.*)/i],o=0,a=!0;t=t.split(\"\\n\");for(var u=0;u<t.length;){var c=s[o].exec(t[u]);c&&0==o&&c[2].match(\"src=\")&&(c=null),c?(1==o?(i[o].push(c[1]),pr=e.compile(i[1].join(\"\\n\"),n,3,r.compiler).code,a&&r.runtime&&(a=!1,r.runtime&&i[0].push(\"Function.prototype.$asyncbind = \"+e.$asyncbind.toString()+\";\\n\")),i[0].push(pr),i[1]=[],o=0,i[o].push(c[2])):(i[o].push(c[1]),i[o].push(c[2]),o=1),t[u]=c[3]):i[o].push(t[u++])}return i[0].join(\"\\n\")}},{}],12:[function(e,t,n){(function(n){\"use strict\";function r(e){if(Array.isArray(e))return e.map(function(e){return r(e)});var t={};return Object.keys(e).forEach(function(n){t[n]=e[n]}),t}function i(e,t){e!==t&&(e.__proto__=Object.getPrototypeOf(t),Object.keys(e).forEach(function(t){t in g||delete e[t]}),Object.keys(t).forEach(function(n){n in e||(e[n]=t[n])}))}function s(){}function o(e){return e?(b.node=e,b):{}}function a(e,t,n){if(!e)return null;if(t&&\"object\"==typeof t){var r=Object.keys(t);return a(e,function(e){return r.every(function(n){return e[n]==t[n]})})}var i,s={};if(Array.isArray(e)){for(var u=0;u<e.length;u++)if(i=a(e[u],t))return i;return null}var c=n;\"function\"!=typeof n&&(c=n?function(e){return!0}:function(e){return!o(e).isScope});try{y.treeWalker(e,function(n,r,i){if(t(n))throw s.path=i,s;(n===e||c(n))&&r()})}catch(e){if(e===s)return s.path;throw e}return null}function u(e){return a(e,function(e){return\"AwaitExpression\"===e.type&&!e.$hidden})}function c(e){return a(e,function(e){return\"AwaitExpression\"===e.type&&!e.$hidden},function(e){var t=o(e);return!t.isBlockStatement&&!t.isScope})}function l(e){return a(e,{type:\"ThisExpression\"})}function p(e){if(null===e)return{type:\"NullLiteral\",value:null,raw:\"null\"};if(!0===e||!1===e)return{type:\"BooleanLiteral\",value:e,raw:JSON.stringify(e)};if(e instanceof RegExp){var t=e.toString(),n=t.split(\"/\");return{type:\"RegExpLiteral\",value:e,raw:t,pattern:n[1],flags:n[2]}}return\"number\"==typeof e?{type:\"NumericLiteral\",value:e,raw:JSON.stringify(e)}:{type:\"StringLiteral\",value:e,raw:JSON.stringify(e)}}function h(e,t){return{type:\"Identifier\",name:e,loc:t}}function f(e){var t={};for(var n in e)t[n]=\"string\"==typeof e[n]?h(e[n]):e[n];return t}function d(e,t,n,d){function m(e,t){if(n.es6target&&!e.id&&!t&&0===e.type.indexOf(\"Function\"))return e.type=\"ArrowFunctionExpression\",e;if(n.noRuntime){if(t){if(o(t).isLiteral)throw new Error(\"Nodent: 'noRuntime' option only compatible with -promise and -engine modes\");e.body.body=y.part(\"try {$:0} catch($2) {return $1($2)}\",[r(e.body),t,h(\"$boundEx\")]).body}else if(n.es6target&&!e.id&&0===e.type.indexOf(\"Function\"))return e.type=\"ArrowFunctionExpression\",e;return n.es6target&&!e.id?(e.type=\"ArrowFunctionExpression\",e):y.part(\"$0.bind(this)\",[e]).expr}return t?y.part(\"$0.$1(this,$2)\",[e,me.asyncbind,t]).expr:y.part(\"$0.$1(this)\",[e,me.asyncbind]).expr}function g(e,t,n,r){return y.part(\"var $0 = $1\",[h(e),m({type:\"FunctionExpression\",id:null,generator:!1,expression:!1,params:n||[],body:Array.isArray(t)?{type:\"BlockStatement\",body:t}:t},r)]).body[0]}function v(t){return e.filename+(t&&t.loc&&t.loc.start?\"(\"+t.loc.start.line+\":\"+t.loc.start.column+\")\\t\":\"\\t\")}function b(e){return n.babelTree?p(e):{type:\"Literal\",value:e,raw:JSON.stringify(e)}}function x(e){return e?!n.babelTree||\"ClassMethod\"!==e.type&&\"ObjectMethod\"!==e.type?(!n.babelTree&&\"MethodDefinition\"===e.type||\"Property\"===e.type&&(e.method||\"get\"==e.kind||\"set\"==e.kind))&&o(e.value).isFunction?e.value:null:e:null}function w(e,t){if(!o(e).isFunction)throw new Error(\"Can only replace 'arguments' in functions\");return\"$usesArguments\"in e||(y.treeWalker(e,function(t,r,i){\"Identifier\"===t.type&&\"arguments\"===t.name?(i[0].parent.shorthand&&(i[0].parent.shorthand=!1,i[0].parent.key=h(\"arguments\"),e.$usesArguments=!0),\"key\"!==i[0].field&&(t.name=n.$arguments,e.$usesArguments=!0)):t!==e&&o(t).isFunction?\"ArrowFunctionExpression\"===t.type&&(w(t),e.$usesArguments=e.$usesArguments||t.$usesArguments):r()}),e.$usesArguments=e.$usesArguments||!1),e.$usesArguments&&\"ArrowFunctionExpression\"!==e.type}function E(e){return\"string\"!=typeof e&&(e=e.type.replace(/Statement|Expression/g,\"\")),n.generatedSymbolPrefix+e+\"_\"+ye++}function S(e,t){return e&&(e.$exit=f({$error:t.$error,$return:t.$return})),e}function k(e){for(var t=0;t<e.length;t++){if(e[t].self.$exit)return e[t].self;if(e[t].parent&&e[t].parent.$exit)return e[t].parent}return null}function A(e,t){var n=k(e);if(n)return n.$exit;if(t)for(var r=0;r<t.length;r++)if(t[r])return f(t[r]);return null}function _(e,t){var r=!(n.promises||n.generators||n.engine)&&n.lazyThenables;ce(e),oe(e),M(e),Q(e),Z(e),(r?Y:s)(e),O(e),$(e),U(e,[q,r?s:J,R,I,B]),z(e,t),le(e),fe(e)}function C(e,t){var n={$continuation:!0,type:e?\"FunctionDeclaration\":\"FunctionExpression\",id:e?\"string\"==typeof e?h(e):e:void 0,params:[],body:{type:\"BlockStatement\",body:r(t)}};return e&&(de[e]={def:n}),n}function L(e){return{type:\"AwaitExpression\",argument:Q({type:\"FunctionExpression\",generator:!1,expression:!1,async:!0,params:[],body:{type:\"BlockStatement\",body:e}}).body.body[0].argument}}function P(e,t){\"string\"==typeof e&&(e=h(e));var n=y.part(\"$0.call($1)\",[e,[{type:\"ThisExpression\"}].concat(t||[])]).expr;return e.$thisCall=n,n.$thisCallName=e.name,n}function N(e,t){return{type:\"ReturnStatement\",argument:P(e,t)}}function T(e,t){return{type:\"CallExpression\",callee:h(e.$seh+\"Finally\"),arguments:t?[t]:[]}}function F(e,t){if(Array.isArray(e))return e.map(function(e){return F(e,t)});var r=0,i=0;return y.treeWalker(e,function(e,t,s){if(\"ReturnStatement\"!==e.type||e.$mapped){if(\"ThrowStatement\"===e.type){var a=o(e).isAsync;if(r>0){if(!a)return t(e);delete e.async}return void(!a&&i?t():(e.type=\"ReturnStatement\",e.$mapped=!0,e.argument={type:\"CallExpression\",callee:A(s,[n]).$error,arguments:[e.argument]}))}return\"TryStatement\"===e.type?(i++,t(e),void i--):o(e).isFunction?(r++,t(e),void r--):void t(e)}if(r>0){if(!o(e).isAsync)return t(e);delete e.async}return e.$mapped=!0,void(o(e.argument).isUnaryExpression&&\"void\"===e.argument.operator?e.argument=e.argument.argument:e.argument={type:\"CallExpression\",callee:A(s,[n]).$return,arguments:e.argument?[e.argument]:[]})},t)}function $(e,t){return Array.isArray(e)?e.map(function(e){return $(e,t)}):(y.treeWalker(e,function(e,t,n){if(t(),\"ConditionalExpression\"===e.type&&(u(e.alternate)||u(e.consequent))){h(E(\"condOp\"));i(e,L(y.part(\"if ($0) return $1 ; return $2\",[e.test,e.consequent,e.alternate]).body))}},t),e)}function O(e,t){return Array.isArray(e)?e.map(function(e){return O(e,t)}):(y.treeWalker(e,function(e,t,n){if(t(),\"LogicalExpression\"===e.type&&u(e.right)){var r,s=h(E(\"logical\"+(\"&&\"===e.operator?\"And\":\"Or\")));if(\"||\"===e.operator)r=\"var $0; if (!($0 = $1)) {$0 = $2} return $0\";else{if(\"&&\"!==e.operator)throw new Error(v(e)+\"Illegal logical operator: \"+e.operator);r=\"var $0; if ($0 = $1) {$0 = $2} return $0\"}i(e,L(y.part(r,[s,e.left,e.right]).body))}},t),e)}function B(e,t,n){if(\"SwitchCase\"!==e.type&&o(e).isBlockStatement)for(var r=0;r<e.body.length;){var i=e.body[r];if(\"SwitchCase\"!==i.type&&o(i).isBlockStatement){var s=he(i.body);if(s)if(c(i)){var a=E(i),u=e.body.splice(r+1,e.body.length-(r+1));if(u.length){var l=C(a,u);delete de[a],i.body.push(N(a)),e.body.push(l),r++}else r++}else r++;else e.body.splice.apply(e.body,[r,1].concat(i.body))}else r++}}function R(e,t,n){if(\"IfStatement\"===e.type&&u([e.consequent,e.alternate])){var s=E(e),a=t[0],c={type:\"BlockStatement\",body:[e]};if(\"index\"in a){var l=a.index,p=a.parent[a.field].splice(l+1,a.parent[a.field].length-(l+1));if(a.replace(c),p.length){var h=N(s);c.body.push(n(C(s,p))),[e.consequent,e.alternate].forEach(function(e){if(e){var t;t=o(e).isBlockStatement?e.body[e.body.length-1]:e,t&&\"ReturnStatement\"===t.type||(\"BlockStatement\"!==e.type&&i(e,{type:\"BlockStatement\",body:[r(e)]}),e.$deferred=!0,e.body.push(r(h))),n(e)}}),e.consequent&&e.alternate&&e.consequent.$deferred&&e.alternate.$deferred||c.body.push(r(h))}}else a.parent[a.field]=c}}function I(e,t,n){if(!e.$switched&&\"SwitchStatement\"===e.type&&u(e.cases)){e.$switched=!0;var i,s,o,a=t[0];if(\"index\"in a){var c=a.index+1;o=a.parent[a.field].splice(c,a.parent[a.field].length-c),o.length&&\"BreakStatement\"===o[o.length-1].type&&a.parent[a.field].push(o.pop()),i=E(e),s=N(i),a.parent[a.field].unshift(C(i,o)),a.parent[a.field].push(r(s))}return e.cases.forEach(function(e,t){if(\"SwitchCase\"!==e.type)throw new Error(\"switch contains non-case/default statement: \"+e.type);if(u(e.consequent)){var n=e.consequent[e.consequent.length-1];\"BreakStatement\"===n.type?e.consequent[e.consequent.length-1]=r(s):\"ReturnStatement\"===n.type||\"ThrowStatement\"===n.type||(d(v(e)+\"switch-case fall-through not supported - added break. See https://github.com/MatAtBread/nodent#differences-from-the-es7-specification\"),e.consequent.push(r(s)))}}),!0}}function j(e){return\"ReturnStatement\"===e.type||\"ThrowStatement\"===e.type}function M(t,r){return y.treeWalker(t,function(t,i,s){if(\"TryStatement\"===t.type&&!t.$seh&&(o(s[0].parent).isBlockStatement||(s[0].parent[s[0].field]={type:\"BlockStatement\",body:[t]}),t.$seh=E(\"Try\")+\"_\",t.$containedAwait=!!u(t),t.$finallyExit=t.finalizer&&V(s)&&!!a(t.finalizer.body,j),t.$containedAwait||t.$finallyExit)){t.$needsMapping=!r||!t.$finallyExit;var c=A(s,[n]);if(t.finalizer&&!t.handler){var l=h(E(\"exception\"));t.handler={type:\"CatchClause\",param:l,body:{type:\"BlockStatement\",body:[{type:\"ThrowStatement\",argument:l}]}}}if(!t.handler&&!t.finalizer){var p=new SyntaxError(v(t.value)+\"try requires catch and/or finally clause\",e.filename,t.start);throw p.pos=t.start,p.loc=t.loc.start,p}t.finalizer?(S(t.block,{$error:t.$seh+\"Catch\",$return:T(t,c.$return)}),S(t.handler,{$error:T(t,c.$error),$return:T(t,c.$return)})):S(t.block,{$error:t.$seh+\"Catch\",$return:c.$return})}i()}),t}function D(e,t){for(var n=0;n<e.length;n++)if(!o(e[n]).isDirective)return void e.splice.apply(e,[n,0].concat(t));e.splice.apply(e,[e.length,0].concat(t))}function V(e){for(var t=0;t<e.length;t++)if(o(e[t].self).isFunction)return e[t].self.async||e[t].self.$wasAsync;return!1}function q(t,i,s){if(t.$needsMapping){var o,a,u,c=i[0];if(!(\"index\"in c))throw new Error(e.filename+\" - malformed try/catch blocks\");var l=c.index+1,p=c.parent[c.field].splice(l,c.parent[c.field].length-l);if(p.length){a=t.$seh+\"Post\";var f=s(g(a,p,[],A(i,[n]).$error));c.parent[c.field].splice(c.index,0,f),o=y.part(\"return $0()\",[t.finalizer?T(t,h(a)):h(a)]).body[0]}else t.finalizer&&(o=N(T(t)));t.$mapped=!0,o&&(t.block.body.push(r(o)),t.handler.body.body.push(r(o)));var d=A(i,[n]);if(t.handler){var v=h(t.$seh+\"Catch\");u=r(t.handler.body);var b=g(v.name,u,[r(t.handler.param)],t.finalizer?T(t,d.$error):d.$error);t.handler.body.body=[{type:\"CallExpression\",callee:v,arguments:[r(t.handler.param)]}],c.parent[c.field].splice(c.index,0,b)}if(t.finalizer){var x={exit:h(t.$seh+\"Exit\"),value:h(t.$seh+\"Value\"),body:r(t.finalizer.body)},w=y.part(\"(function ($value) {                                             {$:body}                                                  return $exit && ($exit.call(this, $value));           })\",x).expr,E={type:\"VariableDeclaration\",kind:\"var\",declarations:[{type:\"VariableDeclarator\",id:h(t.$seh+\"Finally\"),init:m({type:\"FunctionExpression\",params:[x.exit],id:null,body:{type:\"BlockStatement\",body:[{type:\"ReturnStatement\",argument:m(w,d.$error)}]}})}]};D(c.parent[c.field],[E]);var S=y.part(\"return $0()\",[t.finalizer?T(t,h(a)):h(a)]).body[0];u.body[u.length-1]=S,t.block.body[t.block.body.length-1]=S,delete t.finalizer}}}function U(e,t,n){function r(e,n){return y.treeWalker(e,function(e,n,s){function o(e){return r(e,s)}i.indexOf(e)<0&&(i.push(e),t.forEach(function(t){t(e,s,o)})),n()},n)}var i=[];return r(e,n),e}function z(e,t,s){return y.treeWalker(e,function(e,a,c){if(\"IfStatement\"==e.type&&(\"BlockStatement\"!=e.consequent.type&&u(e.consequent)&&(e.consequent={type:\"BlockStatement\",body:[e.consequent]}),e.alternate&&\"BlockStatement\"!=e.alternate.type&&u(e.alternate)&&(e.alternate={type:\"BlockStatement\",body:[e.alternate]})),a(),o(e).isAwait){var l=e.loc;if(!(t=t||c.some(function(e){return e.self&&e.self.$wasAsync}))||\"warn\"===t){var p=v(e)+\"'await' used inside non-async function. \";n.promises?p+=\"'return' value Promise runtime-specific\":p+=\"'return' value from await is synchronous\",d(p+\". See https://github.com/MatAtBread/nodent#differences-from-the-es7-specification\")}var f=c[0].parent;\"LogicalExpression\"===f.type&&f.right===e&&d(v(e.argument)+\"'\"+printNode(f)+\"' on right of \"+f.operator+\" will always evaluate '\"+printNode(e.argument)+\"'\"),\"ConditionalExpression\"===f.type&&f.test!==e&&d(v(e.argument)+\"'\"+printNode(f)+\"' will always evaluate '\"+printNode(e.argument)+\"'\");var y=h(E(\"await\")),g=r(e.argument);i(e,y);for(var b,x,w=1;w<c.length;w++)if(x=o(c[w].self).isBlockStatement){b=c[w-1];break}if(!b)throw new Error(v(e)+\"Illegal await not contained in a statement\");var S,k,_=A(c,[s,n]),C=b.index,L=x.splice(C,x.length-C).slice(1);\"ReturnStatement\"===b.self.type&&\"CallExpression\"===b.self.argument.type&&1===b.self.argument.arguments.length&&b.self.argument.arguments[0].name===y.name?k=S=b.self.argument.callee:\"Identifier\"===b.self.type||b.self.name===y.name||\"ExpressionStatement\"===b.self.type&&\"Identifier\"===b.self.expression.type&&b.self.expression.name===y.name?S=L.length?{type:\"FunctionExpression\",params:[r(y)],body:z({type:\"BlockStatement\",body:r(L)},t,_)}:{type:\"FunctionExpression\",params:[],body:{type:\"BlockStatement\",body:[]}}:(L.unshift(b.self),S={type:\"FunctionExpression\",params:[r(y)],body:z({type:\"BlockStatement\",body:r(L)},t,_)}),k||(k=S?m(S,_.$error):{type:\"FunctionExpression\",params:[],body:{type:\"BlockStatement\",body:[]}}),n.wrapAwait&&(g={type:\"CallExpression\",arguments:[g],callee:n.promises||n.generators?{type:\"MemberExpression\",object:h(\"Promise\"),property:h(\"resolve\")}:{type:\"MemberExpression\",object:h(\"Object\"),property:h(\"$makeThenable\")}});var P={type:\"CallExpression\",callee:{type:\"MemberExpression\",object:g,property:h(\"then\",l),computed:!1},arguments:[k,_.$error]};x.push({loc:l,type:\"ReturnStatement\",argument:P})}return!0}),e}function W(e,t){var n=e.$label;delete e.$label;var r=h(E(\"idx\")),s=h(E(\"in\")),a=y.part(\"var $0,$1 = [];for ($0 in $2) $1.push($0)\",[r,s,e.right]).body,u=y.part(\"for ($0; $1.length;){ $2 = $1.shift(); $:3 ; }\",[e.left,s,\"VariableDeclaration\"===e.left.type?e.left.declarations[0].id:e.left,e.body]).body[0];u.$label=n;for(var c=0;c<t.length;c++)if(o(t[c].parent).isBlockStatement){t[c].parent[t[c].field].splice(t[c].index,0,a[0],a[1]);break}i(e,u)}function G(e,t){\"BlockStatement\"!==e.body.type&&(e.body={type:\"BlockStatement\",body:[e.body]});var n,r,i=y.part(\"[$0[Symbol.iterator]()]\",[e.right]).expr;if(\"VariableDeclaration\"===e.left.type){\"const\"===e.left.kind&&(e.left.kind=\"let\"),n=e.left.declarations[0].id;var s=ie(e.left.declarations[0].id);r=h(E(\"iterator_\"+s.join(\"_\"))),e.left.declarations=s.map(function(e){return{type:\"VariableDeclarator\",id:h(e)}}),e.left.declarations.push({type:\"VariableDeclarator\",id:r,init:i}),e.init=e.left}else{n=e.left,r=h(E(\"iterator_\"+n.name));var o={type:\"VariableDeclaration\",kind:\"var\",declarations:[{type:\"VariableDeclarator\",id:r,init:i}]};e.init=o}e.type=\"ForStatement\",e.test=y.part(\"!($0[1] = $0[0].next()).done && (($1 = $0[1].value) || true)\",[r,n]).expr,delete e.left,delete e.right}function J(e,t,r){function i(e){return\"AwaitExpression\"===e.type&&!e.$hidden||c&&(\"BreakStatement\"===e.type||\"ContinueStatement\"===e.type)&&e.label}var s=e.$depth;\"ForInStatement\"===e.type&&u(e)?W(e,t):\"ForOfStatement\"===e.type&&u(e)&&G(e,t);var c=t.some(function(e){return\"$label\"in e.self&&\"ForStatement\"===e.self.type&&e.self.$mapped});if(!e.$mapped&&o(e).isLoop&&a(e,i)){t[0].self.$mapped=!0;var l=[],p=e.init,f=e.test||b(!0),d=e.update,m=e.body;d&&(d={type:\"ExpressionStatement\",expression:d}),p&&(o(p).isStatement||(p={type:\"ExpressionStatement\",expression:p}),l.push(p));var g,v;e.$label?(v=e.$label.name,g=t[1]):(v=ye++,g=t[0]),v=n.generatedSymbolPrefix+\"Loop_\"+v;var x,w,E=h(v+\"_trampoline\"),S=h(v),k=d?h(v+\"_step\"):S,_=h(v+\"_exit\");h(\"q\"),h(\"$exception\");if(\"index\"in g){var L=g.index;w=g.parent[g.field].splice(L+1,g.parent[g.field].length-(L+1))}else w=[];x=C(_,w);var P={type:\"ReturnStatement\",argument:S},N={type:\"ReturnStatement\",argument:k},T={type:\"ReturnStatement\",argument:{type:\"ArrayExpression\",elements:[b(1)]}};y.treeWalker(m,function(e,t,n){if(o(e).isFunction||o(e).isLoop)return!0;if(\"BreakStatement\"===e.type||\"ContinueStatement\"===e.type)if(e.label)for(var r=(n.filter(function(e){return\"$label\"in e.self}).map(function(e,t){return e.self.$label&&e.self.$label.name})),i=[],s=0;s<r.length;s++){if(r[s]===e.label.name){\"BreakStatement\"===e.type&&i.push(b(1)),n[0].replace({type:\"ReturnStatement\",argument:{type:\"ArrayExpression\",elements:i.reverse()}});break}i.push(b(0))}else\"BreakStatement\"===e.type?n[0].replace(T):n[0].replace(N);else t()},t),m=\"BlockStatement\"===m.type?m.body.slice(0):[m],m=\"DoWhileStatement\"===e.type?m.concat({type:\"IfStatement\",test:{type:\"UnaryExpression\",argument:f,prefix:!0,operator:\"!\"},consequent:T,alternate:N}):[{type:\"IfStatement\",test:f,consequent:{type:\"BlockStatement\",body:m.concat(N)},alternate:T}],n.noRuntime&&l.push({type:\"VariableDeclaration\",declarations:[{type:\"VariableDeclarator\",id:E}],kind:\"var\"});var F,$=A(t,[n]).$error;F=n.noRuntime?y.part(n.es6target?\"($idTrampoline = ((q) => {     $$setMapped: while (q) {          if (q.then)  \"+(1===s?\"             return void q.then($idTrampoline, $exit); \":\"             return q.then($idTrampoline, $exit); \")+\"         try {              if (q.pop)                   if (q.length)                   return q.pop() ? $idContinuation.call(this) : q;               else                   q = $idStep;               else                   q = q.call(this)           } catch (_exception) {              return $exit(_exception);           }      } }))($idIter)\":\"($idTrampoline = (function (q) {     $$setMapped: while (q) {          if (q.then)  \"+(1===s?\"             return void q.then($idTrampoline, $exit); \":\"             return q.then($idTrampoline, $exit); \")+\"         try {              if (q.pop)                   if (q.length)                   return q.pop() ? $idContinuation.call(this) : q;               else                   q = $idStep;               else                   q = q.call(this)           } catch (_exception) {              return $exit(_exception);           }      } }).bind(this))($idIter)\",{setMapped:function(e){return e.$mapped=!0,e},idTrampoline:E,exit:$,idIter:S,idContinuation:_,idStep:k}).expr:y.part(\"(Function.$0.trampoline(this,$1,$2,$3,$5)($4))\",[me.asyncbind,_,k,$,S,b(1===s)]).expr,l.push({type:\"ReturnStatement\",argument:F}),l.push({$label:e.$label,type:\"FunctionDeclaration\",id:S,params:[],body:{type:\"BlockStatement\",body:m}}),d&&l.push({type:\"FunctionDeclaration\",id:k,params:[],body:{type:\"BlockStatement\",body:[d,P]}}),!p||\"VariableDeclaration\"!==p.type||\"let\"!==p.kind&&\"const\"!==p.kind?(l.push(x),t[0].replace(l.map(r))):(\"const\"===p.kind&&(p.kind=\"let\"),t[0].replace([{type:\"BlockStatement\",body:l.map(r)},r(x)]))}}function Y(e,t){return y.treeWalker(e,function(e,t,s){function a(e){return{type:\"ReturnStatement\",argument:{type:\"UnaryExpression\",operator:\"void\",prefix:!0,argument:P(e||S)}}}function c(e,t){if(\"BreakStatement\"===e.type)i(e,r(A(e.label&&n.generatedSymbolPrefix+\"Loop_\"+e.label.name+\"_exit\")));else if(\"ContinueStatement\"===e.type)i(e,r(a(e.label&&n.generatedSymbolPrefix+\"Loop_\"+e.label.name+\"_next\")));else if(o(e).isFunction)return!0;t()}\"ForInStatement\"===e.type&&u(e)?W(e,s):\"ForOfStatement\"===e.type&&u(e)&&G(e,s),t();var p;if(o(e).isLoop&&u(e)){var f=e.init,d=e.test||b(!0),g=e.update,v=e.body,x=l(v);f&&(o(f).isStatement||(f={type:\"ExpressionStatement\",expression:f})),g=g&&{type:\"ExpressionStatement\",expression:g},v=o(v).isBlockStatement?r(v).body:[r(v)];var w=e.$label&&e.$label.name;w=\"Loop_\"+(w||ye++);var E=n.generatedSymbolPrefix+(w+\"_exit\"),S=n.generatedSymbolPrefix+(w+\"_next\"),k=h(n.generatedSymbolPrefix+w),A=function(e){return{type:\"ReturnStatement\",argument:{type:\"UnaryExpression\",operator:\"void\",prefix:!0,argument:{type:\"CallExpression\",callee:h(e||E),arguments:[]}}}},_=C(S,[{type:\"ReturnStatement\",argument:{type:\"CallExpression\",callee:x?m(k):k,arguments:[h(E),me.error]}}]);g&&_.body.body.unshift(g);for(var L=0;L<v.length;L++)y.treeWalker(v[L],c);v.push(r(a()));var N={type:\"FunctionExpression\",id:k,params:[h(E),me.error],body:{type:\"BlockStatement\",body:[_]}};if(\"DoWhileStatement\"===e.type)_.body.body=[{type:\"IfStatement\",test:r(d),consequent:{type:\"BlockStatement\",body:r(_.body.body)},alternate:{type:\"ReturnStatement\",argument:{type:\"CallExpression\",callee:h(E),arguments:[]}}}],N.body.body=[_].concat(v);else{var T={type:\"IfStatement\",test:r(d),consequent:{type:\"BlockStatement\",body:v},alternate:r(A())};N.body.body.push(T)}var F={type:\"ExpressionStatement\",expression:{type:\"AwaitExpression\",argument:m(N,b(0))}};for(!f||\"VariableDeclaration\"!==f.type||\"let\"!==f.kind&&\"const\"!==f.kind||(\"const\"===f.kind&&(f.kind=\"let\"),F={type:\"BlockStatement\",body:[r(f),F]},f=null),p=0;p<s.length;p++){var $=s[p];if(\"index\"in $)return f?$.parent[$.field].splice($.index,1,r(f),F):$.parent[$.field][$.index]=F,!0}}return!0},t),e}function H(e){if(!o(e).isFunction)throw new Error(\"Cannot examine non-Function node types for async exits\");return a(e.body,function(e){return\"Identifier\"===e.type&&(e.name===n.$return||e.name===n.$error)||j(e)&&o(e).isAsync},function(e){return!(o(e).isFunction&&(e.$wasAsync||o(e).isAsync))})}function Z(t){return y.treeWalker(t,function(t,r,i){var s=x(t);if(r(),s&&o(s).isAsync){if(\"set\"==t.kind){var a=new SyntaxError(v(s)+\"method 'async set' cannot be invoked\",e.filename,t.start);throw a.pos=t.start,a.loc=t.loc.start,a}s.async=!1;var u=w(s);H(s)||0!==s.body.body.length&&\"ReturnStatement\"===s.body.body[s.body.body.length-1].type||s.body.body.push({type:\"ReturnStatement\"});var c=m(S({type:\"FunctionExpression\",params:[me.return,me.error],body:Z(F(s.body,i)),$wasAsync:!0},n),n.promises||n.generators||n.engine?null:b(!n.lazyThenables||0));n.promises?s.body={type:\"BlockStatement\",body:[{type:\"ReturnStatement\",argument:{type:\"NewExpression\",callee:h(\"Promise\"),arguments:[c]}}]}:s.body={type:\"BlockStatement\",body:[{type:\"ReturnStatement\",argument:c}]},u&&D(s.body.body,[ge])}})}function Q(e){return y.treeWalker(e,function(e,t,r){if(t(),o(e).isAsync&&o(e).isFunction){var i;(i=x(r[0].parent))&&o(i).isAsync&&\"get\"===r[0].parent.kind&&ee(r[0].parent.key),delete e.async;var s,a=w(e);return o(e.body).isBlockStatement?(H(e)||0!==e.body.body.length&&\"ReturnStatement\"===e.body.body[e.body.body.length-1].type||e.body.body.push({type:\"ReturnStatement\"}),s={type:\"BlockStatement\",body:e.body.body.map(function(e){return F(e,r)})}):(s={type:\"BlockStatement\",body:[F({type:\"ReturnStatement\",argument:e.body},r)]},e.expression=!1),s=m(S({type:\"FunctionExpression\",params:[me.return,me.error],body:s,$wasAsync:!0},n),n.promises||n.generators||n.engine?null:b(!n.lazyThenables||0)),n.promises&&(s={type:\"NewExpression\",callee:h(\"Promise\"),arguments:[s]}),s={type:\"BlockStatement\",body:[{type:\"ReturnStatement\",loc:e.loc,argument:s}]},a&&D(s.body,[ge]),void(e.body=s)}}),e}function X(e){if(Array.isArray(e))return e.map(X);var t=0;return y.treeWalker(e,function(e,n,r){if(\"ThrowStatement\"!==e.type&&\"ReturnStatement\"!==e.type||e.$mapped){if(o(e).isFunction)return t++,n(e),void t--}else if(t>0&&o(e).isAsync)return delete e.async,e.argument={type:\"CallExpression\",callee:\"ThrowStatement\"===e.type?me.error:me.return,arguments:e.argument?[e.argument]:[]},void(e.type=\"ReturnStatement\");n(e)})}function K(e,t){if(n.noRuntime)throw new Error(\"Nodent: 'noRuntime' option only compatible with -promise and -engine modes\");return y.part(\"{ return (function*($return,$error){ $:body }).$asyncspawn(Promise,this) }\",{return:me.return,error:me.error,asyncspawn:me.asyncspawn,body:X(e).concat(t?[{type:\"ReturnStatement\",argument:me.return}]:[])}).body[0]}function ee(e){e.$asyncgetwarninig||(e.$asyncgetwarninig=!0,d(v(e)+\"'async get \"+printNode(e)+\"(){...}' is non-standard. See https://github.com/MatAtBread/nodent#differences-from-the-es7-specification\"))}function te(e,t){function s(e,t){y.treeWalker(e,function(n,r,i){n!==e&&o(n).isFunction||(o(n).isAwait?t?(n.$hidden=!0,r()):(delete n.operator,n.delegate=!1,n.type=\"YieldExpression\",r()):r())})}function a(e){var t=n.promises;n.promises=!0,_(e,!0),n.promises=t}function u(e){return\"BlockStatement\"!==e.body.type&&(e.body={type:\"BlockStatement\",body:[{type:\"ReturnStatement\",argument:e.body}]}),e}function c(e,n){n.$asyncexitwarninig||(n.$asyncexitwarninig=!0,d(v(e)+\"'async \"+{ReturnStatement:\"return\",ThrowStatement:\"throw\"}[e.type]+\"' not possible in \"+(t?\"engine\":\"generator\")+\" mode. Using Promises for function at \"+v(n)))}y.treeWalker(e,function(e,n,r){n();var l,p,h;if(o(e).isAsync&&o(e).isFunction){var f;(f=x(r[0].parent))&&o(f).isAsync&&\"get\"===r[0].parent.kind&&ee(r[0].parent.key),(p=H(e))?(c(p,e.body),a(e)):t?\"get\"!==r[0].parent.kind&&s(e,!0):(l=e,delete l.async,h=w(l),s(l,!1),l=u(l),l.body=K(l.body.body,p),h&&D(l.body.body,[ge]),l.id&&\"ExpressionStatement\"===r[0].parent.type?(l.type=\"FunctionDeclaration\",r[1].replace(l)):r[0].replace(l))}else(l=x(e))&&o(l).isAsync&&((p=H(l))?(c(p,l),a(e)):t&&\"get\"!==e.kind||(t?a(e):(e.async=!1,h=w(l),s(l,!1),i(l,u(l)),l.body=K(l.body.body,p)),h&&D(l.body.body,[ge])))});var l=r(n);return n.engine=!1,n.generators=!1,ce(e),oe(e),M(e,l.engine),O(e),$(e),U(e,[q,J,R,I,B]),z(e,\"warn\"),n.engine=l.engine,n.generators=l.generators,e}function ne(e,t,n){var r=[];return y.treeWalker(e,function(i,s,a){return i===e?s():t(i,a)?void r.push([].concat(a)):void(n||o(i).isScope||s())}),r}function re(e,t){var n=[],i={};if(e=e.filter(function(e){return\"ExportNamedDeclaration\"!==e[0].parent.type}),e.length){var s={};e.forEach(function(e){function t(e){e in s?i[e]=o.declarations[u]:s[e]=o.declarations[u]}for(var n=e[0],o=n.self,a=(o.kind,[]),u=0;u<o.declarations.length;u++){var c=o.declarations[u];if(ie(c.id).forEach(t),c.init){var l={type:\"AssignmentExpression\",left:r(c.id),operator:\"=\",right:r(c.init)};a.push(l)}}if(0==a.length)n.remove();else{var p=a.length>1?{type:\"SequenceExpression\",expressions:a}:a[0];\"For\"!==n.parent.type.slice(0,3)&&(p={type:\"ExpressionStatement\",expression:p}),n.replace(p)}});var o=Object.keys(s);o.length&&(o=o.map(function(e){return{type:\"VariableDeclarator\",id:h(e),loc:s[e].loc,start:s[e].start,end:s[e].end}}),n[0]&&\"VariableDeclaration\"===n[0].type?n[0].declarations=n[0].declarations.concat(o):n.unshift({type:\"VariableDeclaration\",kind:t,declarations:o}))}return{decls:n,duplicates:i}}function ie(e){if(!e)return[];if(Array.isArray(e))return e.reduce(function(e,t){return e.concat(ie(t.id))},[]);switch(e.type){case\"Identifier\":return[e.name];case\"AssignmentPattern\":return ie(e.left);case\"ArrayPattern\":return e.elements.reduce(function(e,t){return e.concat(ie(t))},[]);case\"ObjectPattern\":return e.properties.reduce(function(e,t){return e.concat(ie(t))},[]);case\"ObjectProperty\":case\"Property\":return ie(e.value);case\"RestElement\":case\"RestProperty\":return ie(e.argument)}}function se(e){function t(e){d(v(e)+\"Possible assignment to 'const \"+printNode(e)+\"'\")}function n(e){switch(e.type){case\"Identifier\":\"const\"===r[e.name]&&t(e);break;case\"ArrayPattern\":e.elements.forEach(function(e){\"const\"===r[e.name]&&t(e)});break;case\"ObjectPattern\":e.properties.forEach(function(e){\"const\"===r[e.key.name]&&t(e)})}}var r={};y.treeWalker(e,function(e,t,i){var s=o(e).isBlockStatement;if(s){r=Object.create(r);for(var a=0;a<s.length;a++)if(\"VariableDeclaration\"===s[a].type)for(var u=0;u<s[a].declarations.length;u++)ie(s[a].declarations[u].id).forEach(function(e){r[e]=s[a].kind})}t(),\"AssignmentExpression\"===e.type?n(e.left):\"UpdateExpression\"===e.type&&n(e.argument),s&&(r=Object.getPrototypeOf(r))})}function oe(e){function t(e){return a(e,function(e){return\"AssignmentExpression\"===e.type})}function n(e){return function(t,n){if(\"VariableDeclaration\"===t.type&&(t.kind=t.kind||\"var\")&&e.indexOf(t.kind)>=0){var r=n[0];return(\"left\"!=r.field||\"ForInStatement\"!==r.parent.type&&\"ForOfStatement\"!==r.parent.type)&&(\"init\"!=r.field||\"ForStatement\"!==r.parent.type||\"const\"!==t.kind&&\"let\"!==t.kind)}}}function s(e,t){return!(\"FunctionDeclaration\"!==e.type||!e.id)&&(o(e).isAsync||!e.$continuation)}var c={TemplateLiteral:function(e){return e.expressions},NewExpression:function(e){return e.arguments},CallExpression:function(e){return e.arguments},SequenceExpression:function(e){return e.expressions},ArrayExpression:function(e){return e.elements},ObjectExpression:function(e){return e.properties.map(function(e){return e.value})}};y.treeWalker(e,function(e,n,s){var a;if(n(),e.type in c&&!e.$hoisted){var s,l=c[e.type](e),p=[];for(a=0;a<l.length;a++)if(!o(l[a]).isScope){if((s=u(l[a]))&&function(e){p.length&&(e.argument={type:\"SequenceExpression\",\n    4  expressions:p.map(function(e){var t=r(e);return i(e,e.left),t}).concat(e.argument)},p=[])}(s[0].self),!u(l.slice(a+1)))break;(s=t(l[a]))&&p.push(s[0].self)}}else if(\"VariableDeclaration\"===e.type)for(a=e.declarations.length-1;a>0;a--)if(e.declarations[a]&&e.declarations[a].init&&u(e.declarations[a].init)){var h={type:\"VariableDeclaration\",kind:e.kind,declarations:e.declarations.splice(a)},f=s[0];if(!(\"index\"in f))throw new Error(\"VariableDeclaration not in a block\");f.parent[f.field].splice(f.index+1,0,h)}}),se(e);var l=!1;return y.treeWalker(e,function(e,t,r){var i=l;if(l=l||pe(e),o(e).isBlockStatement){if(u(e)){var a,c,p,f,y,m=!r[0].parent||o(r[0].parent).isScope;if(m){c=ne(e,n([\"const\"]),!1);var g={},b={};c.forEach(function(e){e[0].self.declarations.forEach(function(e){ie(e.id).forEach(function(t){g[t]||b[t]?(delete g[t],b[t]=e):g[t]=e})})}),c.forEach(function(e){for(var t=0;t<e.length&&!o(e[t].parent).isBlockStatement;t++);var n=e[t];n.append({type:\"ExpressionStatement\",expression:{type:\"SequenceExpression\",expressions:e[0].self.declarations.map(function(e){var t={type:\"AssignmentExpression\",operator:\"=\",left:e.id,right:e.init};return e.init=null,t})}});var r=ie(e[0].self.declarations),i=r.filter(function(e){return e in b});i.length&&e[0].append({type:\"VariableDeclaration\",kind:\"let\",declarations:i.map(function(e){return{type:\"VariableDeclarator\",id:h(e)}})}),e[0].self.kind=\"var\",i=r.filter(function(e){return e in g}),i.length?e[0].self.declarations=i.map(function(e){return{type:\"VariableDeclarator\",id:h(e)}}):n.remove()}),p=ne(e,n([\"var\"]),!1),f=[]}else f=ne(e,n([\"const\"]),!0);f=f.concat(ne(e,n([\"let\"]),!0)),a=ne(e,function(e){return o(e).isDirective},!0),y=ne(e,s,l),p=p?re(p,\"var\"):{duplicates:{},decls:[]},f=f?re(f,\"let\"):{duplicates:{},decls:[]},Object.keys(p.duplicates).forEach(function(e){d(v(p.duplicates[e])+\"Duplicate declaration '\"+printNode(p.duplicates[e])+\"'\")}),Object.keys(f.duplicates).forEach(function(e){d(v(f.duplicates[e])+\"Duplicate declaration '\"+printNode(f.duplicates[e])+\"'\")}),y=y.map(function(e){var t,n=e[0];return o(n.self).isAsync?(t=n.self.id.name,o(n.parent).isBlockStatement?(n.self.type=\"FunctionDeclaration\",n.remove(),n.self):n.replace(h(t))):(t=n.self.id.name,\"FunctionDeclaration\"===n.self.type?n.remove():n.replace(h(t)))}),a=a.map(function(e){return e[0].remove()}),(a.length||p.decls.length||f.decls.length||y.length)&&(e.body=a.concat(p.decls).concat(f.decls).concat(y).concat(e.body))}l=i}if(t(),\"ForOfStatement\"===e.type||\"ForInStatement\"===e.type||o(e).isLoop){for(var x=0,w=0;w<r.length;w++)if(\"ForOfStatement\"===r[w].self.type||\"ForInStatement\"===r[w].self.type||o(r[w].self).isLoop)x+=1;else if(o(r[w].self).isFunction)break;e.$depth=x,\"LabeledStatement\"===r[0].parent.type?e.$label=r[0].parent.label:e.$label=null}return!0}),e}function ae(e,t){function n(){return e.$superID=e.$superID||h(\"$super$\"+ye++)}return function(e){(e=x(e))&&o(e).isAsync&&(!t||\"get\"===e.kind||a(e,function(e){return o(e).isFunction&&a(e,function(e){return\"Super\"===e.type})&&a(e,function(e){return e.async&&(\"ReturnStatement\"===e.type||\"ThrowStatement\"===e.type)})},!0))&&y.treeWalker(e.body,function(e,t,r){var i;o(e).isClass||(t(),\"Super\"===e.type&&(\"MemberExpression\"===r[0].parent.type?\"CallExpression\"===r[1].parent.type&&\"callee\"===r[1].field?(i=y.part(\"this.$super($field).call(this,$args)\",{super:n(),field:r[0].parent.computed?r[0].parent.property:b(r[0].parent.property.name),args:r[1].parent.arguments}).expr,r[2].replace(i)):(i=y.part(\"this.$super($field)\",{super:n(),field:r[0].parent.computed?r[0].parent.property:b(r[0].parent.property.name)}).expr,r[1].replace(i)):d(v(e)+\"'super' in async methods must be deferenced. 'async constructor()'/'await super()' not valid.\")))})}}function ue(e,t){return y.treeWalker(e,function(e,r,i){if(r(),(\"ClassDeclaration\"===e.type||\"ClassExpression\"===e.type)&&(e.body.body.forEach(ae(e,t)),e.$superID)){var s=y.part(\"(function($field) { return super[$field] })\",{field:h(\"$field\")}).expr;n.babelTree?(s.type=\"ClassMethod\",s.key=e.$superID,s.kind=\"method\",e.body.body.push(s)):e.body.body.push({type:\"MethodDefinition\",key:e.$superID,kind:\"method\",value:s})}})}function ce(e){return y.treeWalker(e,function(e,t,n){return u(e)&&\"ArrowFunctionExpression\"===e.type&&\"BlockStatement\"!==e.body.type&&(e.body={type:\"BlockStatement\",body:[{type:\"ReturnStatement\",argument:e.body}]}),t(),!0}),e}function le(e){return y.treeWalker(e,function(e,t,r){t(),\"Identifier\"===e.type&&\"__nodent\"===e.name&&i(e,b(n))}),e}function pe(e){if(\"Program\"===e.type&&\"module\"===e.sourceType)return!0;var t;if(\"Program\"===e.type)t=e.body;else{if(!o(e).isFunction)return!1;t=e.body.body}if(t)for(var n=0;n<t.length;n++)if(o(t[n]).isDirective&&t[n].expression.value.match(/^\\s*use\\s+strict\\s*$/))return!0;return!1}function he(e){for(var t=0;t<e.length;t++){var n=e[t];if(\"ClassDeclaration\"===n.type||\"VariableDeclaration\"===n.type&&(\"let\"===n.kind||\"const\"===n.kind)||\"FunctionDeclaration\"===n.type&&n.id&&n.id.name&&!n.$continuation)return!0}return!1}function fe(e){y.treeWalker(e,function(e,t,n){if(t(),\"ArrowFunctionExpression\"===e.type&&\"BlockStatement\"===e.body.type&&1===e.body.body.length&&\"ReturnStatement\"===e.body.body[0].type)e.body=e.body.body[0].argument;else{var r,i;if(r=o(e).isBlockStatement)for(var s=0;s<r.length;s++)(i=o(r[s]).isBlockStatement)&&!he(i)&&(he(r[s])||[].splice.apply(r,[s,1].concat(i)))}}),y.treeWalker(e,function(e,t,n){if(t(),o(e).isJump){var r=n[0];if(\"index\"in r)for(var i=r.index+1,s=r.parent[r.field];i<s.length;)\"VariableDeclaration\"===s[i].type||o(s[i]).isFunction&&s[i].id?i+=1:s.splice(i,1)}}),y.treeWalker(e,function(e,t,n){t(),e.$thisCall&&de[e.name]&&(de[e.name].ref?delete de[e.name]:de[e.name].ref=e.$thisCall)});var t=Object.keys(de).map(function(e){return de[e].ref});if(t.length){y.treeWalker(e,function(e,n,i){if(n(),t.indexOf(e)>=0&&\"ReturnStatement\"===i[1].self.type){var s=e.$thisCallName,a=r(de[s].def.body.body);de[s].$inlined=!0,o(i[1].self).isJump||a.push({type:\"ReturnStatement\"}),i[1].replace(a)}});var n=Object.keys(de).map(function(e){return de[e].$inlined&&de[e].def});y.treeWalker(e,function(e,t,r){t(),n.indexOf(e)>=0&&r[0].remove()})}if(!(\"Program\"===e.type&&\"module\"===e.sourceType||a(e,function(e){return o(e).isES6},!0))){var i=pe(e);!function(e){y.treeWalker(e,function(e,t,n){if(\"Program\"===e.type||\"FunctionDeclaration\"===e.type||\"FunctionExpression\"===e.type){var r=i;if(i=i||pe(e)){t();var s=\"Program\"===e.type?e:e.body,o=ne(s,function(e,t){if(\"FunctionDeclaration\"===e.type)return t[0].parent!==s});o=o.map(function(e){return e[0].remove()}),[].push.apply(s.body,o)}else t();i=r}else t()})}(e)}return y.treeWalker(e,function(e,t,n){t(),Object.keys(e).filter(function(e){return\"$\"===e[0]}).forEach(function(t){delete e[t]})}),e}var de={},ye=1,me={};Object.keys(n).filter(function(e){return\"$\"===e[0]}).forEach(function(e){me[e.slice(1)]=h(n[e])});var ge=y.part(\"var $0 = arguments\",[me.arguments]).body[0];return n.engine?(e.ast=ue(e.ast,!0),e.ast=te(e.ast,n.engine),e.ast=le(e.ast),fe(e.ast)):n.generators?(e.ast=ue(e.ast),e.ast=te(e.ast),e.ast=le(e.ast),fe(e.ast)):(e.ast=ue(e.ast),_(e.ast)),n.babelTree&&y.treeWalker(e.ast,function(e,t,n){t(),\"Literal\"===e.type&&i(e,b(e.value))}),e}var y=e(\"./parser\"),m=e(\"./output\");n.printNode=function e(t){if(!t)return\"\";if(Array.isArray(t))return t.map(e).join(\"|\\n\");try{return m(t)}catch(e){return e.message+\": \"+(t&&t.type)}};var g={start:!0,end:!0,loc:!0,range:!0},v={getScope:function(){return\"FunctionDeclaration\"===this.node.type||\"FunctionExpression\"===this.node.type||\"Function\"===this.node.type||\"ObjectMethod\"===this.node.type||\"ClassMethod\"===this.node.type||\"ArrowFunctionExpression\"===this.node.type&&\"BlockStatement\"===this.node.body.type?this.node.body.body:\"Program\"===this.node.type?this.node.body:null},isScope:function(){return\"FunctionDeclaration\"===this.node.type||\"FunctionExpression\"===this.node.type||\"Function\"===this.node.type||\"Program\"===this.node.type||\"ObjectMethod\"===this.node.type||\"ClassMethod\"===this.node.type||\"ArrowFunctionExpression\"===this.node.type&&\"BlockStatement\"===this.node.body.type},isFunction:function(){return\"FunctionDeclaration\"===this.node.type||\"FunctionExpression\"===this.node.type||\"Function\"===this.node.type||\"ObjectMethod\"===this.node.type||\"ClassMethod\"===this.node.type||\"ArrowFunctionExpression\"===this.node.type},isClass:function(){return\"ClassDeclaration\"===this.node.type||\"ClassExpression\"===this.node.type},isBlockStatement:function(){return\"ClassBody\"===this.node.type||\"Program\"===this.node.type||\"BlockStatement\"===this.node.type?this.node.body:\"SwitchCase\"===this.node.type&&this.node.consequent},isExpressionStatement:function(){return\"ExpressionStatement\"===this.node.type},isLiteral:function(){return\"Literal\"===this.node.type||\"BooleanLiteral\"===this.node.type||\"RegExpLiteral\"===this.node.type||\"NumericLiteral\"===this.node.type||\"StringLiteral\"===this.node.type||\"NullLiteral\"===this.node.type},isDirective:function(){return\"ExpressionStatement\"===this.node.type&&(\"StringLiteral\"===this.node.expression.type||\"Literal\"===this.node.expression.type&&\"string\"==typeof this.node.expression.value)},isUnaryExpression:function(){return\"UnaryExpression\"===this.node.type},isAwait:function(){return\"AwaitExpression\"===this.node.type&&!this.node.$hidden},isAsync:function(){return this.node.async},isStatement:function(){return null!==this.node.type.match(/[a-zA-Z]+Declaration/)||null!==this.node.type.match(/[a-zA-Z]+Statement/)},isExpression:function(){return null!==this.node.type.match(/[a-zA-Z]+Expression/)},isLoop:function(){return\"ForStatement\"===this.node.type||\"WhileStatement\"===this.node.type||\"DoWhileStatement\"===this.node.type},isJump:function(){return\"ReturnStatement\"===this.node.type||\"ThrowStatement\"===this.node.type||\"BreakStatement\"===this.node.type||\"ContinueStatement\"===this.node.type},isES6:function(){switch(this.node.type){case\"ExportNamedDeclaration\":case\"ExportSpecifier\":case\"ExportDefaultDeclaration\":case\"ExportAllDeclaration\":case\"ImportDeclaration\":case\"ImportSpecifier\":case\"ImportDefaultSpecifier\":case\"ImportNamespaceSpecifier\":case\"ArrowFunctionExpression\":case\"ForOfStatement\":case\"YieldExpression\":case\"Super\":case\"RestElement\":case\"RestProperty\":case\"SpreadElement\":case\"TemplateLiteral\":case\"ClassDeclaration\":case\"ClassExpression\":return!0;case\"VariableDeclaration\":return this.node.kind&&\"var\"!==this.node.kind;case\"FunctionDeclaration\":case\"FunctionExpression\":return!!this.node.generator}}},b={};Object.keys(v).forEach(function(e){Object.defineProperty(b,e,{get:v[e]})}),t.exports={printNode:printNode,babelLiteralNode:p,asynchronize:function(e,t,n,r){try{return d(e,t,n,r)}catch(t){if(t instanceof SyntaxError){var i=e.origCode.substr(t.pos-t.loc.column);i=i.split(\"\\n\")[0],t.message+=\" (nodent)\\n\"+i+\"\\n\"+i.replace(/[\\S ]/g,\"-\").substring(0,t.loc.column)+\"^\",t.stack=\"\"}throw t}}}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{\"./output\":13,\"./parser\":14}],13:[function(e,t,n){\"use strict\";function r(e){var t=y[e.type]||y[e.type+e.operator]||y[e.type+e.operator+(e.prefix?\"prefix\":\"\")];return void 0!==t?t:20}function i(e,t,n){var r=this[n||e.type];r?r.call(this,e,t):t.write(e,\"/*\"+e.type+\"?*/ \"+t.sourceAt(e.start,e.end))}function s(e,t,n,i){2===i||r(n)<r(t)||r(n)==r(t)&&(i||t.right===n)?(e.write(null,\"(\"),this.out(n,e,n.type),e.write(null,\")\")):this.out(n,e,n.type)}function o(e,t){var n;if(t.write(null,\"(\"),null!=e&&e.length>0){this.out(e[0],t,e[0].type);for(var r=1,i=e.length;r<i;r++)n=e[r],t.write(n,\", \"),this.out(n,t,n.type)}t.write(null,\") \")}var a,u,c,l,p,h,f=e(\"source-map\").SourceMapGenerator;if(\"\".repeat)h=function(e,t){return t&&e?e.repeat(t):\"\"};else{var d={};h=function(e,t){if(!t||!e)return\"\";var n=\"\"+e+t;if(!d[n]){for(var r=[];t--;)r.push(e);d[n]=r.join(\"\")}return d[n]}}var y={ExpressionStatement:-1,Identifier:21,Literal:21,BooleanLiteral:21,RegExpLiteral:21,NumericLiteral:21,StringLiteral:21,NullLiteral:21,ThisExpression:21,SuperExpression:21,ObjectExpression:21,ClassExpression:21,MemberExpression:19,CallExpression:18,NewExpression:18,ArrayExpression:17.5,FunctionExpression:17.5,FunctionDeclaration:17.5,ArrowFunctionExpression:17.5,\"UpdateExpression++\":17,\"UpdateExpression--\":17,\"UpdateExpression++prefix\":16,\"UpdateExpression--prefix\":16,UnaryExpression:16,AwaitExpression:16,\"BinaryExpression**\":15,\"BinaryExpression*\":15,\"BinaryExpression/\":15,\"BinaryExpression%\":15,\"BinaryExpression+\":14,\"BinaryExpression-\":14,\"BinaryExpression<<\":13,\"BinaryExpression>>\":13,\"BinaryExpression>>>\":13,\"BinaryExpression<\":12,\"BinaryExpression<=\":12,\"BinaryExpression>\":12,\"BinaryExpression>=\":12,BinaryExpressionin:12,BinaryExpressioninstanceof:12,\"BinaryExpression==\":11,\"BinaryExpression===\":11,\"BinaryExpression!=\":11,\"BinaryExpression!==\":11,\"BinaryExpression&\":10,\"BinaryExpression^\":9,\"BinaryExpression|\":8,\"LogicalExpression&&\":7,\"LogicalExpression||\":6,ConditionalExpression:5,AssignmentPattern:4,AssignmentExpression:4,yield:3,YieldExpression:3,SpreadElement:2,\"comma-separated-list\":1.5,SequenceExpression:1},m={type:\"comma-separated-list\"},g={out:i,expr:s,formatParameters:o,Program:function(e,t){var n,r,i=h(t.indent,t.indentLevel),s=t.lineEnd;n=e.body;for(var o=0,a=n.length;o<a;o++)r=n[o],t.write(null,i),this.out(r,t,r.type),t.write(null,s)},BlockStatement:p=function(e,t){var n,r,i=h(t.indent,t.indentLevel++),s=t.lineEnd,o=i+t.indent;if(t.write(e,\"{\"),null!=(n=e.body)&&n.length>0){t.write(null,s);for(var a=0,u=n.length;a<u;a++)r=n[a],t.write(null,o),this.out(r,t,r.type),t.write(null,s);t.write(null,i)}t.write(e.loc?{loc:{start:{line:e.loc.end.line,column:0}}}:null,\"}\"),t.indentLevel--},ClassBody:p,EmptyStatement:function(e,t){t.write(e,\";\")},ParenthesizedExpression:function(e,t){this.expr(t,e,e.expression,2)},ExpressionStatement:function(e,t){\"FunctionExpression\"===e.expression.type||\"ObjectExpression\"===e.expression.type?(t.write(null,\"(\"),this.expr(t,e,e.expression),t.write(null,\")\")):this.expr(t,e,e.expression),t.write(null,\";\")},IfStatement:function(e,t){t.write(e,\"if (\"),this.out(e.test,t,e.test.type),t.write(null,\") \"),\"BlockStatement\"!==e.consequent.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1)),this.out(e.consequent,t,e.consequent.type),null!=e.alternate&&(\"BlockStatement\"!==e.consequent.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel)),t.write(null,\" else \"),\"BlockStatement\"!==e.alternate.type&&\"IfStatement\"!==e.alternate.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1)),this.out(e.alternate,t,e.alternate.type))},LabeledStatement:function(e,t){this.out(e.label,t,e.label.type),t.write(null,\":\"),this.out(e.body,t,e.body.type)},BreakStatement:function(e,t){t.write(e,\"break\"),e.label&&(t.write(null,\" \"),this.out(e.label,t,e.label.type)),t.write(null,\";\")},ContinueStatement:function(e,t){t.write(e,\"continue\"),e.label&&(t.write(null,\" \"),this.out(e.label,t,e.label.type)),t.write(null,\";\")},WithStatement:function(e,t){t.write(e,\"with (\"),this.out(e.object,t,e.object.type),t.write(null,\") \"),this.out(e.body,t,e.body.type)},SwitchStatement:function(e,t){var n,r,i,s=h(t.indent,t.indentLevel++),o=t.lineEnd;t.indentLevel++;var a=s+t.indent,u=a+t.indent;t.write(e,\"switch (\"),this.out(e.discriminant,t,e.discriminant.type),t.write(null,\") {\",o);for(var c=e.cases,l=0;l<c.length;l++){n=c[l],n.test?(t.write(n,a,\"case \"),this.out(n.test,t,n.test.type),t.write(null,\":\",o)):t.write(n,a,\"default:\",o),r=n.consequent;for(var p=0;p<r.length;p++)i=r[p],t.write(null,u),this.out(i,t,i.type),t.write(null,o)}t.indentLevel-=2,t.write(null,s,\"}\")},ReturnStatement:function(e,t){e.async&&t.write(e,\" async \"),t.write(e,\"return\"),e.argument&&(t.write(null,\" \"),this.out(e.argument,t,e.argument.type)),t.write(null,\";\")},ThrowStatement:function(e,t){e.async&&t.write(e,\" async \"),t.write(e,\"throw \"),this.out(e.argument,t,e.argument.type),t.write(null,\";\")},TryStatement:function(e,t){t.write(e,\"try \"),this.out(e.block,t,e.block.type),e.handler&&this.out(e.handler,t,e.handler.type),e.finalizer&&(t.write(e.finalizer,\" finally \"),this.out(e.finalizer,t,e.finalizer.type))},CatchClause:function(e,t){t.write(e,\" catch (\"),this.out(e.param,t,e.param.type),t.write(null,\") \"),this.out(e.body,t,e.body.type)},WhileStatement:function(e,t){t.write(e,\"while (\"),this.out(e.test,t,e.test.type),t.write(null,\") \"),\"BlockStatement\"!==e.body.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1)),this.out(e.body,t,e.body.type)},DoWhileStatement:function(e,t){t.write(e,\"do \"),\"BlockStatement\"!==e.body.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1)),this.out(e.body,t,e.body.type),t.write(null,\" while (\"),this.out(e.test,t,e.test.type),t.write(null,\");\")},ForStatement:function(e,t){if(t.write(e,\"for (\"),null!=e.init){var n=e.init,r=n.type;t.inForInit++,this.out(n,t,r),t.inForInit--,\"VariableDeclaration\"!==r&&t.write(null,\"; \")}else t.write(null,\"; \");e.test&&this.out(e.test,t,e.test.type),t.write(null,\"; \"),e.update&&this.out(e.update,t,e.update.type),t.write(null,\") \"),\"BlockStatement\"!==e.body.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1)),this.out(e.body,t,e.body.type)},ForInStatement:a=function(e,t){t.write(e,\"for (\");var n=e.left,r=n.type;t.inForInit++,this.out(n,t,r),\"V\"===r[0]&&19===r.length&&t.back(),t.inForInit--,t.write(null,\"I\"===e.type[3]?\" in \":\" of \"),this.out(e.right,t,e.right.type),t.write(null,\") \"),\"BlockStatement\"!==e.body.type&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1)),this.out(e.body,t,e.body.type)},ForOfStatement:a,DebuggerStatement:function(e,t){t.write(e,\"debugger;\")},Function:function(e,t){e.async&&t.write(e,\"async \"),t.write(e,e.generator?\"function* \":\"function \"),e.id&&t.write(e.id,e.id.name),this.formatParameters(e.params,t),this.out(e.body,t,e.body.type)},FunctionDeclaration:function(e,t){this.Function(e,t),t.write(null,t.lineEnd,h(t.indent,t.indentLevel))},FunctionExpression:function(e,t){this.Function(e,t)},VariableDeclaration:function(e,t){var n=e.declarations;t.write(e,e.kind,\" \");var r=n.length;if(r>0){this.out(n[0],t,\"VariableDeclarator\");for(var i=1;i<r;i++)t.write(null,\", \"),this.out(n[i],t,\"VariableDeclarator\")}t.write(null,\";\")},VariableDeclarator:function(e,t){this.out(e.id,t,e.id.type),null!=e.init&&(t.write(null,\" = \"),this.expr(t,m,e.init))},ClassDeclaration:function(e,t){t.write(e,\"class \"),e.id&&t.write(e.id,e.id.name+\" \"),e.superClass&&(t.write(null,\"extends \"),this.out(e.superClass,t,e.superClass.type),t.write(null,\" \")),this.out(e.body,t,\"BlockStatement\")},ImportSpecifier:function(e,t){e.local.name==e.imported.name?this.out(e.local,t,e.local.type):(this.out(e.imported,t,e.imported.type),t.write(null,\" as \"),this.out(e.local,t,e.local.type))},ImportDefaultSpecifier:function(e,t){this.out(e.local,t,e.local.type)},ImportNamespaceSpecifier:function(e,t){t.write(null,\"* as \"),this.out(e.local,t,e.local.type)},ImportDeclaration:function(e,t){var n;t.write(e,\"import \");var r=e.specifiers,i=r.length,s=!0;if(i>0){for(var n=0;n<i;n++)\"ImportSpecifier\"===r[n].type&&s&&(s=!1,t.write(null,\"{\")),this.out(r[n],t,r[n].type),n<i-1&&t.write(null,\", \");\"ImportSpecifier\"===r[i-1].type&&t.write(null,\"}\"),t.write(null,\" from \")}t.write(e.source,e.source.raw),t.write(null,\";\")},ExportDefaultDeclaration:function(e,t){t.write(e,\"export default \"),this.out(e.declaration,t,e.declaration.type)},ExportSpecifier:function(e,t){e.local.name==e.exported.name?this.out(e.local,t,e.local.type):(this.out(e.local,t,e.local.type),t.write(null,\" as \"),this.out(e.exported,t,e.exported.type))},ExportNamedDeclaration:function(e,t){if(t.write(e,\"export \"),e.declaration)this.out(e.declaration,t,e.declaration.type);else{var n=e.specifiers;if(t.write(e,\"{\"),n&&n.length>0)for(var r=0;r<n.length;r++)this.out(n[r],t,n[r].type),r<n.length-1&&t.write(null,\", \");t.write(null,\"}\"),e.source&&t.write(e.source,\" from \",e.source.raw),t.write(null,\";\")}},ExportAllDeclaration:function(e,t){t.write(e,\"export * from \"),t.write(e.source,e.source.raw,\";\")},MethodDefinition:function(e,t){switch(e.value.async&&t.write(e,\"async \"),e.static&&t.write(e,\"static \"),e.kind){case\"get\":case\"set\":t.write(e,e.kind,\" \")}e.value.generator&&t.write(null,\"*\"),e.computed?(t.write(null,\"[\"),this.out(e.key,t,e.key.type),t.write(null,\"]\")):this.out(e.key,t,e.key.type),this.formatParameters(e.value.params,t),this.out(e.value.body,t,e.value.body.type)},ClassMethod:function(e,t){switch(e.async&&t.write(e,\"async \"),e.static&&t.write(e,\"static \"),e.kind){case\"get\":case\"set\":t.write(e,e.kind,\" \")}e.generator&&t.write(null,\"*\"),e.computed?(t.write(null,\"[\"),this.out(e.key,t,e.key.type),t.write(null,\"]\")):this.out(e.key,t,e.key.type),this.formatParameters(e.params,t),this.out(e.body,t,e.body.type)},ClassExpression:function(e,t){this.out(e,t,\"ClassDeclaration\")},ArrowFunctionExpression:function(e,t){e.async&&t.write(e,\"async \"),1===e.params.length&&\"Identifier\"===e.params[0].type?(this.out(e.params[0],t,e.params[0].type),t.write(e,\" => \")):(this.formatParameters(e.params,t),t.write(e,\"=> \")),\"ObjectExpression\"===e.body.type||\"SequenceExpression\"===e.body.type?(t.write(null,\"(\"),this.out(e.body,t,e.body.type),t.write(null,\")\")):this.out(e.body,t,e.body.type)},ThisExpression:function(e,t){t.write(e,\"this\")},Super:function(e,t){t.write(e,\"super\")},RestElement:u=function(e,t){t.write(e,\"...\"),this.out(e.argument,t,e.argument.type)},SpreadElement:u,YieldExpression:function(e,t){t.write(e,e.delegate?\"yield*\":\"yield\"),e.argument&&(t.write(null,\" \"),this.expr(t,e,e.argument))},AwaitExpression:function(e,t){t.write(e,\"await \"),this.expr(t,e,e.argument)},TemplateLiteral:function(e,t){var n,r=e.quasis,i=e.expressions;t.write(e,\"`\");for(var s=0,o=i.length;s<o;s++)n=i[s],t.write(r[s].value,r[s].value.raw),t.write(null,\"${\"),this.out(n,t,n.type),t.write(null,\"}\");t.write(r[r.length-1].value,r[r.length-1].value.raw),t.write(e,\"`\")},TaggedTemplateExpression:function(e,t){this.out(e.tag,t,e.tag.type),this.out(e.quasi,t,e.quasi.type)},ArrayExpression:l=function(e,t){if(t.write(e,\"[\"),e.elements.length>0)for(var n=e.elements,r=n.length,i=0;;){var s=n[i];if(s&&this.expr(t,m,s),i+=1,(i<r||null===s)&&t.write(null,\",\"),i>=r)break;t.lineLength()>t.wrapColumn&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1))}t.write(null,\"]\")},ArrayPattern:l,ObjectExpression:function(e,t){var n,r=h(t.indent,t.indentLevel++),i=t.lineEnd,s=r+t.indent;if(t.write(e,\"{\"),e.properties.length>0){t.write(null,i);for(var o=e.properties,a=o.length,u=0;n=o[u],t.write(null,s),this.out(n,t,\"Property\"),++u<a;)t.write(e,\",\",i),t.lineLength()>t.wrapColumn&&t.write(null,t.lineEnd,h(t.indent,t.indentLevel+1));t.write(null,i,r,\"}\")}else t.write(null,\"}\");t.indentLevel--},Property:function(e,t){e.method||\"get\"===e.kind||\"set\"===e.kind?this.MethodDefinition(e,t):(e.shorthand||(e.computed?(t.write(null,\"[\"),this.out(e.key,t,e.key.type),t.write(null,\"]\")):this.out(e.key,t,e.key.type),t.write(null,\": \")),this.expr(t,m,e.value))},ObjectPattern:function(e,t){if(t.write(e,\"{\"),e.properties.length>0)for(var n=e.properties,r=n.length,i=0;this.out(n[i],t,\"Property\"),++i<r;)t.write(null,\", \");t.write(null,\"}\")},SequenceExpression:function(e,t){var n,r=e.expressions;if(r.length>0)for(var i=r.length,s=0;s<i;s++)n=r[s],s&&t.write(null,\", \"),this.expr(t,m,n)},UnaryExpression:function(e,t){e.prefix?(t.write(e,e.operator),e.operator.length>1&&t.write(e,\" \"),this.expr(t,e,e.argument,!0)):(this.expr(t,e,e.argument),t.write(e,e.operator))},UpdateExpression:function(e,t){e.prefix?(t.write(e,e.operator),this.out(e.argument,t,e.argument.type)):(this.out(e.argument,t,e.argument.type),t.write(e,e.operator))},BinaryExpression:c=function(e,t){var n=e.operator;\"in\"===n&&t.inForInit&&t.write(null,\"(\"),this.expr(t,e,e.left),t.write(e,\" \",n,\" \"),this.expr(t,e,e.right,\"ArrowFunctionExpression\"===e.right.type?2:0),\"in\"===n&&t.inForInit&&t.write(null,\")\")},LogicalExpression:c,AssignmentExpression:function(e,t){\"ObjectPattern\"===e.left.type&&t.write(null,\"(\"),this.BinaryExpression(e,t),\"ObjectPattern\"===e.left.type&&t.write(null,\")\")},AssignmentPattern:function(e,t){this.expr(t,e,e.left),t.write(e,\" = \"),this.expr(t,e,e.right)},ConditionalExpression:function(e,t){this.expr(t,e,e.test,!0),t.write(e,\" ? \"),this.expr(t,e,e.consequent),t.write(null,\" : \"),this.expr(t,e,e.alternate)},NewExpression:function(e,t){t.write(e,\"new \"),this.out(e,t,\"CallExpression\")},CallExpression:function(e,t){this.expr(t,e,e.callee,\"ObjectExpression\"===e.callee.type?2:0),t.write(e,\"(\");var n=e.arguments;if(n.length>0)for(var r=n.length,i=0;i<r;i++)0!=i&&t.write(null,\", \"),this.expr(t,m,n[i]);t.write(null,\")\")},MemberExpression:function(e,t){\"ObjectExpression\"===e.object.type||e.object.type.match(/Literal$/)&&e.object.raw.match(/^[0-9]/)||!(\"ArrayExpression\"===e.object.type||\"CallExpression\"===e.object.type||\"NewExpression\"===e.object.type||r(e)<=r(e.object))?(t.write(null,\"(\"),this.out(e.object,t,e.object.type),t.write(null,\")\")):this.out(e.object,t,e.object.type),e.computed?(t.write(e,\"[\"),this.out(e.property,t,e.property.type),t.write(null,\"]\")):(t.write(e,\".\"),this.out(e.property,t,e.property.type))},Identifier:function(e,t){t.write(e,e.name)},Literal:function(e,t){t.write(e,e.raw)},NullLiteral:function(e,t){t.write(e,\"null\")},BooleanLiteral:function(e,t){t.write(e,JSON.stringify(e.value))},StringLiteral:function(e,t){t.write(e,JSON.stringify(e.value))},RegExpLiteral:function(e,t){t.write(e,e.extra.raw||\"/\"+e.pattern+\"/\"+e.flags)},NumericLiteral:function(e,t){t.write(e,JSON.stringify(e.value))}};t.exports=function(e,t,n){function r(e){l=arguments[arguments.length-1];for(var n=1;n<arguments.length;n++){if(c&&e&&e.loc&&e.loc.start){c.addMapping({source:t.map.file,original:{line:e.loc.start.line,column:e.loc.start.column},generated:{line:t.map.startLine+u.length+1,column:a.length}})}if(arguments[n]===y.lineEnd){if(d.length&&(d.forEach(function(e){\"Line\"===e.type?a+=\" // \"+e.value:((\" /*\"+e.value+\"*/\").split(\"\\n\").forEach(function(e){a+=e,u.push(a),a=\"\"}),a=u.pop())}),d=[]),u.push(a),a=\"\",p.length){var r=u.pop();p.forEach(function(e){var t=h(y.indent,e.indent);\"Line\"===e.type?u.push(t+\"//\"+e.value):(t+\"/*\"+e.value+\"*/\").split(\"\\n\").forEach(function(e){u.push(e)})}),u.push(r),p=[]}}else a+=arguments[n],e&&e.$comments&&(e.$comments.forEach(function(t){var n=e.loc.start.column<t.loc.start.column;t.indent=y.indentLevel,n?d.push(t):p.push(t)}),e.$comments=null)}}function i(){return a.length}function s(e,t){return n?n.substring(e,t):\"/* Omitted Non-standard node */\"}function o(){a=a.substring(0,a.length-l.length)}t=t||{};var a=\"\",u=[],c=t.map&&new f(t.map);c&&t.map.sourceContent&&c.setSourceContent(t.map.file,t.map.sourceContent);var l=\"\",p=[],d=[],y={inForInit:0,lineLength:i,sourceAt:s,write:r,back:o,indent:\"    \",lineEnd:\"\\n\",indentLevel:0,wrapColumn:80};g.out(e,y),d=e.$comments||[],y.write(e,y.lineEnd);var m=u.join(y.lineEnd);return t&&t.map?{code:m,map:c}:m}},{\"source-map\":27}],14:[function(e,t,n){\"use strict\";function r(e,t){[\"start\",\"end\",\"loc\",\"range\"].forEach(function(n){n in e&&!(n in t)&&(t[n]=e[n])})}function i(e,t,n){function r(e){e.replace=p.replace,e.append=p.append,e.index?(Object.defineProperties(e,{index:{enumerable:!0,get:p.index}}),e.remove=p.removeElement):e.remove=p.removeNode,n.unshift(e),i(e.self,t,n),n.shift()}function s(){e.type in l&&l[e.type](e,n,function t(i,s,o){if(i===e)return l[o||e.type](e,n,t);for(var a=Object.keys(e),u=0;u<a.length;u++){var c=e[a[u]];Array.isArray(c)?c.indexOf(i)>=0&&r({self:i,parent:e,field:a[u],index:!0}):c instanceof Object&&i===c&&r({self:i,parent:e,field:a[u]})}})}return n||(n=[{self:e}],n.replace=function(e,t){n[e].replace(t)}),t(e,s,n),e}function s(t,n){var r=[],s={ecmaVersion:8,allowHashBang:!0,allowReturnOutsideFunction:!0,allowImportExportEverywhere:!0,locations:!0,onComment:r};if((!n||!n.noNodentExtensions||parseInt(a.version)<4)&&(h||(parseInt(a.version)<4&&console.warn(\"Nodent: Warning - noNodentExtensions option requires acorn >=v4.x. Extensions installed.\"),e(\"acorn-es7-plugin\")(a),h=!0),s.plugins=s.plugins||{},s.plugins.asyncawait={asyncExits:!0,awaitAnywhere:!0}),n)for(var o in n)\"noNodentExtensions\"!==o&&(s[o]=n[o]);var u=a.parse(t,s);return i(u,function(e,t,n){for(t();r.length&&e.loc&&e.loc.start.line>=r[0].loc.start.line&&e.loc.end.line>=r[0].loc.end.line;)e.$comments=e.$comments||[],e.$comments.push(r.shift())}),u}function o(e,t){function n(e,r){if(Array.isArray(r)&&!Array.isArray(e))throw new Error(\"Can't substitute an array for a node\");return r=r||{},Object.keys(e).forEach(function(i){function s(e){return\"function\"==typeof e&&(e=e()),r=r.concat(e)}function o(e){return\"function\"==typeof e&&(e=e()),r[i]=e,r}if(!(e[i]instanceof Object))return r[i]=e[i];if(Array.isArray(e[i]))return r[i]=n(e[i],[]);var a;if(a=Array.isArray(r)?s:o,\"Identifier\"===e[i].type&&\"$\"===e[i].name[0])return a(t[e[i].name.slice(1)]);if(\"LabeledStatement\"===e[i].type&&\"$\"===e[i].label.name){var u=e[i].body.expression;return a(t[u.name||u.value])}return a(\"LabeledStatement\"===e[i].type&&\"$$\"===e[i].label.name.slice(0,2)?t[e[i].label.name.slice(2)](n(e[i]).body):n(e[i]))}),r}f[e]||(f[e]=s(e,{noNodentExtensions:!0,locations:!1,ranges:!1,onComment:null}));var r=n(f[e]);return{body:r.body,expr:\"ExpressionStatement\"===r.body[0].type?r.body[0].expression:null}}var a=e(\"acorn\"),u=e(\"acorn/dist/walk\"),c={AwaitExpression:function(e,t,n){n(e.argument,t,\"Expression\")},SwitchStatement:function(e,t,n){n(e.discriminant,t,\"Expression\");for(var r=0;r<e.cases.length;++r)n(e.cases[r],t)},SwitchCase:function(e,t,n){e.test&&n(e.test,t,\"Expression\");for(var r=0;r<e.consequent.length;++r)n(e.consequent[r],t,\"Statement\")},TryStatement:function(e,t,n){n(e.block,t,\"Statement\"),e.handler&&n(e.handler,t,\"Statement\"),e.finalizer&&n(e.finalizer,t,\"Statement\")},CatchClause:function(e,t,n){n(e.param,t,\"Pattern\"),n(e.body,t,\"ScopeBody\")},Class:function(e,t,n){e.id&&n(e.id,t,\"Pattern\"),e.superClass&&n(e.superClass,t,\"Expression\"),n(e.body,t)},ClassBody:function(e,t,n){for(var r=0;r<e.body.length;r++)n(e.body[r],t)},ClassProperty:function(e,t,n){e.key&&n(e.key,t,\"Expression\"),e.value&&n(e.value,t,\"Expression\")},ClassMethod:function(e,t,n){e.key&&n(e.key,t,\"Expression\"),n(e,t,\"Function\")},ObjectProperty:function(e,t,n){e.key&&n(e.key,t,\"Expression\"),e.value&&n(e.value,t,\"Expression\")},ObjectMethod:function(e,t,n){e.key&&n(e.key,t,\"Expression\"),n(e,t,\"Function\")}},l=u.make(c),p={replace:function(e){return Array.isArray(e)&&1===e.length&&(e=e[0]),\"index\"in this?(r(this.parent[this.field][this.index],e),Array.isArray(e)?[].splice.apply(this.parent[this.field],[this.index,1].concat(e)):this.parent[this.field][this.index]=e):(r(this.parent[this.field],e),Array.isArray(e)?this.parent[this.field]={type:\"BlockStatement\",body:e}:this.parent[this.field]=e),this.self},append:function(e){if(Array.isArray(e)&&1===e.length&&(e=e[0]),!(\"index\"in this))throw new Error(\"Cannot append Element node to non-array\");return Array.isArray(e)?[].splice.apply(this.parent[this.field],[this.index+1,0].concat(e)):this.parent[this.field].splice(this.index+1,0,e),this.self},index:function(){return this.parent[this.field].indexOf(this.self)},removeElement:function(){return this.parent[this.field].splice(this.index,1)[0]},removeNode:function(){var e=this.parent[this.field];return delete this.parent[this.field],e}},h=!1,f={};t.exports={part:o,parse:s,treeWalker:i}},{acorn:15,\"acorn-es7-plugin\":1,\"acorn/dist/walk\":16}],15:[function(e,t,n){!function(e,r){\"object\"==typeof n&&void 0!==t?r(n):\"function\"==typeof define&&define.amd?define([\"exports\"],r):r(e.acorn=e.acorn||{})}(this,function(e){\"use strict\";function t(e,t){for(var n=65536,r=0;r<t.length;r+=2){if((n+=t[r])>e)return!1;if((n+=t[r+1])>=e)return!0}}function n(e,n){return e<65?36===e:e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&k.test(String.fromCharCode(e)):!1!==n&&t(e,_)))}function r(e,n){return e<48?36===e:e<58||!(e<65)&&(e<91||(e<97?95===e:e<123||(e<=65535?e>=170&&A.test(String.fromCharCode(e)):!1!==n&&(t(e,_)||t(e,C)))))}function i(e,t){\n    5  return new L(e,{beforeExpr:!0,binop:t})}function s(e,t){return void 0===t&&(t={}),t.keyword=e,T[e]=new L(e,t)}function o(e){return 10===e||13===e||8232===e||8233===e}function a(e,t){return j.call(e,t)}function u(e,t){for(var n=1,r=0;;){O.lastIndex=r;var i=O.exec(e);if(!(i&&i.index<t))return new V(n,t-r);++n,r=i.index+i[0].length}}function c(e){var t={};for(var n in U)t[n]=e&&a(e,n)?e[n]:U[n];if(t.ecmaVersion>=2015&&(t.ecmaVersion-=2009),null==t.allowReserved&&(t.allowReserved=t.ecmaVersion<5),D(t.onToken)){var r=t.onToken;t.onToken=function(e){return r.push(e)}}return D(t.onComment)&&(t.onComment=l(t,t.onComment)),t}function l(e,t){return function(n,r,i,s,o,a){var u={type:n?\"Block\":\"Line\",value:r,start:i,end:s};e.locations&&(u.loc=new q(this,o,a)),e.ranges&&(u.range=[i,s]),t.push(u)}}function p(e){return new RegExp(\"^(\"+e.replace(/ /g,\"|\")+\")$\")}function h(e,t,n,r){return e.type=t,e.end=n,this.options.locations&&(e.loc.end=r),this.options.ranges&&(e.range[1]=n),e}function f(e,t,n,r){try{return new RegExp(e,t)}catch(e){if(void 0!==n)throw e instanceof SyntaxError&&r.raise(n,\"Error parsing regular expression: \"+e.message),e}}function d(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))}function y(e,t){return new W(t,e).parse()}function m(e,t,n){var r=new W(n,e,t);return r.nextToken(),r.parseExpression()}function g(e,t){return new W(t,e)}function v(t,n,r){e.parse_dammit=t,e.LooseParser=n,e.pluginsLoose=r}var b={3:\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",5:\"class enum extends super const export import\",6:\"enum\",strict:\"implements interface let package private protected public static yield\",strictBind:\"eval arguments\"},x=\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\",w={5:x,6:x+\" const class extends export import super\"},E=\"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\",S=\"‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿\",k=new RegExp(\"[\"+E+\"]\"),A=new RegExp(\"[\"+E+S+\"]\");E=S=null;var _=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541],C=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239],L=function(e,t){void 0===t&&(t={}),this.label=e,this.keyword=t.keyword,this.beforeExpr=!!t.beforeExpr,this.startsExpr=!!t.startsExpr,this.isLoop=!!t.isLoop,this.isAssign=!!t.isAssign,this.prefix=!!t.prefix,this.postfix=!!t.postfix,this.binop=t.binop||null,this.updateContext=null},P={beforeExpr:!0},N={startsExpr:!0},T={},F={num:new L(\"num\",N),regexp:new L(\"regexp\",N),string:new L(\"string\",N),name:new L(\"name\",N),eof:new L(\"eof\"),bracketL:new L(\"[\",{beforeExpr:!0,startsExpr:!0}),bracketR:new L(\"]\"),braceL:new L(\"{\",{beforeExpr:!0,startsExpr:!0}),braceR:new L(\"}\"),parenL:new L(\"(\",{beforeExpr:!0,startsExpr:!0}),parenR:new L(\")\"),comma:new L(\",\",P),semi:new L(\";\",P),colon:new L(\":\",P),dot:new L(\".\"),question:new L(\"?\",P),arrow:new L(\"=>\",P),template:new L(\"template\"),ellipsis:new L(\"...\",P),backQuote:new L(\"`\",N),dollarBraceL:new L(\"${\",{beforeExpr:!0,startsExpr:!0}),eq:new L(\"=\",{beforeExpr:!0,isAssign:!0}),assign:new L(\"_=\",{beforeExpr:!0,isAssign:!0}),incDec:new L(\"++/--\",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new L(\"prefix\",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:i(\"||\",1),logicalAND:i(\"&&\",2),bitwiseOR:i(\"|\",3),bitwiseXOR:i(\"^\",4),bitwiseAND:i(\"&\",5),equality:i(\"==/!=\",6),relational:i(\"</>\",7),bitShift:i(\"<</>>\",8),plusMin:new L(\"+/-\",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:i(\"%\",10),star:i(\"*\",10),slash:i(\"/\",10),starstar:new L(\"**\",{beforeExpr:!0}),_break:s(\"break\"),_case:s(\"case\",P),_catch:s(\"catch\"),_continue:s(\"continue\"),_debugger:s(\"debugger\"),_default:s(\"default\",P),_do:s(\"do\",{isLoop:!0,beforeExpr:!0}),_else:s(\"else\",P),_finally:s(\"finally\"),_for:s(\"for\",{isLoop:!0}),_function:s(\"function\",N),_if:s(\"if\"),_return:s(\"return\",P),_switch:s(\"switch\"),_throw:s(\"throw\",P),_try:s(\"try\"),_var:s(\"var\"),_const:s(\"const\"),_while:s(\"while\",{isLoop:!0}),_with:s(\"with\"),_new:s(\"new\",{beforeExpr:!0,startsExpr:!0}),_this:s(\"this\",N),_super:s(\"super\",N),_class:s(\"class\"),_extends:s(\"extends\",P),_export:s(\"export\"),_import:s(\"import\"),_null:s(\"null\",N),_true:s(\"true\",N),_false:s(\"false\",N),_in:s(\"in\",{beforeExpr:!0,binop:7}),_instanceof:s(\"instanceof\",{beforeExpr:!0,binop:7}),_typeof:s(\"typeof\",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:s(\"void\",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:s(\"delete\",{beforeExpr:!0,prefix:!0,startsExpr:!0})},$=/\\r\\n?|\\n|\\u2028|\\u2029/,O=new RegExp($.source,\"g\"),B=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,R=/(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g,I=Object.prototype,j=I.hasOwnProperty,M=I.toString,D=Array.isArray||function(e){return\"[object Array]\"===M.call(e)},V=function(e,t){this.line=e,this.column=t};V.prototype.offset=function(e){return new V(this.line,this.column+e)};var q=function(e,t,n){this.start=t,this.end=n,null!==e.sourceFile&&(this.source=e.sourceFile)},U={ecmaVersion:7,sourceType:\"script\",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1,plugins:{}},z={},W=function(e,t,n){this.options=e=c(e),this.sourceFile=e.sourceFile,this.keywords=p(w[e.ecmaVersion>=6?6:5]);var r=\"\";if(!e.allowReserved){for(var i=e.ecmaVersion;!(r=b[i]);i--);\"module\"==e.sourceType&&(r+=\" await\")}this.reservedWords=p(r);var s=(r?r+\" \":\"\")+b.strict;this.reservedWordsStrict=p(s),this.reservedWordsStrictBind=p(s+\" \"+b.strictBind),this.input=String(t),this.containsEsc=!1,this.loadPlugins(e.plugins),n?(this.pos=n,this.lineStart=this.input.lastIndexOf(\"\\n\",n-1)+1,this.curLine=this.input.slice(0,this.lineStart).split($).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=F.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule=\"module\"===e.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.inFunction=this.inGenerator=this.inAsync=!1,this.yieldPos=this.awaitPos=0,this.labels=[],0===this.pos&&e.allowHashBang&&\"#!\"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterFunctionScope()};W.prototype.isKeyword=function(e){return this.keywords.test(e)},W.prototype.isReservedWord=function(e){return this.reservedWords.test(e)},W.prototype.extend=function(e,t){this[e]=t(this[e])},W.prototype.loadPlugins=function(e){var t=this;for(var n in e){var r=z[n];if(!r)throw new Error(\"Plugin '\"+n+\"' not found\");r(t,e[n])}},W.prototype.parse=function(){var e=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(e)};var G=W.prototype,J=/^(?:'((?:[^']|\\.)*)'|\"((?:[^\"]|\\.)*)\"|;)/;G.strictDirective=function(e){for(var t=this;;){R.lastIndex=e,e+=R.exec(t.input)[0].length;var n=J.exec(t.input.slice(e));if(!n)return!1;if(\"use strict\"==(n[1]||n[2]))return!0;e+=n[0].length}},G.eat=function(e){return this.type===e&&(this.next(),!0)},G.isContextual=function(e){return this.type===F.name&&this.value===e},G.eatContextual=function(e){return this.value===e&&this.eat(F.name)},G.expectContextual=function(e){this.eatContextual(e)||this.unexpected()},G.canInsertSemicolon=function(){return this.type===F.eof||this.type===F.braceR||$.test(this.input.slice(this.lastTokEnd,this.start))},G.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},G.semicolon=function(){this.eat(F.semi)||this.insertSemicolon()||this.unexpected()},G.afterTrailingComma=function(e,t){if(this.type==e)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),t||this.next(),!0},G.expect=function(e){this.eat(e)||this.unexpected()},G.unexpected=function(e){this.raise(null!=e?e:this.start,\"Unexpected token\")};var Y=function(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=-1};G.checkPatternErrors=function(e,t){if(e){e.trailingComma>-1&&this.raiseRecoverable(e.trailingComma,\"Comma is not permitted after the rest element\");var n=t?e.parenthesizedAssign:e.parenthesizedBind;n>-1&&this.raiseRecoverable(n,\"Parenthesized pattern\")}},G.checkExpressionErrors=function(e,t){var n=e?e.shorthandAssign:-1;if(!t)return n>=0;n>-1&&this.raise(n,\"Shorthand property assignments are valid only in destructuring patterns\")},G.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,\"Yield expression cannot be a default value\"),this.awaitPos&&this.raise(this.awaitPos,\"Await expression cannot be a default value\")},G.isSimpleAssignTarget=function(e){return\"ParenthesizedExpression\"===e.type?this.isSimpleAssignTarget(e.expression):\"Identifier\"===e.type||\"MemberExpression\"===e.type};var H=W.prototype;H.parseTopLevel=function(e){var t=this,n={};for(e.body||(e.body=[]);this.type!==F.eof;){var r=t.parseStatement(!0,!0,n);e.body.push(r)}return this.next(),this.options.ecmaVersion>=6&&(e.sourceType=this.options.sourceType),this.finishNode(e,\"Program\")};var Z={kind:\"loop\"},Q={kind:\"switch\"};H.isLet=function(){if(this.type!==F.name||this.options.ecmaVersion<6||\"let\"!=this.value)return!1;R.lastIndex=this.pos;var e=R.exec(this.input),t=this.pos+e[0].length,i=this.input.charCodeAt(t);if(91===i||123==i)return!0;if(n(i,!0)){for(var s=t+1;r(this.input.charCodeAt(s),!0);)++s;var o=this.input.slice(t,s);if(!this.isKeyword(o))return!0}return!1},H.isAsyncFunction=function(){if(this.type!==F.name||this.options.ecmaVersion<8||\"async\"!=this.value)return!1;R.lastIndex=this.pos;var e=R.exec(this.input),t=this.pos+e[0].length;return!($.test(this.input.slice(this.pos,t))||\"function\"!==this.input.slice(t,t+8)||t+8!=this.input.length&&r(this.input.charAt(t+8)))},H.parseStatement=function(e,t,n){var r,i=this.type,s=this.startNode();switch(this.isLet()&&(i=F._var,r=\"let\"),i){case F._break:case F._continue:return this.parseBreakContinueStatement(s,i.keyword);case F._debugger:return this.parseDebuggerStatement(s);case F._do:return this.parseDoStatement(s);case F._for:return this.parseForStatement(s);case F._function:return!e&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(s,!1);case F._class:return e||this.unexpected(),this.parseClass(s,!0);case F._if:return this.parseIfStatement(s);case F._return:return this.parseReturnStatement(s);case F._switch:return this.parseSwitchStatement(s);case F._throw:return this.parseThrowStatement(s);case F._try:return this.parseTryStatement(s);case F._const:case F._var:return r=r||this.value,e||\"var\"==r||this.unexpected(),this.parseVarStatement(s,r);case F._while:return this.parseWhileStatement(s);case F._with:return this.parseWithStatement(s);case F.braceL:return this.parseBlock();case F.semi:return this.parseEmptyStatement(s);case F._export:case F._import:return this.options.allowImportExportEverywhere||(t||this.raise(this.start,\"'import' and 'export' may only appear at the top level\"),this.inModule||this.raise(this.start,\"'import' and 'export' may appear only with 'sourceType: module'\")),i===F._import?this.parseImport(s):this.parseExport(s,n);default:if(this.isAsyncFunction()&&e)return this.next(),this.parseFunctionStatement(s,!0);var o=this.value,a=this.parseExpression();return i===F.name&&\"Identifier\"===a.type&&this.eat(F.colon)?this.parseLabeledStatement(s,o,a):this.parseExpressionStatement(s,a)}},H.parseBreakContinueStatement=function(e,t){var n=this,r=\"break\"==t;this.next(),this.eat(F.semi)||this.insertSemicolon()?e.label=null:this.type!==F.name?this.unexpected():(e.label=this.parseIdent(),this.semicolon());for(var i=0;i<this.labels.length;++i){var s=n.labels[i];if(null==e.label||s.name===e.label.name){if(null!=s.kind&&(r||\"loop\"===s.kind))break;if(e.label&&r)break}}return i===this.labels.length&&this.raise(e.start,\"Unsyntactic \"+t),this.finishNode(e,r?\"BreakStatement\":\"ContinueStatement\")},H.parseDebuggerStatement=function(e){return this.next(),this.semicolon(),this.finishNode(e,\"DebuggerStatement\")},H.parseDoStatement=function(e){return this.next(),this.labels.push(Z),e.body=this.parseStatement(!1),this.labels.pop(),this.expect(F._while),e.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(F.semi):this.semicolon(),this.finishNode(e,\"DoWhileStatement\")},H.parseForStatement=function(e){if(this.next(),this.labels.push(Z),this.enterLexicalScope(),this.expect(F.parenL),this.type===F.semi)return this.parseFor(e,null);var t=this.isLet();if(this.type===F._var||this.type===F._const||t){var n=this.startNode(),r=t?\"let\":this.value;return this.next(),this.parseVar(n,!0,r),this.finishNode(n,\"VariableDeclaration\"),!(this.type===F._in||this.options.ecmaVersion>=6&&this.isContextual(\"of\"))||1!==n.declarations.length||\"var\"!==r&&n.declarations[0].init?this.parseFor(e,n):this.parseForIn(e,n)}var i=new Y,s=this.parseExpression(!0,i);return this.type===F._in||this.options.ecmaVersion>=6&&this.isContextual(\"of\")?(this.toAssignable(s),this.checkLVal(s),this.checkPatternErrors(i,!0),this.parseForIn(e,s)):(this.checkExpressionErrors(i,!0),this.parseFor(e,s))},H.parseFunctionStatement=function(e,t){return this.next(),this.parseFunction(e,!0,!1,t)},H.isFunction=function(){return this.type===F._function||this.isAsyncFunction()},H.parseIfStatement=function(e){return this.next(),e.test=this.parseParenExpression(),e.consequent=this.parseStatement(!this.strict&&this.isFunction()),e.alternate=this.eat(F._else)?this.parseStatement(!this.strict&&this.isFunction()):null,this.finishNode(e,\"IfStatement\")},H.parseReturnStatement=function(e){return this.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.start,\"'return' outside of function\"),this.next(),this.eat(F.semi)||this.insertSemicolon()?e.argument=null:(e.argument=this.parseExpression(),this.semicolon()),this.finishNode(e,\"ReturnStatement\")},H.parseSwitchStatement=function(e){var t=this;this.next(),e.discriminant=this.parseParenExpression(),e.cases=[],this.expect(F.braceL),this.labels.push(Q),this.enterLexicalScope();for(var n,r=!1;this.type!=F.braceR;)if(t.type===F._case||t.type===F._default){var i=t.type===F._case;n&&t.finishNode(n,\"SwitchCase\"),e.cases.push(n=t.startNode()),n.consequent=[],t.next(),i?n.test=t.parseExpression():(r&&t.raiseRecoverable(t.lastTokStart,\"Multiple default clauses\"),r=!0,n.test=null),t.expect(F.colon)}else n||t.unexpected(),n.consequent.push(t.parseStatement(!0));return this.exitLexicalScope(),n&&this.finishNode(n,\"SwitchCase\"),this.next(),this.labels.pop(),this.finishNode(e,\"SwitchStatement\")},H.parseThrowStatement=function(e){return this.next(),$.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,\"Illegal newline after throw\"),e.argument=this.parseExpression(),this.semicolon(),this.finishNode(e,\"ThrowStatement\")};var X=[];H.parseTryStatement=function(e){if(this.next(),e.block=this.parseBlock(),e.handler=null,this.type===F._catch){var t=this.startNode();this.next(),this.expect(F.parenL),t.param=this.parseBindingAtom(),this.enterLexicalScope(),this.checkLVal(t.param,\"let\"),this.expect(F.parenR),t.body=this.parseBlock(!1),this.exitLexicalScope(),e.handler=this.finishNode(t,\"CatchClause\")}return e.finalizer=this.eat(F._finally)?this.parseBlock():null,e.handler||e.finalizer||this.raise(e.start,\"Missing catch or finally clause\"),this.finishNode(e,\"TryStatement\")},H.parseVarStatement=function(e,t){return this.next(),this.parseVar(e,!1,t),this.semicolon(),this.finishNode(e,\"VariableDeclaration\")},H.parseWhileStatement=function(e){return this.next(),e.test=this.parseParenExpression(),this.labels.push(Z),e.body=this.parseStatement(!1),this.labels.pop(),this.finishNode(e,\"WhileStatement\")},H.parseWithStatement=function(e){return this.strict&&this.raise(this.start,\"'with' in strict mode\"),this.next(),e.object=this.parseParenExpression(),e.body=this.parseStatement(!1),this.finishNode(e,\"WithStatement\")},H.parseEmptyStatement=function(e){return this.next(),this.finishNode(e,\"EmptyStatement\")},H.parseLabeledStatement=function(e,t,n){for(var r=this,i=0;i<this.labels.length;++i)r.labels[i].name===t&&r.raise(n.start,\"Label '\"+t+\"' is already declared\");for(var s=this.type.isLoop?\"loop\":this.type===F._switch?\"switch\":null,o=this.labels.length-1;o>=0;o--){var a=r.labels[o];if(a.statementStart!=e.start)break;a.statementStart=r.start,a.kind=s}return this.labels.push({name:t,kind:s,statementStart:this.start}),e.body=this.parseStatement(!0),(\"ClassDeclaration\"==e.body.type||\"VariableDeclaration\"==e.body.type&&\"var\"!=e.body.kind||\"FunctionDeclaration\"==e.body.type&&(this.strict||e.body.generator))&&this.raiseRecoverable(e.body.start,\"Invalid labeled declaration\"),this.labels.pop(),e.label=n,this.finishNode(e,\"LabeledStatement\")},H.parseExpressionStatement=function(e,t){return e.expression=t,this.semicolon(),this.finishNode(e,\"ExpressionStatement\")},H.parseBlock=function(e){var t=this;void 0===e&&(e=!0);var n=this.startNode();for(n.body=[],this.expect(F.braceL),e&&this.enterLexicalScope();!this.eat(F.braceR);){var r=t.parseStatement(!0);n.body.push(r)}return e&&this.exitLexicalScope(),this.finishNode(n,\"BlockStatement\")},H.parseFor=function(e,t){return e.init=t,this.expect(F.semi),e.test=this.type===F.semi?null:this.parseExpression(),this.expect(F.semi),e.update=this.type===F.parenR?null:this.parseExpression(),this.expect(F.parenR),this.exitLexicalScope(),e.body=this.parseStatement(!1),this.labels.pop(),this.finishNode(e,\"ForStatement\")},H.parseForIn=function(e,t){var n=this.type===F._in?\"ForInStatement\":\"ForOfStatement\";return this.next(),e.left=t,e.right=this.parseExpression(),this.expect(F.parenR),this.exitLexicalScope(),e.body=this.parseStatement(!1),this.labels.pop(),this.finishNode(e,n)},H.parseVar=function(e,t,n){var r=this;for(e.declarations=[],e.kind=n;;){var i=r.startNode();if(r.parseVarId(i,n),r.eat(F.eq)?i.init=r.parseMaybeAssign(t):\"const\"!==n||r.type===F._in||r.options.ecmaVersion>=6&&r.isContextual(\"of\")?\"Identifier\"==i.id.type||t&&(r.type===F._in||r.isContextual(\"of\"))?i.init=null:r.raise(r.lastTokEnd,\"Complex binding patterns require an initialization value\"):r.unexpected(),e.declarations.push(r.finishNode(i,\"VariableDeclarator\")),!r.eat(F.comma))break}return e},H.parseVarId=function(e,t){e.id=this.parseBindingAtom(t),this.checkLVal(e.id,t,!1)},H.parseFunction=function(e,t,n,r){this.initFunction(e),this.options.ecmaVersion>=6&&!r&&(e.generator=this.eat(F.star)),this.options.ecmaVersion>=8&&(e.async=!!r),t&&(e.id=\"nullableID\"===t&&this.type!=F.name?null:this.parseIdent(),e.id&&this.checkLVal(e.id,\"var\"));var i=this.inGenerator,s=this.inAsync,o=this.yieldPos,a=this.awaitPos,u=this.inFunction;return this.inGenerator=e.generator,this.inAsync=e.async,this.yieldPos=0,this.awaitPos=0,this.inFunction=!0,this.enterFunctionScope(),t||(e.id=this.type==F.name?this.parseIdent():null),this.parseFunctionParams(e),this.parseFunctionBody(e,n),this.inGenerator=i,this.inAsync=s,this.yieldPos=o,this.awaitPos=a,this.inFunction=u,this.finishNode(e,t?\"FunctionDeclaration\":\"FunctionExpression\")},H.parseFunctionParams=function(e){this.expect(F.parenL),e.params=this.parseBindingList(F.parenR,!1,this.options.ecmaVersion>=8,!0),this.checkYieldAwaitInDefaultParams()},H.parseClass=function(e,t){var n=this;this.next(),this.parseClassId(e,t),this.parseClassSuper(e);var r=this.startNode(),i=!1;for(r.body=[],this.expect(F.braceL);!this.eat(F.braceR);)if(!n.eat(F.semi)){var s=n.startNode(),o=n.eat(F.star),a=!1,u=n.type===F.name&&\"static\"===n.value;n.parsePropertyName(s),s.static=u&&n.type!==F.parenL,s.static&&(o&&n.unexpected(),o=n.eat(F.star),n.parsePropertyName(s)),n.options.ecmaVersion>=8&&!o&&!s.computed&&\"Identifier\"===s.key.type&&\"async\"===s.key.name&&n.type!==F.parenL&&!n.canInsertSemicolon()&&(a=!0,n.parsePropertyName(s)),s.kind=\"method\";var c=!1;if(!s.computed){var l=s.key;o||a||\"Identifier\"!==l.type||n.type===F.parenL||\"get\"!==l.name&&\"set\"!==l.name||(c=!0,s.kind=l.name,l=n.parsePropertyName(s)),!s.static&&(\"Identifier\"===l.type&&\"constructor\"===l.name||\"Literal\"===l.type&&\"constructor\"===l.value)&&(i&&n.raise(l.start,\"Duplicate constructor in the same class\"),c&&n.raise(l.start,\"Constructor can't have get/set modifier\"),o&&n.raise(l.start,\"Constructor can't be a generator\"),a&&n.raise(l.start,\"Constructor can't be an async method\"),s.kind=\"constructor\",i=!0)}if(n.parseClassMethod(r,s,o,a),c){var p=\"get\"===s.kind?0:1;if(s.value.params.length!==p){var h=s.value.start;\"get\"===s.kind?n.raiseRecoverable(h,\"getter should have no params\"):n.raiseRecoverable(h,\"setter should have exactly one param\")}else\"set\"===s.kind&&\"RestElement\"===s.value.params[0].type&&n.raiseRecoverable(s.value.params[0].start,\"Setter cannot use rest params\")}}return e.body=this.finishNode(r,\"ClassBody\"),this.finishNode(e,t?\"ClassDeclaration\":\"ClassExpression\")},H.parseClassMethod=function(e,t,n,r){t.value=this.parseMethod(n,r),e.body.push(this.finishNode(t,\"MethodDefinition\"))},H.parseClassId=function(e,t){e.id=this.type===F.name?this.parseIdent():!0===t?this.unexpected():null},H.parseClassSuper=function(e){e.superClass=this.eat(F._extends)?this.parseExprSubscripts():null},H.parseExport=function(e,t){var n=this;if(this.next(),this.eat(F.star))return this.expectContextual(\"from\"),e.source=this.type===F.string?this.parseExprAtom():this.unexpected(),this.semicolon(),this.finishNode(e,\"ExportAllDeclaration\");if(this.eat(F._default)){this.checkExport(t,\"default\",this.lastTokStart);var r;if(this.type===F._function||(r=this.isAsyncFunction())){var i=this.startNode();this.next(),r&&this.next(),e.declaration=this.parseFunction(i,\"nullableID\",!1,r)}else if(this.type===F._class){var s=this.startNode();e.declaration=this.parseClass(s,\"nullableID\")}else e.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(e,\"ExportDefaultDeclaration\")}if(this.shouldParseExportStatement())e.declaration=this.parseStatement(!0),\"VariableDeclaration\"===e.declaration.type?this.checkVariableExport(t,e.declaration.declarations):this.checkExport(t,e.declaration.id.name,e.declaration.id.start),e.specifiers=[],e.source=null;else{if(e.declaration=null,e.specifiers=this.parseExportSpecifiers(t),this.eatContextual(\"from\"))e.source=this.type===F.string?this.parseExprAtom():this.unexpected();else{for(var o=0;o<e.specifiers.length;o++)(n.keywords.test(e.specifiers[o].local.name)||n.reservedWords.test(e.specifiers[o].local.name))&&n.unexpected(e.specifiers[o].local.start);e.source=null}this.semicolon()}return this.finishNode(e,\"ExportNamedDeclaration\")},H.checkExport=function(e,t,n){e&&(a(e,t)&&this.raiseRecoverable(n,\"Duplicate export '\"+t+\"'\"),e[t]=!0)},H.checkPatternExport=function(e,t){var n=this,r=t.type;if(\"Identifier\"==r)this.checkExport(e,t.name,t.start);else if(\"ObjectPattern\"==r)for(var i=0;i<t.properties.length;++i)n.checkPatternExport(e,t.properties[i].value);else if(\"ArrayPattern\"==r)for(var s=0;s<t.elements.length;++s){var o=t.elements[s];o&&n.checkPatternExport(e,o)}else\"AssignmentPattern\"==r?this.checkPatternExport(e,t.left):\"ParenthesizedExpression\"==r&&this.checkPatternExport(e,t.expression)},H.checkVariableExport=function(e,t){var n=this;if(e)for(var r=0;r<t.length;r++)n.checkPatternExport(e,t[r].id)},H.shouldParseExportStatement=function(){return\"var\"===this.type.keyword||\"const\"===this.type.keyword||\"class\"===this.type.keyword||\"function\"===this.type.keyword||this.isLet()||this.isAsyncFunction()},H.parseExportSpecifiers=function(e){var t=this,n=[],r=!0;for(this.expect(F.braceL);!this.eat(F.braceR);){if(r)r=!1;else if(t.expect(F.comma),t.afterTrailingComma(F.braceR))break;var i=t.startNode();i.local=t.parseIdent(!0),i.exported=t.eatContextual(\"as\")?t.parseIdent(!0):i.local,t.checkExport(e,i.exported.name,i.exported.start),n.push(t.finishNode(i,\"ExportSpecifier\"))}return n},H.parseImport=function(e){return this.next(),this.type===F.string?(e.specifiers=X,e.source=this.parseExprAtom()):(e.specifiers=this.parseImportSpecifiers(),this.expectContextual(\"from\"),e.source=this.type===F.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(e,\"ImportDeclaration\")},H.parseImportSpecifiers=function(){var e=this,t=[],n=!0;if(this.type===F.name){var r=this.startNode();if(r.local=this.parseIdent(),this.checkLVal(r.local,\"let\"),t.push(this.finishNode(r,\"ImportDefaultSpecifier\")),!this.eat(F.comma))return t}if(this.type===F.star){var i=this.startNode();return this.next(),this.expectContextual(\"as\"),i.local=this.parseIdent(),this.checkLVal(i.local,\"let\"),t.push(this.finishNode(i,\"ImportNamespaceSpecifier\")),t}for(this.expect(F.braceL);!this.eat(F.braceR);){if(n)n=!1;else if(e.expect(F.comma),e.afterTrailingComma(F.braceR))break;var s=e.startNode();s.imported=e.parseIdent(!0),e.eatContextual(\"as\")?s.local=e.parseIdent():(s.local=s.imported,e.isKeyword(s.local.name)&&e.unexpected(s.local.start),e.reservedWordsStrict.test(s.local.name)&&e.raiseRecoverable(s.local.start,\"The keyword '\"+s.local.name+\"' is reserved\")),e.checkLVal(s.local,\"let\"),t.push(e.finishNode(s,\"ImportSpecifier\"))}return t};var K=W.prototype;K.toAssignable=function(e,t){var n=this;if(this.options.ecmaVersion>=6&&e)switch(e.type){case\"Identifier\":this.inAsync&&\"await\"===e.name&&this.raise(e.start,\"Can not use 'await' as identifier inside an async function\");break;case\"ObjectPattern\":case\"ArrayPattern\":break;case\"ObjectExpression\":e.type=\"ObjectPattern\";for(var r=0;r<e.properties.length;r++){var i=e.properties[r];\"init\"!==i.kind&&n.raise(i.key.start,\"Object pattern can't contain getter or setter\"),n.toAssignable(i.value,t)}break;case\"ArrayExpression\":e.type=\"ArrayPattern\",this.toAssignableList(e.elements,t);break;case\"AssignmentExpression\":if(\"=\"!==e.operator){this.raise(e.left.end,\"Only '=' operator can be used for specifying default value.\");break}e.type=\"AssignmentPattern\",delete e.operator,this.toAssignable(e.left,t);case\"AssignmentPattern\":break;case\"ParenthesizedExpression\":e.expression=this.toAssignable(e.expression,t);break;case\"MemberExpression\":if(!t)break;default:this.raise(e.start,\"Assigning to rvalue\")}return e},K.toAssignableList=function(e,t){var n=this,r=e.length;if(r){var i=e[r-1];if(i&&\"RestElement\"==i.type)--r;else if(i&&\"SpreadElement\"==i.type){i.type=\"RestElement\";var s=i.argument;this.toAssignable(s,t),\"Identifier\"!==s.type&&\"MemberExpression\"!==s.type&&\"ArrayPattern\"!==s.type&&this.unexpected(s.start),--r}t&&i&&\"RestElement\"===i.type&&\"Identifier\"!==i.argument.type&&this.unexpected(i.argument.start)}for(var o=0;o<r;o++){var a=e[o];a&&n.toAssignable(a,t)}return e},K.parseSpread=function(e){var t=this.startNode();return this.next(),t.argument=this.parseMaybeAssign(!1,e),this.finishNode(t,\"SpreadElement\")},K.parseRest=function(e){var t=this.startNode();return this.next(),t.argument=e?this.type===F.name?this.parseIdent():this.unexpected():this.type===F.name||this.type===F.bracketL?this.parseBindingAtom():this.unexpected(),this.finishNode(t,\"RestElement\")},K.parseBindingAtom=function(){if(this.options.ecmaVersion<6)return this.parseIdent();switch(this.type){case F.name:return this.parseIdent();case F.bracketL:var e=this.startNode();return this.next(),e.elements=this.parseBindingList(F.bracketR,!0,!0),this.finishNode(e,\"ArrayPattern\");case F.braceL:return this.parseObj(!0);default:this.unexpected()}},K.parseBindingList=function(e,t,n,r){for(var i=this,s=[],o=!0;!this.eat(e);)if(o?o=!1:i.expect(F.comma),t&&i.type===F.comma)s.push(null);else{if(n&&i.afterTrailingComma(e))break;if(i.type===F.ellipsis){var a=i.parseRest(r);i.parseBindingListItem(a),s.push(a),i.type===F.comma&&i.raise(i.start,\"Comma is not permitted after the rest element\"),i.expect(e);break}var u=i.parseMaybeDefault(i.start,i.startLoc);i.parseBindingListItem(u),s.push(u)}return s},K.parseBindingListItem=function(e){return e},K.parseMaybeDefault=function(e,t,n){if(n=n||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(F.eq))return n;var r=this.startNodeAt(e,t);return r.left=n,r.right=this.parseMaybeAssign(),this.finishNode(r,\"AssignmentPattern\")},K.checkLVal=function(e,t,n){var r=this;switch(e.type){case\"Identifier\":this.strict&&this.reservedWordsStrictBind.test(e.name)&&this.raiseRecoverable(e.start,(t?\"Binding \":\"Assigning to \")+e.name+\" in strict mode\"),n&&(a(n,e.name)&&this.raiseRecoverable(e.start,\"Argument name clash\"),n[e.name]=!0),t&&\"none\"!==t&&((\"var\"===t&&!this.canDeclareVarName(e.name)||\"var\"!==t&&!this.canDeclareLexicalName(e.name))&&this.raiseRecoverable(e.start,\"Identifier '\"+e.name+\"' has already been declared\"),\"var\"===t?this.declareVarName(e.name):this.declareLexicalName(e.name));break;case\"MemberExpression\":t&&this.raiseRecoverable(e.start,(t?\"Binding\":\"Assigning to\")+\" member expression\");break;case\"ObjectPattern\":\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\dist\\regenerator.min.js:\n    <binary>\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\ajv.js:\n  160                          : SCHEMA_URI_FORMAT;\n  161      var valid;\n  162:     try { valid = validate($schema, schema); }\n  163      finally { self._formats.uri = currentUriFormat; }\n  164      if (!valid && throwOrLogError) {\n  ...\n  326  \n  327      var v;\n  328:     try { v = compileSchema.call(self, schemaObj.schema, root, schemaObj.localRefs); }\n  329      finally {\n  330        schemaObj.compiling = false;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\async.js:\n   68  function checkGenerators(opts, required) {\n   69    /* jshint evil: true */\n   70:   try {\n   71      (new Function('(function*(){})()'))();\n   72      return true;\n   ..\n   80  function checkAsyncFunction(opts, required) {\n   81    /* jshint evil: true */\n   82:   try {\n   83      (new Function('(async function(){})()'))();\n   84      /* istanbul ignore next */\n   ..\n   91  \n   92  function getRegenerator(opts, required) {\n   93:   try {\n   94      if (!regenerator) {\n   95        var name = 'regenerator';\n   ..\n  114  function getNodent(opts, required) {\n  115    /* jshint evil: true */\n  116:   try {\n  117      if (!nodent) {\n  118        var name = 'nodent';\n  ...\n  148    var schemaObj;\n  149    var self = this;\n  150:   try {\n  151      schemaObj = this._addSchema(schema);\n  152    } catch(e) {\n  ...\n  165    function _compileAsync(schema, callback, firstCall) {\n  166      var validate;\n  167:     try { validate = self.compile(schema); }\n  168      catch(e) {\n  169        if (e.missingSchema) loadMissingSchema(e);\n  ...\n  200          if (err) return callback(err);\n  201          if (!(self._refs[ref] || self._schemas[ref])) {\n  202:           try {\n  203              self.addSchema(sch, ref);\n  204            } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\compile\\formats.js:\n  125  \n  126  function regex(str) {\n  127:   try {\n  128      new RegExp(str);\n  129      return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\compile\\index.js:\n   11    if (beautify === undefined) {\n   12      var name = 'js-beautify';\n   13:     try { beautify = require(name).js_beautify; }\n   14      catch(e) { beautify = false; }\n   15    }\n   ..\n   64    var RULES = this.RULES;\n   65  \n   66:   try {\n   67      var v = localCompile(schema, root, localRefs, baseId);\n   68      compilation.validate = v;\n   ..\n  132      var validate, validateCode\n  133        , transpile = opts._transpileFunc;\n  134:     try {\n  135        validateCode = $async && transpile\n  136                        ? transpile(sourceCode)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\dot\\custom.jst:\n  109        {{ $ruleErrs = 'customErrors' + $lvl; }}\n  110        var {{=$ruleErrs}} = null;\n  111:       try {\n  112          {{=$valid}} = {{=it.yieldAwait}}{{= def_callRuleValidate }};\n  113        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\dot\\ref.jst:\n   69    {{? $async }}\n   70      {{ if (!it.async) throw new Error('async schema referenced by sync schema'); }}\n   71:     try { {{? $breakOnError }}var {{=$valid}} ={{?}} {{=it.yieldAwait}} {{=__callValidate}}; }\n   72      catch (e) {\n   73        if (!(e instanceof ValidationError)) throw e;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\dotjs\\custom.js:\n   98        if ($asyncKeyword) {\n   99          $ruleErrs = 'customErrors' + $lvl;\n  100:         out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = ' + (it.yieldAwait) + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n  101        } else {\n  102          out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\lib\\dotjs\\ref.js:\n  101      if ($async) {\n  102        if (!it.async) throw new Error('async schema referenced by sync schema');\n  103:       out += ' try { ';\n  104        if ($breakOnError) {\n  105          out += 'var ' + ($valid) + ' =';\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ajv\\scripts\\compile-dots.js:\n   21  \n   22  var dotjsPath = path.join(filesRootPath, './dotjs');\n   23: try { fs.mkdirSync(dotjsPath); } catch(e) {}\n   24  \n   25  console.log('\\n\\nCompiling:');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\argparse\\lib\\argument_parser.js:\n  284  \n  285    // parse the arguments and exit if there are any errors\n  286:   try {\n  287      var res = this._parseKnownArgs(args, namespace);\n  288  \n  ...\n  616      } else {\n  617        // replace arguments referencing files with the file content\n  618:       try {\n  619          var argstrs = [];\n  620          var filename = argString.slice(1);\n  ...\n  960  \n  961    // convert the value to the appropriate type\n  962:   try {\n  963      result = typeFunction(argString);\n  964  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\asn1\\tst\\ber\\reader.test.js:\n   16    BerReader = require('../../lib/index').BerReader;\n   17    t.ok(BerReader);\n   18:   try {\n   19      new BerReader();\n   20      t.fail('Should have thrown');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\async\\asyncify.js:\n   79      return (0, _initialParams2.default)(function (args, callback) {\n   80          var result;\n   81:         try {\n   82              result = func.apply(this, args);\n   83          } catch (e) {\n   ..\n   98  \n   99  function invokeCallback(callback, error, value) {\n  100:     try {\n  101          callback(error, value);\n  102      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\async\\eachOf.js:\n   96   *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n   97   *         if (err) return callback(err);\n   98:  *         try {\n   99   *             configs[key] = JSON.parse(data);\n  100   *         } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\async\\forEachOf.js:\n   96   *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n   97   *         if (err) return callback(err);\n   98:  *         try {\n   99   *             configs[key] = JSON.parse(data);\n  100   *         } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\async\\README.md:\n   24      fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n   25          if (err) return callback(err);\n   26:         try {\n   27              configs[key] = JSON.parse(data);\n   28          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\async\\wrapSync.js:\n   79      return (0, _initialParams2.default)(function (args, callback) {\n   80          var result;\n   81:         try {\n   82              result = func.apply(this, args);\n   83          } catch (e) {\n   ..\n   98  \n   99  function invokeCallback(callback, error, value) {\n  100:     try {\n  101          callback(error, value);\n  102      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\async\\dist\\async.js:\n  193      return initialParams(function (args, callback) {\n  194          var result;\n  195:         try {\n  196              result = func.apply(this, args);\n  197          } catch (e) {\n  ...\n  212  \n  213  function invokeCallback(callback, error, value) {\n  214:     try {\n  215          callback(error, value);\n  216      } catch (e) {\n  ...\n  290        tag = value[symToStringTag$1];\n  291  \n  292:   try {\n  293      value[symToStringTag$1] = undefined;\n  294      var unmasked = true;\n  ...\n  753  /** Used to access faster Node.js helpers. */\n  754  var nodeUtil = (function() {\n  755:   try {\n  756      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  757    } catch (e) {}\n  ...\n 1086   *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n 1087   *         if (err) return callback(err);\n 1088:  *         try {\n 1089   *             configs[key] = JSON.parse(data);\n 1090   *         } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\autoprefixer\\node_modules\\browserslist\\cli.js:\n   74  \n   75    var browsers\n   76:   try {\n   77      browsers = browserslist(queries, opts)\n   78    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\autoprefixer\\node_modules\\browserslist\\index.js:\n  254    if (stats) {\n  255      if (typeof stats === 'string') {\n  256:       try {\n  257          stats = JSON.parse(fs.readFileSync(stats))\n  258        } catch (e) {\n  ...\n  396      var pkgBrowserslist\n  397      if (isFile(pkg)) {\n  398:       try {\n  399          pkgBrowserslist = parsePackage(pkg)\n  400        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-core\\lib\\api\\node.js:\n  131  \n  132      if (!err) {\n  133:       try {\n  134          result = transform(code, opts);\n  135        } catch (_err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-core\\lib\\helpers\\resolve.js:\n   25    }\n   26  \n   27:   try {\n   28      return _module2.default._resolveFilename(loc, relativeMod);\n   29    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-core\\lib\\transformation\\file\\index.js:\n  558      code = code + \"\";\n  559  \n  560:     try {\n  561        if (this.shouldIgnore()) {\n  562          return this.makeResult({ code: code, ignored: true });\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-core\\lib\\transformation\\file\\options\\build-config-chain.js:\n  147      var options = void 0;\n  148  \n  149:     try {\n  150        options = jsonCache[content] = jsonCache[content] || json.parse(content);\n  151        if (key) options = options[key];\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-core\\lib\\transformation\\file\\options\\option-manager.js:\n  286  \n  287        var presetLoc = void 0;\n  288:       try {\n  289          if (typeof val === \"string\") {\n  290            presetLoc = (0, _resolvePreset2.default)(val, dirname);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-helper-remap-async-to-generator\\lib\\for-await.js:\n   68  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n   69  \n   70: var buildForAwait = (0, _babelTemplate2.default)(\"\\n  function* wrapper() {\\n    var ITERATOR_COMPLETION = true;\\n    var ITERATOR_HAD_ERROR_KEY = false;\\n    var ITERATOR_ERROR_KEY = undefined;\\n    try {\\n      for (\\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\\n        (\\n          STEP_KEY = yield AWAIT(ITERATOR_KEY.next()),\\n          ITERATOR_COMPLETION = STEP_KEY.done,\\n          STEP_VALUE = yield AWAIT(STEP_KEY.value),\\n          !ITERATOR_COMPLETION\\n        );\\n        ITERATOR_COMPLETION = true) {\\n      }\\n    } catch (err) {\\n      ITERATOR_HAD_ERROR_KEY = true;\\n      ITERATOR_ERROR_KEY = err;\\n    } finally {\\n      try {\\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\\n          yield AWAIT(ITERATOR_KEY.return());\\n        }\\n      } finally {\\n        if (ITERATOR_HAD_ERROR_KEY) {\\n          throw ITERATOR_ERROR_KEY;\\n        }\\n      }\\n    }\\n  }\\n\");\n   71  \n   72  var forAwaitVisitor = {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-helpers\\lib\\helpers.js:\n   19  helpers.asyncIterator = (0, _babelTemplate2.default)(\"\\n  (function (iterable) {\\n    if (typeof Symbol === \\\"function\\\") {\\n      if (Symbol.asyncIterator) {\\n        var method = iterable[Symbol.asyncIterator];\\n        if (method != null) return method.call(iterable);\\n      }\\n      if (Symbol.iterator) {\\n        return iterable[Symbol.iterator]();\\n      }\\n    }\\n    throw new TypeError(\\\"Object is not async iterable\\\");\\n  })\\n\");\n   20  \n   21: helpers.asyncGenerator = (0, _babelTemplate2.default)(\"\\n  (function () {\\n    function AwaitValue(value) {\\n      this.value = value;\\n    }\\n\\n    function AsyncGenerator(gen) {\\n      var front, back;\\n\\n      function send(key, arg) {\\n        return new Promise(function (resolve, reject) {\\n          var request = {\\n            key: key,\\n            arg: arg,\\n            resolve: resolve,\\n            reject: reject,\\n            next: null\\n          };\\n\\n          if (back) {\\n            back = back.next = request;\\n          } else {\\n            front = back = request;\\n            resume(key, arg);\\n          }\\n        });\\n      }\\n\\n      function resume(key, arg) {\\n        try {\\n          var result = gen[key](arg)\\n          var value = result.value;\\n          if (value instanceof AwaitValue) {\\n            Promise.resolve(value.value).then(\\n              function (arg) { resume(\\\"next\\\", arg); },\\n              function (arg) { resume(\\\"throw\\\", arg); });\\n          } else {\\n            settle(result.done ? \\\"return\\\" : \\\"normal\\\", result.value);\\n          }\\n        } catch (err) {\\n          settle(\\\"throw\\\", err);\\n        }\\n      }\\n\\n      function settle(type, value) {\\n        switch (type) {\\n          case \\\"return\\\":\\n            front.resolve({ value: value, done: true });\\n            break;\\n          case \\\"throw\\\":\\n            front.reject(value);\\n            break;\\n          default:\\n            front.resolve({ value: value, done: false });\\n            break;\\n        }\\n\\n        front = front.next;\\n        if (front) {\\n          resume(front.key, front.arg);\\n        } else {\\n          back = null;\\n        }\\n      }\\n\\n      this._invoke = send;\\n\\n      // Hide \\\"return\\\" method if generator return is not supported\\n      if (typeof gen.return !== \\\"function\\\") {\\n        this.return = undefined;\\n      }\\n    }\\n\\n    if (typeof Symbol === \\\"function\\\" && Symbol.asyncIterator) {\\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\\n    }\\n\\n    AsyncGenerator.prototype.next = function (arg) { return this._invoke(\\\"next\\\", arg); };\\n    AsyncGenerator.prototype.throw = function (arg) { return this._invoke(\\\"throw\\\", arg); };\\n    AsyncGenerator.prototype.return = function (arg) { return this._invoke(\\\"return\\\", arg); };\\n\\n    return {\\n      wrap: function (fn) {\\n        return function () {\\n          return new AsyncGenerator(fn.apply(this, arguments));\\n        };\\n      },\\n      await: function (value) {\\n        return new AwaitValue(value);\\n      }\\n    };\\n\\n  })()\\n\");\n   22  \n   23  helpers.asyncGeneratorDelegate = (0, _babelTemplate2.default)(\"\\n  (function (inner, awaitWrap) {\\n    var iter = {}, waiting = false;\\n\\n    function pump(key, value) {\\n      waiting = true;\\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\\n      return { done: false, value: awaitWrap(value) };\\n    };\\n\\n    if (typeof Symbol === \\\"function\\\" && Symbol.iterator) {\\n      iter[Symbol.iterator] = function () { return this; };\\n    }\\n\\n    iter.next = function (value) {\\n      if (waiting) {\\n        waiting = false;\\n        return value;\\n      }\\n      return pump(\\\"next\\\", value);\\n    };\\n\\n    if (typeof inner.throw === \\\"function\\\") {\\n      iter.throw = function (value) {\\n        if (waiting) {\\n          waiting = false;\\n          throw value;\\n        }\\n        return pump(\\\"throw\\\", value);\\n      };\\n    }\\n\\n    if (typeof inner.return === \\\"function\\\") {\\n      iter.return = function (value) {\\n        return pump(\\\"return\\\", value);\\n      };\\n    }\\n\\n    return iter;\\n  })\\n\");\n   24  \n   25: helpers.asyncToGenerator = (0, _babelTemplate2.default)(\"\\n  (function (fn) {\\n    return function () {\\n      var gen = fn.apply(this, arguments);\\n      return new Promise(function (resolve, reject) {\\n        function step(key, arg) {\\n          try {\\n            var info = gen[key](arg);\\n            var value = info.value;\\n          } catch (error) {\\n            reject(error);\\n            return;\\n          }\\n\\n          if (info.done) {\\n            resolve(value);\\n          } else {\\n            return Promise.resolve(value).then(function (value) {\\n              step(\\\"next\\\", value);\\n            }, function (err) {\\n              step(\\\"throw\\\", err);\\n            });\\n          }\\n        }\\n\\n        return step(\\\"next\\\");\\n      });\\n    };\\n  })\\n\");\n   26  \n   27  helpers.classCallCheck = (0, _babelTemplate2.default)(\"\\n  (function (instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\n    }\\n  });\\n\");\n   ..\n   59  helpers.set = (0, _babelTemplate2.default)(\"\\n  (function set(object, property, value, receiver) {\\n    var desc = Object.getOwnPropertyDescriptor(object, property);\\n\\n    if (desc === undefined) {\\n      var parent = Object.getPrototypeOf(object);\\n\\n      if (parent !== null) {\\n        set(parent, property, value, receiver);\\n      }\\n    } else if (\\\"value\\\" in desc && desc.writable) {\\n      desc.value = value;\\n    } else {\\n      var setter = desc.set;\\n\\n      if (setter !== undefined) {\\n        setter.call(receiver, value);\\n      }\\n    }\\n\\n    return value;\\n  });\\n\");\n   60  \n   61: helpers.slicedToArray = (0, _babelTemplate2.default)(\"\\n  (function () {\\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\\n    // array iterator case.\\n    function sliceIterator(arr, i) {\\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\\n      // iterators etc. variable names have been minimised to reduce the size of this massive\\n      // helper. sometimes spec compliancy is annoying :(\\n      //\\n      // _n = _iteratorNormalCompletion\\n      // _d = _didIteratorError\\n      // _e = _iteratorError\\n      // _i = _iterator\\n      // _s = _step\\n\\n      var _arr = [];\\n      var _n = true;\\n      var _d = false;\\n      var _e = undefined;\\n      try {\\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n          _arr.push(_s.value);\\n          if (i && _arr.length === i) break;\\n        }\\n      } catch (err) {\\n        _d = true;\\n        _e = err;\\n      } finally {\\n        try {\\n          if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"]();\\n        } finally {\\n          if (_d) throw _e;\\n        }\\n      }\\n      return _arr;\\n    }\\n\\n    return function (arr, i) {\\n      if (Array.isArray(arr)) {\\n        return arr;\\n      } else if (Symbol.iterator in Object(arr)) {\\n        return sliceIterator(arr, i);\\n      } else {\\n        throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n      }\\n    };\\n  })();\\n\");\n   62  \n   63  helpers.slicedToArrayLoose = (0, _babelTemplate2.default)(\"\\n  (function (arr, i) {\\n    if (Array.isArray(arr)) {\\n      return arr;\\n    } else if (Symbol.iterator in Object(arr)) {\\n      var _arr = [];\\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\\n        _arr.push(_step.value);\\n        if (i && _arr.length === i) break;\\n      }\\n      return _arr;\\n    } else {\\n      throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n    }\\n  });\\n\");\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-messages\\lib\\index.js:\n   75        return val.inspect();\n   76      } else {\n   77:       try {\n   78          return (0, _stringify2.default)(val) || val + \"\";\n   79        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-plugin-transform-es2015-for-of\\README.md:\n   18  var _iteratorError = undefined;\n   19  \n   20: try {\n   21    for (var _iterator = foo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n   22      var i = _step.value;\n   ..\n   26    _iteratorError = err;\n   27  } finally {\n   28:   try {\n   29      if (!_iteratorNormalCompletion && _iterator.return) {\n   30        _iterator.return();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-plugin-transform-es2015-for-of\\lib\\index.js:\n   12    var buildForOfLoose = template(\"\\n    for (var LOOP_OBJECT = OBJECT,\\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\\n             INDEX = 0,\\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\\n      var ID;\\n      if (IS_ARRAY) {\\n        if (INDEX >= LOOP_OBJECT.length) break;\\n        ID = LOOP_OBJECT[INDEX++];\\n      } else {\\n        INDEX = LOOP_OBJECT.next();\\n        if (INDEX.done) break;\\n        ID = INDEX.value;\\n      }\\n    }\\n  \");\n   13  \n   14:   var buildForOf = template(\"\\n    var ITERATOR_COMPLETION = true;\\n    var ITERATOR_HAD_ERROR_KEY = false;\\n    var ITERATOR_ERROR_KEY = undefined;\\n    try {\\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\\n      }\\n    } catch (err) {\\n      ITERATOR_HAD_ERROR_KEY = true;\\n      ITERATOR_ERROR_KEY = err;\\n    } finally {\\n      try {\\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\\n          ITERATOR_KEY.return();\\n        }\\n      } finally {\\n        if (ITERATOR_HAD_ERROR_KEY) {\\n          throw ITERATOR_ERROR_KEY;\\n        }\\n      }\\n    }\\n  \");\n   15  \n   16  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-polyfill\\dist\\polyfill.js:\n  287  // fallback for IE11 Script Access Denied error\n  288  var tryGet = function (it, key) {\n  289:   try {\n  290      return it[key];\n  291    } catch (e) { /* empty */ }\n  ...\n  810  module.exports = function (KEY) {\n  811    var re = /./;\n  812:   try {\n  813      '/./'[KEY](re);\n  814    } catch (e) {\n  815:     try {\n  816        re[MATCH] = false;\n  817        return !'/./'[KEY](re);\n  ...\n  822  },{\"128\":128}],35:[function(_dereq_,module,exports){\n  823  module.exports = function (exec) {\n  824:   try {\n  825      return !!exec();\n  826    } catch (e) {\n  ...\n 1056  var anObject = _dereq_(7);\n 1057  module.exports = function (iterator, fn, value, entries) {\n 1058:   try {\n 1059      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 1060    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 1157  var SAFE_CLOSING = false;\n 1158  \n 1159: try {\n 1160    var riter = [7][ITERATOR]();\n 1161    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 1167    if (!skipClosing && !SAFE_CLOSING) return false;\n 1168    var safe = false;\n 1169:   try {\n 1170      var arr = [7];\n 1171      var iter = arr[ITERATOR]();\n ....\n 1395        fn = head.fn;\n 1396        head = head.next;\n 1397:       try {\n 1398          fn();\n 1399        } catch (e) {\n ....\n 1557    P = toPrimitive(P, true);\n 1558    anObject(Attributes);\n 1559:   if (IE8_DOM_DEFINE) try {\n 1560      return dP(O, P, Attributes);\n 1561    } catch (e) { /* empty */ }\n ....\n 1603    O = toIObject(O);\n 1604    P = toPrimitive(P, true);\n 1605:   if (IE8_DOM_DEFINE) try {\n 1606      return gOPD(O, P);\n 1607    } catch (e) { /* empty */ }\n ....\n 1619  \n 1620  var getWindowNames = function (it) {\n 1621:   try {\n 1622      return gOPN(it);\n 1623    } catch (e) {\n ....\n 1783  },{\"40\":40}],90:[function(_dereq_,module,exports){\n 1784  module.exports = function (exec) {\n 1785:   try {\n 1786      return { e: false, v: exec() };\n 1787    } catch (e) {\n ....\n 1923    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 1924      function (test, buggy, set) {\n 1925:       try {\n 1926          set = _dereq_(25)(Function.call, _dereq_(75).f(Object.prototype, '__proto__').set, 2);\n 1927          set(test, []);\n ....\n 3550    configurable: true,\n 3551    get: function () {\n 3552:     try {\n 3553        return ('' + this).match(nameRE)[1];\n 3554      } catch (e) {\n ....\n 4248  \n 4249  var USE_NATIVE = !!function () {\n 4250:   try {\n 4251      // correct subclassing with @@species support\n 4252      var promise = $Promise.resolve(1);\n ....\n 4284        var domain = reaction.domain;\n 4285        var result, then;\n 4286:       try {\n 4287          if (handler) {\n 4288            if (!ok) {\n ....\n 4369    promise._d = true;\n 4370    promise = promise._w || promise; // unwrap\n 4371:   try {\n 4372      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 4373      if (then = isThenable(value)) {\n 4374        microtask(function () {\n 4375          var wrapper = { _w: promise, _d: false }; // wrap\n 4376:         try {\n 4377            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 4378          } catch (e) {\n ....\n 4397      aFunction(executor);\n 4398      Internal.call(this);\n 4399:     try {\n 4400        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 4401      } catch (err) {\n ....\n 4594      propertyKey = toPrimitive(propertyKey, true);\n 4595      anObject(attributes);\n 4596:     try {\n 4597        dP.f(target, propertyKey, attributes);\n 4598        return true;\n ....\n 4729    preventExtensions: function preventExtensions(target) {\n 4730      anObject(target);\n 4731:     try {\n 4732        if ($preventExtensions) $preventExtensions(target);\n 4733        return true;\n ....\n 4746    setPrototypeOf: function setPrototypeOf(target, proto) {\n 4747      setProto.check(target, proto);\n 4748:     try {\n 4749        setProto.set(target, proto);\n 4750        return true;\n ....\n 6087    this._o = observer;\n 6088    observer = new SubscriptionObserver(this);\n 6089:   try {\n 6090      var cleanup = subscriber(observer);\n 6091      var subscription = cleanup;\n ....\n 6114      if (!subscriptionClosed(subscription)) {\n 6115        var observer = subscription._o;\n 6116:       try {\n 6117          var m = getMethod(observer.next);\n 6118          if (m) return m.call(observer, value);\n 6119        } catch (e) {\n 6120:         try {\n 6121            closeSubscription(subscription);\n 6122          } finally {\n ....\n 6131      var observer = subscription._o;\n 6132      subscription._o = undefined;\n 6133:     try {\n 6134        var m = getMethod(observer.error);\n 6135        if (!m) throw value;\n 6136        value = m.call(observer, value);\n 6137      } catch (e) {\n 6138:       try {\n 6139          cleanupSubscription(subscription);\n 6140        } finally {\n ....\n 6149        var observer = subscription._o;\n 6150        subscription._o = undefined;\n 6151:       try {\n 6152          var m = getMethod(observer.complete);\n 6153          value = m ? m.call(observer, value) : undefined;\n 6154        } catch (e) {\n 6155:         try {\n 6156            cleanupSubscription(subscription);\n 6157          } finally {\n ....\n 6178        var subscription = that.subscribe({\n 6179          next: function (value) {\n 6180:           try {\n 6181              return fn(value);\n 6182            } catch (e) {\n ....\n 6206        microtask(function () {\n 6207          if (!done) {\n 6208:           try {\n 6209              if (forOf(x, false, function (it) {\n 6210                observer.next(it);\n ....\n 6897    // has a stable shape and so hopefully should be cheap to allocate.\n 6898    function tryCatch(fn, obj, arg) {\n 6899:     try {\n 6900        return { type: \"normal\", arg: fn.call(obj, arg) };\n 6901      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime-module.js:\n   24  } else {\n   25    // Remove the global property added by runtime.js.\n   26:   try {\n   27      delete g.regeneratorRuntime;\n   28    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-polyfill\\node_modules\\regenerator-runtime\\runtime.js:\n   62    // has a stable shape and so hopefully should be cheap to allocate.\n   63    function tryCatch(fn, obj, arg) {\n   64:     try {\n   65        return { type: \"normal\", arg: fn.call(obj, arg) };\n   66      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-polyfill\\scripts\\postpublish.js:\n    2  var path = require(\"path\");\n    3  \n    4: try {\n    5    fs.unlinkSync(path.join(__dirname, \"../browser.js\"));\n    6  } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-preset-env\\lib\\targets-parser.js:\n   46      }\n   47  \n   48:     try {\n   49        // Browser version can return as \"10.0-10.2\"\n   50        var splitVersion = browserVersion.split(\"-\")[0];\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-register\\lib\\cache.js:\n   33    var serialised = \"{}\";\n   34  \n   35:   try {\n   36      serialised = (0, _stringify2.default)(data, null, \"  \");\n   37    } catch (err) {\n   ..\n   57    if (!_fs2.default.existsSync(FILENAME)) return;\n   58  \n   59:   try {\n   60      data = JSON.parse(_fs2.default.readFileSync(FILENAME));\n   61    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-runtime\\helpers\\asyncGenerator.js:\n   41  \n   42      function resume(key, arg) {\n   43:       try {\n   44          var result = gen[key](arg);\n   45          var value = result.value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:\n   14      return new _promise2.default(function (resolve, reject) {\n   15        function step(key, arg) {\n   16:         try {\n   17            var info = gen[key](arg);\n   18            var value = info.value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-runtime\\helpers\\slicedToArray.js:\n   20      var _e = undefined;\n   21  \n   22:     try {\n   23        for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n   24          _arr.push(_s.value);\n   ..\n   30        _e = err;\n   31      } finally {\n   32:       try {\n   33          if (!_n && _i[\"return\"]) _i[\"return\"]();\n   34        } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-template\\lib\\index.js:\n    9  exports.default = function (code, opts) {\n   10    var stack = void 0;\n   11:   try {\n   12      throw new Error();\n   13    } catch (error) {\n   ..\n   26      var ast = void 0;\n   27  \n   28:     try {\n   29        ast = babylon.parse(code, opts);\n   30  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babel-traverse\\lib\\path\\replacement.js:\n   92    this.resync();\n   93  \n   94:   try {\n   95      replacement = \"(\" + replacement + \")\";\n   96      replacement = (0, _babylon.parse)(replacement);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\babylon\\lib\\index.js:\n 4666  \n 4667    var regex = null;\n 4668:   try {\n 4669      regex = new RegExp(pattern, flags);\n 4670    } catch (e) {\n ....\n 5959        if (refNeedsArrowPos && this.match(types.question)) {\n 5960          var state = this.state.clone();\n 5961:         try {\n 5962            return inner.call(this, expr, noIn, startPos, startLoc);\n 5963          } catch (err) {\n ....\n 6430        if (types.jsxTagStart && this.match(types.jsxTagStart)) {\n 6431          var state = this.state.clone();\n 6432:         try {\n 6433            return inner.apply(this, args);\n 6434          } catch (err) {\n ....\n 6452          var arrowExpression = void 0;\n 6453          var typeParameters = void 0;\n 6454:         try {\n 6455            typeParameters = this.flowParseTypeParameterDeclaration();\n 6456  \n ....\n 6481        if (this.match(types.colon)) {\n 6482          var state = this.state.clone();\n 6483:         try {\n 6484            var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n 6485            this.state.noAnonFunctionType = true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\batch\\index.js:\n    3   */\n    4  \n    5: try {\n    6    var EventEmitter = require('events').EventEmitter;\n    7  } catch (err) {\n    .\n  115      var start = new Date;\n  116  \n  117:     try {\n  118        fn(callback);\n  119      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bindings\\bindings.js:\n    8    , join = path.join\n    9    , dirname = path.dirname\n   10:   , exists = ((fs.accessSync && function (path) { try { fs.accessSync(path); } catch (e) { return false; } return true; })\n   11        || fs.existsSync || path.existsSync)\n   12    , defaults = {\n   ..\n   78      }))\n   79      tries.push(n)\n   80:     try {\n   81        b = opts.path ? require.resolve(n) : require(n)\n   82        if (!opts.path) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\blob\\index.js:\n   13  \n   14  var blobSupported = (function() {\n   15:   try {\n   16      var a = new Blob(['hi']);\n   17      return a.size === 2;\n   ..\n   27  \n   28  var blobSupportsArrayBufferView = blobSupported && (function() {\n   29:   try {\n   30      var b = new Blob([new Uint8Array([1,2])]);\n   31      return b.size === 2;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\blob\\test\\index.js:\n    5    if (!Blob) {\n    6      it('should not have a blob or a blob builder in the global namespace, or blob should not be a constructor function if the module exports false', function() {\n    7:       try {\n    8          var ab = (new Uint8Array(5)).buffer;\n    9          global.Blob([ab]);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\browser\\bluebird.core.js:\n   31  \"use strict\";\n   32  var firstLineError;\n   33: try {throw new Error(); } catch (e) {firstLineError = e;}\n   34  var schedule = _dereq_(\"./schedule\");\n   35  var Queue = _dereq_(\"./queue\");\n   ..\n   95              fn(arg);\n   96          }, 0);\n   97:     } else try {\n   98          this._schedule(function() {\n   99              fn(arg);\n  ...\n  265  if (typeof Promise !== \"undefined\") old = Promise;\n  266  function noConflict() {\n  267:     try { if (Promise === bluebird) Promise = old; }\n  268      catch (e) {}\n  269      return bluebird;\n  ...\n  667  \n  668  var fireDomEvent = (function() {\n  669:     try {\n  670          if (typeof CustomEvent === \"function\") {\n  671              var event = new CustomEvent(\"CustomEvent\");\n  ...\n  750  var activeFireEvent = function (name) {\n  751      var globalEventFired = false;\n  752:     try {\n  753          globalEventFired = fireGlobalEvent.apply(null, arguments);\n  754      } catch (e) {\n  ...\n  758  \n  759      var domEventFired = false;\n  760:     try {\n  761          domEventFired = fireDomEvent(name,\n  762                      eventToObjectGenerator[name].apply(null, arguments));\n  ...\n  821  Promise.prototype._fireEvent = defaultFireEvent;\n  822  Promise.prototype._execute = function(executor, resolve, reject) {\n  823:     try {\n  824          executor(resolve, reject);\n  825      } catch (e) {\n  ...\n  842  function cancellationExecute(executor, resolve, reject) {\n  843      var promise = this;\n  844:     try {\n  845          executor(resolve, reject, function(onCancel) {\n  846              if (typeof onCancel !== \"function\") {\n  ...\n 1122  function fireRejectionEvent(name, localHandler, reason, promise) {\n 1123      var localEventFired = false;\n 1124:     try {\n 1125          if (typeof localHandler === \"function\") {\n 1126              localEventFired = true;\n ....\n 1155          var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n 1156          if (ruselessToString.test(str)) {\n 1157:             try {\n 1158                  var newStr = JSON.stringify(obj);\n 1159                  str = newStr;\n ....\n 1353  \n 1354      var hasStackAfterThrow;\n 1355:     try { throw new Error(); }\n 1356      catch(e) {\n 1357          hasStackAfterThrow = (\"stack\" in e);\n ....\n 1363          return function captureStackTrace(o) {\n 1364              Error.stackTraceLimit += 6;\n 1365:             try { throw new Error(); }\n 1366              catch(e) { o.stack = e.stack; }\n 1367              Error.stackTraceLimit -= 6;\n ....\n 1517  var TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n 1518  var AggregateError = subError(\"AggregateError\", \"aggregate error\");\n 1519: try {\n 1520      _TypeError = TypeError;\n 1521      _RangeError = RangeError;\n ....\n 1656  \n 1657      var ObjectGetPrototypeOf = function (obj) {\n 1658:         try {\n 1659              return Object(obj).constructor.prototype;\n 1660          }\n ....\n 1665  \n 1666      var ArrayIsArray = function (obj) {\n 1667:         try {\n 1668              return str.call(obj) === \"[object Array]\";\n 1669          }\n ....\n 3347  \n 3348  function getThen(obj) {\n 3349:     try {\n 3350          return doGetThen(obj);\n 3351      } catch (e) {\n ....\n 3357  var hasProp = {}.hasOwnProperty;\n 3358  function isAnyBluebirdPromise(obj) {\n 3359:     try {\n 3360          return hasProp.call(obj, \"_promise0\");\n 3361      } catch (e) {\n ....\n 3409  \n 3410  function tryCatcher() {\n 3411:     try {\n 3412          var target = tryCatchTarget;\n 3413          tryCatchTarget = null;\n ....\n 3524              while (obj != null && !isExcludedProto(obj)) {\n 3525                  var keys;\n 3526:                 try {\n 3527                      keys = getKeys(obj);\n 3528                  } catch (e) {\n ....\n 3569  var thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\n 3570  function isClass(fn) {\n 3571:     try {\n 3572          if (typeof fn === \"function\") {\n 3573              var keys = es5.names(fn.prototype);\n ....\n 3614  \n 3615  function safeToString(obj) {\n 3616:     try {\n 3617          return obj + \"\";\n 3618      } catch (e) {\n ....\n 3630  \n 3631  function markAsOriginatingFromRejection(e) {\n 3632:     try {\n 3633          notEnumerableProp(e, \"isOperational\", true);\n 3634      }\n ....\n 3650          return function(value) {\n 3651              if (canAttachTrace(value)) return value;\n 3652:             try {throw new Error(safeToString(value));}\n 3653              catch(err) {return err;}\n 3654          };\n ....\n 3670          var key = keys[i];\n 3671          if (filter(key)) {\n 3672:             try {\n 3673                  es5.defineProperty(to, key, es5.getDescriptor(from, key));\n 3674              } catch (ignore) {}\n ....\n 3719  function getNativePromise() {\n 3720      if (typeof Promise === \"function\") {\n 3721:         try {\n 3722              var promise = new Promise(function(){});\n 3723              if ({}.toString.call(promise) === \"[object Promise]\") {\n ....\n 3775  if (ret.isNode) ret.toFastProperties(process);\n 3776  \n 3777: try {throw new Error(); } catch (e) {ret.lastLineError = e;}\n 3778  module.exports = ret;\n 3779  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\browser\\bluebird.js:\n   53  \"use strict\";\n   54  var firstLineError;\n   55: try {throw new Error(); } catch (e) {firstLineError = e;}\n   56  var schedule = _dereq_(\"./schedule\");\n   57  var Queue = _dereq_(\"./queue\");\n   ..\n  117              fn(arg);\n  118          }, 0);\n  119:     } else try {\n  120          this._schedule(function() {\n  121              fn(arg);\n  ...\n  287  if (typeof Promise !== \"undefined\") old = Promise;\n  288  function noConflict() {\n  289:     try { if (Promise === bluebird) Promise = old; }\n  290      catch (e) {}\n  291      return bluebird;\n  ...\n  814  \n  815  var fireDomEvent = (function() {\n  816:     try {\n  817          if (typeof CustomEvent === \"function\") {\n  818              var event = new CustomEvent(\"CustomEvent\");\n  ...\n  897  var activeFireEvent = function (name) {\n  898      var globalEventFired = false;\n  899:     try {\n  900          globalEventFired = fireGlobalEvent.apply(null, arguments);\n  901      } catch (e) {\n  ...\n  905  \n  906      var domEventFired = false;\n  907:     try {\n  908          domEventFired = fireDomEvent(name,\n  909                      eventToObjectGenerator[name].apply(null, arguments));\n  ...\n  968  Promise.prototype._fireEvent = defaultFireEvent;\n  969  Promise.prototype._execute = function(executor, resolve, reject) {\n  970:     try {\n  971          executor(resolve, reject);\n  972      } catch (e) {\n  ...\n  989  function cancellationExecute(executor, resolve, reject) {\n  990      var promise = this;\n  991:     try {\n  992          executor(resolve, reject, function(onCancel) {\n  993              if (typeof onCancel !== \"function\") {\n  ...\n 1269  function fireRejectionEvent(name, localHandler, reason, promise) {\n 1270      var localEventFired = false;\n 1271:     try {\n 1272          if (typeof localHandler === \"function\") {\n 1273              localEventFired = true;\n ....\n 1302          var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n 1303          if (ruselessToString.test(str)) {\n 1304:             try {\n 1305                  var newStr = JSON.stringify(obj);\n 1306                  str = newStr;\n ....\n 1500  \n 1501      var hasStackAfterThrow;\n 1502:     try { throw new Error(); }\n 1503      catch(e) {\n 1504          hasStackAfterThrow = (\"stack\" in e);\n ....\n 1510          return function captureStackTrace(o) {\n 1511              Error.stackTraceLimit += 6;\n 1512:             try { throw new Error(); }\n 1513              catch(e) { o.stack = e.stack; }\n 1514              Error.stackTraceLimit -= 6;\n ....\n 1696  var TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n 1697  var AggregateError = subError(\"AggregateError\", \"aggregate error\");\n 1698: try {\n 1699      _TypeError = TypeError;\n 1700      _RangeError = RangeError;\n ....\n 1835  \n 1836      var ObjectGetPrototypeOf = function (obj) {\n 1837:         try {\n 1838              return Object(obj).constructor.prototype;\n 1839          }\n ....\n 1844  \n 1845      var ArrayIsArray = function (obj) {\n 1846:         try {\n 1847              return str.call(obj) === \"[object Array]\";\n 1848          }\n ....\n 3762  \n 3763  function isPromisified(fn) {\n 3764:     try {\n 3765          return fn.__isPromisified__ === true;\n 3766      }\n ....\n 3950              ? this[method] : callback;\n 3951          var fn = nodebackForPromise(promise, multiArgs);\n 3952:         try {\n 3953              cb.apply(_receiver, withAppended(arguments, fn));\n 3954          } catch(e) {\n ....\n 4866  \n 4867  function getThen(obj) {\n 4868:     try {\n 4869          return doGetThen(obj);\n 4870      } catch (e) {\n ....\n 4876  var hasProp = {}.hasOwnProperty;\n 4877  function isAnyBluebirdPromise(obj) {\n 4878:     try {\n 4879          return hasProp.call(obj, \"_promise0\");\n 4880      } catch (e) {\n ....\n 5044              if (maybePromise instanceof Promise &&\n 5045                  maybePromise._isDisposable()) {\n 5046:                 try {\n 5047                      maybePromise = tryConvertToPromise(\n 5048                          maybePromise._getDisposer().tryDispose(inspection),\n ....\n 5251  \n 5252  function tryCatcher() {\n 5253:     try {\n 5254          var target = tryCatchTarget;\n 5255          tryCatchTarget = null;\n ....\n 5366              while (obj != null && !isExcludedProto(obj)) {\n 5367                  var keys;\n 5368:                 try {\n 5369                      keys = getKeys(obj);\n 5370                  } catch (e) {\n ....\n 5411  var thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\n 5412  function isClass(fn) {\n 5413:     try {\n 5414          if (typeof fn === \"function\") {\n 5415              var keys = es5.names(fn.prototype);\n ....\n 5456  \n 5457  function safeToString(obj) {\n 5458:     try {\n 5459          return obj + \"\";\n 5460      } catch (e) {\n ....\n 5472  \n 5473  function markAsOriginatingFromRejection(e) {\n 5474:     try {\n 5475          notEnumerableProp(e, \"isOperational\", true);\n 5476      }\n ....\n 5492          return function(value) {\n 5493              if (canAttachTrace(value)) return value;\n 5494:             try {throw new Error(safeToString(value));}\n 5495              catch(err) {return err;}\n 5496          };\n ....\n 5512          var key = keys[i];\n 5513          if (filter(key)) {\n 5514:             try {\n 5515                  es5.defineProperty(to, key, es5.getDescriptor(from, key));\n 5516              } catch (ignore) {}\n ....\n 5561  function getNativePromise() {\n 5562      if (typeof Promise === \"function\") {\n 5563:         try {\n 5564              var promise = new Promise(function(){});\n 5565              if ({}.toString.call(promise) === \"[object Promise]\") {\n ....\n 5617  if (ret.isNode) ret.toFastProperties(process);\n 5618  \n 5619: try {throw new Error(); } catch (e) {ret.lastLineError = e;}\n 5620  module.exports = ret;\n 5621  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\assert.js:\n   20  \n   21  function nativeAssert(callName, args, expect) {\n   22:     try {\n   23          var params = getParams(args);\n   24          var constructorArgs = params;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\async.js:\n    1  \"use strict\";\n    2  var firstLineError;\n    3: try {throw new Error(); } catch (e) {firstLineError = e;}\n    4  var schedule = require(\"./schedule\");\n    5  var Queue = require(\"./queue\");\n    .\n   65              fn(arg);\n   66          }, 0);\n   67:     } else try {\n   68          this._schedule(function() {\n   69              fn(arg);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\bluebird.js:\n    3  if (typeof Promise !== \"undefined\") old = Promise;\n    4  function noConflict() {\n    5:     try { if (Promise === bluebird) Promise = old; }\n    6      catch (e) {}\n    7      return bluebird;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\debuggability.js:\n  146  \n  147  var fireDomEvent = (function() {\n  148:     try {\n  149          if (typeof CustomEvent === \"function\") {\n  150              var event = new CustomEvent(\"CustomEvent\");\n  ...\n  229  var activeFireEvent = function (name) {\n  230      var globalEventFired = false;\n  231:     try {\n  232          globalEventFired = fireGlobalEvent.apply(null, arguments);\n  233      } catch (e) {\n  ...\n  237  \n  238      var domEventFired = false;\n  239:     try {\n  240          domEventFired = fireDomEvent(name,\n  241                      eventToObjectGenerator[name].apply(null, arguments));\n  ...\n  300  Promise.prototype._fireEvent = defaultFireEvent;\n  301  Promise.prototype._execute = function(executor, resolve, reject) {\n  302:     try {\n  303          executor(resolve, reject);\n  304      } catch (e) {\n  ...\n  321  function cancellationExecute(executor, resolve, reject) {\n  322      var promise = this;\n  323:     try {\n  324          executor(resolve, reject, function(onCancel) {\n  325              if (typeof onCancel !== \"function\") {\n  ...\n  601  function fireRejectionEvent(name, localHandler, reason, promise) {\n  602      var localEventFired = false;\n  603:     try {\n  604          if (typeof localHandler === \"function\") {\n  605              localEventFired = true;\n  ...\n  634          var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n  635          if (ruselessToString.test(str)) {\n  636:             try {\n  637                  var newStr = JSON.stringify(obj);\n  638                  str = newStr;\n  ...\n  832  \n  833      var hasStackAfterThrow;\n  834:     try { throw new Error(); }\n  835      catch(e) {\n  836          hasStackAfterThrow = (\"stack\" in e);\n  ...\n  842          return function captureStackTrace(o) {\n  843              Error.stackTraceLimit += 6;\n  844:             try { throw new Error(); }\n  845              catch(e) { o.stack = e.stack; }\n  846              Error.stackTraceLimit -= 6;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\errors.js:\n   27  var TimeoutError = subError(\"TimeoutError\", \"timeout error\");\n   28  var AggregateError = subError(\"AggregateError\", \"aggregate error\");\n   29: try {\n   30      _TypeError = TypeError;\n   31      _RangeError = RangeError;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\es5.js:\n   48  \n   49      var ObjectGetPrototypeOf = function (obj) {\n   50:         try {\n   51              return Object(obj).constructor.prototype;\n   52          }\n   ..\n   57  \n   58      var ArrayIsArray = function (obj) {\n   59:         try {\n   60              return str.call(obj) === \"[object Array]\";\n   61          }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\promisify.js:\n   32  \n   33  function isPromisified(fn) {\n   34:     try {\n   35          return fn.__isPromisified__ === true;\n   36      }\n   ..\n  220              ? this[method] : callback;\n  221          var fn = nodebackForPromise(promise, multiArgs);\n  222:         try {\n  223              cb.apply(_receiver, withAppended(arguments, fn));\n  224          } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\thenables.js:\n   37  \n   38  function getThen(obj) {\n   39:     try {\n   40          return doGetThen(obj);\n   41      } catch (e) {\n   ..\n   47  var hasProp = {}.hasOwnProperty;\n   48  function isAnyBluebirdPromise(obj) {\n   49:     try {\n   50          return hasProp.call(obj, \"_promise0\");\n   51      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\using.js:\n   32              if (maybePromise instanceof Promise &&\n   33                  maybePromise._isDisposable()) {\n   34:                 try {\n   35                      maybePromise = tryConvertToPromise(\n   36                          maybePromise._getDisposer().tryDispose(inspection),\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\bluebird\\js\\release\\util.js:\n   11  \n   12  function tryCatcher() {\n   13:     try {\n   14          var target = tryCatchTarget;\n   15          tryCatchTarget = null;\n   ..\n  126              while (obj != null && !isExcludedProto(obj)) {\n  127                  var keys;\n  128:                 try {\n  129                      keys = getKeys(obj);\n  130                  } catch (e) {\n  ...\n  171  var thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\n  172  function isClass(fn) {\n  173:     try {\n  174          if (typeof fn === \"function\") {\n  175              var keys = es5.names(fn.prototype);\n  ...\n  216  \n  217  function safeToString(obj) {\n  218:     try {\n  219          return obj + \"\";\n  220      } catch (e) {\n  ...\n  232  \n  233  function markAsOriginatingFromRejection(e) {\n  234:     try {\n  235          notEnumerableProp(e, \"isOperational\", true);\n  236      }\n  ...\n  252          return function(value) {\n  253              if (canAttachTrace(value)) return value;\n  254:             try {throw new Error(safeToString(value));}\n  255              catch(err) {return err;}\n  256          };\n  ...\n  272          var key = keys[i];\n  273          if (filter(key)) {\n  274:             try {\n  275                  es5.defineProperty(to, key, es5.getDescriptor(from, key));\n  276              } catch (ignore) {}\n  ...\n  321  function getNativePromise() {\n  322      if (typeof Promise === \"function\") {\n  323:         try {\n  324              var promise = new Promise(function(){});\n  325              if ({}.toString.call(promise) === \"[object Promise]\") {\n  ...\n  377  if (ret.isNode) ret.toFastProperties(process);\n  378  \n  379: try {throw new Error(); } catch (e) {ret.lastLineError = e;}\n  380  module.exports = ret;\n  381  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\boom\\test\\index.js:\n  561      it('returns an error with composite message', function (done) {\n  562  \n  563:         try {\n  564              JSON.parse('{');\n  565          }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync\\lodash.custom.js:\n  502      var result = false;\n  503      if (value != null && typeof value.toString != 'function') {\n  504:       try {\n  505          result = !!(value + '');\n  506        } catch (e) {}\n  ...\n 2988    function toSource(func) {\n 2989      if (func != null) {\n 2990:       try {\n 2991          return funcToString.call(func);\n 2992        } catch (e) {}\n 2993:       try {\n 2994          return (func + '');\n 2995        } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync\\lib\\http-protocol.js:\n   47          }\n   48  \n   49:         try {\n   50  \n   51              require(\"./public/\" + params.method)(bs.events).apply(null, [params.args]);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync\\lib\\plugins.js:\n  130      }\n  131  \n  132:     try {\n  133          /**\n  134           * Try a raw node require() call - this will be how\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync-client\\dist\\index.js:\n  531       * BS json blob & parse it.\n  532       */\n  533:     try {\n  534          var json = $window.name.match(regex);\n  535          if (json) {\n  ...\n  825          if (!guid) return;\n  826          delete cache[guid];\n  827:         try {\n  828              delete elem[expando];\n  829          }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync-ui\\lib\\directive-stripper.js:\n   63  \n   64      var angularDir;\n   65:     try {\n   66          angularDir = require(\"../src/scripts/directives/\" + name)();\n   67      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync-ui\\lib\\resolve-plugins.js:\n   31              }\n   32  \n   33:             try {\n   34                  pkg = require(\"immutable\").fromJS(require(path.join(moduleName, \"package.json\")));\n   35              } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browser-sync-ui\\public\\js\\app.js.map:\n   39      \"/**\\n * @license AngularJS v1.3.11\\n * (c) 2010-2014 Google, Inc. http://angularjs.org\\n * License: MIT\\n */\\n(function(window, angular, undefined) {'use strict';\\n\\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\\n\\n/**\\n * @ngdoc module\\n * @name ngSanitize\\n * @description\\n *\\n * # ngSanitize\\n *\\n * The `ngSanitize` module provides functionality to sanitize HTML.\\n *\\n *\\n * <div doc-module-components=\\\"ngSanitize\\\"></div>\\n *\\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\\n */\\n\\n/*\\n * HTML Parser By Misko Hevery (misko@hevery.com)\\n * based on:  HTML Parser By John Resig (ejohn.org)\\n * Original code by Erik Arvidsson, Mozilla Public License\\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\\n *\\n * // Use like so:\\n * htmlParser(htmlString, {\\n *     start: function(tag, attrs, unary) {},\\n *     end: function(tag) {},\\n *     chars: function(text) {},\\n *     comment: function(text) {}\\n * });\\n *\\n */\\n\\n\\n/**\\n * @ngdoc service\\n * @name $sanitize\\n * @kind function\\n *\\n * @description\\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\\n *   it into the returned string, however, since our parser is more strict than a typical browser\\n *   parser, it's possible that some obscure input, which would be recognized as valid HTML by a\\n *   browser, won't make it through the sanitizer. The input may also contain SVG markup.\\n *   The whitelist is configured using the functions `aHrefSanitizationWhitelist` and\\n *   `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider `$compileProvider`}.\\n *\\n * @param {string} html HTML input.\\n * @returns {string} Sanitized HTML.\\n *\\n * @example\\n   <example module=\\\"sanitizeExample\\\" deps=\\\"angular-sanitize.js\\\">\\n   <file name=\\\"index.html\\\">\\n     <script>\\n         angular.module('sanitizeExample', ['ngSanitize'])\\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\\n             $scope.snippet =\\n               '<p style=\\\"color:blue\\\">an html\\\\n' +\\n               '<em onmouseover=\\\"this.textContent=\\\\'PWN3D!\\\\'\\\">click here</em>\\\\n' +\\n               'snippet</p>';\\n             $scope.deliberatelyTrustDangerousSnippet = function() {\\n               return $sce.trustAsHtml($scope.snippet);\\n             };\\n           }]);\\n     </script>\\n     <div ng-controller=\\\"ExampleController\\\">\\n        Snippet: <textarea ng-model=\\\"snippet\\\" cols=\\\"60\\\" rows=\\\"3\\\"></textarea>\\n       <table>\\n         <tr>\\n           <td>Directive</td>\\n           <td>How</td>\\n           <td>Source</td>\\n           <td>Rendered</td>\\n         </tr>\\n         <tr id=\\\"bind-html-with-sanitize\\\">\\n           <td>ng-bind-html</td>\\n           <td>Automatically uses $sanitize</td>\\n           <td><pre>&lt;div ng-bind-html=\\\"snippet\\\"&gt;<br/>&lt;/div&gt;</pre></td>\\n           <td><div ng-bind-html=\\\"snippet\\\"></div></td>\\n         </tr>\\n         <tr id=\\\"bind-html-with-trust\\\">\\n           <td>ng-bind-html</td>\\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\\n           <td>\\n           <pre>&lt;div ng-bind-html=\\\"deliberatelyTrustDangerousSnippet()\\\"&gt;\\n&lt;/div&gt;</pre>\\n           </td>\\n           <td><div ng-bind-html=\\\"deliberatelyTrustDangerousSnippet()\\\"></div></td>\\n         </tr>\\n         <tr id=\\\"bind-default\\\">\\n           <td>ng-bind</td>\\n           <td>Automatically escapes</td>\\n           <td><pre>&lt;div ng-bind=\\\"snippet\\\"&gt;<br/>&lt;/div&gt;</pre></td>\\n           <td><div ng-bind=\\\"snippet\\\"></div></td>\\n         </tr>\\n       </table>\\n       </div>\\n   </file>\\n   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n     it('should sanitize the html snippet by default', function() {\\n       expect(element(by.css('#bind-html-with-sanitize div')).getInnerHtml()).\\n         toBe('<p>an html\\\\n<em>click here</em>\\\\nsnippet</p>');\\n     });\\n\\n     it('should inline raw snippet if bound to a trusted value', function() {\\n       expect(element(by.css('#bind-html-with-trust div')).getInnerHtml()).\\n         toBe(\\\"<p style=\\\\\\\"color:blue\\\\\\\">an html\\\\n\\\" +\\n              \\\"<em onmouseover=\\\\\\\"this.textContent='PWN3D!'\\\\\\\">click here</em>\\\\n\\\" +\\n              \\\"snippet</p>\\\");\\n     });\\n\\n     it('should escape snippet without any filter', function() {\\n       expect(element(by.css('#bind-default div')).getInnerHtml()).\\n         toBe(\\\"&lt;p style=\\\\\\\"color:blue\\\\\\\"&gt;an html\\\\n\\\" +\\n              \\\"&lt;em onmouseover=\\\\\\\"this.textContent='PWN3D!'\\\\\\\"&gt;click here&lt;/em&gt;\\\\n\\\" +\\n              \\\"snippet&lt;/p&gt;\\\");\\n     });\\n\\n     it('should update', function() {\\n       element(by.model('snippet')).clear();\\n       element(by.model('snippet')).sendKeys('new <b onclick=\\\"alert(1)\\\">text</b>');\\n       expect(element(by.css('#bind-html-with-sanitize div')).getInnerHtml()).\\n         toBe('new <b>text</b>');\\n       expect(element(by.css('#bind-html-with-trust div')).getInnerHtml()).toBe(\\n         'new <b onclick=\\\"alert(1)\\\">text</b>');\\n       expect(element(by.css('#bind-default div')).getInnerHtml()).toBe(\\n         \\\"new &lt;b onclick=\\\\\\\"alert(1)\\\\\\\"&gt;text&lt;/b&gt;\\\");\\n     });\\n   </file>\\n   </example>\\n */\\nfunction $SanitizeProvider() {\\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\\n    return function(html) {\\n      var buf = [];\\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\\n        return !/^unsafe/.test($$sanitizeUri(uri, isImage));\\n      }));\\n      return buf.join('');\\n    };\\n  }];\\n}\\n\\nfunction sanitizeText(chars) {\\n  var buf = [];\\n  var writer = htmlSanitizeWriter(buf, angular.noop);\\n  writer.chars(chars);\\n  return buf.join('');\\n}\\n\\n\\n// Regular Expressions for parsing tags and attributes\\nvar START_TAG_REGEXP =\\n       /^<((?:[a-zA-Z])[\\\\w:-]*)((?:\\\\s+[\\\\w:-]+(?:\\\\s*=\\\\s*(?:(?:\\\"[^\\\"]*\\\")|(?:'[^']*')|[^>\\\\s]+))?)*)\\\\s*(\\\\/?)\\\\s*(>?)/,\\n  END_TAG_REGEXP = /^<\\\\/\\\\s*([\\\\w:-]+)[^>]*>/,\\n  ATTR_REGEXP = /([\\\\w:-]+)(?:\\\\s*=\\\\s*(?:(?:\\\"((?:[^\\\"])*)\\\")|(?:'((?:[^'])*)')|([^>\\\\s]+)))?/g,\\n  BEGIN_TAG_REGEXP = /^</,\\n  BEGING_END_TAGE_REGEXP = /^<\\\\//,\\n  COMMENT_REGEXP = /<!--(.*?)-->/g,\\n  DOCTYPE_REGEXP = /<!DOCTYPE([^>]*?)>/i,\\n  CDATA_REGEXP = /<!\\\\[CDATA\\\\[(.*?)]]>/g,\\n  SURROGATE_PAIR_REGEXP = /[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]/g,\\n  // Match everything outside of normal chars and \\\" (quote character)\\n  NON_ALPHANUMERIC_REGEXP = /([^\\\\#-~| |!])/g;\\n\\n\\n// Good source of info about elements and attributes\\n// http://dev.w3.org/html5/spec/Overview.html#semantics\\n// http://simon.html5.org/html-elements\\n\\n// Safe Void Elements - HTML5\\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\\nvar voidElements = makeMap(\\\"area,br,col,hr,img,wbr\\\");\\n\\n// Elements that you can, intentionally, leave open (and which close themselves)\\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\\nvar optionalEndTagBlockElements = makeMap(\\\"colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr\\\"),\\n    optionalEndTagInlineElements = makeMap(\\\"rp,rt\\\"),\\n    optionalEndTagElements = angular.extend({},\\n                                            optionalEndTagInlineElements,\\n                                            optionalEndTagBlockElements);\\n\\n// Safe Block Elements - HTML5\\nvar blockElements = angular.extend({}, optionalEndTagBlockElements, makeMap(\\\"address,article,\\\" +\\n        \\\"aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,\\\" +\\n        \\\"h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul\\\"));\\n\\n// Inline Elements - HTML5\\nvar inlineElements = angular.extend({}, optionalEndTagInlineElements, makeMap(\\\"a,abbr,acronym,b,\\\" +\\n        \\\"bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,\\\" +\\n        \\\"samp,small,span,strike,strong,sub,sup,time,tt,u,var\\\"));\\n\\n// SVG Elements\\n// https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\\nvar svgElements = makeMap(\\\"animate,animateColor,animateMotion,animateTransform,circle,defs,\\\" +\\n        \\\"desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,\\\" +\\n        \\\"line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,set,\\\" +\\n        \\\"stop,svg,switch,text,title,tspan,use\\\");\\n\\n// Special Elements (can contain anything)\\nvar specialElements = makeMap(\\\"script,style\\\");\\n\\nvar validElements = angular.extend({},\\n                                   voidElements,\\n                                   blockElements,\\n                                   inlineElements,\\n                                   optionalEndTagElements,\\n                                   svgElements);\\n\\n//Attributes that have href and hence need to be sanitized\\nvar uriAttrs = makeMap(\\\"background,cite,href,longdesc,src,usemap,xlink:href\\\");\\n\\nvar htmlAttrs = makeMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\\n    'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\\n    'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\\n    'scope,scrolling,shape,size,span,start,summary,target,title,type,' +\\n    'valign,value,vspace,width');\\n\\n// SVG attributes (without \\\"id\\\" and \\\"name\\\" attributes)\\n// https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\\nvar svgAttrs = makeMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\\n    'attributeName,attributeType,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,' +\\n    'color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,' +\\n    'font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,' +\\n    'gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,' +\\n    'keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,' +\\n    'markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,' +\\n    'overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,' +\\n    'repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,' +\\n    'stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,' +\\n    'stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,' +\\n    'stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,' +\\n    'underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,' +\\n    'viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,' +\\n    'xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,' +\\n    'zoomAndPan');\\n\\nvar validAttrs = angular.extend({},\\n                                uriAttrs,\\n                                svgAttrs,\\n                                htmlAttrs);\\n\\nfunction makeMap(str) {\\n  var obj = {}, items = str.split(','), i;\\n  for (i = 0; i < items.length; i++) obj[items[i]] = true;\\n  return obj;\\n}\\n\\n\\n/**\\n * @example\\n * htmlParser(htmlString, {\\n *     start: function(tag, attrs, unary) {},\\n *     end: function(tag) {},\\n *     chars: function(text) {},\\n *     comment: function(text) {}\\n * });\\n *\\n * @param {string} html string\\n * @param {object} handler\\n */\\nfunction htmlParser(html, handler) {\\n  if (typeof html !== 'string') {\\n    if (html === null || typeof html === 'undefined') {\\n      html = '';\\n    } else {\\n      html = '' + html;\\n    }\\n  }\\n  var index, chars, match, stack = [], last = html, text;\\n  stack.last = function() { return stack[ stack.length - 1 ]; };\\n\\n  while (html) {\\n    text = '';\\n    chars = true;\\n\\n    // Make sure we're not in a script or style element\\n    if (!stack.last() || !specialElements[ stack.last() ]) {\\n\\n      // Comment\\n      if (html.indexOf(\\\"<!--\\\") === 0) {\\n        // comments containing -- are not allowed unless they terminate the comment\\n        index = html.indexOf(\\\"--\\\", 4);\\n\\n        if (index >= 0 && html.lastIndexOf(\\\"-->\\\", index) === index) {\\n          if (handler.comment) handler.comment(html.substring(4, index));\\n          html = html.substring(index + 3);\\n          chars = false;\\n        }\\n      // DOCTYPE\\n      } else if (DOCTYPE_REGEXP.test(html)) {\\n        match = html.match(DOCTYPE_REGEXP);\\n\\n        if (match) {\\n          html = html.replace(match[0], '');\\n          chars = false;\\n        }\\n      // end tag\\n      } else if (BEGING_END_TAGE_REGEXP.test(html)) {\\n        match = html.match(END_TAG_REGEXP);\\n\\n        if (match) {\\n          html = html.substring(match[0].length);\\n          match[0].replace(END_TAG_REGEXP, parseEndTag);\\n          chars = false;\\n        }\\n\\n      // start tag\\n      } else if (BEGIN_TAG_REGEXP.test(html)) {\\n        match = html.match(START_TAG_REGEXP);\\n\\n        if (match) {\\n          // We only have a valid start-tag if there is a '>'.\\n          if (match[4]) {\\n            html = html.substring(match[0].length);\\n            match[0].replace(START_TAG_REGEXP, parseStartTag);\\n          }\\n          chars = false;\\n        } else {\\n          // no ending tag found --- this piece should be encoded as an entity.\\n          text += '<';\\n          html = html.substring(1);\\n        }\\n      }\\n\\n      if (chars) {\\n        index = html.indexOf(\\\"<\\\");\\n\\n        text += index < 0 ? html : html.substring(0, index);\\n        html = index < 0 ? \\\"\\\" : html.substring(index);\\n\\n        if (handler.chars) handler.chars(decodeEntities(text));\\n      }\\n\\n    } else {\\n      html = html.replace(new RegExp(\\\"(.*)<\\\\\\\\s*\\\\\\\\/\\\\\\\\s*\\\" + stack.last() + \\\"[^>]*>\\\", 'i'),\\n        function(all, text) {\\n          text = text.replace(COMMENT_REGEXP, \\\"$1\\\").replace(CDATA_REGEXP, \\\"$1\\\");\\n\\n          if (handler.chars) handler.chars(decodeEntities(text));\\n\\n          return \\\"\\\";\\n      });\\n\\n      parseEndTag(\\\"\\\", stack.last());\\n    }\\n\\n    if (html == last) {\\n      throw $sanitizeMinErr('badparse', \\\"The sanitizer was unable to parse the following block \\\" +\\n                                        \\\"of html: {0}\\\", html);\\n    }\\n    last = html;\\n  }\\n\\n  // Clean up any remaining tags\\n  parseEndTag();\\n\\n  function parseStartTag(tag, tagName, rest, unary) {\\n    tagName = angular.lowercase(tagName);\\n    if (blockElements[ tagName ]) {\\n      while (stack.last() && inlineElements[ stack.last() ]) {\\n        parseEndTag(\\\"\\\", stack.last());\\n      }\\n    }\\n\\n    if (optionalEndTagElements[ tagName ] && stack.last() == tagName) {\\n      parseEndTag(\\\"\\\", tagName);\\n    }\\n\\n    unary = voidElements[ tagName ] || !!unary;\\n\\n    if (!unary)\\n      stack.push(tagName);\\n\\n    var attrs = {};\\n\\n    rest.replace(ATTR_REGEXP,\\n      function(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\\n        var value = doubleQuotedValue\\n          || singleQuotedValue\\n          || unquotedValue\\n          || '';\\n\\n        attrs[name] = decodeEntities(value);\\n    });\\n    if (handler.start) handler.start(tagName, attrs, unary);\\n  }\\n\\n  function parseEndTag(tag, tagName) {\\n    var pos = 0, i;\\n    tagName = angular.lowercase(tagName);\\n    if (tagName)\\n      // Find the closest opened tag of the same type\\n      for (pos = stack.length - 1; pos >= 0; pos--)\\n        if (stack[ pos ] == tagName)\\n          break;\\n\\n    if (pos >= 0) {\\n      // Close all the open elements, up the stack\\n      for (i = stack.length - 1; i >= pos; i--)\\n        if (handler.end) handler.end(stack[ i ]);\\n\\n      // Remove the open elements from the stack\\n      stack.length = pos;\\n    }\\n  }\\n}\\n\\nvar hiddenPre=document.createElement(\\\"pre\\\");\\nvar spaceRe = /^(\\\\s*)([\\\\s\\\\S]*?)(\\\\s*)$/;\\n/**\\n * decodes all entities into regular string\\n * @param value\\n * @returns {string} A string with decoded entities.\\n */\\nfunction decodeEntities(value) {\\n  if (!value) { return ''; }\\n\\n  // Note: IE8 does not preserve spaces at the start/end of innerHTML\\n  // so we must capture them and reattach them afterward\\n  var parts = spaceRe.exec(value);\\n  var spaceBefore = parts[1];\\n  var spaceAfter = parts[3];\\n  var content = parts[2];\\n  if (content) {\\n    hiddenPre.innerHTML=content.replace(/</g,\\\"&lt;\\\");\\n    // innerText depends on styling as it doesn't display hidden elements.\\n    // Therefore, it's better to use textContent not to cause unnecessary\\n    // reflows. However, IE<9 don't support textContent so the innerText\\n    // fallback is necessary.\\n    content = 'textContent' in hiddenPre ?\\n      hiddenPre.textContent : hiddenPre.innerText;\\n  }\\n  return spaceBefore + content + spaceAfter;\\n}\\n\\n/**\\n * Escapes all potentially dangerous characters, so that the\\n * resulting string can be safely inserted into attribute or\\n * element text.\\n * @param value\\n * @returns {string} escaped text\\n */\\nfunction encodeEntities(value) {\\n  return value.\\n    replace(/&/g, '&amp;').\\n    replace(SURROGATE_PAIR_REGEXP, function(value) {\\n      var hi = value.charCodeAt(0);\\n      var low = value.charCodeAt(1);\\n      return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\\n    }).\\n    replace(NON_ALPHANUMERIC_REGEXP, function(value) {\\n      return '&#' + value.charCodeAt(0) + ';';\\n    }).\\n    replace(/</g, '&lt;').\\n    replace(/>/g, '&gt;');\\n}\\n\\n/**\\n * create an HTML/XML writer which writes to buffer\\n * @param {Array} buf use buf.jain('') to get out sanitized html string\\n * @returns {object} in the form of {\\n *     start: function(tag, attrs, unary) {},\\n *     end: function(tag) {},\\n *     chars: function(text) {},\\n *     comment: function(text) {}\\n * }\\n */\\nfunction htmlSanitizeWriter(buf, uriValidator) {\\n  var ignore = false;\\n  var out = angular.bind(buf, buf.push);\\n  return {\\n    start: function(tag, attrs, unary) {\\n      tag = angular.lowercase(tag);\\n      if (!ignore && specialElements[tag]) {\\n        ignore = tag;\\n      }\\n      if (!ignore && validElements[tag] === true) {\\n        out('<');\\n        out(tag);\\n        angular.forEach(attrs, function(value, key) {\\n          var lkey=angular.lowercase(key);\\n          var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\\n          if (validAttrs[lkey] === true &&\\n            (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\\n            out(' ');\\n            out(key);\\n            out('=\\\"');\\n            out(encodeEntities(value));\\n            out('\\\"');\\n          }\\n        });\\n        out(unary ? '/>' : '>');\\n      }\\n    },\\n    end: function(tag) {\\n        tag = angular.lowercase(tag);\\n        if (!ignore && validElements[tag] === true) {\\n          out('</');\\n          out(tag);\\n          out('>');\\n        }\\n        if (tag == ignore) {\\n          ignore = false;\\n        }\\n      },\\n    chars: function(chars) {\\n        if (!ignore) {\\n          out(encodeEntities(chars));\\n        }\\n      }\\n  };\\n}\\n\\n\\n// define ngSanitize module and register $sanitize service\\nangular.module('ngSanitize', []).provider('$sanitize', $SanitizeProvider);\\n\\n/* global sanitizeText: false */\\n\\n/**\\n * @ngdoc filter\\n * @name linky\\n * @kind function\\n *\\n * @description\\n * Finds links in text input and turns them into html links. Supports http/https/ftp/mailto and\\n * plain email address links.\\n *\\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\\n *\\n * @param {string} text Input text.\\n * @param {string} target Window (_blank|_self|_parent|_top) or named frame to open links in.\\n * @returns {string} Html-linkified text.\\n *\\n * @usage\\n   <span ng-bind-html=\\\"linky_expression | linky\\\"></span>\\n *\\n * @example\\n   <example module=\\\"linkyExample\\\" deps=\\\"angular-sanitize.js\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('linkyExample', ['ngSanitize'])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.snippet =\\n               'Pretty text with some links:\\\\n'+\\n               'http://angularjs.org/,\\\\n'+\\n               'mailto:us@somewhere.org,\\\\n'+\\n               'another@somewhere.org,\\\\n'+\\n               'and one more: ftp://127.0.0.1/.';\\n             $scope.snippetWithTarget = 'http://angularjs.org/';\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n       Snippet: <textarea ng-model=\\\"snippet\\\" cols=\\\"60\\\" rows=\\\"3\\\"></textarea>\\n       <table>\\n         <tr>\\n           <td>Filter</td>\\n           <td>Source</td>\\n           <td>Rendered</td>\\n         </tr>\\n         <tr id=\\\"linky-filter\\\">\\n           <td>linky filter</td>\\n           <td>\\n             <pre>&lt;div ng-bind-html=\\\"snippet | linky\\\"&gt;<br>&lt;/div&gt;</pre>\\n           </td>\\n           <td>\\n             <div ng-bind-html=\\\"snippet | linky\\\"></div>\\n           </td>\\n         </tr>\\n         <tr id=\\\"linky-target\\\">\\n          <td>linky target</td>\\n          <td>\\n            <pre>&lt;div ng-bind-html=\\\"snippetWithTarget | linky:'_blank'\\\"&gt;<br>&lt;/div&gt;</pre>\\n          </td>\\n          <td>\\n            <div ng-bind-html=\\\"snippetWithTarget | linky:'_blank'\\\"></div>\\n          </td>\\n         </tr>\\n         <tr id=\\\"escaped-html\\\">\\n           <td>no filter</td>\\n           <td><pre>&lt;div ng-bind=\\\"snippet\\\"&gt;<br>&lt;/div&gt;</pre></td>\\n           <td><div ng-bind=\\\"snippet\\\"></div></td>\\n         </tr>\\n       </table>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should linkify the snippet with urls', function() {\\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\\n       });\\n\\n       it('should not linkify snippet without the linky filter', function() {\\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\\n       });\\n\\n       it('should update', function() {\\n         element(by.model('snippet')).clear();\\n         element(by.model('snippet')).sendKeys('new http://link.');\\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\\n             toBe('new http://link.');\\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\\n             .toBe('new http://link.');\\n       });\\n\\n       it('should work with the target property', function() {\\n        expect(element(by.id('linky-target')).\\n            element(by.binding(\\\"snippetWithTarget | linky:'_blank'\\\")).getText()).\\n            toBe('http://angularjs.org/');\\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\\n       });\\n     </file>\\n   </example>\\n */\\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\\n  var LINKY_URL_REGEXP =\\n        /((ftp|https?):\\\\/\\\\/|(www\\\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\\\S*[^\\\\s.;,(){}<>\\\"”’]/,\\n      MAILTO_REGEXP = /^mailto:/;\\n\\n  return function(text, target) {\\n    if (!text) return text;\\n    var match;\\n    var raw = text;\\n    var html = [];\\n    var url;\\n    var i;\\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\\n      // We can not end in these as they are sometimes found at the end of the sentence\\n      url = match[0];\\n      // if we did not match ftp/http/www/mailto then assume mailto\\n      if (!match[2] && !match[4]) {\\n        url = (match[3] ? 'http://' : 'mailto:') + url;\\n      }\\n      i = match.index;\\n      addText(raw.substr(0, i));\\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\\n      raw = raw.substring(i + match[0].length);\\n    }\\n    addText(raw);\\n    return $sanitize(html.join(''));\\n\\n    function addText(text) {\\n      if (!text) {\\n        return;\\n      }\\n      html.push(sanitizeText(text));\\n    }\\n\\n    function addLink(url, text) {\\n      html.push('<a ');\\n      if (angular.isDefined(target)) {\\n        html.push('target=\\\"',\\n                  target,\\n                  '\\\" ');\\n      }\\n      html.push('href=\\\"',\\n                url.replace(/\\\"/g, '&quot;'),\\n                '\\\">');\\n      addText(text);\\n      html.push('</a>');\\n    }\\n  };\\n}]);\\n\\n\\n})(window, window.angular);\\n\",\n   40      \"/**\\n * @license AngularJS v1.3.11\\n * (c) 2010-2014 Google, Inc. http://angularjs.org\\n * License: MIT\\n */\\n(function(window, angular, undefined) {'use strict';\\n\\n/**\\n * @ngdoc module\\n * @name ngTouch\\n * @description\\n *\\n * # ngTouch\\n *\\n * The `ngTouch` module provides touch events and other helpers for touch-enabled devices.\\n * The implementation is based on jQuery Mobile touch event handling\\n * ([jquerymobile.com](http://jquerymobile.com/)).\\n *\\n *\\n * See {@link ngTouch.$swipe `$swipe`} for usage.\\n *\\n * <div doc-module-components=\\\"ngTouch\\\"></div>\\n *\\n */\\n\\n// define ngTouch module\\n/* global -ngTouch */\\nvar ngTouch = angular.module('ngTouch', []);\\n\\n/* global ngTouch: false */\\n\\n    /**\\n     * @ngdoc service\\n     * @name $swipe\\n     *\\n     * @description\\n     * The `$swipe` service is a service that abstracts the messier details of hold-and-drag swipe\\n     * behavior, to make implementing swipe-related directives more convenient.\\n     *\\n     * Requires the {@link ngTouch `ngTouch`} module to be installed.\\n     *\\n     * `$swipe` is used by the `ngSwipeLeft` and `ngSwipeRight` directives in `ngTouch`, and by\\n     * `ngCarousel` in a separate component.\\n     *\\n     * # Usage\\n     * The `$swipe` service is an object with a single method: `bind`. `bind` takes an element\\n     * which is to be watched for swipes, and an object with four handler functions. See the\\n     * documentation for `bind` below.\\n     */\\n\\nngTouch.factory('$swipe', [function() {\\n  // The total distance in any direction before we make the call on swipe vs. scroll.\\n  var MOVE_BUFFER_RADIUS = 10;\\n\\n  var POINTER_EVENTS = {\\n    'mouse': {\\n      start: 'mousedown',\\n      move: 'mousemove',\\n      end: 'mouseup'\\n    },\\n    'touch': {\\n      start: 'touchstart',\\n      move: 'touchmove',\\n      end: 'touchend',\\n      cancel: 'touchcancel'\\n    }\\n  };\\n\\n  function getCoordinates(event) {\\n    var touches = event.touches && event.touches.length ? event.touches : [event];\\n    var e = (event.changedTouches && event.changedTouches[0]) ||\\n        (event.originalEvent && event.originalEvent.changedTouches &&\\n            event.originalEvent.changedTouches[0]) ||\\n        touches[0].originalEvent || touches[0];\\n\\n    return {\\n      x: e.clientX,\\n      y: e.clientY\\n    };\\n  }\\n\\n  function getEvents(pointerTypes, eventType) {\\n    var res = [];\\n    angular.forEach(pointerTypes, function(pointerType) {\\n      var eventName = POINTER_EVENTS[pointerType][eventType];\\n      if (eventName) {\\n        res.push(eventName);\\n      }\\n    });\\n    return res.join(' ');\\n  }\\n\\n  return {\\n    /**\\n     * @ngdoc method\\n     * @name $swipe#bind\\n     *\\n     * @description\\n     * The main method of `$swipe`. It takes an element to be watched for swipe motions, and an\\n     * object containing event handlers.\\n     * The pointer types that should be used can be specified via the optional\\n     * third argument, which is an array of strings `'mouse'` and `'touch'`. By default,\\n     * `$swipe` will listen for `mouse` and `touch` events.\\n     *\\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }`.\\n     *\\n     * `start` is called on either `mousedown` or `touchstart`. After this event, `$swipe` is\\n     * watching for `touchmove` or `mousemove` events. These events are ignored until the total\\n     * distance moved in either dimension exceeds a small threshold.\\n     *\\n     * Once this threshold is exceeded, either the horizontal or vertical delta is greater.\\n     * - If the horizontal distance is greater, this is a swipe and `move` and `end` events follow.\\n     * - If the vertical distance is greater, this is a scroll, and we let the browser take over.\\n     *   A `cancel` event is sent.\\n     *\\n     * `move` is called on `mousemove` and `touchmove` after the above logic has determined that\\n     * a swipe is in progress.\\n     *\\n     * `end` is called when a swipe is successfully completed with a `touchend` or `mouseup`.\\n     *\\n     * `cancel` is called either on a `touchcancel` from the browser, or when we begin scrolling\\n     * as described above.\\n     *\\n     */\\n    bind: function(element, eventHandlers, pointerTypes) {\\n      // Absolute total movement, used to control swipe vs. scroll.\\n      var totalX, totalY;\\n      // Coordinates of the start position.\\n      var startCoords;\\n      // Last event's position.\\n      var lastPos;\\n      // Whether a swipe is active.\\n      var active = false;\\n\\n      pointerTypes = pointerTypes || ['mouse', 'touch'];\\n      element.on(getEvents(pointerTypes, 'start'), function(event) {\\n        startCoords = getCoordinates(event);\\n        active = true;\\n        totalX = 0;\\n        totalY = 0;\\n        lastPos = startCoords;\\n        eventHandlers['start'] && eventHandlers['start'](startCoords, event);\\n      });\\n      var events = getEvents(pointerTypes, 'cancel');\\n      if (events) {\\n        element.on(events, function(event) {\\n          active = false;\\n          eventHandlers['cancel'] && eventHandlers['cancel'](event);\\n        });\\n      }\\n\\n      element.on(getEvents(pointerTypes, 'move'), function(event) {\\n        if (!active) return;\\n\\n        // Android will send a touchcancel if it thinks we're starting to scroll.\\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\\n        // we either:\\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\\n        // - On totalY > totalX, we let the browser handle it as a scroll.\\n\\n        if (!startCoords) return;\\n        var coords = getCoordinates(event);\\n\\n        totalX += Math.abs(coords.x - lastPos.x);\\n        totalY += Math.abs(coords.y - lastPos.y);\\n\\n        lastPos = coords;\\n\\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\\n          return;\\n        }\\n\\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\\n        if (totalY > totalX) {\\n          // Allow native scrolling to take over.\\n          active = false;\\n          eventHandlers['cancel'] && eventHandlers['cancel'](event);\\n          return;\\n        } else {\\n          // Prevent the browser from scrolling.\\n          event.preventDefault();\\n          eventHandlers['move'] && eventHandlers['move'](coords, event);\\n        }\\n      });\\n\\n      element.on(getEvents(pointerTypes, 'end'), function(event) {\\n        if (!active) return;\\n        active = false;\\n        eventHandlers['end'] && eventHandlers['end'](getCoordinates(event), event);\\n      });\\n    }\\n  };\\n}]);\\n\\n/* global ngTouch: false */\\n\\n/**\\n * @ngdoc directive\\n * @name ngClick\\n *\\n * @description\\n * A more powerful replacement for the default ngClick designed to be used on touchscreen\\n * devices. Most mobile browsers wait about 300ms after a tap-and-release before sending\\n * the click event. This version handles them immediately, and then prevents the\\n * following click event from propagating.\\n *\\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\\n *\\n * This directive can fall back to using an ordinary click event, and so works on desktop\\n * browsers as well as mobile.\\n *\\n * This directive also sets the CSS class `ng-click-active` while the element is being held\\n * down (by a mouse click or touch) so you can restyle the depressed element if you wish.\\n *\\n * @element ANY\\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate\\n * upon tap. (Event object is available as `$event`)\\n *\\n * @example\\n    <example module=\\\"ngClickExample\\\" deps=\\\"angular-touch.js\\\">\\n      <file name=\\\"index.html\\\">\\n        <button ng-click=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n          Increment\\n        </button>\\n        count: {{ count }}\\n      </file>\\n      <file name=\\\"script.js\\\">\\n        angular.module('ngClickExample', ['ngTouch']);\\n      </file>\\n    </example>\\n */\\n\\nngTouch.config(['$provide', function($provide) {\\n  $provide.decorator('ngClickDirective', ['$delegate', function($delegate) {\\n    // drop the default ngClick directive\\n    $delegate.shift();\\n    return $delegate;\\n  }]);\\n}]);\\n\\nngTouch.directive('ngClick', ['$parse', '$timeout', '$rootElement',\\n    function($parse, $timeout, $rootElement) {\\n  var TAP_DURATION = 750; // Shorter than 750ms is a tap, longer is a taphold or drag.\\n  var MOVE_TOLERANCE = 12; // 12px seems to work in most mobile browsers.\\n  var PREVENT_DURATION = 2500; // 2.5 seconds maximum from preventGhostClick call to click\\n  var CLICKBUSTER_THRESHOLD = 25; // 25 pixels in any dimension is the limit for busting clicks.\\n\\n  var ACTIVE_CLASS_NAME = 'ng-click-active';\\n  var lastPreventedTime;\\n  var touchCoordinates;\\n  var lastLabelClickCoordinates;\\n\\n\\n  // TAP EVENTS AND GHOST CLICKS\\n  //\\n  // Why tap events?\\n  // Mobile browsers detect a tap, then wait a moment (usually ~300ms) to see if you're\\n  // double-tapping, and then fire a click event.\\n  //\\n  // This delay sucks and makes mobile apps feel unresponsive.\\n  // So we detect touchstart, touchmove, touchcancel and touchend ourselves and determine when\\n  // the user has tapped on something.\\n  //\\n  // What happens when the browser then generates a click event?\\n  // The browser, of course, also detects the tap and fires a click after a delay. This results in\\n  // tapping/clicking twice. We do \\\"clickbusting\\\" to prevent it.\\n  //\\n  // How does it work?\\n  // We attach global touchstart and click handlers, that run during the capture (early) phase.\\n  // So the sequence for a tap is:\\n  // - global touchstart: Sets an \\\"allowable region\\\" at the point touched.\\n  // - element's touchstart: Starts a touch\\n  // (- touchmove or touchcancel ends the touch, no click follows)\\n  // - element's touchend: Determines if the tap is valid (didn't move too far away, didn't hold\\n  //   too long) and fires the user's tap handler. The touchend also calls preventGhostClick().\\n  // - preventGhostClick() removes the allowable region the global touchstart created.\\n  // - The browser generates a click event.\\n  // - The global click handler catches the click, and checks whether it was in an allowable region.\\n  //     - If preventGhostClick was called, the region will have been removed, the click is busted.\\n  //     - If the region is still there, the click proceeds normally. Therefore clicks on links and\\n  //       other elements without ngTap on them work normally.\\n  //\\n  // This is an ugly, terrible hack!\\n  // Yeah, tell me about it. The alternatives are using the slow click events, or making our users\\n  // deal with the ghost clicks, so I consider this the least of evils. Fortunately Angular\\n  // encapsulates this ugly logic away from the user.\\n  //\\n  // Why not just put click handlers on the element?\\n  // We do that too, just to be sure. If the tap event caused the DOM to change,\\n  // it is possible another element is now in that position. To take account for these possibly\\n  // distinct elements, the handlers are global and care only about coordinates.\\n\\n  // Checks if the coordinates are close enough to be within the region.\\n  function hit(x1, y1, x2, y2) {\\n    return Math.abs(x1 - x2) < CLICKBUSTER_THRESHOLD && Math.abs(y1 - y2) < CLICKBUSTER_THRESHOLD;\\n  }\\n\\n  // Checks a list of allowable regions against a click location.\\n  // Returns true if the click should be allowed.\\n  // Splices out the allowable region from the list after it has been used.\\n  function checkAllowableRegions(touchCoordinates, x, y) {\\n    for (var i = 0; i < touchCoordinates.length; i += 2) {\\n      if (hit(touchCoordinates[i], touchCoordinates[i + 1], x, y)) {\\n        touchCoordinates.splice(i, i + 2);\\n        return true; // allowable region\\n      }\\n    }\\n    return false; // No allowable region; bust it.\\n  }\\n\\n  // Global click handler that prevents the click if it's in a bustable zone and preventGhostClick\\n  // was called recently.\\n  function onClick(event) {\\n    if (Date.now() - lastPreventedTime > PREVENT_DURATION) {\\n      return; // Too old.\\n    }\\n\\n    var touches = event.touches && event.touches.length ? event.touches : [event];\\n    var x = touches[0].clientX;\\n    var y = touches[0].clientY;\\n    // Work around desktop Webkit quirk where clicking a label will fire two clicks (on the label\\n    // and on the input element). Depending on the exact browser, this second click we don't want\\n    // to bust has either (0,0), negative coordinates, or coordinates equal to triggering label\\n    // click event\\n    if (x < 1 && y < 1) {\\n      return; // offscreen\\n    }\\n    if (lastLabelClickCoordinates &&\\n        lastLabelClickCoordinates[0] === x && lastLabelClickCoordinates[1] === y) {\\n      return; // input click triggered by label click\\n    }\\n    // reset label click coordinates on first subsequent click\\n    if (lastLabelClickCoordinates) {\\n      lastLabelClickCoordinates = null;\\n    }\\n    // remember label click coordinates to prevent click busting of trigger click event on input\\n    if (event.target.tagName.toLowerCase() === 'label') {\\n      lastLabelClickCoordinates = [x, y];\\n    }\\n\\n    // Look for an allowable region containing this click.\\n    // If we find one, that means it was created by touchstart and not removed by\\n    // preventGhostClick, so we don't bust it.\\n    if (checkAllowableRegions(touchCoordinates, x, y)) {\\n      return;\\n    }\\n\\n    // If we didn't find an allowable region, bust the click.\\n    event.stopPropagation();\\n    event.preventDefault();\\n\\n    // Blur focused form elements\\n    event.target && event.target.blur();\\n  }\\n\\n\\n  // Global touchstart handler that creates an allowable region for a click event.\\n  // This allowable region can be removed by preventGhostClick if we want to bust it.\\n  function onTouchStart(event) {\\n    var touches = event.touches && event.touches.length ? event.touches : [event];\\n    var x = touches[0].clientX;\\n    var y = touches[0].clientY;\\n    touchCoordinates.push(x, y);\\n\\n    $timeout(function() {\\n      // Remove the allowable region.\\n      for (var i = 0; i < touchCoordinates.length; i += 2) {\\n        if (touchCoordinates[i] == x && touchCoordinates[i + 1] == y) {\\n          touchCoordinates.splice(i, i + 2);\\n          return;\\n        }\\n      }\\n    }, PREVENT_DURATION, false);\\n  }\\n\\n  // On the first call, attaches some event handlers. Then whenever it gets called, it creates a\\n  // zone around the touchstart where clicks will get busted.\\n  function preventGhostClick(x, y) {\\n    if (!touchCoordinates) {\\n      $rootElement[0].addEventListener('click', onClick, true);\\n      $rootElement[0].addEventListener('touchstart', onTouchStart, true);\\n      touchCoordinates = [];\\n    }\\n\\n    lastPreventedTime = Date.now();\\n\\n    checkAllowableRegions(touchCoordinates, x, y);\\n  }\\n\\n  // Actual linking function.\\n  return function(scope, element, attr) {\\n    var clickHandler = $parse(attr.ngClick),\\n        tapping = false,\\n        tapElement,  // Used to blur the element after a tap.\\n        startTime,   // Used to check if the tap was held too long.\\n        touchStartX,\\n        touchStartY;\\n\\n    function resetState() {\\n      tapping = false;\\n      element.removeClass(ACTIVE_CLASS_NAME);\\n    }\\n\\n    element.on('touchstart', function(event) {\\n      tapping = true;\\n      tapElement = event.target ? event.target : event.srcElement; // IE uses srcElement.\\n      // Hack for Safari, which can target text nodes instead of containers.\\n      if (tapElement.nodeType == 3) {\\n        tapElement = tapElement.parentNode;\\n      }\\n\\n      element.addClass(ACTIVE_CLASS_NAME);\\n\\n      startTime = Date.now();\\n\\n      var touches = event.touches && event.touches.length ? event.touches : [event];\\n      var e = touches[0].originalEvent || touches[0];\\n      touchStartX = e.clientX;\\n      touchStartY = e.clientY;\\n    });\\n\\n    element.on('touchmove', function(event) {\\n      resetState();\\n    });\\n\\n    element.on('touchcancel', function(event) {\\n      resetState();\\n    });\\n\\n    element.on('touchend', function(event) {\\n      var diff = Date.now() - startTime;\\n\\n      var touches = (event.changedTouches && event.changedTouches.length) ? event.changedTouches :\\n          ((event.touches && event.touches.length) ? event.touches : [event]);\\n      var e = touches[0].originalEvent || touches[0];\\n      var x = e.clientX;\\n      var y = e.clientY;\\n      var dist = Math.sqrt(Math.pow(x - touchStartX, 2) + Math.pow(y - touchStartY, 2));\\n\\n      if (tapping && diff < TAP_DURATION && dist < MOVE_TOLERANCE) {\\n        // Call preventGhostClick so the clickbuster will catch the corresponding click.\\n        preventGhostClick(x, y);\\n\\n        // Blur the focused element (the button, probably) before firing the callback.\\n        // This doesn't work perfectly on Android Chrome, but seems to work elsewhere.\\n        // I couldn't get anything to work reliably on Android Chrome.\\n        if (tapElement) {\\n          tapElement.blur();\\n        }\\n\\n        if (!angular.isDefined(attr.disabled) || attr.disabled === false) {\\n          element.triggerHandler('click', [event]);\\n        }\\n      }\\n\\n      resetState();\\n    });\\n\\n    // Hack for iOS Safari's benefit. It goes searching for onclick handlers and is liable to click\\n    // something else nearby.\\n    element.onclick = function(event) { };\\n\\n    // Actual click handler.\\n    // There are three different kinds of clicks, only two of which reach this point.\\n    // - On desktop browsers without touch events, their clicks will always come here.\\n    // - On mobile browsers, the simulated \\\"fast\\\" click will call this.\\n    // - But the browser's follow-up slow click will be \\\"busted\\\" before it reaches this handler.\\n    // Therefore it's safe to use this directive on both mobile and desktop.\\n    element.on('click', function(event, touchend) {\\n      scope.$apply(function() {\\n        clickHandler(scope, {$event: (touchend || event)});\\n      });\\n    });\\n\\n    element.on('mousedown', function(event) {\\n      element.addClass(ACTIVE_CLASS_NAME);\\n    });\\n\\n    element.on('mousemove mouseup', function(event) {\\n      element.removeClass(ACTIVE_CLASS_NAME);\\n    });\\n\\n  };\\n}]);\\n\\n/* global ngTouch: false */\\n\\n/**\\n * @ngdoc directive\\n * @name ngSwipeLeft\\n *\\n * @description\\n * Specify custom behavior when an element is swiped to the left on a touchscreen device.\\n * A leftward swipe is a quick, right-to-left slide of the finger.\\n * Though ngSwipeLeft is designed for touch-based devices, it will work with a mouse click and drag\\n * too.\\n *\\n * To disable the mouse click and drag functionality, add `ng-swipe-disable-mouse` to\\n * the `ng-swipe-left` or `ng-swipe-right` DOM Element.\\n *\\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\\n *\\n * @element ANY\\n * @param {expression} ngSwipeLeft {@link guide/expression Expression} to evaluate\\n * upon left swipe. (Event object is available as `$event`)\\n *\\n * @example\\n    <example module=\\\"ngSwipeLeftExample\\\" deps=\\\"angular-touch.js\\\">\\n      <file name=\\\"index.html\\\">\\n        <div ng-show=\\\"!showActions\\\" ng-swipe-left=\\\"showActions = true\\\">\\n          Some list content, like an email in the inbox\\n        </div>\\n        <div ng-show=\\\"showActions\\\" ng-swipe-right=\\\"showActions = false\\\">\\n          <button ng-click=\\\"reply()\\\">Reply</button>\\n          <button ng-click=\\\"delete()\\\">Delete</button>\\n        </div>\\n      </file>\\n      <file name=\\\"script.js\\\">\\n        angular.module('ngSwipeLeftExample', ['ngTouch']);\\n      </file>\\n    </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngSwipeRight\\n *\\n * @description\\n * Specify custom behavior when an element is swiped to the right on a touchscreen device.\\n * A rightward swipe is a quick, left-to-right slide of the finger.\\n * Though ngSwipeRight is designed for touch-based devices, it will work with a mouse click and drag\\n * too.\\n *\\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\\n *\\n * @element ANY\\n * @param {expression} ngSwipeRight {@link guide/expression Expression} to evaluate\\n * upon right swipe. (Event object is available as `$event`)\\n *\\n * @example\\n    <example module=\\\"ngSwipeRightExample\\\" deps=\\\"angular-touch.js\\\">\\n      <file name=\\\"index.html\\\">\\n        <div ng-show=\\\"!showActions\\\" ng-swipe-left=\\\"showActions = true\\\">\\n          Some list content, like an email in the inbox\\n        </div>\\n        <div ng-show=\\\"showActions\\\" ng-swipe-right=\\\"showActions = false\\\">\\n          <button ng-click=\\\"reply()\\\">Reply</button>\\n          <button ng-click=\\\"delete()\\\">Delete</button>\\n        </div>\\n      </file>\\n      <file name=\\\"script.js\\\">\\n        angular.module('ngSwipeRightExample', ['ngTouch']);\\n      </file>\\n    </example>\\n */\\n\\nfunction makeSwipeDirective(directiveName, direction, eventName) {\\n  ngTouch.directive(directiveName, ['$parse', '$swipe', function($parse, $swipe) {\\n    // The maximum vertical delta for a swipe should be less than 75px.\\n    var MAX_VERTICAL_DISTANCE = 75;\\n    // Vertical distance should not be more than a fraction of the horizontal distance.\\n    var MAX_VERTICAL_RATIO = 0.3;\\n    // At least a 30px lateral motion is necessary for a swipe.\\n    var MIN_HORIZONTAL_DISTANCE = 30;\\n\\n    return function(scope, element, attr) {\\n      var swipeHandler = $parse(attr[directiveName]);\\n\\n      var startCoords, valid;\\n\\n      function validSwipe(coords) {\\n        // Check that it's within the coordinates.\\n        // Absolute vertical distance must be within tolerances.\\n        // Horizontal distance, we take the current X - the starting X.\\n        // This is negative for leftward swipes and positive for rightward swipes.\\n        // After multiplying by the direction (-1 for left, +1 for right), legal swipes\\n        // (ie. same direction as the directive wants) will have a positive delta and\\n        // illegal ones a negative delta.\\n        // Therefore this delta must be positive, and larger than the minimum.\\n        if (!startCoords) return false;\\n        var deltaY = Math.abs(coords.y - startCoords.y);\\n        var deltaX = (coords.x - startCoords.x) * direction;\\n        return valid && // Short circuit for already-invalidated swipes.\\n            deltaY < MAX_VERTICAL_DISTANCE &&\\n            deltaX > 0 &&\\n            deltaX > MIN_HORIZONTAL_DISTANCE &&\\n            deltaY / deltaX < MAX_VERTICAL_RATIO;\\n      }\\n\\n      var pointerTypes = ['touch'];\\n      if (!angular.isDefined(attr['ngSwipeDisableMouse'])) {\\n        pointerTypes.push('mouse');\\n      }\\n      $swipe.bind(element, {\\n        'start': function(coords, event) {\\n          startCoords = coords;\\n          valid = true;\\n        },\\n        'cancel': function(event) {\\n          valid = false;\\n        },\\n        'end': function(coords, event) {\\n          if (validSwipe(coords)) {\\n            scope.$apply(function() {\\n              element.triggerHandler(eventName);\\n              swipeHandler(scope, {$event: event});\\n            });\\n          }\\n        }\\n      }, pointerTypes);\\n    };\\n  }]);\\n}\\n\\n// Left is negative X-coordinate, right is positive.\\nmakeSwipeDirective('ngSwipeLeft', -1, 'swipeleft');\\nmakeSwipeDirective('ngSwipeRight', 1, 'swiperight');\\n\\n\\n\\n})(window, window.angular);\\n\",\n   41:     \"/**\\n * @license AngularJS v1.3.11\\n * (c) 2010-2014 Google, Inc. http://angularjs.org\\n * License: MIT\\n */\\n(function(window, document, undefined) {'use strict';\\n\\n/**\\n * @description\\n *\\n * This object provides a utility for producing rich Error messages within\\n * Angular. It can be called as follows:\\n *\\n * var exampleMinErr = minErr('example');\\n * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);\\n *\\n * The above creates an instance of minErr in the example namespace. The\\n * resulting error will have a namespaced error code of example.one.  The\\n * resulting error will replace {0} with the value of foo, and {1} with the\\n * value of bar. The object is not restricted in the number of arguments it can\\n * take.\\n *\\n * If fewer arguments are specified than necessary for interpolation, the extra\\n * interpolation markers will be preserved in the final string.\\n *\\n * Since data will be parsed statically during a build step, some restrictions\\n * are applied with respect to how minErr instances are created and called.\\n * Instances should have names of the form namespaceMinErr for a minErr created\\n * using minErr('namespace') . Error codes, namespaces and template strings\\n * should all be static strings, not variables or general expressions.\\n *\\n * @param {string} module The namespace to use for the new minErr instance.\\n * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning\\n *   error from returned function, for cases when a particular type of error is useful.\\n * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance\\n */\\n\\nfunction minErr(module, ErrorConstructor) {\\n  ErrorConstructor = ErrorConstructor || Error;\\n  return function() {\\n    var code = arguments[0],\\n      prefix = '[' + (module ? module + ':' : '') + code + '] ',\\n      template = arguments[1],\\n      templateArgs = arguments,\\n\\n      message, i;\\n\\n    message = prefix + template.replace(/\\\\{\\\\d+\\\\}/g, function(match) {\\n      var index = +match.slice(1, -1), arg;\\n\\n      if (index + 2 < templateArgs.length) {\\n        return toDebugString(templateArgs[index + 2]);\\n      }\\n      return match;\\n    });\\n\\n    message = message + '\\\\nhttp://errors.angularjs.org/1.3.11/' +\\n      (module ? module + '/' : '') + code;\\n    for (i = 2; i < arguments.length; i++) {\\n      message = message + (i == 2 ? '?' : '&') + 'p' + (i - 2) + '=' +\\n        encodeURIComponent(toDebugString(arguments[i]));\\n    }\\n    return new ErrorConstructor(message);\\n  };\\n}\\n\\n/* We need to tell jshint what variables are being exported */\\n/* global angular: true,\\n  msie: true,\\n  jqLite: true,\\n  jQuery: true,\\n  slice: true,\\n  splice: true,\\n  push: true,\\n  toString: true,\\n  ngMinErr: true,\\n  angularModule: true,\\n  uid: true,\\n  REGEX_STRING_REGEXP: true,\\n  VALIDITY_STATE_PROPERTY: true,\\n\\n  lowercase: true,\\n  uppercase: true,\\n  manualLowercase: true,\\n  manualUppercase: true,\\n  nodeName_: true,\\n  isArrayLike: true,\\n  forEach: true,\\n  sortedKeys: true,\\n  forEachSorted: true,\\n  reverseParams: true,\\n  nextUid: true,\\n  setHashKey: true,\\n  extend: true,\\n  int: true,\\n  inherit: true,\\n  noop: true,\\n  identity: true,\\n  valueFn: true,\\n  isUndefined: true,\\n  isDefined: true,\\n  isObject: true,\\n  isString: true,\\n  isNumber: true,\\n  isDate: true,\\n  isArray: true,\\n  isFunction: true,\\n  isRegExp: true,\\n  isWindow: true,\\n  isScope: true,\\n  isFile: true,\\n  isFormData: true,\\n  isBlob: true,\\n  isBoolean: true,\\n  isPromiseLike: true,\\n  trim: true,\\n  escapeForRegexp: true,\\n  isElement: true,\\n  makeMap: true,\\n  includes: true,\\n  arrayRemove: true,\\n  copy: true,\\n  shallowCopy: true,\\n  equals: true,\\n  csp: true,\\n  concat: true,\\n  sliceArgs: true,\\n  bind: true,\\n  toJsonReplacer: true,\\n  toJson: true,\\n  fromJson: true,\\n  startingTag: true,\\n  tryDecodeURIComponent: true,\\n  parseKeyValue: true,\\n  toKeyValue: true,\\n  encodeUriSegment: true,\\n  encodeUriQuery: true,\\n  angularInit: true,\\n  bootstrap: true,\\n  getTestability: true,\\n  snake_case: true,\\n  bindJQuery: true,\\n  assertArg: true,\\n  assertArgFn: true,\\n  assertNotHasOwnProperty: true,\\n  getter: true,\\n  getBlockNodes: true,\\n  hasOwnProperty: true,\\n  createMap: true,\\n\\n  NODE_TYPE_ELEMENT: true,\\n  NODE_TYPE_TEXT: true,\\n  NODE_TYPE_COMMENT: true,\\n  NODE_TYPE_DOCUMENT: true,\\n  NODE_TYPE_DOCUMENT_FRAGMENT: true,\\n*/\\n\\n////////////////////////////////////\\n\\n/**\\n * @ngdoc module\\n * @name ng\\n * @module ng\\n * @description\\n *\\n * # ng (core module)\\n * The ng module is loaded by default when an AngularJS application is started. The module itself\\n * contains the essential components for an AngularJS application to function. The table below\\n * lists a high level breakdown of each of the services/factories, filters, directives and testing\\n * components available within this core module.\\n *\\n * <div doc-module-components=\\\"ng\\\"></div>\\n */\\n\\nvar REGEX_STRING_REGEXP = /^\\\\/(.+)\\\\/([a-z]*)$/;\\n\\n// The name of a form control's ValidityState property.\\n// This is used so that it's possible for internal tests to create mock ValidityStates.\\nvar VALIDITY_STATE_PROPERTY = 'validity';\\n\\n/**\\n * @ngdoc function\\n * @name angular.lowercase\\n * @module ng\\n * @kind function\\n *\\n * @description Converts the specified string to lowercase.\\n * @param {string} string String to be converted to lowercase.\\n * @returns {string} Lowercased string.\\n */\\nvar lowercase = function(string) {return isString(string) ? string.toLowerCase() : string;};\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n/**\\n * @ngdoc function\\n * @name angular.uppercase\\n * @module ng\\n * @kind function\\n *\\n * @description Converts the specified string to uppercase.\\n * @param {string} string String to be converted to uppercase.\\n * @returns {string} Uppercased string.\\n */\\nvar uppercase = function(string) {return isString(string) ? string.toUpperCase() : string;};\\n\\n\\nvar manualLowercase = function(s) {\\n  /* jshint bitwise: false */\\n  return isString(s)\\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\\n      : s;\\n};\\nvar manualUppercase = function(s) {\\n  /* jshint bitwise: false */\\n  return isString(s)\\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\\n      : s;\\n};\\n\\n\\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\\n// with correct but slower alternatives.\\nif ('i' !== 'I'.toLowerCase()) {\\n  lowercase = manualLowercase;\\n  uppercase = manualUppercase;\\n}\\n\\n\\nvar\\n    msie,             // holds major version number for IE, or NaN if UA is not IE.\\n    jqLite,           // delay binding since jQuery could be loaded after us.\\n    jQuery,           // delay binding\\n    slice             = [].slice,\\n    splice            = [].splice,\\n    push              = [].push,\\n    toString          = Object.prototype.toString,\\n    ngMinErr          = minErr('ng'),\\n\\n    /** @name angular */\\n    angular           = window.angular || (window.angular = {}),\\n    angularModule,\\n    uid               = 0;\\n\\n/**\\n * documentMode is an IE-only property\\n * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx\\n */\\nmsie = document.documentMode;\\n\\n\\n/**\\n * @private\\n * @param {*} obj\\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,\\n *                   String ...)\\n */\\nfunction isArrayLike(obj) {\\n  if (obj == null || isWindow(obj)) {\\n    return false;\\n  }\\n\\n  var length = obj.length;\\n\\n  if (obj.nodeType === NODE_TYPE_ELEMENT && length) {\\n    return true;\\n  }\\n\\n  return isString(obj) || isArray(obj) || length === 0 ||\\n         typeof length === 'number' && length > 0 && (length - 1) in obj;\\n}\\n\\n/**\\n * @ngdoc function\\n * @name angular.forEach\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\\n * object or an array. The `iterator` function is invoked with `iterator(value, key, obj)`, where `value`\\n * is the value of an object property or an array element, `key` is the object property key or\\n * array element index and obj is the `obj` itself. Specifying a `context` for the function is optional.\\n *\\n * It is worth noting that `.forEach` does not iterate over inherited properties because it filters\\n * using the `hasOwnProperty` method.\\n *\\n * Unlike ES262's\\n * [Array.prototype.forEach](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18),\\n * Providing 'undefined' or 'null' values for `obj` will not throw a TypeError, but rather just\\n * return the value provided.\\n *\\n   ```js\\n     var values = {name: 'misko', gender: 'male'};\\n     var log = [];\\n     angular.forEach(values, function(value, key) {\\n       this.push(key + ': ' + value);\\n     }, log);\\n     expect(log).toEqual(['name: misko', 'gender: male']);\\n   ```\\n *\\n * @param {Object|Array} obj Object to iterate over.\\n * @param {Function} iterator Iterator function.\\n * @param {Object=} context Object to become context (`this`) for the iterator function.\\n * @returns {Object|Array} Reference to `obj`.\\n */\\n\\nfunction forEach(obj, iterator, context) {\\n  var key, length;\\n  if (obj) {\\n    if (isFunction(obj)) {\\n      for (key in obj) {\\n        // Need to check if hasOwnProperty exists,\\n        // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function\\n        if (key != 'prototype' && key != 'length' && key != 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {\\n          iterator.call(context, obj[key], key, obj);\\n        }\\n      }\\n    } else if (isArray(obj) || isArrayLike(obj)) {\\n      var isPrimitive = typeof obj !== 'object';\\n      for (key = 0, length = obj.length; key < length; key++) {\\n        if (isPrimitive || key in obj) {\\n          iterator.call(context, obj[key], key, obj);\\n        }\\n      }\\n    } else if (obj.forEach && obj.forEach !== forEach) {\\n        obj.forEach(iterator, context, obj);\\n    } else {\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) {\\n          iterator.call(context, obj[key], key, obj);\\n        }\\n      }\\n    }\\n  }\\n  return obj;\\n}\\n\\nfunction sortedKeys(obj) {\\n  return Object.keys(obj).sort();\\n}\\n\\nfunction forEachSorted(obj, iterator, context) {\\n  var keys = sortedKeys(obj);\\n  for (var i = 0; i < keys.length; i++) {\\n    iterator.call(context, obj[keys[i]], keys[i]);\\n  }\\n  return keys;\\n}\\n\\n\\n/**\\n * when using forEach the params are value, key, but it is often useful to have key, value.\\n * @param {function(string, *)} iteratorFn\\n * @returns {function(*, string)}\\n */\\nfunction reverseParams(iteratorFn) {\\n  return function(value, key) { iteratorFn(key, value); };\\n}\\n\\n/**\\n * A consistent way of creating unique IDs in angular.\\n *\\n * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\\n * we hit number precision issues in JavaScript.\\n *\\n * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M\\n *\\n * @returns {number} an unique alpha-numeric string\\n */\\nfunction nextUid() {\\n  return ++uid;\\n}\\n\\n\\n/**\\n * Set or clear the hashkey for an object.\\n * @param obj object\\n * @param h the hashkey (!truthy to delete the hashkey)\\n */\\nfunction setHashKey(obj, h) {\\n  if (h) {\\n    obj.$$hashKey = h;\\n  }\\n  else {\\n    delete obj.$$hashKey;\\n  }\\n}\\n\\n/**\\n * @ngdoc function\\n * @name angular.extend\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)\\n * to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so\\n * by passing an empty object as the target: `var object = angular.extend({}, object1, object2)`.\\n * Note: Keep in mind that `angular.extend` does not support recursive merge (deep copy).\\n *\\n * @param {Object} dst Destination object.\\n * @param {...Object} src Source object(s).\\n * @returns {Object} Reference to `dst`.\\n */\\nfunction extend(dst) {\\n  var h = dst.$$hashKey;\\n\\n  for (var i = 1, ii = arguments.length; i < ii; i++) {\\n    var obj = arguments[i];\\n    if (obj) {\\n      var keys = Object.keys(obj);\\n      for (var j = 0, jj = keys.length; j < jj; j++) {\\n        var key = keys[j];\\n        dst[key] = obj[key];\\n      }\\n    }\\n  }\\n\\n  setHashKey(dst, h);\\n  return dst;\\n}\\n\\nfunction int(str) {\\n  return parseInt(str, 10);\\n}\\n\\n\\nfunction inherit(parent, extra) {\\n  return extend(Object.create(parent), extra);\\n}\\n\\n/**\\n * @ngdoc function\\n * @name angular.noop\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * A function that performs no operations. This function can be useful when writing code in the\\n * functional style.\\n   ```js\\n     function foo(callback) {\\n       var result = calculateResult();\\n       (callback || angular.noop)(result);\\n     }\\n   ```\\n */\\nfunction noop() {}\\nnoop.$inject = [];\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.identity\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * A function that returns its first argument. This function is useful when writing code in the\\n * functional style.\\n *\\n   ```js\\n     function transformer(transformationFn, value) {\\n       return (transformationFn || angular.identity)(value);\\n     };\\n   ```\\n  * @param {*} value to be returned.\\n  * @returns {*} the value passed in.\\n */\\nfunction identity($) {return $;}\\nidentity.$inject = [];\\n\\n\\nfunction valueFn(value) {return function() {return value;};}\\n\\n/**\\n * @ngdoc function\\n * @name angular.isUndefined\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is undefined.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is undefined.\\n */\\nfunction isUndefined(value) {return typeof value === 'undefined';}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isDefined\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is defined.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is defined.\\n */\\nfunction isDefined(value) {return typeof value !== 'undefined';}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isObject\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\\n * considered to be objects. Note that JavaScript arrays are objects.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is an `Object` but not `null`.\\n */\\nfunction isObject(value) {\\n  // http://jsperf.com/isobject4\\n  return value !== null && typeof value === 'object';\\n}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isString\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is a `String`.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is a `String`.\\n */\\nfunction isString(value) {return typeof value === 'string';}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isNumber\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is a `Number`.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is a `Number`.\\n */\\nfunction isNumber(value) {return typeof value === 'number';}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isDate\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a value is a date.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is a `Date`.\\n */\\nfunction isDate(value) {\\n  return toString.call(value) === '[object Date]';\\n}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isArray\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is an `Array`.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is an `Array`.\\n */\\nvar isArray = Array.isArray;\\n\\n/**\\n * @ngdoc function\\n * @name angular.isFunction\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is a `Function`.\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is a `Function`.\\n */\\nfunction isFunction(value) {return typeof value === 'function';}\\n\\n\\n/**\\n * Determines if a value is a regular expression object.\\n *\\n * @private\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is a `RegExp`.\\n */\\nfunction isRegExp(value) {\\n  return toString.call(value) === '[object RegExp]';\\n}\\n\\n\\n/**\\n * Checks if `obj` is a window object.\\n *\\n * @private\\n * @param {*} obj Object to check\\n * @returns {boolean} True if `obj` is a window obj.\\n */\\nfunction isWindow(obj) {\\n  return obj && obj.window === obj;\\n}\\n\\n\\nfunction isScope(obj) {\\n  return obj && obj.$evalAsync && obj.$watch;\\n}\\n\\n\\nfunction isFile(obj) {\\n  return toString.call(obj) === '[object File]';\\n}\\n\\n\\nfunction isFormData(obj) {\\n  return toString.call(obj) === '[object FormData]';\\n}\\n\\n\\nfunction isBlob(obj) {\\n  return toString.call(obj) === '[object Blob]';\\n}\\n\\n\\nfunction isBoolean(value) {\\n  return typeof value === 'boolean';\\n}\\n\\n\\nfunction isPromiseLike(obj) {\\n  return obj && isFunction(obj.then);\\n}\\n\\n\\nvar trim = function(value) {\\n  return isString(value) ? value.trim() : value;\\n};\\n\\n// Copied from:\\n// http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1021\\n// Prereq: s is a string.\\nvar escapeForRegexp = function(s) {\\n  return s.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g, '\\\\\\\\$1').\\n           replace(/\\\\x08/g, '\\\\\\\\x08');\\n};\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.isElement\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if a reference is a DOM element (or wrapped jQuery element).\\n *\\n * @param {*} value Reference to check.\\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\\n */\\nfunction isElement(node) {\\n  return !!(node &&\\n    (node.nodeName  // we are a direct element\\n    || (node.prop && node.attr && node.find)));  // we have an on and find method part of jQuery API\\n}\\n\\n/**\\n * @param str 'key1,key2,...'\\n * @returns {object} in the form of {key1:true, key2:true, ...}\\n */\\nfunction makeMap(str) {\\n  var obj = {}, items = str.split(\\\",\\\"), i;\\n  for (i = 0; i < items.length; i++)\\n    obj[ items[i] ] = true;\\n  return obj;\\n}\\n\\n\\nfunction nodeName_(element) {\\n  return lowercase(element.nodeName || (element[0] && element[0].nodeName));\\n}\\n\\nfunction includes(array, obj) {\\n  return Array.prototype.indexOf.call(array, obj) != -1;\\n}\\n\\nfunction arrayRemove(array, value) {\\n  var index = array.indexOf(value);\\n  if (index >= 0)\\n    array.splice(index, 1);\\n  return value;\\n}\\n\\n/**\\n * @ngdoc function\\n * @name angular.copy\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Creates a deep copy of `source`, which should be an object or an array.\\n *\\n * * If no destination is supplied, a copy of the object or array is created.\\n * * If a destination is provided, all of its elements (for arrays) or properties (for objects)\\n *   are deleted and then all elements/properties from the source are copied to it.\\n * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.\\n * * If `source` is identical to 'destination' an exception will be thrown.\\n *\\n * @param {*} source The source that will be used to make a copy.\\n *                   Can be any type, including primitives, `null`, and `undefined`.\\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\\n *     provided, must be of the same type as `source`.\\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\\n *\\n * @example\\n <example module=\\\"copyExample\\\">\\n <file name=\\\"index.html\\\">\\n <div ng-controller=\\\"ExampleController\\\">\\n <form novalidate class=\\\"simple-form\\\">\\n Name: <input type=\\\"text\\\" ng-model=\\\"user.name\\\" /><br />\\n E-mail: <input type=\\\"email\\\" ng-model=\\\"user.email\\\" /><br />\\n Gender: <input type=\\\"radio\\\" ng-model=\\\"user.gender\\\" value=\\\"male\\\" />male\\n <input type=\\\"radio\\\" ng-model=\\\"user.gender\\\" value=\\\"female\\\" />female<br />\\n <button ng-click=\\\"reset()\\\">RESET</button>\\n <button ng-click=\\\"update(user)\\\">SAVE</button>\\n </form>\\n <pre>form = {{user | json}}</pre>\\n <pre>master = {{master | json}}</pre>\\n </div>\\n\\n <script>\\n  angular.module('copyExample', [])\\n    .controller('ExampleController', ['$scope', function($scope) {\\n      $scope.master= {};\\n\\n      $scope.update = function(user) {\\n        // Example with 1 argument\\n        $scope.master= angular.copy(user);\\n      };\\n\\n      $scope.reset = function() {\\n        // Example with 2 arguments\\n        angular.copy($scope.master, $scope.user);\\n      };\\n\\n      $scope.reset();\\n    }]);\\n </script>\\n </file>\\n </example>\\n */\\nfunction copy(source, destination, stackSource, stackDest) {\\n  if (isWindow(source) || isScope(source)) {\\n    throw ngMinErr('cpws',\\n      \\\"Can't copy! Making copies of Window or Scope instances is not supported.\\\");\\n  }\\n\\n  if (!destination) {\\n    destination = source;\\n    if (source) {\\n      if (isArray(source)) {\\n        destination = copy(source, [], stackSource, stackDest);\\n      } else if (isDate(source)) {\\n        destination = new Date(source.getTime());\\n      } else if (isRegExp(source)) {\\n        destination = new RegExp(source.source, source.toString().match(/[^\\\\/]*$/)[0]);\\n        destination.lastIndex = source.lastIndex;\\n      } else if (isObject(source)) {\\n        var emptyObject = Object.create(Object.getPrototypeOf(source));\\n        destination = copy(source, emptyObject, stackSource, stackDest);\\n      }\\n    }\\n  } else {\\n    if (source === destination) throw ngMinErr('cpi',\\n      \\\"Can't copy! Source and destination are identical.\\\");\\n\\n    stackSource = stackSource || [];\\n    stackDest = stackDest || [];\\n\\n    if (isObject(source)) {\\n      var index = stackSource.indexOf(source);\\n      if (index !== -1) return stackDest[index];\\n\\n      stackSource.push(source);\\n      stackDest.push(destination);\\n    }\\n\\n    var result;\\n    if (isArray(source)) {\\n      destination.length = 0;\\n      for (var i = 0; i < source.length; i++) {\\n        result = copy(source[i], null, stackSource, stackDest);\\n        if (isObject(source[i])) {\\n          stackSource.push(source[i]);\\n          stackDest.push(result);\\n        }\\n        destination.push(result);\\n      }\\n    } else {\\n      var h = destination.$$hashKey;\\n      if (isArray(destination)) {\\n        destination.length = 0;\\n      } else {\\n        forEach(destination, function(value, key) {\\n          delete destination[key];\\n        });\\n      }\\n      for (var key in source) {\\n        if (source.hasOwnProperty(key)) {\\n          result = copy(source[key], null, stackSource, stackDest);\\n          if (isObject(source[key])) {\\n            stackSource.push(source[key]);\\n            stackDest.push(result);\\n          }\\n          destination[key] = result;\\n        }\\n      }\\n      setHashKey(destination,h);\\n    }\\n\\n  }\\n  return destination;\\n}\\n\\n/**\\n * Creates a shallow copy of an object, an array or a primitive.\\n *\\n * Assumes that there are no proto properties for objects.\\n */\\nfunction shallowCopy(src, dst) {\\n  if (isArray(src)) {\\n    dst = dst || [];\\n\\n    for (var i = 0, ii = src.length; i < ii; i++) {\\n      dst[i] = src[i];\\n    }\\n  } else if (isObject(src)) {\\n    dst = dst || {};\\n\\n    for (var key in src) {\\n      if (!(key.charAt(0) === '$' && key.charAt(1) === '$')) {\\n        dst[key] = src[key];\\n      }\\n    }\\n  }\\n\\n  return dst || src;\\n}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.equals\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Determines if two objects or two values are equivalent. Supports value types, regular\\n * expressions, arrays and objects.\\n *\\n * Two objects or values are considered equivalent if at least one of the following is true:\\n *\\n * * Both objects or values pass `===` comparison.\\n * * Both objects or values are of the same type and all of their properties are equal by\\n *   comparing them with `angular.equals`.\\n * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)\\n * * Both values represent the same regular expression (In JavaScript,\\n *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual\\n *   representation matches).\\n *\\n * During a property comparison, properties of `function` type and properties with names\\n * that begin with `$` are ignored.\\n *\\n * Scope and DOMWindow objects are being compared only by identify (`===`).\\n *\\n * @param {*} o1 Object or value to compare.\\n * @param {*} o2 Object or value to compare.\\n * @returns {boolean} True if arguments are equal.\\n */\\nfunction equals(o1, o2) {\\n  if (o1 === o2) return true;\\n  if (o1 === null || o2 === null) return false;\\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\\n  if (t1 == t2) {\\n    if (t1 == 'object') {\\n      if (isArray(o1)) {\\n        if (!isArray(o2)) return false;\\n        if ((length = o1.length) == o2.length) {\\n          for (key = 0; key < length; key++) {\\n            if (!equals(o1[key], o2[key])) return false;\\n          }\\n          return true;\\n        }\\n      } else if (isDate(o1)) {\\n        if (!isDate(o2)) return false;\\n        return equals(o1.getTime(), o2.getTime());\\n      } else if (isRegExp(o1) && isRegExp(o2)) {\\n        return o1.toString() == o2.toString();\\n      } else {\\n        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2)) return false;\\n        keySet = {};\\n        for (key in o1) {\\n          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\\n          if (!equals(o1[key], o2[key])) return false;\\n          keySet[key] = true;\\n        }\\n        for (key in o2) {\\n          if (!keySet.hasOwnProperty(key) &&\\n              key.charAt(0) !== '$' &&\\n              o2[key] !== undefined &&\\n              !isFunction(o2[key])) return false;\\n        }\\n        return true;\\n      }\\n    }\\n  }\\n  return false;\\n}\\n\\nvar csp = function() {\\n  if (isDefined(csp.isActive_)) return csp.isActive_;\\n\\n  var active = !!(document.querySelector('[ng-csp]') ||\\n                  document.querySelector('[data-ng-csp]'));\\n\\n  if (!active) {\\n    try {\\n      /* jshint -W031, -W054 */\\n      new Function('');\\n      /* jshint +W031, +W054 */\\n    } catch (e) {\\n      active = true;\\n    }\\n  }\\n\\n  return (csp.isActive_ = active);\\n};\\n\\n\\n\\nfunction concat(array1, array2, index) {\\n  return array1.concat(slice.call(array2, index));\\n}\\n\\nfunction sliceArgs(args, startIndex) {\\n  return slice.call(args, startIndex || 0);\\n}\\n\\n\\n/* jshint -W101 */\\n/**\\n * @ngdoc function\\n * @name angular.bind\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\\n * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as\\n * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).\\n *\\n * @param {Object} self Context which `fn` should be evaluated in.\\n * @param {function()} fn Function to be bound.\\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\\n */\\n/* jshint +W101 */\\nfunction bind(self, fn) {\\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\\n    return curryArgs.length\\n      ? function() {\\n          return arguments.length\\n            ? fn.apply(self, concat(curryArgs, arguments, 0))\\n            : fn.apply(self, curryArgs);\\n        }\\n      : function() {\\n          return arguments.length\\n            ? fn.apply(self, arguments)\\n            : fn.call(self);\\n        };\\n  } else {\\n    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\\n    return fn;\\n  }\\n}\\n\\n\\nfunction toJsonReplacer(key, value) {\\n  var val = value;\\n\\n  if (typeof key === 'string' && key.charAt(0) === '$' && key.charAt(1) === '$') {\\n    val = undefined;\\n  } else if (isWindow(value)) {\\n    val = '$WINDOW';\\n  } else if (value &&  document === value) {\\n    val = '$DOCUMENT';\\n  } else if (isScope(value)) {\\n    val = '$SCOPE';\\n  }\\n\\n  return val;\\n}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.toJson\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Serializes input into a JSON-formatted string. Properties with leading $$ characters will be\\n * stripped since angular uses this notation internally.\\n *\\n * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\\n * @param {boolean|number=} pretty If set to true, the JSON output will contain newlines and whitespace.\\n *    If set to an integer, the JSON output will contain that many spaces per indentation (the default is 2).\\n * @returns {string|undefined} JSON-ified string representing `obj`.\\n */\\nfunction toJson(obj, pretty) {\\n  if (typeof obj === 'undefined') return undefined;\\n  if (!isNumber(pretty)) {\\n    pretty = pretty ? 2 : null;\\n  }\\n  return JSON.stringify(obj, toJsonReplacer, pretty);\\n}\\n\\n\\n/**\\n * @ngdoc function\\n * @name angular.fromJson\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Deserializes a JSON string.\\n *\\n * @param {string} json JSON string to deserialize.\\n * @returns {Object|Array|string|number} Deserialized JSON string.\\n */\\nfunction fromJson(json) {\\n  return isString(json)\\n      ? JSON.parse(json)\\n      : json;\\n}\\n\\n\\n/**\\n * @returns {string} Returns the string representation of the element.\\n */\\nfunction startingTag(element) {\\n  element = jqLite(element).clone();\\n  try {\\n    // turns out IE does not let you set .html() on elements which\\n    // are not allowed to have children. So we just ignore it.\\n    element.empty();\\n  } catch (e) {}\\n  var elemHtml = jqLite('<div>').append(element).html();\\n  try {\\n    return element[0].nodeType === NODE_TYPE_TEXT ? lowercase(elemHtml) :\\n        elemHtml.\\n          match(/^(<[^>]+>)/)[1].\\n          replace(/^<([\\\\w\\\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\\n  } catch (e) {\\n    return lowercase(elemHtml);\\n  }\\n\\n}\\n\\n\\n/////////////////////////////////////////////////\\n\\n/**\\n * Tries to decode the URI component without throwing an exception.\\n *\\n * @private\\n * @param str value potential URI component to check.\\n * @returns {boolean} True if `value` can be decoded\\n * with the decodeURIComponent function.\\n */\\nfunction tryDecodeURIComponent(value) {\\n  try {\\n    return decodeURIComponent(value);\\n  } catch (e) {\\n    // Ignore any invalid uri component\\n  }\\n}\\n\\n\\n/**\\n * Parses an escaped url query string into key-value pairs.\\n * @returns {Object.<string,boolean|Array>}\\n */\\nfunction parseKeyValue(/**string*/keyValue) {\\n  var obj = {}, key_value, key;\\n  forEach((keyValue || \\\"\\\").split('&'), function(keyValue) {\\n    if (keyValue) {\\n      key_value = keyValue.replace(/\\\\+/g,'%20').split('=');\\n      key = tryDecodeURIComponent(key_value[0]);\\n      if (isDefined(key)) {\\n        var val = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;\\n        if (!hasOwnProperty.call(obj, key)) {\\n          obj[key] = val;\\n        } else if (isArray(obj[key])) {\\n          obj[key].push(val);\\n        } else {\\n          obj[key] = [obj[key],val];\\n        }\\n      }\\n    }\\n  });\\n  return obj;\\n}\\n\\nfunction toKeyValue(obj) {\\n  var parts = [];\\n  forEach(obj, function(value, key) {\\n    if (isArray(value)) {\\n      forEach(value, function(arrayValue) {\\n        parts.push(encodeUriQuery(key, true) +\\n                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));\\n      });\\n    } else {\\n    parts.push(encodeUriQuery(key, true) +\\n               (value === true ? '' : '=' + encodeUriQuery(value, true)));\\n    }\\n  });\\n  return parts.length ? parts.join('&') : '';\\n}\\n\\n\\n/**\\n * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\\n * segments:\\n *    segment       = *pchar\\n *    pchar         = unreserved / pct-encoded / sub-delims / \\\":\\\" / \\\"@\\\"\\n *    pct-encoded   = \\\"%\\\" HEXDIG HEXDIG\\n *    unreserved    = ALPHA / DIGIT / \\\"-\\\" / \\\".\\\" / \\\"_\\\" / \\\"~\\\"\\n *    sub-delims    = \\\"!\\\" / \\\"$\\\" / \\\"&\\\" / \\\"'\\\" / \\\"(\\\" / \\\")\\\"\\n *                     / \\\"*\\\" / \\\"+\\\" / \\\",\\\" / \\\";\\\" / \\\"=\\\"\\n */\\nfunction encodeUriSegment(val) {\\n  return encodeUriQuery(val, true).\\n             replace(/%26/gi, '&').\\n             replace(/%3D/gi, '=').\\n             replace(/%2B/gi, '+');\\n}\\n\\n\\n/**\\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\\n * encoded per http://tools.ietf.org/html/rfc3986:\\n *    query       = *( pchar / \\\"/\\\" / \\\"?\\\" )\\n *    pchar         = unreserved / pct-encoded / sub-delims / \\\":\\\" / \\\"@\\\"\\n *    unreserved    = ALPHA / DIGIT / \\\"-\\\" / \\\".\\\" / \\\"_\\\" / \\\"~\\\"\\n *    pct-encoded   = \\\"%\\\" HEXDIG HEXDIG\\n *    sub-delims    = \\\"!\\\" / \\\"$\\\" / \\\"&\\\" / \\\"'\\\" / \\\"(\\\" / \\\")\\\"\\n *                     / \\\"*\\\" / \\\"+\\\" / \\\",\\\" / \\\";\\\" / \\\"=\\\"\\n */\\nfunction encodeUriQuery(val, pctEncodeSpaces) {\\n  return encodeURIComponent(val).\\n             replace(/%40/gi, '@').\\n             replace(/%3A/gi, ':').\\n             replace(/%24/g, '$').\\n             replace(/%2C/gi, ',').\\n             replace(/%3B/gi, ';').\\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\\n}\\n\\nvar ngAttrPrefixes = ['ng-', 'data-ng-', 'ng:', 'x-ng-'];\\n\\nfunction getNgAttribute(element, ngAttr) {\\n  var attr, i, ii = ngAttrPrefixes.length;\\n  element = jqLite(element);\\n  for (i = 0; i < ii; ++i) {\\n    attr = ngAttrPrefixes[i] + ngAttr;\\n    if (isString(attr = element.attr(attr))) {\\n      return attr;\\n    }\\n  }\\n  return null;\\n}\\n\\n/**\\n * @ngdoc directive\\n * @name ngApp\\n * @module ng\\n *\\n * @element ANY\\n * @param {angular.Module} ngApp an optional application\\n *   {@link angular.module module} name to load.\\n * @param {boolean=} ngStrictDi if this attribute is present on the app element, the injector will be\\n *   created in \\\"strict-di\\\" mode. This means that the application will fail to invoke functions which\\n *   do not use explicit function annotation (and are thus unsuitable for minification), as described\\n *   in {@link guide/di the Dependency Injection guide}, and useful debugging info will assist in\\n *   tracking down the root of these bugs.\\n *\\n * @description\\n *\\n * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive\\n * designates the **root element** of the application and is typically placed near the root element\\n * of the page - e.g. on the `<body>` or `<html>` tags.\\n *\\n * Only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`\\n * found in the document will be used to define the root element to auto-bootstrap as an\\n * application. To run multiple applications in an HTML document you must manually bootstrap them using\\n * {@link angular.bootstrap} instead. AngularJS applications cannot be nested within each other.\\n *\\n * You can specify an **AngularJS module** to be used as the root module for the application.  This\\n * module will be loaded into the {@link auto.$injector} when the application is bootstrapped. It\\n * should contain the application code needed or have dependencies on other modules that will\\n * contain the code. See {@link angular.module} for more information.\\n *\\n * In the example below if the `ngApp` directive were not placed on the `html` element then the\\n * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`\\n * would not be resolved to `3`.\\n *\\n * `ngApp` is the easiest, and most common way to bootstrap an application.\\n *\\n <example module=\\\"ngAppDemo\\\">\\n   <file name=\\\"index.html\\\">\\n   <div ng-controller=\\\"ngAppDemoController\\\">\\n     I can add: {{a}} + {{b}} =  {{ a+b }}\\n   </div>\\n   </file>\\n   <file name=\\\"script.js\\\">\\n   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {\\n     $scope.a = 1;\\n     $scope.b = 2;\\n   });\\n   </file>\\n </example>\\n *\\n * Using `ngStrictDi`, you would see something like this:\\n *\\n <example ng-app-included=\\\"true\\\">\\n   <file name=\\\"index.html\\\">\\n   <div ng-app=\\\"ngAppStrictDemo\\\" ng-strict-di>\\n       <div ng-controller=\\\"GoodController1\\\">\\n           I can add: {{a}} + {{b}} =  {{ a+b }}\\n\\n           <p>This renders because the controller does not fail to\\n              instantiate, by using explicit annotation style (see\\n              script.js for details)\\n           </p>\\n       </div>\\n\\n       <div ng-controller=\\\"GoodController2\\\">\\n           Name: <input ng-model=\\\"name\\\"><br />\\n           Hello, {{name}}!\\n\\n           <p>This renders because the controller does not fail to\\n              instantiate, by using explicit annotation style\\n              (see script.js for details)\\n           </p>\\n       </div>\\n\\n       <div ng-controller=\\\"BadController\\\">\\n           I can add: {{a}} + {{b}} =  {{ a+b }}\\n\\n           <p>The controller could not be instantiated, due to relying\\n              on automatic function annotations (which are disabled in\\n              strict mode). As such, the content of this section is not\\n              interpolated, and there should be an error in your web console.\\n           </p>\\n       </div>\\n   </div>\\n   </file>\\n   <file name=\\\"script.js\\\">\\n   angular.module('ngAppStrictDemo', [])\\n     // BadController will fail to instantiate, due to relying on automatic function annotation,\\n     // rather than an explicit annotation\\n     .controller('BadController', function($scope) {\\n       $scope.a = 1;\\n       $scope.b = 2;\\n     })\\n     // Unlike BadController, GoodController1 and GoodController2 will not fail to be instantiated,\\n     // due to using explicit annotations using the array style and $inject property, respectively.\\n     .controller('GoodController1', ['$scope', function($scope) {\\n       $scope.a = 1;\\n       $scope.b = 2;\\n     }])\\n     .controller('GoodController2', GoodController2);\\n     function GoodController2($scope) {\\n       $scope.name = \\\"World\\\";\\n     }\\n     GoodController2.$inject = ['$scope'];\\n   </file>\\n   <file name=\\\"style.css\\\">\\n   div[ng-controller] {\\n       margin-bottom: 1em;\\n       -webkit-border-radius: 4px;\\n       border-radius: 4px;\\n       border: 1px solid;\\n       padding: .5em;\\n   }\\n   div[ng-controller^=Good] {\\n       border-color: #d6e9c6;\\n       background-color: #dff0d8;\\n       color: #3c763d;\\n   }\\n   div[ng-controller^=Bad] {\\n       border-color: #ebccd1;\\n       background-color: #f2dede;\\n       color: #a94442;\\n       margin-bottom: 0;\\n   }\\n   </file>\\n </example>\\n */\\nfunction angularInit(element, bootstrap) {\\n  var appElement,\\n      module,\\n      config = {};\\n\\n  // The element `element` has priority over any other element\\n  forEach(ngAttrPrefixes, function(prefix) {\\n    var name = prefix + 'app';\\n\\n    if (!appElement && element.hasAttribute && element.hasAttribute(name)) {\\n      appElement = element;\\n      module = element.getAttribute(name);\\n    }\\n  });\\n  forEach(ngAttrPrefixes, function(prefix) {\\n    var name = prefix + 'app';\\n    var candidate;\\n\\n    if (!appElement && (candidate = element.querySelector('[' + name.replace(':', '\\\\\\\\:') + ']'))) {\\n      appElement = candidate;\\n      module = candidate.getAttribute(name);\\n    }\\n  });\\n  if (appElement) {\\n    config.strictDi = getNgAttribute(appElement, \\\"strict-di\\\") !== null;\\n    bootstrap(appElement, module ? [module] : [], config);\\n  }\\n}\\n\\n/**\\n * @ngdoc function\\n * @name angular.bootstrap\\n * @module ng\\n * @description\\n * Use this function to manually start up angular application.\\n *\\n * See: {@link guide/bootstrap Bootstrap}\\n *\\n * Note that Protractor based end-to-end tests cannot use this function to bootstrap manually.\\n * They must use {@link ng.directive:ngApp ngApp}.\\n *\\n * Angular will detect if it has been loaded into the browser more than once and only allow the\\n * first loaded script to be bootstrapped and will report a warning to the browser console for\\n * each of the subsequent scripts. This prevents strange results in applications, where otherwise\\n * multiple instances of Angular try to work on the DOM.\\n *\\n * ```html\\n * <!doctype html>\\n * <html>\\n * <body>\\n * <div ng-controller=\\\"WelcomeController\\\">\\n *   {{greeting}}\\n * </div>\\n *\\n * <script src=\\\"angular.js\\\"></script>\\n * <script>\\n *   var app = angular.module('demo', [])\\n *   .controller('WelcomeController', function($scope) {\\n *       $scope.greeting = 'Welcome!';\\n *   });\\n *   angular.bootstrap(document, ['demo']);\\n * </script>\\n * </body>\\n * </html>\\n * ```\\n *\\n * @param {DOMElement} element DOM element which is the root of angular application.\\n * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.\\n *     Each item in the array should be the name of a predefined module or a (DI annotated)\\n *     function that will be invoked by the injector as a `config` block.\\n *     See: {@link angular.module modules}\\n * @param {Object=} config an object for defining configuration options for the application. The\\n *     following keys are supported:\\n *\\n * * `strictDi` - disable automatic function annotation for the application. This is meant to\\n *   assist in finding bugs which break minified code. Defaults to `false`.\\n *\\n * @returns {auto.$injector} Returns the newly created injector for this app.\\n */\\nfunction bootstrap(element, modules, config) {\\n  if (!isObject(config)) config = {};\\n  var defaultConfig = {\\n    strictDi: false\\n  };\\n  config = extend(defaultConfig, config);\\n  var doBootstrap = function() {\\n    element = jqLite(element);\\n\\n    if (element.injector()) {\\n      var tag = (element[0] === document) ? 'document' : startingTag(element);\\n      //Encode angle brackets to prevent input from being sanitized to empty string #8683\\n      throw ngMinErr(\\n          'btstrpd',\\n          \\\"App Already Bootstrapped with this Element '{0}'\\\",\\n          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));\\n    }\\n\\n    modules = modules || [];\\n    modules.unshift(['$provide', function($provide) {\\n      $provide.value('$rootElement', element);\\n    }]);\\n\\n    if (config.debugInfoEnabled) {\\n      // Pushing so that this overrides `debugInfoEnabled` setting defined in user's `modules`.\\n      modules.push(['$compileProvider', function($compileProvider) {\\n        $compileProvider.debugInfoEnabled(true);\\n      }]);\\n    }\\n\\n    modules.unshift('ng');\\n    var injector = createInjector(modules, config.strictDi);\\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',\\n       function bootstrapApply(scope, element, compile, injector) {\\n        scope.$apply(function() {\\n          element.data('$injector', injector);\\n          compile(element)(scope);\\n        });\\n      }]\\n    );\\n    return injector;\\n  };\\n\\n  var NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/;\\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\\n\\n  if (window && NG_ENABLE_DEBUG_INFO.test(window.name)) {\\n    config.debugInfoEnabled = true;\\n    window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, '');\\n  }\\n\\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\\n    return doBootstrap();\\n  }\\n\\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\\n  angular.resumeBootstrap = function(extraModules) {\\n    forEach(extraModules, function(module) {\\n      modules.push(module);\\n    });\\n    doBootstrap();\\n  };\\n}\\n\\n/**\\n * @ngdoc function\\n * @name angular.reloadWithDebugInfo\\n * @module ng\\n * @description\\n * Use this function to reload the current application with debug information turned on.\\n * This takes precedence over a call to `$compileProvider.debugInfoEnabled(false)`.\\n *\\n * See {@link ng.$compileProvider#debugInfoEnabled} for more.\\n */\\nfunction reloadWithDebugInfo() {\\n  window.name = 'NG_ENABLE_DEBUG_INFO!' + window.name;\\n  window.location.reload();\\n}\\n\\n/**\\n * @name angular.getTestability\\n * @module ng\\n * @description\\n * Get the testability service for the instance of Angular on the given\\n * element.\\n * @param {DOMElement} element DOM element which is the root of angular application.\\n */\\nfunction getTestability(rootElement) {\\n  var injector = angular.element(rootElement).injector();\\n  if (!injector) {\\n    throw ngMinErr('test',\\n      'no injector found for element argument to getTestability');\\n  }\\n  return injector.get('$$testability');\\n}\\n\\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\\nfunction snake_case(name, separator) {\\n  separator = separator || '_';\\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\\n    return (pos ? separator : '') + letter.toLowerCase();\\n  });\\n}\\n\\nvar bindJQueryFired = false;\\nvar skipDestroyOnNextJQueryCleanData;\\nfunction bindJQuery() {\\n  var originalCleanData;\\n\\n  if (bindJQueryFired) {\\n    return;\\n  }\\n\\n  // bind to jQuery if present;\\n  jQuery = window.jQuery;\\n  // Use jQuery if it exists with proper functionality, otherwise default to us.\\n  // Angular 1.2+ requires jQuery 1.7+ for on()/off() support.\\n  // Angular 1.3+ technically requires at least jQuery 2.1+ but it may work with older\\n  // versions. It will not work for sure with jQuery <1.7, though.\\n  if (jQuery && jQuery.fn.on) {\\n    jqLite = jQuery;\\n    extend(jQuery.fn, {\\n      scope: JQLitePrototype.scope,\\n      isolateScope: JQLitePrototype.isolateScope,\\n      controller: JQLitePrototype.controller,\\n      injector: JQLitePrototype.injector,\\n      inheritedData: JQLitePrototype.inheritedData\\n    });\\n\\n    // All nodes removed from the DOM via various jQuery APIs like .remove()\\n    // are passed through jQuery.cleanData. Monkey-patch this method to fire\\n    // the $destroy event on all removed nodes.\\n    originalCleanData = jQuery.cleanData;\\n    jQuery.cleanData = function(elems) {\\n      var events;\\n      if (!skipDestroyOnNextJQueryCleanData) {\\n        for (var i = 0, elem; (elem = elems[i]) != null; i++) {\\n          events = jQuery._data(elem, \\\"events\\\");\\n          if (events && events.$destroy) {\\n            jQuery(elem).triggerHandler('$destroy');\\n          }\\n        }\\n      } else {\\n        skipDestroyOnNextJQueryCleanData = false;\\n      }\\n      originalCleanData(elems);\\n    };\\n  } else {\\n    jqLite = JQLite;\\n  }\\n\\n  angular.element = jqLite;\\n\\n  // Prevent double-proxying.\\n  bindJQueryFired = true;\\n}\\n\\n/**\\n * throw error if the argument is falsy.\\n */\\nfunction assertArg(arg, name, reason) {\\n  if (!arg) {\\n    throw ngMinErr('areq', \\\"Argument '{0}' is {1}\\\", (name || '?'), (reason || \\\"required\\\"));\\n  }\\n  return arg;\\n}\\n\\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\\n  if (acceptArrayAnnotation && isArray(arg)) {\\n      arg = arg[arg.length - 1];\\n  }\\n\\n  assertArg(isFunction(arg), name, 'not a function, got ' +\\n      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));\\n  return arg;\\n}\\n\\n/**\\n * throw error if the name given is hasOwnProperty\\n * @param  {String} name    the name to test\\n * @param  {String} context the context in which the name is used, such as module or directive\\n */\\nfunction assertNotHasOwnProperty(name, context) {\\n  if (name === 'hasOwnProperty') {\\n    throw ngMinErr('badname', \\\"hasOwnProperty is not a valid {0} name\\\", context);\\n  }\\n}\\n\\n/**\\n * Return the value accessible from the object by path. Any undefined traversals are ignored\\n * @param {Object} obj starting object\\n * @param {String} path path to traverse\\n * @param {boolean} [bindFnToScope=true]\\n * @returns {Object} value as accessible by path\\n */\\n//TODO(misko): this function needs to be removed\\nfunction getter(obj, path, bindFnToScope) {\\n  if (!path) return obj;\\n  var keys = path.split('.');\\n  var key;\\n  var lastInstance = obj;\\n  var len = keys.length;\\n\\n  for (var i = 0; i < len; i++) {\\n    key = keys[i];\\n    if (obj) {\\n      obj = (lastInstance = obj)[key];\\n    }\\n  }\\n  if (!bindFnToScope && isFunction(obj)) {\\n    return bind(lastInstance, obj);\\n  }\\n  return obj;\\n}\\n\\n/**\\n * Return the DOM siblings between the first and last node in the given array.\\n * @param {Array} array like object\\n * @returns {jqLite} jqLite collection containing the nodes\\n */\\nfunction getBlockNodes(nodes) {\\n  // TODO(perf): just check if all items in `nodes` are siblings and if they are return the original\\n  //             collection, otherwise update the original collection.\\n  var node = nodes[0];\\n  var endNode = nodes[nodes.length - 1];\\n  var blockNodes = [node];\\n\\n  do {\\n    node = node.nextSibling;\\n    if (!node) break;\\n    blockNodes.push(node);\\n  } while (node !== endNode);\\n\\n  return jqLite(blockNodes);\\n}\\n\\n\\n/**\\n * Creates a new object without a prototype. This object is useful for lookup without having to\\n * guard against prototypically inherited properties via hasOwnProperty.\\n *\\n * Related micro-benchmarks:\\n * - http://jsperf.com/object-create2\\n * - http://jsperf.com/proto-map-lookup/2\\n * - http://jsperf.com/for-in-vs-object-keys2\\n *\\n * @returns {Object}\\n */\\nfunction createMap() {\\n  return Object.create(null);\\n}\\n\\nvar NODE_TYPE_ELEMENT = 1;\\nvar NODE_TYPE_TEXT = 3;\\nvar NODE_TYPE_COMMENT = 8;\\nvar NODE_TYPE_DOCUMENT = 9;\\nvar NODE_TYPE_DOCUMENT_FRAGMENT = 11;\\n\\n/**\\n * @ngdoc type\\n * @name angular.Module\\n * @module ng\\n * @description\\n *\\n * Interface for configuring angular {@link angular.module modules}.\\n */\\n\\nfunction setupModuleLoader(window) {\\n\\n  var $injectorMinErr = minErr('$injector');\\n  var ngMinErr = minErr('ng');\\n\\n  function ensure(obj, name, factory) {\\n    return obj[name] || (obj[name] = factory());\\n  }\\n\\n  var angular = ensure(window, 'angular', Object);\\n\\n  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap\\n  angular.$$minErr = angular.$$minErr || minErr;\\n\\n  return ensure(angular, 'module', function() {\\n    /** @type {Object.<string, angular.Module>} */\\n    var modules = {};\\n\\n    /**\\n     * @ngdoc function\\n     * @name angular.module\\n     * @module ng\\n     * @description\\n     *\\n     * The `angular.module` is a global place for creating, registering and retrieving Angular\\n     * modules.\\n     * All modules (angular core or 3rd party) that should be available to an application must be\\n     * registered using this mechanism.\\n     *\\n     * When passed two or more arguments, a new module is created.  If passed only one argument, an\\n     * existing module (the name passed as the first argument to `module`) is retrieved.\\n     *\\n     *\\n     * # Module\\n     *\\n     * A module is a collection of services, directives, controllers, filters, and configuration information.\\n     * `angular.module` is used to configure the {@link auto.$injector $injector}.\\n     *\\n     * ```js\\n     * // Create a new module\\n     * var myModule = angular.module('myModule', []);\\n     *\\n     * // register a new service\\n     * myModule.value('appName', 'MyCoolApp');\\n     *\\n     * // configure existing services inside initialization blocks.\\n     * myModule.config(['$locationProvider', function($locationProvider) {\\n     *   // Configure existing providers\\n     *   $locationProvider.hashPrefix('!');\\n     * }]);\\n     * ```\\n     *\\n     * Then you can create an injector and load your modules like this:\\n     *\\n     * ```js\\n     * var injector = angular.injector(['ng', 'myModule'])\\n     * ```\\n     *\\n     * However it's more likely that you'll just use\\n     * {@link ng.directive:ngApp ngApp} or\\n     * {@link angular.bootstrap} to simplify this process for you.\\n     *\\n     * @param {!string} name The name of the module to create or retrieve.\\n     * @param {!Array.<string>=} requires If specified then new module is being created. If\\n     *        unspecified then the module is being retrieved for further configuration.\\n     * @param {Function=} configFn Optional configuration function for the module. Same as\\n     *        {@link angular.Module#config Module#config()}.\\n     * @returns {module} new module with the {@link angular.Module} api.\\n     */\\n    return function module(name, requires, configFn) {\\n      var assertNotHasOwnProperty = function(name, context) {\\n        if (name === 'hasOwnProperty') {\\n          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\\n        }\\n      };\\n\\n      assertNotHasOwnProperty(name, 'module');\\n      if (requires && modules.hasOwnProperty(name)) {\\n        modules[name] = null;\\n      }\\n      return ensure(modules, name, function() {\\n        if (!requires) {\\n          throw $injectorMinErr('nomod', \\\"Module '{0}' is not available! You either misspelled \\\" +\\n             \\\"the module name or forgot to load it. If registering a module ensure that you \\\" +\\n             \\\"specify the dependencies as the second argument.\\\", name);\\n        }\\n\\n        /** @type {!Array.<Array.<*>>} */\\n        var invokeQueue = [];\\n\\n        /** @type {!Array.<Function>} */\\n        var configBlocks = [];\\n\\n        /** @type {!Array.<Function>} */\\n        var runBlocks = [];\\n\\n        var config = invokeLater('$injector', 'invoke', 'push', configBlocks);\\n\\n        /** @type {angular.Module} */\\n        var moduleInstance = {\\n          // Private state\\n          _invokeQueue: invokeQueue,\\n          _configBlocks: configBlocks,\\n          _runBlocks: runBlocks,\\n\\n          /**\\n           * @ngdoc property\\n           * @name angular.Module#requires\\n           * @module ng\\n           *\\n           * @description\\n           * Holds the list of modules which the injector will load before the current module is\\n           * loaded.\\n           */\\n          requires: requires,\\n\\n          /**\\n           * @ngdoc property\\n           * @name angular.Module#name\\n           * @module ng\\n           *\\n           * @description\\n           * Name of the module.\\n           */\\n          name: name,\\n\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#provider\\n           * @module ng\\n           * @param {string} name service name\\n           * @param {Function} providerType Construction function for creating new instance of the\\n           *                                service.\\n           * @description\\n           * See {@link auto.$provide#provider $provide.provider()}.\\n           */\\n          provider: invokeLater('$provide', 'provider'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#factory\\n           * @module ng\\n           * @param {string} name service name\\n           * @param {Function} providerFunction Function for creating new instance of the service.\\n           * @description\\n           * See {@link auto.$provide#factory $provide.factory()}.\\n           */\\n          factory: invokeLater('$provide', 'factory'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#service\\n           * @module ng\\n           * @param {string} name service name\\n           * @param {Function} constructor A constructor function that will be instantiated.\\n           * @description\\n           * See {@link auto.$provide#service $provide.service()}.\\n           */\\n          service: invokeLater('$provide', 'service'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#value\\n           * @module ng\\n           * @param {string} name service name\\n           * @param {*} object Service instance object.\\n           * @description\\n           * See {@link auto.$provide#value $provide.value()}.\\n           */\\n          value: invokeLater('$provide', 'value'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#constant\\n           * @module ng\\n           * @param {string} name constant name\\n           * @param {*} object Constant value.\\n           * @description\\n           * Because the constant are fixed, they get applied before other provide methods.\\n           * See {@link auto.$provide#constant $provide.constant()}.\\n           */\\n          constant: invokeLater('$provide', 'constant', 'unshift'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#animation\\n           * @module ng\\n           * @param {string} name animation name\\n           * @param {Function} animationFactory Factory function for creating new instance of an\\n           *                                    animation.\\n           * @description\\n           *\\n           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.\\n           *\\n           *\\n           * Defines an animation hook that can be later used with\\n           * {@link ngAnimate.$animate $animate} service and directives that use this service.\\n           *\\n           * ```js\\n           * module.animation('.animation-name', function($inject1, $inject2) {\\n           *   return {\\n           *     eventName : function(element, done) {\\n           *       //code to run the animation\\n           *       //once complete, then run done()\\n           *       return function cancellationFunction(element) {\\n           *         //code to cancel the animation\\n           *       }\\n           *     }\\n           *   }\\n           * })\\n           * ```\\n           *\\n           * See {@link ng.$animateProvider#register $animateProvider.register()} and\\n           * {@link ngAnimate ngAnimate module} for more information.\\n           */\\n          animation: invokeLater('$animateProvider', 'register'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#filter\\n           * @module ng\\n           * @param {string} name Filter name.\\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\\n           * @description\\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\\n           */\\n          filter: invokeLater('$filterProvider', 'register'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#controller\\n           * @module ng\\n           * @param {string|Object} name Controller name, or an object map of controllers where the\\n           *    keys are the names and the values are the constructors.\\n           * @param {Function} constructor Controller constructor function.\\n           * @description\\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\\n           */\\n          controller: invokeLater('$controllerProvider', 'register'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#directive\\n           * @module ng\\n           * @param {string|Object} name Directive name, or an object map of directives where the\\n           *    keys are the names and the values are the factories.\\n           * @param {Function} directiveFactory Factory function for creating new instance of\\n           * directives.\\n           * @description\\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\\n           */\\n          directive: invokeLater('$compileProvider', 'directive'),\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#config\\n           * @module ng\\n           * @param {Function} configFn Execute this function on module load. Useful for service\\n           *    configuration.\\n           * @description\\n           * Use this method to register work which needs to be performed on module loading.\\n           * For more about how to configure services, see\\n           * {@link providers#provider-recipe Provider Recipe}.\\n           */\\n          config: config,\\n\\n          /**\\n           * @ngdoc method\\n           * @name angular.Module#run\\n           * @module ng\\n           * @param {Function} initializationFn Execute this function after injector creation.\\n           *    Useful for application initialization.\\n           * @description\\n           * Use this method to register work which should be performed when the injector is done\\n           * loading all modules.\\n           */\\n          run: function(block) {\\n            runBlocks.push(block);\\n            return this;\\n          }\\n        };\\n\\n        if (configFn) {\\n          config(configFn);\\n        }\\n\\n        return moduleInstance;\\n\\n        /**\\n         * @param {string} provider\\n         * @param {string} method\\n         * @param {String=} insertMethod\\n         * @returns {angular.Module}\\n         */\\n        function invokeLater(provider, method, insertMethod, queue) {\\n          if (!queue) queue = invokeQueue;\\n          return function() {\\n            queue[insertMethod || 'push']([provider, method, arguments]);\\n            return moduleInstance;\\n          };\\n        }\\n      });\\n    };\\n  });\\n\\n}\\n\\n/* global: toDebugString: true */\\n\\nfunction serializeObject(obj) {\\n  var seen = [];\\n\\n  return JSON.stringify(obj, function(key, val) {\\n    val = toJsonReplacer(key, val);\\n    if (isObject(val)) {\\n\\n      if (seen.indexOf(val) >= 0) return '<<already seen>>';\\n\\n      seen.push(val);\\n    }\\n    return val;\\n  });\\n}\\n\\nfunction toDebugString(obj) {\\n  if (typeof obj === 'function') {\\n    return obj.toString().replace(/ \\\\{[\\\\s\\\\S]*$/, '');\\n  } else if (typeof obj === 'undefined') {\\n    return 'undefined';\\n  } else if (typeof obj !== 'string') {\\n    return serializeObject(obj);\\n  }\\n  return obj;\\n}\\n\\n/* global angularModule: true,\\n  version: true,\\n\\n  $LocaleProvider,\\n  $CompileProvider,\\n\\n  htmlAnchorDirective,\\n  inputDirective,\\n  inputDirective,\\n  formDirective,\\n  scriptDirective,\\n  selectDirective,\\n  styleDirective,\\n  optionDirective,\\n  ngBindDirective,\\n  ngBindHtmlDirective,\\n  ngBindTemplateDirective,\\n  ngClassDirective,\\n  ngClassEvenDirective,\\n  ngClassOddDirective,\\n  ngCspDirective,\\n  ngCloakDirective,\\n  ngControllerDirective,\\n  ngFormDirective,\\n  ngHideDirective,\\n  ngIfDirective,\\n  ngIncludeDirective,\\n  ngIncludeFillContentDirective,\\n  ngInitDirective,\\n  ngNonBindableDirective,\\n  ngPluralizeDirective,\\n  ngRepeatDirective,\\n  ngShowDirective,\\n  ngStyleDirective,\\n  ngSwitchDirective,\\n  ngSwitchWhenDirective,\\n  ngSwitchDefaultDirective,\\n  ngOptionsDirective,\\n  ngTranscludeDirective,\\n  ngModelDirective,\\n  ngListDirective,\\n  ngChangeDirective,\\n  patternDirective,\\n  patternDirective,\\n  requiredDirective,\\n  requiredDirective,\\n  minlengthDirective,\\n  minlengthDirective,\\n  maxlengthDirective,\\n  maxlengthDirective,\\n  ngValueDirective,\\n  ngModelOptionsDirective,\\n  ngAttributeAliasDirectives,\\n  ngEventDirectives,\\n\\n  $AnchorScrollProvider,\\n  $AnimateProvider,\\n  $BrowserProvider,\\n  $CacheFactoryProvider,\\n  $ControllerProvider,\\n  $DocumentProvider,\\n  $ExceptionHandlerProvider,\\n  $FilterProvider,\\n  $InterpolateProvider,\\n  $IntervalProvider,\\n  $HttpProvider,\\n  $HttpBackendProvider,\\n  $LocationProvider,\\n  $LogProvider,\\n  $ParseProvider,\\n  $RootScopeProvider,\\n  $QProvider,\\n  $$QProvider,\\n  $$SanitizeUriProvider,\\n  $SceProvider,\\n  $SceDelegateProvider,\\n  $SnifferProvider,\\n  $TemplateCacheProvider,\\n  $TemplateRequestProvider,\\n  $$TestabilityProvider,\\n  $TimeoutProvider,\\n  $$RAFProvider,\\n  $$AsyncCallbackProvider,\\n  $WindowProvider,\\n  $$jqLiteProvider\\n*/\\n\\n\\n/**\\n * @ngdoc object\\n * @name angular.version\\n * @module ng\\n * @description\\n * An object that contains information about the current AngularJS version. This object has the\\n * following properties:\\n *\\n * - `full` – `{string}` – Full version string, such as \\\"0.9.18\\\".\\n * - `major` – `{number}` – Major version number, such as \\\"0\\\".\\n * - `minor` – `{number}` – Minor version number, such as \\\"9\\\".\\n * - `dot` – `{number}` – Dot version number, such as \\\"18\\\".\\n * - `codeName` – `{string}` – Code name of the release, such as \\\"jiggling-armfat\\\".\\n */\\nvar version = {\\n  full: '1.3.11',    // all of these placeholder strings will be replaced by grunt's\\n  major: 1,    // package task\\n  minor: 3,\\n  dot: 11,\\n  codeName: 'spiffy-manatee'\\n};\\n\\n\\nfunction publishExternalAPI(angular) {\\n  extend(angular, {\\n    'bootstrap': bootstrap,\\n    'copy': copy,\\n    'extend': extend,\\n    'equals': equals,\\n    'element': jqLite,\\n    'forEach': forEach,\\n    'injector': createInjector,\\n    'noop': noop,\\n    'bind': bind,\\n    'toJson': toJson,\\n    'fromJson': fromJson,\\n    'identity': identity,\\n    'isUndefined': isUndefined,\\n    'isDefined': isDefined,\\n    'isString': isString,\\n    'isFunction': isFunction,\\n    'isObject': isObject,\\n    'isNumber': isNumber,\\n    'isElement': isElement,\\n    'isArray': isArray,\\n    'version': version,\\n    'isDate': isDate,\\n    'lowercase': lowercase,\\n    'uppercase': uppercase,\\n    'callbacks': {counter: 0},\\n    'getTestability': getTestability,\\n    '$$minErr': minErr,\\n    '$$csp': csp,\\n    'reloadWithDebugInfo': reloadWithDebugInfo\\n  });\\n\\n  angularModule = setupModuleLoader(window);\\n  try {\\n    angularModule('ngLocale');\\n  } catch (e) {\\n    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\\n  }\\n\\n  angularModule('ng', ['ngLocale'], ['$provide',\\n    function ngModule($provide) {\\n      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.\\n      $provide.provider({\\n        $$sanitizeUri: $$SanitizeUriProvider\\n      });\\n      $provide.provider('$compile', $CompileProvider).\\n        directive({\\n            a: htmlAnchorDirective,\\n            input: inputDirective,\\n            textarea: inputDirective,\\n            form: formDirective,\\n            script: scriptDirective,\\n            select: selectDirective,\\n            style: styleDirective,\\n            option: optionDirective,\\n            ngBind: ngBindDirective,\\n            ngBindHtml: ngBindHtmlDirective,\\n            ngBindTemplate: ngBindTemplateDirective,\\n            ngClass: ngClassDirective,\\n            ngClassEven: ngClassEvenDirective,\\n            ngClassOdd: ngClassOddDirective,\\n            ngCloak: ngCloakDirective,\\n            ngController: ngControllerDirective,\\n            ngForm: ngFormDirective,\\n            ngHide: ngHideDirective,\\n            ngIf: ngIfDirective,\\n            ngInclude: ngIncludeDirective,\\n            ngInit: ngInitDirective,\\n            ngNonBindable: ngNonBindableDirective,\\n            ngPluralize: ngPluralizeDirective,\\n            ngRepeat: ngRepeatDirective,\\n            ngShow: ngShowDirective,\\n            ngStyle: ngStyleDirective,\\n            ngSwitch: ngSwitchDirective,\\n            ngSwitchWhen: ngSwitchWhenDirective,\\n            ngSwitchDefault: ngSwitchDefaultDirective,\\n            ngOptions: ngOptionsDirective,\\n            ngTransclude: ngTranscludeDirective,\\n            ngModel: ngModelDirective,\\n            ngList: ngListDirective,\\n            ngChange: ngChangeDirective,\\n            pattern: patternDirective,\\n            ngPattern: patternDirective,\\n            required: requiredDirective,\\n            ngRequired: requiredDirective,\\n            minlength: minlengthDirective,\\n            ngMinlength: minlengthDirective,\\n            maxlength: maxlengthDirective,\\n            ngMaxlength: maxlengthDirective,\\n            ngValue: ngValueDirective,\\n            ngModelOptions: ngModelOptionsDirective\\n        }).\\n        directive({\\n          ngInclude: ngIncludeFillContentDirective\\n        }).\\n        directive(ngAttributeAliasDirectives).\\n        directive(ngEventDirectives);\\n      $provide.provider({\\n        $anchorScroll: $AnchorScrollProvider,\\n        $animate: $AnimateProvider,\\n        $browser: $BrowserProvider,\\n        $cacheFactory: $CacheFactoryProvider,\\n        $controller: $ControllerProvider,\\n        $document: $DocumentProvider,\\n        $exceptionHandler: $ExceptionHandlerProvider,\\n        $filter: $FilterProvider,\\n        $interpolate: $InterpolateProvider,\\n        $interval: $IntervalProvider,\\n        $http: $HttpProvider,\\n        $httpBackend: $HttpBackendProvider,\\n        $location: $LocationProvider,\\n        $log: $LogProvider,\\n        $parse: $ParseProvider,\\n        $rootScope: $RootScopeProvider,\\n        $q: $QProvider,\\n        $$q: $$QProvider,\\n        $sce: $SceProvider,\\n        $sceDelegate: $SceDelegateProvider,\\n        $sniffer: $SnifferProvider,\\n        $templateCache: $TemplateCacheProvider,\\n        $templateRequest: $TemplateRequestProvider,\\n        $$testability: $$TestabilityProvider,\\n        $timeout: $TimeoutProvider,\\n        $window: $WindowProvider,\\n        $$rAF: $$RAFProvider,\\n        $$asyncCallback: $$AsyncCallbackProvider,\\n        $$jqLite: $$jqLiteProvider\\n      });\\n    }\\n  ]);\\n}\\n\\n/* global JQLitePrototype: true,\\n  addEventListenerFn: true,\\n  removeEventListenerFn: true,\\n  BOOLEAN_ATTR: true,\\n  ALIASED_ATTR: true,\\n*/\\n\\n//////////////////////////////////\\n//JQLite\\n//////////////////////////////////\\n\\n/**\\n * @ngdoc function\\n * @name angular.element\\n * @module ng\\n * @kind function\\n *\\n * @description\\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\\n *\\n * If jQuery is available, `angular.element` is an alias for the\\n * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`\\n * delegates to Angular's built-in subset of jQuery, called \\\"jQuery lite\\\" or \\\"jqLite.\\\"\\n *\\n * <div class=\\\"alert alert-success\\\">jqLite is a tiny, API-compatible subset of jQuery that allows\\n * Angular to manipulate the DOM in a cross-browser compatible way. **jqLite** implements only the most\\n * commonly needed functionality with the goal of having a very small footprint.</div>\\n *\\n * To use jQuery, simply load it before `DOMContentLoaded` event fired.\\n *\\n * <div class=\\\"alert\\\">**Note:** all element references in Angular are always wrapped with jQuery or\\n * jqLite; they are never raw DOM references.</div>\\n *\\n * ## Angular's jqLite\\n * jqLite provides only the following jQuery methods:\\n *\\n * - [`addClass()`](http://api.jquery.com/addClass/)\\n * - [`after()`](http://api.jquery.com/after/)\\n * - [`append()`](http://api.jquery.com/append/)\\n * - [`attr()`](http://api.jquery.com/attr/) - Does not support functions as parameters\\n * - [`bind()`](http://api.jquery.com/bind/) - Does not support namespaces, selectors or eventData\\n * - [`children()`](http://api.jquery.com/children/) - Does not support selectors\\n * - [`clone()`](http://api.jquery.com/clone/)\\n * - [`contents()`](http://api.jquery.com/contents/)\\n * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyle()`\\n * - [`data()`](http://api.jquery.com/data/)\\n * - [`detach()`](http://api.jquery.com/detach/)\\n * - [`empty()`](http://api.jquery.com/empty/)\\n * - [`eq()`](http://api.jquery.com/eq/)\\n * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name\\n * - [`hasClass()`](http://api.jquery.com/hasClass/)\\n * - [`html()`](http://api.jquery.com/html/)\\n * - [`next()`](http://api.jquery.com/next/) - Does not support selectors\\n * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData\\n * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces or selectors\\n * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors\\n * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors\\n * - [`prepend()`](http://api.jquery.com/prepend/)\\n * - [`prop()`](http://api.jquery.com/prop/)\\n * - [`ready()`](http://api.jquery.com/ready/)\\n * - [`remove()`](http://api.jquery.com/remove/)\\n * - [`removeAttr()`](http://api.jquery.com/removeAttr/)\\n * - [`removeClass()`](http://api.jquery.com/removeClass/)\\n * - [`removeData()`](http://api.jquery.com/removeData/)\\n * - [`replaceWith()`](http://api.jquery.com/replaceWith/)\\n * - [`text()`](http://api.jquery.com/text/)\\n * - [`toggleClass()`](http://api.jquery.com/toggleClass/)\\n * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers.\\n * - [`unbind()`](http://api.jquery.com/unbind/) - Does not support namespaces\\n * - [`val()`](http://api.jquery.com/val/)\\n * - [`wrap()`](http://api.jquery.com/wrap/)\\n *\\n * ## jQuery/jqLite Extras\\n * Angular also provides the following additional methods and events to both jQuery and jqLite:\\n *\\n * ### Events\\n * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event\\n *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM\\n *    element before it is removed.\\n *\\n * ### Methods\\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\\n *   `'ngModel'`).\\n * - `injector()` - retrieves the injector of the current element or its parent.\\n * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current\\n *   element or its parent. Requires {@link guide/production#disabling-debug-data Debug Data} to\\n *   be enabled.\\n * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the\\n *   current element. This getter should be used only on elements that contain a directive which starts a new isolate\\n *   scope. Calling `scope()` on this element always returns the original non-isolate scope.\\n *   Requires {@link guide/production#disabling-debug-data Debug Data} to be enabled.\\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\\n *   parent element is reached.\\n *\\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\\n * @returns {Object} jQuery object.\\n */\\n\\nJQLite.expando = 'ng339';\\n\\nvar jqCache = JQLite.cache = {},\\n    jqId = 1,\\n    addEventListenerFn = function(element, type, fn) {\\n      element.addEventListener(type, fn, false);\\n    },\\n    removeEventListenerFn = function(element, type, fn) {\\n      element.removeEventListener(type, fn, false);\\n    };\\n\\n/*\\n * !!! This is an undocumented \\\"private\\\" function !!!\\n */\\nJQLite._data = function(node) {\\n  //jQuery always returns an object on cache miss\\n  return this.cache[node[this.expando]] || {};\\n};\\n\\nfunction jqNextId() { return ++jqId; }\\n\\n\\nvar SPECIAL_CHARS_REGEXP = /([\\\\:\\\\-\\\\_]+(.))/g;\\nvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\\nvar MOUSE_EVENT_MAP= { mouseleave: \\\"mouseout\\\", mouseenter: \\\"mouseover\\\"};\\nvar jqLiteMinErr = minErr('jqLite');\\n\\n/**\\n * Converts snake_case to camelCase.\\n * Also there is special case for Moz prefix starting with upper case letter.\\n * @param name Name to normalize\\n */\\nfunction camelCase(name) {\\n  return name.\\n    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\\n      return offset ? letter.toUpperCase() : letter;\\n    }).\\n    replace(MOZ_HACK_REGEXP, 'Moz$1');\\n}\\n\\nvar SINGLE_TAG_REGEXP = /^<(\\\\w+)\\\\s*\\\\/?>(?:<\\\\/\\\\1>|)$/;\\nvar HTML_REGEXP = /<|&#?\\\\w+;/;\\nvar TAG_NAME_REGEXP = /<([\\\\w:]+)/;\\nvar XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\\\w:]+)[^>]*)\\\\/>/gi;\\n\\nvar wrapMap = {\\n  'option': [1, '<select multiple=\\\"multiple\\\">', '</select>'],\\n\\n  'thead': [1, '<table>', '</table>'],\\n  'col': [2, '<table><colgroup>', '</colgroup></table>'],\\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\\n  'td': [3, '<table><tbody><tr>', '</tr></tbody></table>'],\\n  '_default': [0, \\\"\\\", \\\"\\\"]\\n};\\n\\nwrapMap.optgroup = wrapMap.option;\\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\nwrapMap.th = wrapMap.td;\\n\\n\\nfunction jqLiteIsTextNode(html) {\\n  return !HTML_REGEXP.test(html);\\n}\\n\\nfunction jqLiteAcceptsData(node) {\\n  // The window object can accept data but has no nodeType\\n  // Otherwise we are only interested in elements (1) and documents (9)\\n  var nodeType = node.nodeType;\\n  return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT;\\n}\\n\\nfunction jqLiteBuildFragment(html, context) {\\n  var tmp, tag, wrap,\\n      fragment = context.createDocumentFragment(),\\n      nodes = [], i;\\n\\n  if (jqLiteIsTextNode(html)) {\\n    // Convert non-html into a text node\\n    nodes.push(context.createTextNode(html));\\n  } else {\\n    // Convert html into DOM nodes\\n    tmp = tmp || fragment.appendChild(context.createElement(\\\"div\\\"));\\n    tag = (TAG_NAME_REGEXP.exec(html) || [\\\"\\\", \\\"\\\"])[1].toLowerCase();\\n    wrap = wrapMap[tag] || wrapMap._default;\\n    tmp.innerHTML = wrap[1] + html.replace(XHTML_TAG_REGEXP, \\\"<$1></$2>\\\") + wrap[2];\\n\\n    // Descend through wrappers to the right content\\n    i = wrap[0];\\n    while (i--) {\\n      tmp = tmp.lastChild;\\n    }\\n\\n    nodes = concat(nodes, tmp.childNodes);\\n\\n    tmp = fragment.firstChild;\\n    tmp.textContent = \\\"\\\";\\n  }\\n\\n  // Remove wrapper from fragment\\n  fragment.textContent = \\\"\\\";\\n  fragment.innerHTML = \\\"\\\"; // Clear inner HTML\\n  forEach(nodes, function(node) {\\n    fragment.appendChild(node);\\n  });\\n\\n  return fragment;\\n}\\n\\nfunction jqLiteParseHTML(html, context) {\\n  context = context || document;\\n  var parsed;\\n\\n  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {\\n    return [context.createElement(parsed[1])];\\n  }\\n\\n  if ((parsed = jqLiteBuildFragment(html, context))) {\\n    return parsed.childNodes;\\n  }\\n\\n  return [];\\n}\\n\\n/////////////////////////////////////////////\\nfunction JQLite(element) {\\n  if (element instanceof JQLite) {\\n    return element;\\n  }\\n\\n  var argIsString;\\n\\n  if (isString(element)) {\\n    element = trim(element);\\n    argIsString = true;\\n  }\\n  if (!(this instanceof JQLite)) {\\n    if (argIsString && element.charAt(0) != '<') {\\n      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');\\n    }\\n    return new JQLite(element);\\n  }\\n\\n  if (argIsString) {\\n    jqLiteAddNodes(this, jqLiteParseHTML(element));\\n  } else {\\n    jqLiteAddNodes(this, element);\\n  }\\n}\\n\\nfunction jqLiteClone(element) {\\n  return element.cloneNode(true);\\n}\\n\\nfunction jqLiteDealoc(element, onlyDescendants) {\\n  if (!onlyDescendants) jqLiteRemoveData(element);\\n\\n  if (element.querySelectorAll) {\\n    var descendants = element.querySelectorAll('*');\\n    for (var i = 0, l = descendants.length; i < l; i++) {\\n      jqLiteRemoveData(descendants[i]);\\n    }\\n  }\\n}\\n\\nfunction jqLiteOff(element, type, fn, unsupported) {\\n  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');\\n\\n  var expandoStore = jqLiteExpandoStore(element);\\n  var events = expandoStore && expandoStore.events;\\n  var handle = expandoStore && expandoStore.handle;\\n\\n  if (!handle) return; //no listeners registered\\n\\n  if (!type) {\\n    for (type in events) {\\n      if (type !== '$destroy') {\\n        removeEventListenerFn(element, type, handle);\\n      }\\n      delete events[type];\\n    }\\n  } else {\\n    forEach(type.split(' '), function(type) {\\n      if (isDefined(fn)) {\\n        var listenerFns = events[type];\\n        arrayRemove(listenerFns || [], fn);\\n        if (listenerFns && listenerFns.length > 0) {\\n          return;\\n        }\\n      }\\n\\n      removeEventListenerFn(element, type, handle);\\n      delete events[type];\\n    });\\n  }\\n}\\n\\nfunction jqLiteRemoveData(element, name) {\\n  var expandoId = element.ng339;\\n  var expandoStore = expandoId && jqCache[expandoId];\\n\\n  if (expandoStore) {\\n    if (name) {\\n      delete expandoStore.data[name];\\n      return;\\n    }\\n\\n    if (expandoStore.handle) {\\n      if (expandoStore.events.$destroy) {\\n        expandoStore.handle({}, '$destroy');\\n      }\\n      jqLiteOff(element);\\n    }\\n    delete jqCache[expandoId];\\n    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it\\n  }\\n}\\n\\n\\nfunction jqLiteExpandoStore(element, createIfNecessary) {\\n  var expandoId = element.ng339,\\n      expandoStore = expandoId && jqCache[expandoId];\\n\\n  if (createIfNecessary && !expandoStore) {\\n    element.ng339 = expandoId = jqNextId();\\n    expandoStore = jqCache[expandoId] = {events: {}, data: {}, handle: undefined};\\n  }\\n\\n  return expandoStore;\\n}\\n\\n\\nfunction jqLiteData(element, key, value) {\\n  if (jqLiteAcceptsData(element)) {\\n\\n    var isSimpleSetter = isDefined(value);\\n    var isSimpleGetter = !isSimpleSetter && key && !isObject(key);\\n    var massGetter = !key;\\n    var expandoStore = jqLiteExpandoStore(element, !isSimpleGetter);\\n    var data = expandoStore && expandoStore.data;\\n\\n    if (isSimpleSetter) { // data('key', value)\\n      data[key] = value;\\n    } else {\\n      if (massGetter) {  // data()\\n        return data;\\n      } else {\\n        if (isSimpleGetter) { // data('key')\\n          // don't force creation of expandoStore if it doesn't exist yet\\n          return data && data[key];\\n        } else { // mass-setter: data({key1: val1, key2: val2})\\n          extend(data, key);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nfunction jqLiteHasClass(element, selector) {\\n  if (!element.getAttribute) return false;\\n  return ((\\\" \\\" + (element.getAttribute('class') || '') + \\\" \\\").replace(/[\\\\n\\\\t]/g, \\\" \\\").\\n      indexOf(\\\" \\\" + selector + \\\" \\\") > -1);\\n}\\n\\nfunction jqLiteRemoveClass(element, cssClasses) {\\n  if (cssClasses && element.setAttribute) {\\n    forEach(cssClasses.split(' '), function(cssClass) {\\n      element.setAttribute('class', trim(\\n          (\\\" \\\" + (element.getAttribute('class') || '') + \\\" \\\")\\n          .replace(/[\\\\n\\\\t]/g, \\\" \\\")\\n          .replace(\\\" \\\" + trim(cssClass) + \\\" \\\", \\\" \\\"))\\n      );\\n    });\\n  }\\n}\\n\\nfunction jqLiteAddClass(element, cssClasses) {\\n  if (cssClasses && element.setAttribute) {\\n    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')\\n                            .replace(/[\\\\n\\\\t]/g, \\\" \\\");\\n\\n    forEach(cssClasses.split(' '), function(cssClass) {\\n      cssClass = trim(cssClass);\\n      if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {\\n        existingClasses += cssClass + ' ';\\n      }\\n    });\\n\\n    element.setAttribute('class', trim(existingClasses));\\n  }\\n}\\n\\n\\nfunction jqLiteAddNodes(root, elements) {\\n  // THIS CODE IS VERY HOT. Don't make changes without benchmarking.\\n\\n  if (elements) {\\n\\n    // if a Node (the most common case)\\n    if (elements.nodeType) {\\n      root[root.length++] = elements;\\n    } else {\\n      var length = elements.length;\\n\\n      // if an Array or NodeList and not a Window\\n      if (typeof length === 'number' && elements.window !== elements) {\\n        if (length) {\\n          for (var i = 0; i < length; i++) {\\n            root[root.length++] = elements[i];\\n          }\\n        }\\n      } else {\\n        root[root.length++] = elements;\\n      }\\n    }\\n  }\\n}\\n\\n\\nfunction jqLiteController(element, name) {\\n  return jqLiteInheritedData(element, '$' + (name || 'ngController') + 'Controller');\\n}\\n\\nfunction jqLiteInheritedData(element, name, value) {\\n  // if element is the document object work with the html element instead\\n  // this makes $(document).scope() possible\\n  if (element.nodeType == NODE_TYPE_DOCUMENT) {\\n    element = element.documentElement;\\n  }\\n  var names = isArray(name) ? name : [name];\\n\\n  while (element) {\\n    for (var i = 0, ii = names.length; i < ii; i++) {\\n      if ((value = jqLite.data(element, names[i])) !== undefined) return value;\\n    }\\n\\n    // If dealing with a document fragment node with a host element, and no parent, use the host\\n    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM\\n    // to lookup parent controllers.\\n    element = element.parentNode || (element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host);\\n  }\\n}\\n\\nfunction jqLiteEmpty(element) {\\n  jqLiteDealoc(element, true);\\n  while (element.firstChild) {\\n    element.removeChild(element.firstChild);\\n  }\\n}\\n\\nfunction jqLiteRemove(element, keepData) {\\n  if (!keepData) jqLiteDealoc(element);\\n  var parent = element.parentNode;\\n  if (parent) parent.removeChild(element);\\n}\\n\\n\\nfunction jqLiteDocumentLoaded(action, win) {\\n  win = win || window;\\n  if (win.document.readyState === 'complete') {\\n    // Force the action to be run async for consistent behaviour\\n    // from the action's point of view\\n    // i.e. it will definitely not be in a $apply\\n    win.setTimeout(action);\\n  } else {\\n    // No need to unbind this handler as load is only ever called once\\n    jqLite(win).on('load', action);\\n  }\\n}\\n\\n//////////////////////////////////////////\\n// Functions which are declared directly.\\n//////////////////////////////////////////\\nvar JQLitePrototype = JQLite.prototype = {\\n  ready: function(fn) {\\n    var fired = false;\\n\\n    function trigger() {\\n      if (fired) return;\\n      fired = true;\\n      fn();\\n    }\\n\\n    // check if document is already loaded\\n    if (document.readyState === 'complete') {\\n      setTimeout(trigger);\\n    } else {\\n      this.on('DOMContentLoaded', trigger); // works for modern browsers and IE9\\n      // we can not use jqLite since we are not done loading and jQuery could be loaded later.\\n      // jshint -W064\\n      JQLite(window).on('load', trigger); // fallback to window.onload for others\\n      // jshint +W064\\n    }\\n  },\\n  toString: function() {\\n    var value = [];\\n    forEach(this, function(e) { value.push('' + e);});\\n    return '[' + value.join(', ') + ']';\\n  },\\n\\n  eq: function(index) {\\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\\n  },\\n\\n  length: 0,\\n  push: push,\\n  sort: [].sort,\\n  splice: [].splice\\n};\\n\\n//////////////////////////////////////////\\n// Functions iterating getter/setters.\\n// these functions return self on setter and\\n// value on get.\\n//////////////////////////////////////////\\nvar BOOLEAN_ATTR = {};\\nforEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {\\n  BOOLEAN_ATTR[lowercase(value)] = value;\\n});\\nvar BOOLEAN_ELEMENTS = {};\\nforEach('input,select,option,textarea,button,form,details'.split(','), function(value) {\\n  BOOLEAN_ELEMENTS[value] = true;\\n});\\nvar ALIASED_ATTR = {\\n  'ngMinlength': 'minlength',\\n  'ngMaxlength': 'maxlength',\\n  'ngMin': 'min',\\n  'ngMax': 'max',\\n  'ngPattern': 'pattern'\\n};\\n\\nfunction getBooleanAttrName(element, name) {\\n  // check dom last since we will most likely fail on name\\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\\n\\n  // booleanAttr is here twice to minimize DOM access\\n  return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr;\\n}\\n\\nfunction getAliasedAttrName(element, name) {\\n  var nodeName = element.nodeName;\\n  return (nodeName === 'INPUT' || nodeName === 'TEXTAREA') && ALIASED_ATTR[name];\\n}\\n\\nforEach({\\n  data: jqLiteData,\\n  removeData: jqLiteRemoveData\\n}, function(fn, name) {\\n  JQLite[name] = fn;\\n});\\n\\nforEach({\\n  data: jqLiteData,\\n  inheritedData: jqLiteInheritedData,\\n\\n  scope: function(element) {\\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\\n    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);\\n  },\\n\\n  isolateScope: function(element) {\\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\\n    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');\\n  },\\n\\n  controller: jqLiteController,\\n\\n  injector: function(element) {\\n    return jqLiteInheritedData(element, '$injector');\\n  },\\n\\n  removeAttr: function(element, name) {\\n    element.removeAttribute(name);\\n  },\\n\\n  hasClass: jqLiteHasClass,\\n\\n  css: function(element, name, value) {\\n    name = camelCase(name);\\n\\n    if (isDefined(value)) {\\n      element.style[name] = value;\\n    } else {\\n      return element.style[name];\\n    }\\n  },\\n\\n  attr: function(element, name, value) {\\n    var lowercasedName = lowercase(name);\\n    if (BOOLEAN_ATTR[lowercasedName]) {\\n      if (isDefined(value)) {\\n        if (!!value) {\\n          element[name] = true;\\n          element.setAttribute(name, lowercasedName);\\n        } else {\\n          element[name] = false;\\n          element.removeAttribute(lowercasedName);\\n        }\\n      } else {\\n        return (element[name] ||\\n                 (element.attributes.getNamedItem(name) || noop).specified)\\n               ? lowercasedName\\n               : undefined;\\n      }\\n    } else if (isDefined(value)) {\\n      element.setAttribute(name, value);\\n    } else if (element.getAttribute) {\\n      // the extra argument \\\"2\\\" is to get the right thing for a.href in IE, see jQuery code\\n      // some elements (e.g. Document) don't have get attribute, so return undefined\\n      var ret = element.getAttribute(name, 2);\\n      // normalize non-existing attributes to undefined (as jQuery)\\n      return ret === null ? undefined : ret;\\n    }\\n  },\\n\\n  prop: function(element, name, value) {\\n    if (isDefined(value)) {\\n      element[name] = value;\\n    } else {\\n      return element[name];\\n    }\\n  },\\n\\n  text: (function() {\\n    getText.$dv = '';\\n    return getText;\\n\\n    function getText(element, value) {\\n      if (isUndefined(value)) {\\n        var nodeType = element.nodeType;\\n        return (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT) ? element.textContent : '';\\n      }\\n      element.textContent = value;\\n    }\\n  })(),\\n\\n  val: function(element, value) {\\n    if (isUndefined(value)) {\\n      if (element.multiple && nodeName_(element) === 'select') {\\n        var result = [];\\n        forEach(element.options, function(option) {\\n          if (option.selected) {\\n            result.push(option.value || option.text);\\n          }\\n        });\\n        return result.length === 0 ? null : result;\\n      }\\n      return element.value;\\n    }\\n    element.value = value;\\n  },\\n\\n  html: function(element, value) {\\n    if (isUndefined(value)) {\\n      return element.innerHTML;\\n    }\\n    jqLiteDealoc(element, true);\\n    element.innerHTML = value;\\n  },\\n\\n  empty: jqLiteEmpty\\n}, function(fn, name) {\\n  /**\\n   * Properties: writes return selection, reads return first value\\n   */\\n  JQLite.prototype[name] = function(arg1, arg2) {\\n    var i, key;\\n    var nodeCount = this.length;\\n\\n    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\\n    // in a way that survives minification.\\n    // jqLiteEmpty takes no arguments but is a setter.\\n    if (fn !== jqLiteEmpty &&\\n        (((fn.length == 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2) === undefined)) {\\n      if (isObject(arg1)) {\\n\\n        // we are a write, but the object properties are the key/values\\n        for (i = 0; i < nodeCount; i++) {\\n          if (fn === jqLiteData) {\\n            // data() takes the whole object in jQuery\\n            fn(this[i], arg1);\\n          } else {\\n            for (key in arg1) {\\n              fn(this[i], key, arg1[key]);\\n            }\\n          }\\n        }\\n        // return self for chaining\\n        return this;\\n      } else {\\n        // we are a read, so read the first child.\\n        // TODO: do we still need this?\\n        var value = fn.$dv;\\n        // Only if we have $dv do we iterate over all, otherwise it is just the first element.\\n        var jj = (value === undefined) ? Math.min(nodeCount, 1) : nodeCount;\\n        for (var j = 0; j < jj; j++) {\\n          var nodeValue = fn(this[j], arg1, arg2);\\n          value = value ? value + nodeValue : nodeValue;\\n        }\\n        return value;\\n      }\\n    } else {\\n      // we are a write, so apply to all children\\n      for (i = 0; i < nodeCount; i++) {\\n        fn(this[i], arg1, arg2);\\n      }\\n      // return self for chaining\\n      return this;\\n    }\\n  };\\n});\\n\\nfunction createEventHandler(element, events) {\\n  var eventHandler = function(event, type) {\\n    // jQuery specific api\\n    event.isDefaultPrevented = function() {\\n      return event.defaultPrevented;\\n    };\\n\\n    var eventFns = events[type || event.type];\\n    var eventFnsLength = eventFns ? eventFns.length : 0;\\n\\n    if (!eventFnsLength) return;\\n\\n    if (isUndefined(event.immediatePropagationStopped)) {\\n      var originalStopImmediatePropagation = event.stopImmediatePropagation;\\n      event.stopImmediatePropagation = function() {\\n        event.immediatePropagationStopped = true;\\n\\n        if (event.stopPropagation) {\\n          event.stopPropagation();\\n        }\\n\\n        if (originalStopImmediatePropagation) {\\n          originalStopImmediatePropagation.call(event);\\n        }\\n      };\\n    }\\n\\n    event.isImmediatePropagationStopped = function() {\\n      return event.immediatePropagationStopped === true;\\n    };\\n\\n    // Copy event handlers in case event handlers array is modified during execution.\\n    if ((eventFnsLength > 1)) {\\n      eventFns = shallowCopy(eventFns);\\n    }\\n\\n    for (var i = 0; i < eventFnsLength; i++) {\\n      if (!event.isImmediatePropagationStopped()) {\\n        eventFns[i].call(element, event);\\n      }\\n    }\\n  };\\n\\n  // TODO: this is a hack for angularMocks/clearDataCache that makes it possible to deregister all\\n  //       events on `element`\\n  eventHandler.elem = element;\\n  return eventHandler;\\n}\\n\\n//////////////////////////////////////////\\n// Functions iterating traversal.\\n// These functions chain results into a single\\n// selector.\\n//////////////////////////////////////////\\nforEach({\\n  removeData: jqLiteRemoveData,\\n\\n  on: function jqLiteOn(element, type, fn, unsupported) {\\n    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');\\n\\n    // Do not add event handlers to non-elements because they will not be cleaned up.\\n    if (!jqLiteAcceptsData(element)) {\\n      return;\\n    }\\n\\n    var expandoStore = jqLiteExpandoStore(element, true);\\n    var events = expandoStore.events;\\n    var handle = expandoStore.handle;\\n\\n    if (!handle) {\\n      handle = expandoStore.handle = createEventHandler(element, events);\\n    }\\n\\n    // http://jsperf.com/string-indexof-vs-split\\n    var types = type.indexOf(' ') >= 0 ? type.split(' ') : [type];\\n    var i = types.length;\\n\\n    while (i--) {\\n      type = types[i];\\n      var eventFns = events[type];\\n\\n      if (!eventFns) {\\n        events[type] = [];\\n\\n        if (type === 'mouseenter' || type === 'mouseleave') {\\n          // Refer to jQuery's implementation of mouseenter & mouseleave\\n          // Read about mouseenter and mouseleave:\\n          // http://www.quirksmode.org/js/events_mouse.html#link8\\n\\n          jqLiteOn(element, MOUSE_EVENT_MAP[type], function(event) {\\n            var target = this, related = event.relatedTarget;\\n            // For mousenter/leave call the handler if related is outside the target.\\n            // NB: No relatedTarget if the mouse left/entered the browser window\\n            if (!related || (related !== target && !target.contains(related))) {\\n              handle(event, type);\\n            }\\n          });\\n\\n        } else {\\n          if (type !== '$destroy') {\\n            addEventListenerFn(element, type, handle);\\n          }\\n        }\\n        eventFns = events[type];\\n      }\\n      eventFns.push(fn);\\n    }\\n  },\\n\\n  off: jqLiteOff,\\n\\n  one: function(element, type, fn) {\\n    element = jqLite(element);\\n\\n    //add the listener twice so that when it is called\\n    //you can remove the original function and still be\\n    //able to call element.off(ev, fn) normally\\n    element.on(type, function onFn() {\\n      element.off(type, fn);\\n      element.off(type, onFn);\\n    });\\n    element.on(type, fn);\\n  },\\n\\n  replaceWith: function(element, replaceNode) {\\n    var index, parent = element.parentNode;\\n    jqLiteDealoc(element);\\n    forEach(new JQLite(replaceNode), function(node) {\\n      if (index) {\\n        parent.insertBefore(node, index.nextSibling);\\n      } else {\\n        parent.replaceChild(node, element);\\n      }\\n      index = node;\\n    });\\n  },\\n\\n  children: function(element) {\\n    var children = [];\\n    forEach(element.childNodes, function(element) {\\n      if (element.nodeType === NODE_TYPE_ELEMENT)\\n        children.push(element);\\n    });\\n    return children;\\n  },\\n\\n  contents: function(element) {\\n    return element.contentDocument || element.childNodes || [];\\n  },\\n\\n  append: function(element, node) {\\n    var nodeType = element.nodeType;\\n    if (nodeType !== NODE_TYPE_ELEMENT && nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT) return;\\n\\n    node = new JQLite(node);\\n\\n    for (var i = 0, ii = node.length; i < ii; i++) {\\n      var child = node[i];\\n      element.appendChild(child);\\n    }\\n  },\\n\\n  prepend: function(element, node) {\\n    if (element.nodeType === NODE_TYPE_ELEMENT) {\\n      var index = element.firstChild;\\n      forEach(new JQLite(node), function(child) {\\n        element.insertBefore(child, index);\\n      });\\n    }\\n  },\\n\\n  wrap: function(element, wrapNode) {\\n    wrapNode = jqLite(wrapNode).eq(0).clone()[0];\\n    var parent = element.parentNode;\\n    if (parent) {\\n      parent.replaceChild(wrapNode, element);\\n    }\\n    wrapNode.appendChild(element);\\n  },\\n\\n  remove: jqLiteRemove,\\n\\n  detach: function(element) {\\n    jqLiteRemove(element, true);\\n  },\\n\\n  after: function(element, newElement) {\\n    var index = element, parent = element.parentNode;\\n    newElement = new JQLite(newElement);\\n\\n    for (var i = 0, ii = newElement.length; i < ii; i++) {\\n      var node = newElement[i];\\n      parent.insertBefore(node, index.nextSibling);\\n      index = node;\\n    }\\n  },\\n\\n  addClass: jqLiteAddClass,\\n  removeClass: jqLiteRemoveClass,\\n\\n  toggleClass: function(element, selector, condition) {\\n    if (selector) {\\n      forEach(selector.split(' '), function(className) {\\n        var classCondition = condition;\\n        if (isUndefined(classCondition)) {\\n          classCondition = !jqLiteHasClass(element, className);\\n        }\\n        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);\\n      });\\n    }\\n  },\\n\\n  parent: function(element) {\\n    var parent = element.parentNode;\\n    return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT ? parent : null;\\n  },\\n\\n  next: function(element) {\\n    return element.nextElementSibling;\\n  },\\n\\n  find: function(element, selector) {\\n    if (element.getElementsByTagName) {\\n      return element.getElementsByTagName(selector);\\n    } else {\\n      return [];\\n    }\\n  },\\n\\n  clone: jqLiteClone,\\n\\n  triggerHandler: function(element, event, extraParameters) {\\n\\n    var dummyEvent, eventFnsCopy, handlerArgs;\\n    var eventName = event.type || event;\\n    var expandoStore = jqLiteExpandoStore(element);\\n    var events = expandoStore && expandoStore.events;\\n    var eventFns = events && events[eventName];\\n\\n    if (eventFns) {\\n      // Create a dummy event to pass to the handlers\\n      dummyEvent = {\\n        preventDefault: function() { this.defaultPrevented = true; },\\n        isDefaultPrevented: function() { return this.defaultPrevented === true; },\\n        stopImmediatePropagation: function() { this.immediatePropagationStopped = true; },\\n        isImmediatePropagationStopped: function() { return this.immediatePropagationStopped === true; },\\n        stopPropagation: noop,\\n        type: eventName,\\n        target: element\\n      };\\n\\n      // If a custom event was provided then extend our dummy event with it\\n      if (event.type) {\\n        dummyEvent = extend(dummyEvent, event);\\n      }\\n\\n      // Copy event handlers in case event handlers array is modified during execution.\\n      eventFnsCopy = shallowCopy(eventFns);\\n      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];\\n\\n      forEach(eventFnsCopy, function(fn) {\\n        if (!dummyEvent.isImmediatePropagationStopped()) {\\n          fn.apply(element, handlerArgs);\\n        }\\n      });\\n    }\\n  }\\n}, function(fn, name) {\\n  /**\\n   * chaining functions\\n   */\\n  JQLite.prototype[name] = function(arg1, arg2, arg3) {\\n    var value;\\n\\n    for (var i = 0, ii = this.length; i < ii; i++) {\\n      if (isUndefined(value)) {\\n        value = fn(this[i], arg1, arg2, arg3);\\n        if (isDefined(value)) {\\n          // any function which returns a value needs to be wrapped\\n          value = jqLite(value);\\n        }\\n      } else {\\n        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));\\n      }\\n    }\\n    return isDefined(value) ? value : this;\\n  };\\n\\n  // bind legacy bind/unbind to on/off\\n  JQLite.prototype.bind = JQLite.prototype.on;\\n  JQLite.prototype.unbind = JQLite.prototype.off;\\n});\\n\\n\\n// Provider for private $$jqLite service\\nfunction $$jqLiteProvider() {\\n  this.$get = function $$jqLite() {\\n    return extend(JQLite, {\\n      hasClass: function(node, classes) {\\n        if (node.attr) node = node[0];\\n        return jqLiteHasClass(node, classes);\\n      },\\n      addClass: function(node, classes) {\\n        if (node.attr) node = node[0];\\n        return jqLiteAddClass(node, classes);\\n      },\\n      removeClass: function(node, classes) {\\n        if (node.attr) node = node[0];\\n        return jqLiteRemoveClass(node, classes);\\n      }\\n    });\\n  };\\n}\\n\\n/**\\n * Computes a hash of an 'obj'.\\n * Hash of a:\\n *  string is string\\n *  number is number as string\\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\\n *         that is also assigned to the $$hashKey property of the object.\\n *\\n * @param obj\\n * @returns {string} hash string such that the same input will have the same hash string.\\n *         The resulting string key is in 'type:hashKey' format.\\n */\\nfunction hashKey(obj, nextUidFn) {\\n  var key = obj && obj.$$hashKey;\\n\\n  if (key) {\\n    if (typeof key === 'function') {\\n      key = obj.$$hashKey();\\n    }\\n    return key;\\n  }\\n\\n  var objType = typeof obj;\\n  if (objType == 'function' || (objType == 'object' && obj !== null)) {\\n    key = obj.$$hashKey = objType + ':' + (nextUidFn || nextUid)();\\n  } else {\\n    key = objType + ':' + obj;\\n  }\\n\\n  return key;\\n}\\n\\n/**\\n * HashMap which can use objects as keys\\n */\\nfunction HashMap(array, isolatedUid) {\\n  if (isolatedUid) {\\n    var uid = 0;\\n    this.nextUid = function() {\\n      return ++uid;\\n    };\\n  }\\n  forEach(array, this.put, this);\\n}\\nHashMap.prototype = {\\n  /**\\n   * Store key value pair\\n   * @param key key to store can be any type\\n   * @param value value to store can be any type\\n   */\\n  put: function(key, value) {\\n    this[hashKey(key, this.nextUid)] = value;\\n  },\\n\\n  /**\\n   * @param key\\n   * @returns {Object} the value for the key\\n   */\\n  get: function(key) {\\n    return this[hashKey(key, this.nextUid)];\\n  },\\n\\n  /**\\n   * Remove the key/value pair\\n   * @param key\\n   */\\n  remove: function(key) {\\n    var value = this[key = hashKey(key, this.nextUid)];\\n    delete this[key];\\n    return value;\\n  }\\n};\\n\\n/**\\n * @ngdoc function\\n * @module ng\\n * @name angular.injector\\n * @kind function\\n *\\n * @description\\n * Creates an injector object that can be used for retrieving services as well as for\\n * dependency injection (see {@link guide/di dependency injection}).\\n *\\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\\n *     {@link angular.module}. The `ng` module must be explicitly added.\\n * @param {boolean=} [strictDi=false] Whether the injector should be in strict mode, which\\n *     disallows argument name annotation inference.\\n * @returns {injector} Injector object. See {@link auto.$injector $injector}.\\n *\\n * @example\\n * Typical usage\\n * ```js\\n *   // create an injector\\n *   var $injector = angular.injector(['ng']);\\n *\\n *   // use the injector to kick off your application\\n *   // use the type inference to auto inject arguments, or use implicit injection\\n *   $injector.invoke(function($rootScope, $compile, $document) {\\n *     $compile($document)($rootScope);\\n *     $rootScope.$digest();\\n *   });\\n * ```\\n *\\n * Sometimes you want to get access to the injector of a currently running Angular app\\n * from outside Angular. Perhaps, you want to inject and compile some markup after the\\n * application has been bootstrapped. You can do this using the extra `injector()` added\\n * to JQuery/jqLite elements. See {@link angular.element}.\\n *\\n * *This is fairly rare but could be the case if a third party library is injecting the\\n * markup.*\\n *\\n * In the following example a new block of HTML containing a `ng-controller`\\n * directive is added to the end of the document body by JQuery. We then compile and link\\n * it into the current AngularJS scope.\\n *\\n * ```js\\n * var $div = $('<div ng-controller=\\\"MyCtrl\\\">{{content.label}}</div>');\\n * $(document.body).append($div);\\n *\\n * angular.element(document).injector().invoke(function($compile) {\\n *   var scope = angular.element($div).scope();\\n *   $compile($div)(scope);\\n * });\\n * ```\\n */\\n\\n\\n/**\\n * @ngdoc module\\n * @name auto\\n * @description\\n *\\n * Implicit module which gets automatically added to each {@link auto.$injector $injector}.\\n */\\n\\nvar FN_ARGS = /^function\\\\s*[^\\\\(]*\\\\(\\\\s*([^\\\\)]*)\\\\)/m;\\nvar FN_ARG_SPLIT = /,/;\\nvar FN_ARG = /^\\\\s*(_?)(\\\\S+?)\\\\1\\\\s*$/;\\nvar STRIP_COMMENTS = /((\\\\/\\\\/.*$)|(\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/))/mg;\\nvar $injectorMinErr = minErr('$injector');\\n\\nfunction anonFn(fn) {\\n  // For anonymous functions, showing at the very least the function signature can help in\\n  // debugging.\\n  var fnText = fn.toString().replace(STRIP_COMMENTS, ''),\\n      args = fnText.match(FN_ARGS);\\n  if (args) {\\n    return 'function(' + (args[1] || '').replace(/[\\\\s\\\\r\\\\n]+/, ' ') + ')';\\n  }\\n  return 'fn';\\n}\\n\\nfunction annotate(fn, strictDi, name) {\\n  var $inject,\\n      fnText,\\n      argDecl,\\n      last;\\n\\n  if (typeof fn === 'function') {\\n    if (!($inject = fn.$inject)) {\\n      $inject = [];\\n      if (fn.length) {\\n        if (strictDi) {\\n          if (!isString(name) || !name) {\\n            name = fn.name || anonFn(fn);\\n          }\\n          throw $injectorMinErr('strictdi',\\n            '{0} is not using explicit annotation and cannot be invoked in strict mode', name);\\n        }\\n        fnText = fn.toString().replace(STRIP_COMMENTS, '');\\n        argDecl = fnText.match(FN_ARGS);\\n        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {\\n          arg.replace(FN_ARG, function(all, underscore, name) {\\n            $inject.push(name);\\n          });\\n        });\\n      }\\n      fn.$inject = $inject;\\n    }\\n  } else if (isArray(fn)) {\\n    last = fn.length - 1;\\n    assertArgFn(fn[last], 'fn');\\n    $inject = fn.slice(0, last);\\n  } else {\\n    assertArgFn(fn, 'fn', true);\\n  }\\n  return $inject;\\n}\\n\\n///////////////////////////////////////\\n\\n/**\\n * @ngdoc service\\n * @name $injector\\n *\\n * @description\\n *\\n * `$injector` is used to retrieve object instances as defined by\\n * {@link auto.$provide provider}, instantiate types, invoke methods,\\n * and load modules.\\n *\\n * The following always holds true:\\n *\\n * ```js\\n *   var $injector = angular.injector();\\n *   expect($injector.get('$injector')).toBe($injector);\\n *   expect($injector.invoke(function($injector) {\\n *     return $injector;\\n *   })).toBe($injector);\\n * ```\\n *\\n * # Injection Function Annotation\\n *\\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\\n * following are all valid ways of annotating function with injection arguments and are equivalent.\\n *\\n * ```js\\n *   // inferred (only works if code not minified/obfuscated)\\n *   $injector.invoke(function(serviceA){});\\n *\\n *   // annotated\\n *   function explicit(serviceA) {};\\n *   explicit.$inject = ['serviceA'];\\n *   $injector.invoke(explicit);\\n *\\n *   // inline\\n *   $injector.invoke(['serviceA', function(serviceA){}]);\\n * ```\\n *\\n * ## Inference\\n *\\n * In JavaScript calling `toString()` on a function returns the function definition. The definition\\n * can then be parsed and the function arguments can be extracted. This method of discovering\\n * annotations is disallowed when the injector is in strict mode.\\n * *NOTE:* This does not work with minification, and obfuscation tools since these tools change the\\n * argument names.\\n *\\n * ## `$inject` Annotation\\n * By adding an `$inject` property onto a function the injection parameters can be specified.\\n *\\n * ## Inline\\n * As an array of injection names, where the last item in the array is the function to call.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $injector#get\\n *\\n * @description\\n * Return an instance of the service.\\n *\\n * @param {string} name The name of the instance to retrieve.\\n * @param {string} caller An optional string to provide the origin of the function call for error messages.\\n * @return {*} The instance.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $injector#invoke\\n *\\n * @description\\n * Invoke the method and supply the method arguments from the `$injector`.\\n *\\n * @param {!Function} fn The function to invoke. Function parameters are injected according to the\\n *   {@link guide/di $inject Annotation} rules.\\n * @param {Object=} self The `this` for the invoked method.\\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\\n *                         object first, before the `$injector` is consulted.\\n * @returns {*} the value returned by the invoked `fn` function.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $injector#has\\n *\\n * @description\\n * Allows the user to query if the particular service exists.\\n *\\n * @param {string} name Name of the service to query.\\n * @returns {boolean} `true` if injector has given service.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $injector#instantiate\\n * @description\\n * Create a new instance of JS type. The method takes a constructor function, invokes the new\\n * operator, and supplies all of the arguments to the constructor function as specified by the\\n * constructor annotation.\\n *\\n * @param {Function} Type Annotated constructor function.\\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\\n * object first, before the `$injector` is consulted.\\n * @returns {Object} new instance of `Type`.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $injector#annotate\\n *\\n * @description\\n * Returns an array of service names which the function is requesting for injection. This API is\\n * used by the injector to determine which services need to be injected into the function when the\\n * function is invoked. There are three ways in which the function can be annotated with the needed\\n * dependencies.\\n *\\n * # Argument names\\n *\\n * The simplest form is to extract the dependencies from the arguments of the function. This is done\\n * by converting the function into a string using `toString()` method and extracting the argument\\n * names.\\n * ```js\\n *   // Given\\n *   function MyController($scope, $route) {\\n *     // ...\\n *   }\\n *\\n *   // Then\\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\\n * ```\\n *\\n * You can disallow this method by using strict injection mode.\\n *\\n * This method does not work with code minification / obfuscation. For this reason the following\\n * annotation strategies are supported.\\n *\\n * # The `$inject` property\\n *\\n * If a function has an `$inject` property and its value is an array of strings, then the strings\\n * represent names of services to be injected into the function.\\n * ```js\\n *   // Given\\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\\n *     // ...\\n *   }\\n *   // Define function dependencies\\n *   MyController['$inject'] = ['$scope', '$route'];\\n *\\n *   // Then\\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\\n * ```\\n *\\n * # The array notation\\n *\\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property\\n * is very inconvenient. In these situations using the array notation to specify the dependencies in\\n * a way that survives minification is a better choice:\\n *\\n * ```js\\n *   // We wish to write this (not minification / obfuscation safe)\\n *   injector.invoke(function($compile, $rootScope) {\\n *     // ...\\n *   });\\n *\\n *   // We are forced to write break inlining\\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\\n *     // ...\\n *   };\\n *   tmpFn.$inject = ['$compile', '$rootScope'];\\n *   injector.invoke(tmpFn);\\n *\\n *   // To better support inline function the inline annotation is supported\\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\\n *     // ...\\n *   }]);\\n *\\n *   // Therefore\\n *   expect(injector.annotate(\\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\\n *    ).toEqual(['$compile', '$rootScope']);\\n * ```\\n *\\n * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to\\n * be retrieved as described above.\\n *\\n * @param {boolean=} [strictDi=false] Disallow argument name annotation inference.\\n *\\n * @returns {Array.<string>} The names of the services which the function requires.\\n */\\n\\n\\n\\n\\n/**\\n * @ngdoc service\\n * @name $provide\\n *\\n * @description\\n *\\n * The {@link auto.$provide $provide} service has a number of methods for registering components\\n * with the {@link auto.$injector $injector}. Many of these functions are also exposed on\\n * {@link angular.Module}.\\n *\\n * An Angular **service** is a singleton object created by a **service factory**.  These **service\\n * factories** are functions which, in turn, are created by a **service provider**.\\n * The **service providers** are constructor functions. When instantiated they must contain a\\n * property called `$get`, which holds the **service factory** function.\\n *\\n * When you request a service, the {@link auto.$injector $injector} is responsible for finding the\\n * correct **service provider**, instantiating it and then calling its `$get` **service factory**\\n * function to get the instance of the **service**.\\n *\\n * Often services have no configuration options and there is no need to add methods to the service\\n * provider.  The provider will be no more than a constructor function with a `$get` property. For\\n * these cases the {@link auto.$provide $provide} service has additional helper methods to register\\n * services without specifying a provider.\\n *\\n * * {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\\n *     {@link auto.$injector $injector}\\n * * {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\\n *     providers and services.\\n * * {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\\n *     services, not providers.\\n * * {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\\n *     that will be wrapped in a **service provider** object, whose `$get` property will contain the\\n *     given factory function.\\n * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\\n *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate\\n *      a new object using the given constructor function.\\n *\\n * See the individual methods for more information and examples.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $provide#provider\\n * @description\\n *\\n * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\\n * are constructor functions, whose instances are responsible for \\\"providing\\\" a factory for a\\n * service.\\n *\\n * Service provider names start with the name of the service they provide followed by `Provider`.\\n * For example, the {@link ng.$log $log} service has a provider called\\n * {@link ng.$logProvider $logProvider}.\\n *\\n * Service provider objects can have additional methods which allow configuration of the provider\\n * and its service. Importantly, you can configure what kind of service is created by the `$get`\\n * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\\n * method {@link ng.$logProvider#debugEnabled debugEnabled}\\n * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the\\n * console or not.\\n *\\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name +\\n                        'Provider'` key.\\n * @param {(Object|function())} provider If the provider is:\\n *\\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\\n *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\\n *   - `Constructor`: a new instance of the provider will be created using\\n *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.\\n *\\n * @returns {Object} registered provider instance\\n\\n * @example\\n *\\n * The following example shows how to create a simple event tracking service and register it using\\n * {@link auto.$provide#provider $provide.provider()}.\\n *\\n * ```js\\n *  // Define the eventTracker provider\\n *  function EventTrackerProvider() {\\n *    var trackingUrl = '/track';\\n *\\n *    // A provider method for configuring where the tracked events should been saved\\n *    this.setTrackingUrl = function(url) {\\n *      trackingUrl = url;\\n *    };\\n *\\n *    // The service factory function\\n *    this.$get = ['$http', function($http) {\\n *      var trackedEvents = {};\\n *      return {\\n *        // Call this to track an event\\n *        event: function(event) {\\n *          var count = trackedEvents[event] || 0;\\n *          count += 1;\\n *          trackedEvents[event] = count;\\n *          return count;\\n *        },\\n *        // Call this to save the tracked events to the trackingUrl\\n *        save: function() {\\n *          $http.post(trackingUrl, trackedEvents);\\n *        }\\n *      };\\n *    }];\\n *  }\\n *\\n *  describe('eventTracker', function() {\\n *    var postSpy;\\n *\\n *    beforeEach(module(function($provide) {\\n *      // Register the eventTracker provider\\n *      $provide.provider('eventTracker', EventTrackerProvider);\\n *    }));\\n *\\n *    beforeEach(module(function(eventTrackerProvider) {\\n *      // Configure eventTracker provider\\n *      eventTrackerProvider.setTrackingUrl('/custom-track');\\n *    }));\\n *\\n *    it('tracks events', inject(function(eventTracker) {\\n *      expect(eventTracker.event('login')).toEqual(1);\\n *      expect(eventTracker.event('login')).toEqual(2);\\n *    }));\\n *\\n *    it('saves to the tracking url', inject(function(eventTracker, $http) {\\n *      postSpy = spyOn($http, 'post');\\n *      eventTracker.event('login');\\n *      eventTracker.save();\\n *      expect(postSpy).toHaveBeenCalled();\\n *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\\n *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\\n *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\\n *    }));\\n *  });\\n * ```\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $provide#factory\\n * @description\\n *\\n * Register a **service factory**, which will be called to return the service instance.\\n * This is short for registering a service where its provider consists of only a `$get` property,\\n * which is the given service factory function.\\n * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\\n * configure your service in a provider.\\n *\\n * @param {string} name The name of the instance.\\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand\\n *                            for `$provide.provider(name, {$get: $getFn})`.\\n * @returns {Object} registered provider instance\\n *\\n * @example\\n * Here is an example of registering a service\\n * ```js\\n *   $provide.factory('ping', ['$http', function($http) {\\n *     return function ping() {\\n *       return $http.send('/ping');\\n *     };\\n *   }]);\\n * ```\\n * You would then inject and use this service like this:\\n * ```js\\n *   someModule.controller('Ctrl', ['ping', function(ping) {\\n *     ping();\\n *   }]);\\n * ```\\n */\\n\\n\\n/**\\n * @ngdoc method\\n * @name $provide#service\\n * @description\\n *\\n * Register a **service constructor**, which will be invoked with `new` to create the service\\n * instance.\\n * This is short for registering a service where its provider's `$get` property is the service\\n * constructor function that will be used to instantiate the service instance.\\n *\\n * You should use {@link auto.$provide#service $provide.service(class)} if you define your service\\n * as a type/class.\\n *\\n * @param {string} name The name of the instance.\\n * @param {Function} constructor A class (constructor function) that will be instantiated.\\n * @returns {Object} registered provider instance\\n *\\n * @example\\n * Here is an example of registering a service using\\n * {@link auto.$provide#service $provide.service(class)}.\\n * ```js\\n *   var Ping = function($http) {\\n *     this.$http = $http;\\n *   };\\n *\\n *   Ping.$inject = ['$http'];\\n *\\n *   Ping.prototype.send = function() {\\n *     return this.$http.get('/ping');\\n *   };\\n *   $provide.service('ping', Ping);\\n * ```\\n * You would then inject and use this service like this:\\n * ```js\\n *   someModule.controller('Ctrl', ['ping', function(ping) {\\n *     ping.send();\\n *   }]);\\n * ```\\n */\\n\\n\\n/**\\n * @ngdoc method\\n * @name $provide#value\\n * @description\\n *\\n * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\\n * number, an array, an object or a function.  This is short for registering a service where its\\n * provider's `$get` property is a factory function that takes no arguments and returns the **value\\n * service**.\\n *\\n * Value services are similar to constant services, except that they cannot be injected into a\\n * module configuration function (see {@link angular.Module#config}) but they can be overridden by\\n * an Angular\\n * {@link auto.$provide#decorator decorator}.\\n *\\n * @param {string} name The name of the instance.\\n * @param {*} value The value.\\n * @returns {Object} registered provider instance\\n *\\n * @example\\n * Here are some examples of creating value services.\\n * ```js\\n *   $provide.value('ADMIN_USER', 'admin');\\n *\\n *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\\n *\\n *   $provide.value('halfOf', function(value) {\\n *     return value / 2;\\n *   });\\n * ```\\n */\\n\\n\\n/**\\n * @ngdoc method\\n * @name $provide#constant\\n * @description\\n *\\n * Register a **constant service**, such as a string, a number, an array, an object or a function,\\n * with the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\\n * injected into a module configuration function (see {@link angular.Module#config}) and it cannot\\n * be overridden by an Angular {@link auto.$provide#decorator decorator}.\\n *\\n * @param {string} name The name of the constant.\\n * @param {*} value The constant value.\\n * @returns {Object} registered instance\\n *\\n * @example\\n * Here a some examples of creating constants:\\n * ```js\\n *   $provide.constant('SHARD_HEIGHT', 306);\\n *\\n *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\\n *\\n *   $provide.constant('double', function(value) {\\n *     return value * 2;\\n *   });\\n * ```\\n */\\n\\n\\n/**\\n * @ngdoc method\\n * @name $provide#decorator\\n * @description\\n *\\n * Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator\\n * intercepts the creation of a service, allowing it to override or modify the behaviour of the\\n * service. The object returned by the decorator may be the original service, or a new service\\n * object which replaces or wraps and delegates to the original service.\\n *\\n * @param {string} name The name of the service to decorate.\\n * @param {function()} decorator This function will be invoked when the service needs to be\\n *    instantiated and should return the decorated service instance. The function is called using\\n *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\\n *    Local injection arguments:\\n *\\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\\n *      decorated or delegated to.\\n *\\n * @example\\n * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\\n * calls to {@link ng.$log#error $log.warn()}.\\n * ```js\\n *   $provide.decorator('$log', ['$delegate', function($delegate) {\\n *     $delegate.warn = $delegate.error;\\n *     return $delegate;\\n *   }]);\\n * ```\\n */\\n\\n\\nfunction createInjector(modulesToLoad, strictDi) {\\n  strictDi = (strictDi === true);\\n  var INSTANTIATING = {},\\n      providerSuffix = 'Provider',\\n      path = [],\\n      loadedModules = new HashMap([], true),\\n      providerCache = {\\n        $provide: {\\n            provider: supportObject(provider),\\n            factory: supportObject(factory),\\n            service: supportObject(service),\\n            value: supportObject(value),\\n            constant: supportObject(constant),\\n            decorator: decorator\\n          }\\n      },\\n      providerInjector = (providerCache.$injector =\\n          createInternalInjector(providerCache, function(serviceName, caller) {\\n            if (angular.isString(caller)) {\\n              path.push(caller);\\n            }\\n            throw $injectorMinErr('unpr', \\\"Unknown provider: {0}\\\", path.join(' <- '));\\n          })),\\n      instanceCache = {},\\n      instanceInjector = (instanceCache.$injector =\\n          createInternalInjector(instanceCache, function(serviceName, caller) {\\n            var provider = providerInjector.get(serviceName + providerSuffix, caller);\\n            return instanceInjector.invoke(provider.$get, provider, undefined, serviceName);\\n          }));\\n\\n\\n  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\\n\\n  return instanceInjector;\\n\\n  ////////////////////////////////////\\n  // $provider\\n  ////////////////////////////////////\\n\\n  function supportObject(delegate) {\\n    return function(key, value) {\\n      if (isObject(key)) {\\n        forEach(key, reverseParams(delegate));\\n      } else {\\n        return delegate(key, value);\\n      }\\n    };\\n  }\\n\\n  function provider(name, provider_) {\\n    assertNotHasOwnProperty(name, 'service');\\n    if (isFunction(provider_) || isArray(provider_)) {\\n      provider_ = providerInjector.instantiate(provider_);\\n    }\\n    if (!provider_.$get) {\\n      throw $injectorMinErr('pget', \\\"Provider '{0}' must define $get factory method.\\\", name);\\n    }\\n    return providerCache[name + providerSuffix] = provider_;\\n  }\\n\\n  function enforceReturnValue(name, factory) {\\n    return function enforcedReturnValue() {\\n      var result = instanceInjector.invoke(factory, this);\\n      if (isUndefined(result)) {\\n        throw $injectorMinErr('undef', \\\"Provider '{0}' must return a value from $get factory method.\\\", name);\\n      }\\n      return result;\\n    };\\n  }\\n\\n  function factory(name, factoryFn, enforce) {\\n    return provider(name, {\\n      $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn\\n    });\\n  }\\n\\n  function service(name, constructor) {\\n    return factory(name, ['$injector', function($injector) {\\n      return $injector.instantiate(constructor);\\n    }]);\\n  }\\n\\n  function value(name, val) { return factory(name, valueFn(val), false); }\\n\\n  function constant(name, value) {\\n    assertNotHasOwnProperty(name, 'constant');\\n    providerCache[name] = value;\\n    instanceCache[name] = value;\\n  }\\n\\n  function decorator(serviceName, decorFn) {\\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\\n        orig$get = origProvider.$get;\\n\\n    origProvider.$get = function() {\\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\\n    };\\n  }\\n\\n  ////////////////////////////////////\\n  // Module Loading\\n  ////////////////////////////////////\\n  function loadModules(modulesToLoad) {\\n    var runBlocks = [], moduleFn;\\n    forEach(modulesToLoad, function(module) {\\n      if (loadedModules.get(module)) return;\\n      loadedModules.put(module, true);\\n\\n      function runInvokeQueue(queue) {\\n        var i, ii;\\n        for (i = 0, ii = queue.length; i < ii; i++) {\\n          var invokeArgs = queue[i],\\n              provider = providerInjector.get(invokeArgs[0]);\\n\\n          provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\\n        }\\n      }\\n\\n      try {\\n        if (isString(module)) {\\n          moduleFn = angularModule(module);\\n          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\\n          runInvokeQueue(moduleFn._invokeQueue);\\n          runInvokeQueue(moduleFn._configBlocks);\\n        } else if (isFunction(module)) {\\n            runBlocks.push(providerInjector.invoke(module));\\n        } else if (isArray(module)) {\\n            runBlocks.push(providerInjector.invoke(module));\\n        } else {\\n          assertArgFn(module, 'module');\\n        }\\n      } catch (e) {\\n        if (isArray(module)) {\\n          module = module[module.length - 1];\\n        }\\n        if (e.message && e.stack && e.stack.indexOf(e.message) == -1) {\\n          // Safari & FF's stack traces don't contain error.message content\\n          // unlike those of Chrome and IE\\n          // So if stack doesn't contain message, we create a new string that contains both.\\n          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.\\n          /* jshint -W022 */\\n          e = e.message + '\\\\n' + e.stack;\\n        }\\n        throw $injectorMinErr('modulerr', \\\"Failed to instantiate module {0} due to:\\\\n{1}\\\",\\n                  module, e.stack || e.message || e);\\n      }\\n    });\\n    return runBlocks;\\n  }\\n\\n  ////////////////////////////////////\\n  // internal Injector\\n  ////////////////////////////////////\\n\\n  function createInternalInjector(cache, factory) {\\n\\n    function getService(serviceName, caller) {\\n      if (cache.hasOwnProperty(serviceName)) {\\n        if (cache[serviceName] === INSTANTIATING) {\\n          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',\\n                    serviceName + ' <- ' + path.join(' <- '));\\n        }\\n        return cache[serviceName];\\n      } else {\\n        try {\\n          path.unshift(serviceName);\\n          cache[serviceName] = INSTANTIATING;\\n          return cache[serviceName] = factory(serviceName, caller);\\n        } catch (err) {\\n          if (cache[serviceName] === INSTANTIATING) {\\n            delete cache[serviceName];\\n          }\\n          throw err;\\n        } finally {\\n          path.shift();\\n        }\\n      }\\n    }\\n\\n    function invoke(fn, self, locals, serviceName) {\\n      if (typeof locals === 'string') {\\n        serviceName = locals;\\n        locals = null;\\n      }\\n\\n      var args = [],\\n          $inject = annotate(fn, strictDi, serviceName),\\n          length, i,\\n          key;\\n\\n      for (i = 0, length = $inject.length; i < length; i++) {\\n        key = $inject[i];\\n        if (typeof key !== 'string') {\\n          throw $injectorMinErr('itkn',\\n                  'Incorrect injection token! Expected service name as string, got {0}', key);\\n        }\\n        args.push(\\n          locals && locals.hasOwnProperty(key)\\n          ? locals[key]\\n          : getService(key, serviceName)\\n        );\\n      }\\n      if (isArray(fn)) {\\n        fn = fn[length];\\n      }\\n\\n      // http://jsperf.com/angularjs-invoke-apply-vs-switch\\n      // #5388\\n      return fn.apply(self, args);\\n    }\\n\\n    function instantiate(Type, locals, serviceName) {\\n      // Check if Type is annotated and use just the given function at n-1 as parameter\\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\\n      // Object creation: http://jsperf.com/create-constructor/2\\n      var instance = Object.create((isArray(Type) ? Type[Type.length - 1] : Type).prototype || null);\\n      var returnedValue = invoke(Type, instance, locals, serviceName);\\n\\n      return isObject(returnedValue) || isFunction(returnedValue) ? returnedValue : instance;\\n    }\\n\\n    return {\\n      invoke: invoke,\\n      instantiate: instantiate,\\n      get: getService,\\n      annotate: annotate,\\n      has: function(name) {\\n        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\\n      }\\n    };\\n  }\\n}\\n\\ncreateInjector.$$annotate = annotate;\\n\\n/**\\n * @ngdoc provider\\n * @name $anchorScrollProvider\\n *\\n * @description\\n * Use `$anchorScrollProvider` to disable automatic scrolling whenever\\n * {@link ng.$location#hash $location.hash()} changes.\\n */\\nfunction $AnchorScrollProvider() {\\n\\n  var autoScrollingEnabled = true;\\n\\n  /**\\n   * @ngdoc method\\n   * @name $anchorScrollProvider#disableAutoScrolling\\n   *\\n   * @description\\n   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\\n   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\\n   * Use this method to disable automatic scrolling.\\n   *\\n   * If automatic scrolling is disabled, one must explicitly call\\n   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\\n   * current hash.\\n   */\\n  this.disableAutoScrolling = function() {\\n    autoScrollingEnabled = false;\\n  };\\n\\n  /**\\n   * @ngdoc service\\n   * @name $anchorScroll\\n   * @kind function\\n   * @requires $window\\n   * @requires $location\\n   * @requires $rootScope\\n   *\\n   * @description\\n   * When called, it checks the current value of {@link ng.$location#hash $location.hash()} and\\n   * scrolls to the related element, according to the rules specified in the\\n   * [Html5 spec](http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document).\\n   *\\n   * It also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to\\n   * match any anchor whenever it changes. This can be disabled by calling\\n   * {@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.\\n   *\\n   * Additionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a\\n   * vertical scroll-offset (either fixed or dynamic).\\n   *\\n   * @property {(number|function|jqLite)} yOffset\\n   * If set, specifies a vertical scroll-offset. This is often useful when there are fixed\\n   * positioned elements at the top of the page, such as navbars, headers etc.\\n   *\\n   * `yOffset` can be specified in various ways:\\n   * - **number**: A fixed number of pixels to be used as offset.<br /><br />\\n   * - **function**: A getter function called everytime `$anchorScroll()` is executed. Must return\\n   *   a number representing the offset (in pixels).<br /><br />\\n   * - **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from\\n   *   the top of the page to the element's bottom will be used as offset.<br />\\n   *   **Note**: The element will be taken into account only as long as its `position` is set to\\n   *   `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust\\n   *   their height and/or positioning according to the viewport's size.\\n   *\\n   * <br />\\n   * <div class=\\\"alert alert-warning\\\">\\n   * In order for `yOffset` to work properly, scrolling should take place on the document's root and\\n   * not some child element.\\n   * </div>\\n   *\\n   * @example\\n     <example module=\\\"anchorScrollExample\\\">\\n       <file name=\\\"index.html\\\">\\n         <div id=\\\"scrollArea\\\" ng-controller=\\\"ScrollController\\\">\\n           <a ng-click=\\\"gotoBottom()\\\">Go to bottom</a>\\n           <a id=\\\"bottom\\\"></a> You're at the bottom!\\n         </div>\\n       </file>\\n       <file name=\\\"script.js\\\">\\n         angular.module('anchorScrollExample', [])\\n           .controller('ScrollController', ['$scope', '$location', '$anchorScroll',\\n             function ($scope, $location, $anchorScroll) {\\n               $scope.gotoBottom = function() {\\n                 // set the location.hash to the id of\\n                 // the element you wish to scroll to.\\n                 $location.hash('bottom');\\n\\n                 // call $anchorScroll()\\n                 $anchorScroll();\\n               };\\n             }]);\\n       </file>\\n       <file name=\\\"style.css\\\">\\n         #scrollArea {\\n           height: 280px;\\n           overflow: auto;\\n         }\\n\\n         #bottom {\\n           display: block;\\n           margin-top: 2000px;\\n         }\\n       </file>\\n     </example>\\n   *\\n   * <hr />\\n   * The example below illustrates the use of a vertical scroll-offset (specified as a fixed value).\\n   * See {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.\\n   *\\n   * @example\\n     <example module=\\\"anchorScrollOffsetExample\\\">\\n       <file name=\\\"index.html\\\">\\n         <div class=\\\"fixed-header\\\" ng-controller=\\\"headerCtrl\\\">\\n           <a href=\\\"\\\" ng-click=\\\"gotoAnchor(x)\\\" ng-repeat=\\\"x in [1,2,3,4,5]\\\">\\n             Go to anchor {{x}}\\n           </a>\\n         </div>\\n         <div id=\\\"anchor{{x}}\\\" class=\\\"anchor\\\" ng-repeat=\\\"x in [1,2,3,4,5]\\\">\\n           Anchor {{x}} of 5\\n         </div>\\n       </file>\\n       <file name=\\\"script.js\\\">\\n         angular.module('anchorScrollOffsetExample', [])\\n           .run(['$anchorScroll', function($anchorScroll) {\\n             $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels\\n           }])\\n           .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',\\n             function ($anchorScroll, $location, $scope) {\\n               $scope.gotoAnchor = function(x) {\\n                 var newHash = 'anchor' + x;\\n                 if ($location.hash() !== newHash) {\\n                   // set the $location.hash to `newHash` and\\n                   // $anchorScroll will automatically scroll to it\\n                   $location.hash('anchor' + x);\\n                 } else {\\n                   // call $anchorScroll() explicitly,\\n                   // since $location.hash hasn't changed\\n                   $anchorScroll();\\n                 }\\n               };\\n             }\\n           ]);\\n       </file>\\n       <file name=\\\"style.css\\\">\\n         body {\\n           padding-top: 50px;\\n         }\\n\\n         .anchor {\\n           border: 2px dashed DarkOrchid;\\n           padding: 10px 10px 200px 10px;\\n         }\\n\\n         .fixed-header {\\n           background-color: rgba(0, 0, 0, 0.2);\\n           height: 50px;\\n           position: fixed;\\n           top: 0; left: 0; right: 0;\\n         }\\n\\n         .fixed-header > a {\\n           display: inline-block;\\n           margin: 5px 15px;\\n         }\\n       </file>\\n     </example>\\n   */\\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\\n    var document = $window.document;\\n\\n    // Helper function to get first anchor from a NodeList\\n    // (using `Array#some()` instead of `angular#forEach()` since it's more performant\\n    //  and working in all supported browsers.)\\n    function getFirstAnchor(list) {\\n      var result = null;\\n      Array.prototype.some.call(list, function(element) {\\n        if (nodeName_(element) === 'a') {\\n          result = element;\\n          return true;\\n        }\\n      });\\n      return result;\\n    }\\n\\n    function getYOffset() {\\n\\n      var offset = scroll.yOffset;\\n\\n      if (isFunction(offset)) {\\n        offset = offset();\\n      } else if (isElement(offset)) {\\n        var elem = offset[0];\\n        var style = $window.getComputedStyle(elem);\\n        if (style.position !== 'fixed') {\\n          offset = 0;\\n        } else {\\n          offset = elem.getBoundingClientRect().bottom;\\n        }\\n      } else if (!isNumber(offset)) {\\n        offset = 0;\\n      }\\n\\n      return offset;\\n    }\\n\\n    function scrollTo(elem) {\\n      if (elem) {\\n        elem.scrollIntoView();\\n\\n        var offset = getYOffset();\\n\\n        if (offset) {\\n          // `offset` is the number of pixels we should scroll UP in order to align `elem` properly.\\n          // This is true ONLY if the call to `elem.scrollIntoView()` initially aligns `elem` at the\\n          // top of the viewport.\\n          //\\n          // IF the number of pixels from the top of `elem` to the end of the page's content is less\\n          // than the height of the viewport, then `elem.scrollIntoView()` will align the `elem` some\\n          // way down the page.\\n          //\\n          // This is often the case for elements near the bottom of the page.\\n          //\\n          // In such cases we do not need to scroll the whole `offset` up, just the difference between\\n          // the top of the element and the offset, which is enough to align the top of `elem` at the\\n          // desired position.\\n          var elemTop = elem.getBoundingClientRect().top;\\n          $window.scrollBy(0, elemTop - offset);\\n        }\\n      } else {\\n        $window.scrollTo(0, 0);\\n      }\\n    }\\n\\n    function scroll() {\\n      var hash = $location.hash(), elm;\\n\\n      // empty hash, scroll to the top of the page\\n      if (!hash) scrollTo(null);\\n\\n      // element with given id\\n      else if ((elm = document.getElementById(hash))) scrollTo(elm);\\n\\n      // first anchor with given name :-D\\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) scrollTo(elm);\\n\\n      // no element and hash == 'top', scroll to the top of the page\\n      else if (hash === 'top') scrollTo(null);\\n    }\\n\\n    // does not scroll when user clicks on anchor link that is currently on\\n    // (no url change, no $location.hash() change), browser native does scroll\\n    if (autoScrollingEnabled) {\\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\\n        function autoScrollWatchAction(newVal, oldVal) {\\n          // skip the initial scroll if $location.hash is empty\\n          if (newVal === oldVal && newVal === '') return;\\n\\n          jqLiteDocumentLoaded(function() {\\n            $rootScope.$evalAsync(scroll);\\n          });\\n        });\\n    }\\n\\n    return scroll;\\n  }];\\n}\\n\\nvar $animateMinErr = minErr('$animate');\\n\\n/**\\n * @ngdoc provider\\n * @name $animateProvider\\n *\\n * @description\\n * Default implementation of $animate that doesn't perform any animations, instead just\\n * synchronously performs DOM\\n * updates and calls done() callbacks.\\n *\\n * In order to enable animations the ngAnimate module has to be loaded.\\n *\\n * To see the functional implementation check out src/ngAnimate/animate.js\\n */\\nvar $AnimateProvider = ['$provide', function($provide) {\\n\\n\\n  this.$$selectors = {};\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name $animateProvider#register\\n   *\\n   * @description\\n   * Registers a new injectable animation factory function. The factory function produces the\\n   * animation object which contains callback functions for each event that is expected to be\\n   * animated.\\n   *\\n   *   * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`\\n   *   must be called once the element animation is complete. If a function is returned then the\\n   *   animation service will use this function to cancel the animation whenever a cancel event is\\n   *   triggered.\\n   *\\n   *\\n   * ```js\\n   *   return {\\n     *     eventFn : function(element, done) {\\n     *       //code to run the animation\\n     *       //once complete, then run done()\\n     *       return function cancellationFunction() {\\n     *         //code to cancel the animation\\n     *       }\\n     *     }\\n     *   }\\n   * ```\\n   *\\n   * @param {string} name The name of the animation.\\n   * @param {Function} factory The factory function that will be executed to return the animation\\n   *                           object.\\n   */\\n  this.register = function(name, factory) {\\n    var key = name + '-animation';\\n    if (name && name.charAt(0) != '.') throw $animateMinErr('notcsel',\\n        \\\"Expecting class selector starting with '.' got '{0}'.\\\", name);\\n    this.$$selectors[name.substr(1)] = key;\\n    $provide.factory(key, factory);\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $animateProvider#classNameFilter\\n   *\\n   * @description\\n   * Sets and/or returns the CSS class regular expression that is checked when performing\\n   * an animation. Upon bootstrap the classNameFilter value is not set at all and will\\n   * therefore enable $animate to attempt to perform an animation on any element.\\n   * When setting the classNameFilter value, animations will only be performed on elements\\n   * that successfully match the filter expression. This in turn can boost performance\\n   * for low-powered devices as well as applications containing a lot of structural operations.\\n   * @param {RegExp=} expression The className expression which will be checked against all animations\\n   * @return {RegExp} The current CSS className expression value. If null then there is no expression value\\n   */\\n  this.classNameFilter = function(expression) {\\n    if (arguments.length === 1) {\\n      this.$$classNameFilter = (expression instanceof RegExp) ? expression : null;\\n    }\\n    return this.$$classNameFilter;\\n  };\\n\\n  this.$get = ['$$q', '$$asyncCallback', '$rootScope', function($$q, $$asyncCallback, $rootScope) {\\n\\n    var currentDefer;\\n\\n    function runAnimationPostDigest(fn) {\\n      var cancelFn, defer = $$q.defer();\\n      defer.promise.$$cancelFn = function ngAnimateMaybeCancel() {\\n        cancelFn && cancelFn();\\n      };\\n\\n      $rootScope.$$postDigest(function ngAnimatePostDigest() {\\n        cancelFn = fn(function ngAnimateNotifyComplete() {\\n          defer.resolve();\\n        });\\n      });\\n\\n      return defer.promise;\\n    }\\n\\n    function resolveElementClasses(element, classes) {\\n      var toAdd = [], toRemove = [];\\n\\n      var hasClasses = createMap();\\n      forEach((element.attr('class') || '').split(/\\\\s+/), function(className) {\\n        hasClasses[className] = true;\\n      });\\n\\n      forEach(classes, function(status, className) {\\n        var hasClass = hasClasses[className];\\n\\n        // If the most recent class manipulation (via $animate) was to remove the class, and the\\n        // element currently has the class, the class is scheduled for removal. Otherwise, if\\n        // the most recent class manipulation (via $animate) was to add the class, and the\\n        // element does not currently have the class, the class is scheduled to be added.\\n        if (status === false && hasClass) {\\n          toRemove.push(className);\\n        } else if (status === true && !hasClass) {\\n          toAdd.push(className);\\n        }\\n      });\\n\\n      return (toAdd.length + toRemove.length) > 0 &&\\n        [toAdd.length ? toAdd : null, toRemove.length ? toRemove : null];\\n    }\\n\\n    function cachedClassManipulation(cache, classes, op) {\\n      for (var i=0, ii = classes.length; i < ii; ++i) {\\n        var className = classes[i];\\n        cache[className] = op;\\n      }\\n    }\\n\\n    function asyncPromise() {\\n      // only serve one instance of a promise in order to save CPU cycles\\n      if (!currentDefer) {\\n        currentDefer = $$q.defer();\\n        $$asyncCallback(function() {\\n          currentDefer.resolve();\\n          currentDefer = null;\\n        });\\n      }\\n      return currentDefer.promise;\\n    }\\n\\n    function applyStyles(element, options) {\\n      if (angular.isObject(options)) {\\n        var styles = extend(options.from || {}, options.to || {});\\n        element.css(styles);\\n      }\\n    }\\n\\n    /**\\n     *\\n     * @ngdoc service\\n     * @name $animate\\n     * @description The $animate service provides rudimentary DOM manipulation functions to\\n     * insert, remove and move elements within the DOM, as well as adding and removing classes.\\n     * This service is the core service used by the ngAnimate $animator service which provides\\n     * high-level animation hooks for CSS and JavaScript.\\n     *\\n     * $animate is available in the AngularJS core, however, the ngAnimate module must be included\\n     * to enable full out animation support. Otherwise, $animate will only perform simple DOM\\n     * manipulation operations.\\n     *\\n     * To learn more about enabling animation support, click here to visit the {@link ngAnimate\\n     * ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service\\n     * page}.\\n     */\\n    return {\\n      animate: function(element, from, to) {\\n        applyStyles(element, { from: from, to: to });\\n        return asyncPromise();\\n      },\\n\\n      /**\\n       *\\n       * @ngdoc method\\n       * @name $animate#enter\\n       * @kind function\\n       * @description Inserts the element into the DOM either after the `after` element or\\n       * as the first child within the `parent` element. When the function is called a promise\\n       * is returned that will be resolved at a later time.\\n       * @param {DOMElement} element the element which will be inserted into the DOM\\n       * @param {DOMElement} parent the parent element which will append the element as\\n       *   a child (if the after element is not present)\\n       * @param {DOMElement} after the sibling element which will append the element\\n       *   after itself\\n       * @param {object=} options an optional collection of styles that will be applied to the element.\\n       * @return {Promise} the animation callback promise\\n       */\\n      enter: function(element, parent, after, options) {\\n        applyStyles(element, options);\\n        after ? after.after(element)\\n              : parent.prepend(element);\\n        return asyncPromise();\\n      },\\n\\n      /**\\n       *\\n       * @ngdoc method\\n       * @name $animate#leave\\n       * @kind function\\n       * @description Removes the element from the DOM. When the function is called a promise\\n       * is returned that will be resolved at a later time.\\n       * @param {DOMElement} element the element which will be removed from the DOM\\n       * @param {object=} options an optional collection of options that will be applied to the element.\\n       * @return {Promise} the animation callback promise\\n       */\\n      leave: function(element, options) {\\n        element.remove();\\n        return asyncPromise();\\n      },\\n\\n      /**\\n       *\\n       * @ngdoc method\\n       * @name $animate#move\\n       * @kind function\\n       * @description Moves the position of the provided element within the DOM to be placed\\n       * either after the `after` element or inside of the `parent` element. When the function\\n       * is called a promise is returned that will be resolved at a later time.\\n       *\\n       * @param {DOMElement} element the element which will be moved around within the\\n       *   DOM\\n       * @param {DOMElement} parent the parent element where the element will be\\n       *   inserted into (if the after element is not present)\\n       * @param {DOMElement} after the sibling element where the element will be\\n       *   positioned next to\\n       * @param {object=} options an optional collection of options that will be applied to the element.\\n       * @return {Promise} the animation callback promise\\n       */\\n      move: function(element, parent, after, options) {\\n        // Do not remove element before insert. Removing will cause data associated with the\\n        // element to be dropped. Insert will implicitly do the remove.\\n        return this.enter(element, parent, after, options);\\n      },\\n\\n      /**\\n       *\\n       * @ngdoc method\\n       * @name $animate#addClass\\n       * @kind function\\n       * @description Adds the provided className CSS class value to the provided element.\\n       * When the function is called a promise is returned that will be resolved at a later time.\\n       * @param {DOMElement} element the element which will have the className value\\n       *   added to it\\n       * @param {string} className the CSS class which will be added to the element\\n       * @param {object=} options an optional collection of options that will be applied to the element.\\n       * @return {Promise} the animation callback promise\\n       */\\n      addClass: function(element, className, options) {\\n        return this.setClass(element, className, [], options);\\n      },\\n\\n      $$addClassImmediately: function(element, className, options) {\\n        element = jqLite(element);\\n        className = !isString(className)\\n                        ? (isArray(className) ? className.join(' ') : '')\\n                        : className;\\n        forEach(element, function(element) {\\n          jqLiteAddClass(element, className);\\n        });\\n        applyStyles(element, options);\\n        return asyncPromise();\\n      },\\n\\n      /**\\n       *\\n       * @ngdoc method\\n       * @name $animate#removeClass\\n       * @kind function\\n       * @description Removes the provided className CSS class value from the provided element.\\n       * When the function is called a promise is returned that will be resolved at a later time.\\n       * @param {DOMElement} element the element which will have the className value\\n       *   removed from it\\n       * @param {string} className the CSS class which will be removed from the element\\n       * @param {object=} options an optional collection of options that will be applied to the element.\\n       * @return {Promise} the animation callback promise\\n       */\\n      removeClass: function(element, className, options) {\\n        return this.setClass(element, [], className, options);\\n      },\\n\\n      $$removeClassImmediately: function(element, className, options) {\\n        element = jqLite(element);\\n        className = !isString(className)\\n                        ? (isArray(className) ? className.join(' ') : '')\\n                        : className;\\n        forEach(element, function(element) {\\n          jqLiteRemoveClass(element, className);\\n        });\\n        applyStyles(element, options);\\n        return asyncPromise();\\n      },\\n\\n      /**\\n       *\\n       * @ngdoc method\\n       * @name $animate#setClass\\n       * @kind function\\n       * @description Adds and/or removes the given CSS classes to and from the element.\\n       * When the function is called a promise is returned that will be resolved at a later time.\\n       * @param {DOMElement} element the element which will have its CSS classes changed\\n       *   removed from it\\n       * @param {string} add the CSS classes which will be added to the element\\n       * @param {string} remove the CSS class which will be removed from the element\\n       * @param {object=} options an optional collection of options that will be applied to the element.\\n       * @return {Promise} the animation callback promise\\n       */\\n      setClass: function(element, add, remove, options) {\\n        var self = this;\\n        var STORAGE_KEY = '$$animateClasses';\\n        var createdCache = false;\\n        element = jqLite(element);\\n\\n        var cache = element.data(STORAGE_KEY);\\n        if (!cache) {\\n          cache = {\\n            classes: {},\\n            options: options\\n          };\\n          createdCache = true;\\n        } else if (options && cache.options) {\\n          cache.options = angular.extend(cache.options || {}, options);\\n        }\\n\\n        var classes = cache.classes;\\n\\n        add = isArray(add) ? add : add.split(' ');\\n        remove = isArray(remove) ? remove : remove.split(' ');\\n        cachedClassManipulation(classes, add, true);\\n        cachedClassManipulation(classes, remove, false);\\n\\n        if (createdCache) {\\n          cache.promise = runAnimationPostDigest(function(done) {\\n            var cache = element.data(STORAGE_KEY);\\n            element.removeData(STORAGE_KEY);\\n\\n            // in the event that the element is removed before postDigest\\n            // is run then the cache will be undefined and there will be\\n            // no need anymore to add or remove and of the element classes\\n            if (cache) {\\n              var classes = resolveElementClasses(element, cache.classes);\\n              if (classes) {\\n                self.$$setClassImmediately(element, classes[0], classes[1], cache.options);\\n              }\\n            }\\n\\n            done();\\n          });\\n          element.data(STORAGE_KEY, cache);\\n        }\\n\\n        return cache.promise;\\n      },\\n\\n      $$setClassImmediately: function(element, add, remove, options) {\\n        add && this.$$addClassImmediately(element, add);\\n        remove && this.$$removeClassImmediately(element, remove);\\n        applyStyles(element, options);\\n        return asyncPromise();\\n      },\\n\\n      enabled: noop,\\n      cancel: noop\\n    };\\n  }];\\n}];\\n\\nfunction $$AsyncCallbackProvider() {\\n  this.$get = ['$$rAF', '$timeout', function($$rAF, $timeout) {\\n    return $$rAF.supported\\n      ? function(fn) { return $$rAF(fn); }\\n      : function(fn) {\\n        return $timeout(fn, 0, false);\\n      };\\n  }];\\n}\\n\\n/* global stripHash: true */\\n\\n/**\\n * ! This is a private undocumented service !\\n *\\n * @name $browser\\n * @requires $log\\n * @description\\n * This object has two goals:\\n *\\n * - hide all the global state in the browser caused by the window object\\n * - abstract away all the browser specific features and inconsistencies\\n *\\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\\n * service, which can be used for convenient testing of the application without the interaction with\\n * the real browser apis.\\n */\\n/**\\n * @param {object} window The global window object.\\n * @param {object} document jQuery wrapped document.\\n * @param {object} $log window.console or an object with the same interface.\\n * @param {object} $sniffer $sniffer service\\n */\\nfunction Browser(window, document, $log, $sniffer) {\\n  var self = this,\\n      rawDocument = document[0],\\n      location = window.location,\\n      history = window.history,\\n      setTimeout = window.setTimeout,\\n      clearTimeout = window.clearTimeout,\\n      pendingDeferIds = {};\\n\\n  self.isMock = false;\\n\\n  var outstandingRequestCount = 0;\\n  var outstandingRequestCallbacks = [];\\n\\n  // TODO(vojta): remove this temporary api\\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\\n\\n  /**\\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\\n   */\\n  function completeOutstandingRequest(fn) {\\n    try {\\n      fn.apply(null, sliceArgs(arguments, 1));\\n    } finally {\\n      outstandingRequestCount--;\\n      if (outstandingRequestCount === 0) {\\n        while (outstandingRequestCallbacks.length) {\\n          try {\\n            outstandingRequestCallbacks.pop()();\\n          } catch (e) {\\n            $log.error(e);\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  function getHash(url) {\\n    var index = url.indexOf('#');\\n    return index === -1 ? '' : url.substr(index + 1);\\n  }\\n\\n  /**\\n   * @private\\n   * Note: this method is used only by scenario runner\\n   * TODO(vojta): prefix this method with $$ ?\\n   * @param {function()} callback Function that will be called when no outstanding request\\n   */\\n  self.notifyWhenNoOutstandingRequests = function(callback) {\\n    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\\n    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\\n    // regular poller would result in flaky tests.\\n    forEach(pollFns, function(pollFn) { pollFn(); });\\n\\n    if (outstandingRequestCount === 0) {\\n      callback();\\n    } else {\\n      outstandingRequestCallbacks.push(callback);\\n    }\\n  };\\n\\n  //////////////////////////////////////////////////////////////\\n  // Poll Watcher API\\n  //////////////////////////////////////////////////////////////\\n  var pollFns = [],\\n      pollTimeout;\\n\\n  /**\\n   * @name $browser#addPollFn\\n   *\\n   * @param {function()} fn Poll function to add\\n   *\\n   * @description\\n   * Adds a function to the list of functions that poller periodically executes,\\n   * and starts polling if not started yet.\\n   *\\n   * @returns {function()} the added function\\n   */\\n  self.addPollFn = function(fn) {\\n    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\\n    pollFns.push(fn);\\n    return fn;\\n  };\\n\\n  /**\\n   * @param {number} interval How often should browser call poll functions (ms)\\n   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\\n   *\\n   * @description\\n   * Configures the poller to run in the specified intervals, using the specified\\n   * setTimeout fn and kicks it off.\\n   */\\n  function startPoller(interval, setTimeout) {\\n    (function check() {\\n      forEach(pollFns, function(pollFn) { pollFn(); });\\n      pollTimeout = setTimeout(check, interval);\\n    })();\\n  }\\n\\n  //////////////////////////////////////////////////////////////\\n  // URL API\\n  //////////////////////////////////////////////////////////////\\n\\n  var cachedState, lastHistoryState,\\n      lastBrowserUrl = location.href,\\n      baseElement = document.find('base'),\\n      reloadLocation = null;\\n\\n  cacheState();\\n  lastHistoryState = cachedState;\\n\\n  /**\\n   * @name $browser#url\\n   *\\n   * @description\\n   * GETTER:\\n   * Without any argument, this method just returns current value of location.href.\\n   *\\n   * SETTER:\\n   * With at least one argument, this method sets url to new value.\\n   * If html5 history api supported, pushState/replaceState is used, otherwise\\n   * location.href/location.replace is used.\\n   * Returns its own instance to allow chaining\\n   *\\n   * NOTE: this api is intended for use only by the $location service. Please use the\\n   * {@link ng.$location $location service} to change url.\\n   *\\n   * @param {string} url New url (when used as setter)\\n   * @param {boolean=} replace Should new url replace current history record?\\n   * @param {object=} state object to use with pushState/replaceState\\n   */\\n  self.url = function(url, replace, state) {\\n    // In modern browsers `history.state` is `null` by default; treating it separately\\n    // from `undefined` would cause `$browser.url('/foo')` to change `history.state`\\n    // to undefined via `pushState`. Instead, let's change `undefined` to `null` here.\\n    if (isUndefined(state)) {\\n      state = null;\\n    }\\n\\n    // Android Browser BFCache causes location, history reference to become stale.\\n    if (location !== window.location) location = window.location;\\n    if (history !== window.history) history = window.history;\\n\\n    // setter\\n    if (url) {\\n      var sameState = lastHistoryState === state;\\n\\n      // Don't change anything if previous and current URLs and states match. This also prevents\\n      // IE<10 from getting into redirect loop when in LocationHashbangInHtml5Url mode.\\n      // See https://github.com/angular/angular.js/commit/ffb2701\\n      if (lastBrowserUrl === url && (!$sniffer.history || sameState)) {\\n        return self;\\n      }\\n      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);\\n      lastBrowserUrl = url;\\n      lastHistoryState = state;\\n      // Don't use history API if only the hash changed\\n      // due to a bug in IE10/IE11 which leads\\n      // to not firing a `hashchange` nor `popstate` event\\n      // in some cases (see #9143).\\n      if ($sniffer.history && (!sameBase || !sameState)) {\\n        history[replace ? 'replaceState' : 'pushState'](state, '', url);\\n        cacheState();\\n        // Do the assignment again so that those two variables are referentially identical.\\n        lastHistoryState = cachedState;\\n      } else {\\n        if (!sameBase) {\\n          reloadLocation = url;\\n        }\\n        if (replace) {\\n          location.replace(url);\\n        } else if (!sameBase) {\\n          location.href = url;\\n        } else {\\n          location.hash = getHash(url);\\n        }\\n      }\\n      return self;\\n    // getter\\n    } else {\\n      // - reloadLocation is needed as browsers don't allow to read out\\n      //   the new location.href if a reload happened.\\n      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\\n      return reloadLocation || location.href.replace(/%27/g,\\\"'\\\");\\n    }\\n  };\\n\\n  /**\\n   * @name $browser#state\\n   *\\n   * @description\\n   * This method is a getter.\\n   *\\n   * Return history.state or null if history.state is undefined.\\n   *\\n   * @returns {object} state\\n   */\\n  self.state = function() {\\n    return cachedState;\\n  };\\n\\n  var urlChangeListeners = [],\\n      urlChangeInit = false;\\n\\n  function cacheStateAndFireUrlChange() {\\n    cacheState();\\n    fireUrlChange();\\n  }\\n\\n  // This variable should be used *only* inside the cacheState function.\\n  var lastCachedState = null;\\n  function cacheState() {\\n    // This should be the only place in $browser where `history.state` is read.\\n    cachedState = window.history.state;\\n    cachedState = isUndefined(cachedState) ? null : cachedState;\\n\\n    // Prevent callbacks fo fire twice if both hashchange & popstate were fired.\\n    if (equals(cachedState, lastCachedState)) {\\n      cachedState = lastCachedState;\\n    }\\n    lastCachedState = cachedState;\\n  }\\n\\n  function fireUrlChange() {\\n    if (lastBrowserUrl === self.url() && lastHistoryState === cachedState) {\\n      return;\\n    }\\n\\n    lastBrowserUrl = self.url();\\n    lastHistoryState = cachedState;\\n    forEach(urlChangeListeners, function(listener) {\\n      listener(self.url(), cachedState);\\n    });\\n  }\\n\\n  /**\\n   * @name $browser#onUrlChange\\n   *\\n   * @description\\n   * Register callback function that will be called, when url changes.\\n   *\\n   * It's only called when the url is changed from outside of angular:\\n   * - user types different url into address bar\\n   * - user clicks on history (forward/back) button\\n   * - user clicks on a link\\n   *\\n   * It's not called when url is changed by $browser.url() method\\n   *\\n   * The listener gets called with new url as parameter.\\n   *\\n   * NOTE: this api is intended for use only by the $location service. Please use the\\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\\n   *\\n   * @param {function(string)} listener Listener function to be called when url changes.\\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\\n   */\\n  self.onUrlChange = function(callback) {\\n    // TODO(vojta): refactor to use node's syntax for events\\n    if (!urlChangeInit) {\\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\\n      // changed by push/replaceState\\n\\n      // html5 history api - popstate event\\n      if ($sniffer.history) jqLite(window).on('popstate', cacheStateAndFireUrlChange);\\n      // hashchange event\\n      jqLite(window).on('hashchange', cacheStateAndFireUrlChange);\\n\\n      urlChangeInit = true;\\n    }\\n\\n    urlChangeListeners.push(callback);\\n    return callback;\\n  };\\n\\n  /**\\n   * Checks whether the url has changed outside of Angular.\\n   * Needs to be exported to be able to check for changes that have been done in sync,\\n   * as hashchange/popstate events fire in async.\\n   */\\n  self.$$checkUrlChange = fireUrlChange;\\n\\n  //////////////////////////////////////////////////////////////\\n  // Misc API\\n  //////////////////////////////////////////////////////////////\\n\\n  /**\\n   * @name $browser#baseHref\\n   *\\n   * @description\\n   * Returns current <base href>\\n   * (always relative - without domain)\\n   *\\n   * @returns {string} The current base href\\n   */\\n  self.baseHref = function() {\\n    var href = baseElement.attr('href');\\n    return href ? href.replace(/^(https?\\\\:)?\\\\/\\\\/[^\\\\/]*/, '') : '';\\n  };\\n\\n  //////////////////////////////////////////////////////////////\\n  // Cookies API\\n  //////////////////////////////////////////////////////////////\\n  var lastCookies = {};\\n  var lastCookieString = '';\\n  var cookiePath = self.baseHref();\\n\\n  function safeDecodeURIComponent(str) {\\n    try {\\n      return decodeURIComponent(str);\\n    } catch (e) {\\n      return str;\\n    }\\n  }\\n\\n  /**\\n   * @name $browser#cookies\\n   *\\n   * @param {string=} name Cookie name\\n   * @param {string=} value Cookie value\\n   *\\n   * @description\\n   * The cookies method provides a 'private' low level access to browser cookies.\\n   * It is not meant to be used directly, use the $cookie service instead.\\n   *\\n   * The return values vary depending on the arguments that the method was called with as follows:\\n   *\\n   * - cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify\\n   *   it\\n   * - cookies(name, value) -> set name to value, if value is undefined delete the cookie\\n   * - cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that\\n   *   way)\\n   *\\n   * @returns {Object} Hash of all cookies (if called without any parameter)\\n   */\\n  self.cookies = function(name, value) {\\n    var cookieLength, cookieArray, cookie, i, index;\\n\\n    if (name) {\\n      if (value === undefined) {\\n        rawDocument.cookie = encodeURIComponent(name) + \\\"=;path=\\\" + cookiePath +\\n                                \\\";expires=Thu, 01 Jan 1970 00:00:00 GMT\\\";\\n      } else {\\n        if (isString(value)) {\\n          cookieLength = (rawDocument.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) +\\n                                ';path=' + cookiePath).length + 1;\\n\\n          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\\n          // - 300 cookies\\n          // - 20 cookies per unique domain\\n          // - 4096 bytes per cookie\\n          if (cookieLength > 4096) {\\n            $log.warn(\\\"Cookie '\\\" + name +\\n              \\\"' possibly not set or overflowed because it was too large (\\\" +\\n              cookieLength + \\\" > 4096 bytes)!\\\");\\n          }\\n        }\\n      }\\n    } else {\\n      if (rawDocument.cookie !== lastCookieString) {\\n        lastCookieString = rawDocument.cookie;\\n        cookieArray = lastCookieString.split(\\\"; \\\");\\n        lastCookies = {};\\n\\n        for (i = 0; i < cookieArray.length; i++) {\\n          cookie = cookieArray[i];\\n          index = cookie.indexOf('=');\\n          if (index > 0) { //ignore nameless cookies\\n            name = safeDecodeURIComponent(cookie.substring(0, index));\\n            // the first value that is seen for a cookie is the most\\n            // specific one.  values for the same cookie name that\\n            // follow are for less specific paths.\\n            if (lastCookies[name] === undefined) {\\n              lastCookies[name] = safeDecodeURIComponent(cookie.substring(index + 1));\\n            }\\n          }\\n        }\\n      }\\n      return lastCookies;\\n    }\\n  };\\n\\n\\n  /**\\n   * @name $browser#defer\\n   * @param {function()} fn A function, who's execution should be deferred.\\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\\n   *\\n   * @description\\n   * Executes a fn asynchronously via `setTimeout(fn, delay)`.\\n   *\\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\\n   * via `$browser.defer.flush()`.\\n   *\\n   */\\n  self.defer = function(fn, delay) {\\n    var timeoutId;\\n    outstandingRequestCount++;\\n    timeoutId = setTimeout(function() {\\n      delete pendingDeferIds[timeoutId];\\n      completeOutstandingRequest(fn);\\n    }, delay || 0);\\n    pendingDeferIds[timeoutId] = true;\\n    return timeoutId;\\n  };\\n\\n\\n  /**\\n   * @name $browser#defer.cancel\\n   *\\n   * @description\\n   * Cancels a deferred task identified with `deferId`.\\n   *\\n   * @param {*} deferId Token returned by the `$browser.defer` function.\\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\\n   *                    canceled.\\n   */\\n  self.defer.cancel = function(deferId) {\\n    if (pendingDeferIds[deferId]) {\\n      delete pendingDeferIds[deferId];\\n      clearTimeout(deferId);\\n      completeOutstandingRequest(noop);\\n      return true;\\n    }\\n    return false;\\n  };\\n\\n}\\n\\nfunction $BrowserProvider() {\\n  this.$get = ['$window', '$log', '$sniffer', '$document',\\n      function($window, $log, $sniffer, $document) {\\n        return new Browser($window, $document, $log, $sniffer);\\n      }];\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $cacheFactory\\n *\\n * @description\\n * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\\n * them.\\n *\\n * ```js\\n *\\n *  var cache = $cacheFactory('cacheId');\\n *  expect($cacheFactory.get('cacheId')).toBe(cache);\\n *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\\n *\\n *  cache.put(\\\"key\\\", \\\"value\\\");\\n *  cache.put(\\\"another key\\\", \\\"another value\\\");\\n *\\n *  // We've specified no options on creation\\n *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});\\n *\\n * ```\\n *\\n *\\n * @param {string} cacheId Name or id of the newly created cache.\\n * @param {object=} options Options object that specifies the cache behavior. Properties:\\n *\\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\\n *\\n * @returns {object} Newly created cache object with the following set of methods:\\n *\\n * - `{object}` `info()` — Returns id, size, and options of cache.\\n * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\\n *   it.\\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\\n * - `{void}` `removeAll()` — Removes all cached values.\\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\\n *\\n * @example\\n   <example module=\\\"cacheExampleApp\\\">\\n     <file name=\\\"index.html\\\">\\n       <div ng-controller=\\\"CacheController\\\">\\n         <input ng-model=\\\"newCacheKey\\\" placeholder=\\\"Key\\\">\\n         <input ng-model=\\\"newCacheValue\\\" placeholder=\\\"Value\\\">\\n         <button ng-click=\\\"put(newCacheKey, newCacheValue)\\\">Cache</button>\\n\\n         <p ng-if=\\\"keys.length\\\">Cached Values</p>\\n         <div ng-repeat=\\\"key in keys\\\">\\n           <span ng-bind=\\\"key\\\"></span>\\n           <span>: </span>\\n           <b ng-bind=\\\"cache.get(key)\\\"></b>\\n         </div>\\n\\n         <p>Cache Info</p>\\n         <div ng-repeat=\\\"(key, value) in cache.info()\\\">\\n           <span ng-bind=\\\"key\\\"></span>\\n           <span>: </span>\\n           <b ng-bind=\\\"value\\\"></b>\\n         </div>\\n       </div>\\n     </file>\\n     <file name=\\\"script.js\\\">\\n       angular.module('cacheExampleApp', []).\\n         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\\n           $scope.keys = [];\\n           $scope.cache = $cacheFactory('cacheId');\\n           $scope.put = function(key, value) {\\n             if ($scope.cache.get(key) === undefined) {\\n               $scope.keys.push(key);\\n             }\\n             $scope.cache.put(key, value === undefined ? null : value);\\n           };\\n         }]);\\n     </file>\\n     <file name=\\\"style.css\\\">\\n       p {\\n         margin: 10px 0 3px;\\n       }\\n     </file>\\n   </example>\\n */\\nfunction $CacheFactoryProvider() {\\n\\n  this.$get = function() {\\n    var caches = {};\\n\\n    function cacheFactory(cacheId, options) {\\n      if (cacheId in caches) {\\n        throw minErr('$cacheFactory')('iid', \\\"CacheId '{0}' is already taken!\\\", cacheId);\\n      }\\n\\n      var size = 0,\\n          stats = extend({}, options, {id: cacheId}),\\n          data = {},\\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\\n          lruHash = {},\\n          freshEnd = null,\\n          staleEnd = null;\\n\\n      /**\\n       * @ngdoc type\\n       * @name $cacheFactory.Cache\\n       *\\n       * @description\\n       * A cache object used to store and retrieve data, primarily used by\\n       * {@link $http $http} and the {@link ng.directive:script script} directive to cache\\n       * templates and other data.\\n       *\\n       * ```js\\n       *  angular.module('superCache')\\n       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {\\n       *      return $cacheFactory('super-cache');\\n       *    }]);\\n       * ```\\n       *\\n       * Example test:\\n       *\\n       * ```js\\n       *  it('should behave like a cache', inject(function(superCache) {\\n       *    superCache.put('key', 'value');\\n       *    superCache.put('another key', 'another value');\\n       *\\n       *    expect(superCache.info()).toEqual({\\n       *      id: 'super-cache',\\n       *      size: 2\\n       *    });\\n       *\\n       *    superCache.remove('another key');\\n       *    expect(superCache.get('another key')).toBeUndefined();\\n       *\\n       *    superCache.removeAll();\\n       *    expect(superCache.info()).toEqual({\\n       *      id: 'super-cache',\\n       *      size: 0\\n       *    });\\n       *  }));\\n       * ```\\n       */\\n      return caches[cacheId] = {\\n\\n        /**\\n         * @ngdoc method\\n         * @name $cacheFactory.Cache#put\\n         * @kind function\\n         *\\n         * @description\\n         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\\n         * retrieved later, and incrementing the size of the cache if the key was not already\\n         * present in the cache. If behaving like an LRU cache, it will also remove stale\\n         * entries from the set.\\n         *\\n         * It will not insert undefined values into the cache.\\n         *\\n         * @param {string} key the key under which the cached data is stored.\\n         * @param {*} value the value to store alongside the key. If it is undefined, the key\\n         *    will not be stored.\\n         * @returns {*} the value stored.\\n         */\\n        put: function(key, value) {\\n          if (capacity < Number.MAX_VALUE) {\\n            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\\n\\n            refresh(lruEntry);\\n          }\\n\\n          if (isUndefined(value)) return;\\n          if (!(key in data)) size++;\\n          data[key] = value;\\n\\n          if (size > capacity) {\\n            this.remove(staleEnd.key);\\n          }\\n\\n          return value;\\n        },\\n\\n        /**\\n         * @ngdoc method\\n         * @name $cacheFactory.Cache#get\\n         * @kind function\\n         *\\n         * @description\\n         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.\\n         *\\n         * @param {string} key the key of the data to be retrieved\\n         * @returns {*} the value stored.\\n         */\\n        get: function(key) {\\n          if (capacity < Number.MAX_VALUE) {\\n            var lruEntry = lruHash[key];\\n\\n            if (!lruEntry) return;\\n\\n            refresh(lruEntry);\\n          }\\n\\n          return data[key];\\n        },\\n\\n\\n        /**\\n         * @ngdoc method\\n         * @name $cacheFactory.Cache#remove\\n         * @kind function\\n         *\\n         * @description\\n         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.\\n         *\\n         * @param {string} key the key of the entry to be removed\\n         */\\n        remove: function(key) {\\n          if (capacity < Number.MAX_VALUE) {\\n            var lruEntry = lruHash[key];\\n\\n            if (!lruEntry) return;\\n\\n            if (lruEntry == freshEnd) freshEnd = lruEntry.p;\\n            if (lruEntry == staleEnd) staleEnd = lruEntry.n;\\n            link(lruEntry.n,lruEntry.p);\\n\\n            delete lruHash[key];\\n          }\\n\\n          delete data[key];\\n          size--;\\n        },\\n\\n\\n        /**\\n         * @ngdoc method\\n         * @name $cacheFactory.Cache#removeAll\\n         * @kind function\\n         *\\n         * @description\\n         * Clears the cache object of any entries.\\n         */\\n        removeAll: function() {\\n          data = {};\\n          size = 0;\\n          lruHash = {};\\n          freshEnd = staleEnd = null;\\n        },\\n\\n\\n        /**\\n         * @ngdoc method\\n         * @name $cacheFactory.Cache#destroy\\n         * @kind function\\n         *\\n         * @description\\n         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,\\n         * removing it from the {@link $cacheFactory $cacheFactory} set.\\n         */\\n        destroy: function() {\\n          data = null;\\n          stats = null;\\n          lruHash = null;\\n          delete caches[cacheId];\\n        },\\n\\n\\n        /**\\n         * @ngdoc method\\n         * @name $cacheFactory.Cache#info\\n         * @kind function\\n         *\\n         * @description\\n         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.\\n         *\\n         * @returns {object} an object with the following properties:\\n         *   <ul>\\n         *     <li>**id**: the id of the cache instance</li>\\n         *     <li>**size**: the number of entries kept in the cache instance</li>\\n         *     <li>**...**: any additional properties from the options object when creating the\\n         *       cache.</li>\\n         *   </ul>\\n         */\\n        info: function() {\\n          return extend({}, stats, {size: size});\\n        }\\n      };\\n\\n\\n      /**\\n       * makes the `entry` the freshEnd of the LRU linked list\\n       */\\n      function refresh(entry) {\\n        if (entry != freshEnd) {\\n          if (!staleEnd) {\\n            staleEnd = entry;\\n          } else if (staleEnd == entry) {\\n            staleEnd = entry.n;\\n          }\\n\\n          link(entry.n, entry.p);\\n          link(entry, freshEnd);\\n          freshEnd = entry;\\n          freshEnd.n = null;\\n        }\\n      }\\n\\n\\n      /**\\n       * bidirectionally links two entries of the LRU linked list\\n       */\\n      function link(nextEntry, prevEntry) {\\n        if (nextEntry != prevEntry) {\\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\\n        }\\n      }\\n    }\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name $cacheFactory#info\\n   *\\n   * @description\\n   * Get information about all the caches that have been created\\n   *\\n   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`\\n   */\\n    cacheFactory.info = function() {\\n      var info = {};\\n      forEach(caches, function(cache, cacheId) {\\n        info[cacheId] = cache.info();\\n      });\\n      return info;\\n    };\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name $cacheFactory#get\\n   *\\n   * @description\\n   * Get access to a cache object by the `cacheId` used when it was created.\\n   *\\n   * @param {string} cacheId Name or id of a cache to access.\\n   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.\\n   */\\n    cacheFactory.get = function(cacheId) {\\n      return caches[cacheId];\\n    };\\n\\n\\n    return cacheFactory;\\n  };\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $templateCache\\n *\\n * @description\\n * The first time a template is used, it is loaded in the template cache for quick retrieval. You\\n * can load templates directly into the cache in a `script` tag, or by consuming the\\n * `$templateCache` service directly.\\n *\\n * Adding via the `script` tag:\\n *\\n * ```html\\n *   <script type=\\\"text/ng-template\\\" id=\\\"templateId.html\\\">\\n *     <p>This is the content of the template</p>\\n *   </script>\\n * ```\\n *\\n * **Note:** the `script` tag containing the template does not need to be included in the `head` of\\n * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\\n * element with ng-app attribute), otherwise the template will be ignored.\\n *\\n * Adding via the $templateCache service:\\n *\\n * ```js\\n * var myApp = angular.module('myApp', []);\\n * myApp.run(function($templateCache) {\\n *   $templateCache.put('templateId.html', 'This is the content of the template');\\n * });\\n * ```\\n *\\n * To retrieve the template later, simply use it in your HTML:\\n * ```html\\n * <div ng-include=\\\" 'templateId.html' \\\"></div>\\n * ```\\n *\\n * or get it via Javascript:\\n * ```js\\n * $templateCache.get('templateId.html')\\n * ```\\n *\\n * See {@link ng.$cacheFactory $cacheFactory}.\\n *\\n */\\nfunction $TemplateCacheProvider() {\\n  this.$get = ['$cacheFactory', function($cacheFactory) {\\n    return $cacheFactory('templates');\\n  }];\\n}\\n\\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\\n *\\n * DOM-related variables:\\n *\\n * - \\\"node\\\" - DOM Node\\n * - \\\"element\\\" - DOM Element or Node\\n * - \\\"$node\\\" or \\\"$element\\\" - jqLite-wrapped node or element\\n *\\n *\\n * Compiler related stuff:\\n *\\n * - \\\"linkFn\\\" - linking fn of a single directive\\n * - \\\"nodeLinkFn\\\" - function that aggregates all linking fns for a particular node\\n * - \\\"childLinkFn\\\" -  function that aggregates all linking fns for child nodes of a particular node\\n * - \\\"compositeLinkFn\\\" - function that aggregates all linking fns for a compilation root (nodeList)\\n */\\n\\n\\n/**\\n * @ngdoc service\\n * @name $compile\\n * @kind function\\n *\\n * @description\\n * Compiles an HTML string or DOM into a template and produces a template function, which\\n * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\\n *\\n * The compilation is a process of walking the DOM tree and matching DOM elements to\\n * {@link ng.$compileProvider#directive directives}.\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** This document is an in-depth reference of all directive options.\\n * For a gentle introduction to directives with examples of common use cases,\\n * see the {@link guide/directive directive guide}.\\n * </div>\\n *\\n * ## Comprehensive Directive API\\n *\\n * There are many different options for a directive.\\n *\\n * The difference resides in the return value of the factory function.\\n * You can either return a \\\"Directive Definition Object\\\" (see below) that defines the directive properties,\\n * or just the `postLink` function (all other properties will have the default values).\\n *\\n * <div class=\\\"alert alert-success\\\">\\n * **Best Practice:** It's recommended to use the \\\"directive definition object\\\" form.\\n * </div>\\n *\\n * Here's an example directive declared with a Directive Definition Object:\\n *\\n * ```js\\n *   var myModule = angular.module(...);\\n *\\n *   myModule.directive('directiveName', function factory(injectables) {\\n *     var directiveDefinitionObject = {\\n *       priority: 0,\\n *       template: '<div></div>', // or // function(tElement, tAttrs) { ... },\\n *       // or\\n *       // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\\n *       transclude: false,\\n *       restrict: 'A',\\n *       templateNamespace: 'html',\\n *       scope: false,\\n *       controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\\n *       controllerAs: 'stringAlias',\\n *       require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\\n *       compile: function compile(tElement, tAttrs, transclude) {\\n *         return {\\n *           pre: function preLink(scope, iElement, iAttrs, controller) { ... },\\n *           post: function postLink(scope, iElement, iAttrs, controller) { ... }\\n *         }\\n *         // or\\n *         // return function postLink( ... ) { ... }\\n *       },\\n *       // or\\n *       // link: {\\n *       //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\\n *       //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\\n *       // }\\n *       // or\\n *       // link: function postLink( ... ) { ... }\\n *     };\\n *     return directiveDefinitionObject;\\n *   });\\n * ```\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** Any unspecified options will use the default value. You can see the default values below.\\n * </div>\\n *\\n * Therefore the above can be simplified as:\\n *\\n * ```js\\n *   var myModule = angular.module(...);\\n *\\n *   myModule.directive('directiveName', function factory(injectables) {\\n *     var directiveDefinitionObject = {\\n *       link: function postLink(scope, iElement, iAttrs) { ... }\\n *     };\\n *     return directiveDefinitionObject;\\n *     // or\\n *     // return function postLink(scope, iElement, iAttrs) { ... }\\n *   });\\n * ```\\n *\\n *\\n *\\n * ### Directive Definition Object\\n *\\n * The directive definition object provides instructions to the {@link ng.$compile\\n * compiler}. The attributes are:\\n *\\n * #### `multiElement`\\n * When this property is set to true, the HTML compiler will collect DOM nodes between\\n * nodes with the attributes `directive-name-start` and `directive-name-end`, and group them\\n * together as the directive elements. It is recommended that this feature be used on directives\\n * which are not strictly behavioural (such as {@link ngClick}), and which\\n * do not manipulate or replace child nodes (such as {@link ngInclude}).\\n *\\n * #### `priority`\\n * When there are multiple directives defined on a single DOM element, sometimes it\\n * is necessary to specify the order in which the directives are applied. The `priority` is used\\n * to sort the directives before their `compile` functions get called. Priority is defined as a\\n * number. Directives with greater numerical `priority` are compiled first. Pre-link functions\\n * are also run in priority order, but post-link functions are run in reverse order. The order\\n * of directives with the same priority is undefined. The default priority is `0`.\\n *\\n * #### `terminal`\\n * If set to true then the current `priority` will be the last set of directives\\n * which will execute (any directives at the current priority will still execute\\n * as the order of execution on same `priority` is undefined). Note that expressions\\n * and other directives used in the directive's template will also be excluded from execution.\\n *\\n * #### `scope`\\n * **If set to `true`,** then a new scope will be created for this directive. If multiple directives on the\\n * same element request a new scope, only one new scope is created. The new scope rule does not\\n * apply for the root of the template since the root of the template always gets a new scope.\\n *\\n * **If set to `{}` (object hash),** then a new \\\"isolate\\\" scope is created. The 'isolate' scope differs from\\n * normal scope in that it does not prototypically inherit from the parent scope. This is useful\\n * when creating reusable components, which should not accidentally read or modify data in the\\n * parent scope.\\n *\\n * The 'isolate' scope takes an object hash which defines a set of local scope properties\\n * derived from the parent scope. These local properties are useful for aliasing values for\\n * templates. Locals definition is a hash of local scope property to its source:\\n *\\n * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\\n *   always a string since DOM attributes are strings. If no `attr` name is specified  then the\\n *   attribute name is assumed to be the same as the local name.\\n *   Given `<widget my-attr=\\\"hello {{name}}\\\">` and widget definition\\n *   of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect\\n *   the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the\\n *   `localName` property on the widget scope. The `name` is read from the parent scope (not\\n *   component scope).\\n *\\n * * `=` or `=attr` - set up bi-directional binding between a local scope property and the\\n *   parent scope property of name defined via the value of the `attr` attribute. If no `attr`\\n *   name is specified then the attribute name is assumed to be the same as the local name.\\n *   Given `<widget my-attr=\\\"parentModel\\\">` and widget definition of\\n *   `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the\\n *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\\n *   in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent\\n *   scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You\\n *   can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional. If\\n *   you want to shallow watch for changes (i.e. $watchCollection instead of $watch) you can use\\n *   `=*` or `=*attr` (`=*?` or `=*?attr` if the property is optional).\\n *\\n * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.\\n *   If no `attr` name is specified then the attribute name is assumed to be the same as the\\n *   local name. Given `<widget my-attr=\\\"count = count + value\\\">` and widget definition of\\n *   `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to\\n *   a function wrapper for the `count = count + value` expression. Often it's desirable to\\n *   pass data from the isolated scope via an expression to the parent scope, this can be\\n *   done by passing a map of local variable names and values into the expression wrapper fn.\\n *   For example, if the expression is `increment(amount)` then we can specify the amount value\\n *   by calling the `localFn` as `localFn({amount: 22})`.\\n *\\n *\\n * #### `bindToController`\\n * When an isolate scope is used for a component (see above), and `controllerAs` is used, `bindToController: true` will\\n * allow a component to have its properties bound to the controller, rather than to scope. When the controller\\n * is instantiated, the initial values of the isolate scope bindings are already available.\\n *\\n * #### `controller`\\n * Controller constructor function. The controller is instantiated before the\\n * pre-linking phase and it is shared with other directives (see\\n * `require` attribute). This allows the directives to communicate with each other and augment\\n * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\\n *\\n * * `$scope` - Current scope associated with the element\\n * * `$element` - Current element\\n * * `$attrs` - Current attributes object for the element\\n * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\\n *   `function([scope], cloneLinkingFn, futureParentElement)`.\\n *    * `scope`: optional argument to override the scope.\\n *    * `cloneLinkingFn`: optional argument to create clones of the original transcluded content.\\n *    * `futureParentElement`:\\n *        * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\\n *        * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\\n *        * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\\n *          and when the `cloneLinkinFn` is passed,\\n *          as those elements need to created and cloned in a special way when they are defined outside their\\n *          usual containers (e.g. like `<svg>`).\\n *        * See also the `directive.templateNamespace` property.\\n *\\n *\\n * #### `require`\\n * Require another directive and inject its controller as the fourth argument to the linking function. The\\n * `require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the\\n * injected argument will be an array in corresponding order. If no such directive can be\\n * found, or if the directive does not have a controller, then an error is raised. The name can be prefixed with:\\n *\\n * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.\\n * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\\n * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\\n * * `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\\n * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass\\n *   `null` to the `link` fn if not found.\\n * * `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\\n *   `null` to the `link` fn if not found.\\n *\\n *\\n * #### `controllerAs`\\n * Controller alias at the directive scope. An alias for the controller so it\\n * can be referenced at the directive template. The directive needs to define a scope for this\\n * configuration to be used. Useful in the case when directive is used as component.\\n *\\n *\\n * #### `restrict`\\n * String of subset of `EACM` which restricts the directive to a specific directive\\n * declaration style. If omitted, the defaults (elements and attributes) are used.\\n *\\n * * `E` - Element name (default): `<my-directive></my-directive>`\\n * * `A` - Attribute (default): `<div my-directive=\\\"exp\\\"></div>`\\n * * `C` - Class: `<div class=\\\"my-directive: exp;\\\"></div>`\\n * * `M` - Comment: `<!-- directive: my-directive exp -->`\\n *\\n *\\n * #### `templateNamespace`\\n * String representing the document type used by the markup in the template.\\n * AngularJS needs this information as those elements need to be created and cloned\\n * in a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\\n *\\n * * `html` - All root nodes in the template are HTML. Root nodes may also be\\n *   top-level elements such as `<svg>` or `<math>`.\\n * * `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\\n * * `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\\n *\\n * If no `templateNamespace` is specified, then the namespace is considered to be `html`.\\n *\\n * #### `template`\\n * HTML markup that may:\\n * * Replace the contents of the directive's element (default).\\n * * Replace the directive's element itself (if `replace` is true - DEPRECATED).\\n * * Wrap the contents of the directive's element (if `transclude` is true).\\n *\\n * Value may be:\\n *\\n * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.\\n * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\\n *   function api below) and returns a string value.\\n *\\n *\\n * #### `templateUrl`\\n * This is similar to `template` but the template is loaded from the specified URL, asynchronously.\\n *\\n * Because template loading is asynchronous the compiler will suspend compilation of directives on that element\\n * for later when the template has been resolved.  In the meantime it will continue to compile and link\\n * sibling and parent elements as though this element had not contained any directives.\\n *\\n * The compiler does not suspend the entire compilation to wait for templates to be loaded because this\\n * would result in the whole app \\\"stalling\\\" until all templates are loaded asynchronously - even in the\\n * case when only one deeply nested directive has `templateUrl`.\\n *\\n * Template loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\\n *\\n * You can specify `templateUrl` as a string representing the URL or as a function which takes two\\n * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\\n * a string value representing the url.  In either case, the template URL is passed through {@link\\n * $sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\\n *\\n *\\n * #### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\\n * specify what the template should replace. Defaults to `false`.\\n *\\n * * `true` - the template will replace the directive's element.\\n * * `false` - the template will replace the contents of the directive's element.\\n *\\n * The replacement process migrates all of the attributes / classes from the old element to the new\\n * one. See the {@link guide/directive#template-expanding-directive\\n * Directives Guide} for an example.\\n *\\n * There are very few scenarios where element replacement is required for the application function,\\n * the main one being reusable custom components that are used within SVG contexts\\n * (because SVG doesn't work with custom elements in the DOM tree).\\n *\\n * #### `transclude`\\n * Extract the contents of the element where the directive appears and make it available to the directive.\\n * The contents are compiled and provided to the directive as a **transclusion function**. See the\\n * {@link $compile#transclusion Transclusion} section below.\\n *\\n * There are two kinds of transclusion depending upon whether you want to transclude just the contents of the\\n * directive's element or the entire element:\\n *\\n * * `true` - transclude the content (i.e. the child nodes) of the directive's element.\\n * * `'element'` - transclude the whole of the directive's element including any directives on this\\n *   element that defined at a lower priority than this directive. When used, the `template`\\n *   property is ignored.\\n *\\n *\\n * #### `compile`\\n *\\n * ```js\\n *   function compile(tElement, tAttrs, transclude) { ... }\\n * ```\\n *\\n * The compile function deals with transforming the template DOM. Since most directives do not do\\n * template transformation, it is not used often. The compile function takes the following arguments:\\n *\\n *   * `tElement` - template element - The element where the directive has been declared. It is\\n *     safe to do template transformation on the element and child elements only.\\n *\\n *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\\n *     between all directive compile functions.\\n *\\n *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** The template instance and the link instance may be different objects if the template has\\n * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that\\n * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\\n * should be done in a linking function rather than in a compile function.\\n * </div>\\n\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** The compile function cannot handle directives that recursively use themselves in their\\n * own templates or compile functions. Compiling these directives results in an infinite loop and a\\n * stack overflow errors.\\n *\\n * This can be avoided by manually using $compile in the postLink function to imperatively compile\\n * a directive's template instead of relying on automatic template compilation via `template` or\\n * `templateUrl` declaration or manual compilation inside the compile function.\\n * </div>\\n *\\n * <div class=\\\"alert alert-error\\\">\\n * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it\\n *   e.g. does not know about the right outer scope. Please use the transclude function that is passed\\n *   to the link function instead.\\n * </div>\\n\\n * A compile function can have a return value which can be either a function or an object.\\n *\\n * * returning a (post-link) function - is equivalent to registering the linking function via the\\n *   `link` property of the config object when the compile function is empty.\\n *\\n * * returning an object with function(s) registered via `pre` and `post` properties - allows you to\\n *   control when a linking function should be called during the linking phase. See info about\\n *   pre-linking and post-linking functions below.\\n *\\n *\\n * #### `link`\\n * This property is used only if the `compile` property is not defined.\\n *\\n * ```js\\n *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\\n * ```\\n *\\n * The link function is responsible for registering DOM listeners as well as updating the DOM. It is\\n * executed after the template has been cloned. This is where most of the directive logic will be\\n * put.\\n *\\n *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\\n *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.\\n *\\n *   * `iElement` - instance element - The element where the directive is to be used. It is safe to\\n *     manipulate the children of the element only in `postLink` function since the children have\\n *     already been linked.\\n *\\n *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\\n *     between all directive linking functions.\\n *\\n *   * `controller` - a controller instance - A controller instance if at least one directive on the\\n *     element defines a controller. The controller is shared among all the directives, which allows\\n *     the directives to use the controllers as a communication channel.\\n *\\n *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\\n *     This is the same as the `$transclude`\\n *     parameter of directive controllers, see there for details.\\n *     `function([scope], cloneLinkingFn, futureParentElement)`.\\n *\\n * #### Pre-linking function\\n *\\n * Executed before the child elements are linked. Not safe to do DOM transformation since the\\n * compiler linking function will fail to locate the correct elements for linking.\\n *\\n * #### Post-linking function\\n *\\n * Executed after the child elements are linked.\\n *\\n * Note that child elements that contain `templateUrl` directives will not have been compiled\\n * and linked since they are waiting for their template to load asynchronously and their own\\n * compilation and linking has been suspended until that occurs.\\n *\\n * It is safe to do DOM transformation in the post-linking function on elements that are not waiting\\n * for their async templates to be resolved.\\n *\\n *\\n * ### Transclusion\\n *\\n * Transclusion is the process of extracting a collection of DOM element from one part of the DOM and\\n * copying them to another part of the DOM, while maintaining their connection to the original AngularJS\\n * scope from where they were taken.\\n *\\n * Transclusion is used (often with {@link ngTransclude}) to insert the\\n * original contents of a directive's element into a specified place in the template of the directive.\\n * The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\\n * content has access to the properties on the scope from which it was taken, even if the directive\\n * has isolated scope.\\n * See the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\\n *\\n * This makes it possible for the widget to have private state for its template, while the transcluded\\n * content has access to its originating scope.\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** When testing an element transclude directive you must not place the directive at the root of the\\n * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\\n * Testing Transclusion Directives}.\\n * </div>\\n *\\n * #### Transclusion Functions\\n *\\n * When a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\\n * function** to the directive's `link` function and `controller`. This transclusion function is a special\\n * **linking function** that will return the compiled contents linked to a new transclusion scope.\\n *\\n * <div class=\\\"alert alert-info\\\">\\n * If you are just using {@link ngTransclude} then you don't need to worry about this function, since\\n * ngTransclude will deal with it for us.\\n * </div>\\n *\\n * If you want to manually control the insertion and removal of the transcluded content in your directive\\n * then you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\\n * object that contains the compiled DOM, which is linked to the correct transclusion scope.\\n *\\n * When you call a transclusion function you can pass in a **clone attach function**. This function accepts\\n * two parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\\n * content and the `scope` is the newly created transclusion scope, to which the clone is bound.\\n *\\n * <div class=\\\"alert alert-info\\\">\\n * **Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a translude function\\n * since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\\n * </div>\\n *\\n * It is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\\n * attach function**:\\n *\\n * ```js\\n * var transcludedContent, transclusionScope;\\n *\\n * $transclude(function(clone, scope) {\\n *   element.append(clone);\\n *   transcludedContent = clone;\\n *   transclusionScope = scope;\\n * });\\n * ```\\n *\\n * Later, if you want to remove the transcluded content from your DOM then you should also destroy the\\n * associated transclusion scope:\\n *\\n * ```js\\n * transcludedContent.remove();\\n * transclusionScope.$destroy();\\n * ```\\n *\\n * <div class=\\\"alert alert-info\\\">\\n * **Best Practice**: if you intend to add and remove transcluded content manually in your directive\\n * (by calling the transclude function to get the DOM and and calling `element.remove()` to remove it),\\n * then you are also responsible for calling `$destroy` on the transclusion scope.\\n * </div>\\n *\\n * The built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\\n * automatically destroy their transluded clones as necessary so you do not need to worry about this if\\n * you are simply using {@link ngTransclude} to inject the transclusion into your directive.\\n *\\n *\\n * #### Transclusion Scopes\\n *\\n * When you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\\n * scope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\\n * when the directive's scope gets destroyed) but it inherits the properties of the scope from which it\\n * was taken.\\n *\\n * For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\\n * like this:\\n *\\n * ```html\\n * <div ng-app>\\n *   <div isolate>\\n *     <div transclusion>\\n *     </div>\\n *   </div>\\n * </div>\\n * ```\\n *\\n * The `$parent` scope hierarchy will look like this:\\n *\\n * ```\\n * - $rootScope\\n *   - isolate\\n *     - transclusion\\n * ```\\n *\\n * but the scopes will inherit prototypically from different scopes to their `$parent`.\\n *\\n * ```\\n * - $rootScope\\n *   - transclusion\\n * - isolate\\n * ```\\n *\\n *\\n * ### Attributes\\n *\\n * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\\n * `link()` or `compile()` functions. It has a variety of uses.\\n *\\n * accessing *Normalized attribute names:*\\n * Directives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.\\n * the attributes object allows for normalized access to\\n *   the attributes.\\n *\\n * * *Directive inter-communication:* All directives share the same instance of the attributes\\n *   object which allows the directives to use the attributes object as inter directive\\n *   communication.\\n *\\n * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object\\n *   allowing other directives to read the interpolated value.\\n *\\n * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\\n *   that contain interpolation (e.g. `src=\\\"{{bar}}\\\"`). Not only is this very efficient but it's also\\n *   the only way to easily get the actual value because during the linking phase the interpolation\\n *   hasn't been evaluated yet and so the value is at this time set to `undefined`.\\n *\\n * ```js\\n * function linkingFn(scope, elm, attrs, ctrl) {\\n *   // get the attribute value\\n *   console.log(attrs.ngModel);\\n *\\n *   // change the attribute\\n *   attrs.$set('ngModel', 'new value');\\n *\\n *   // observe changes to interpolated attribute\\n *   attrs.$observe('ngModel', function(value) {\\n *     console.log('ngModel has changed value to ' + value);\\n *   });\\n * }\\n * ```\\n *\\n * ## Example\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note**: Typically directives are registered with `module.directive`. The example below is\\n * to illustrate how `$compile` works.\\n * </div>\\n *\\n <example module=\\\"compileExample\\\">\\n   <file name=\\\"index.html\\\">\\n    <script>\\n      angular.module('compileExample', [], function($compileProvider) {\\n        // configure new 'compile' directive by passing a directive\\n        // factory function. The factory function injects the '$compile'\\n        $compileProvider.directive('compile', function($compile) {\\n          // directive factory creates a link function\\n          return function(scope, element, attrs) {\\n            scope.$watch(\\n              function(scope) {\\n                 // watch the 'compile' expression for changes\\n                return scope.$eval(attrs.compile);\\n              },\\n              function(value) {\\n                // when the 'compile' expression changes\\n                // assign it into the current DOM\\n                element.html(value);\\n\\n                // compile the new DOM and link it to the current\\n                // scope.\\n                // NOTE: we only compile .childNodes so that\\n                // we don't get into infinite loop compiling ourselves\\n                $compile(element.contents())(scope);\\n              }\\n            );\\n          };\\n        });\\n      })\\n      .controller('GreeterController', ['$scope', function($scope) {\\n        $scope.name = 'Angular';\\n        $scope.html = 'Hello {{name}}';\\n      }]);\\n    </script>\\n    <div ng-controller=\\\"GreeterController\\\">\\n      <input ng-model=\\\"name\\\"> <br>\\n      <textarea ng-model=\\\"html\\\"></textarea> <br>\\n      <div compile=\\\"html\\\"></div>\\n    </div>\\n   </file>\\n   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n     it('should auto compile', function() {\\n       var textarea = $('textarea');\\n       var output = $('div[compile]');\\n       // The initial state reads 'Hello Angular'.\\n       expect(output.getText()).toBe('Hello Angular');\\n       textarea.clear();\\n       textarea.sendKeys('{{name}}!');\\n       expect(output.getText()).toBe('Angular!');\\n     });\\n   </file>\\n </example>\\n\\n *\\n *\\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\\n * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives - DEPRECATED.\\n *\\n * <div class=\\\"alert alert-error\\\">\\n * **Note:** Passing a `transclude` function to the $compile function is deprecated, as it\\n *   e.g. will not use the right outer scope. Please pass the transclude function as a\\n *   `parentBoundTranscludeFn` to the link function instead.\\n * </div>\\n *\\n * @param {number} maxPriority only apply directives lower than given priority (Only effects the\\n *                 root element(s), not their children)\\n * @returns {function(scope, cloneAttachFn=, options=)} a link function which is used to bind template\\n * (a DOM element/tree) to a scope. Where:\\n *\\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\\n *  `template` and call the `cloneAttachFn` function allowing the caller to attach the\\n *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\\n *  called as: <br> `cloneAttachFn(clonedElement, scope)` where:\\n *\\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\\n *      * `scope` - is the current scope with which the linking function is working with.\\n *\\n *  * `options` - An optional object hash with linking options. If `options` is provided, then the following\\n *  keys may be used to control linking behavior:\\n *\\n *      * `parentBoundTranscludeFn` - the transclude function made available to\\n *        directives; if given, it will be passed through to the link functions of\\n *        directives found in `element` during compilation.\\n *      * `transcludeControllers` - an object hash with keys that map controller names\\n *        to controller instances; if given, it will make the controllers\\n *        available to directives.\\n *      * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add\\n *        the cloned elements; only needed for transcludes that are allowed to contain non html\\n *        elements (e.g. SVG elements). See also the directive.controller property.\\n *\\n * Calling the linking function returns the element of the template. It is either the original\\n * element passed in, or the clone of the element if the `cloneAttachFn` is provided.\\n *\\n * After linking the view is not updated until after a call to $digest which typically is done by\\n * Angular automatically.\\n *\\n * If you need access to the bound view, there are two ways to do it:\\n *\\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\\n *   before you send them to the compiler and keep this reference around.\\n *   ```js\\n *     var element = $compile('<p>{{total}}</p>')(scope);\\n *   ```\\n *\\n * - if on the other hand, you need the element to be cloned, the view reference from the original\\n *   example would not point to the clone, but rather to the original template that was cloned. In\\n *   this case, you can access the clone via the cloneAttachFn:\\n *   ```js\\n *     var templateElement = angular.element('<p>{{total}}</p>'),\\n *         scope = ....;\\n *\\n *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\\n *       //attach the clone to DOM document at the right place\\n *     });\\n *\\n *     //now we have reference to the cloned DOM via `clonedElement`\\n *   ```\\n *\\n *\\n * For information on how the compiler works, see the\\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\\n */\\n\\nvar $compileMinErr = minErr('$compile');\\n\\n/**\\n * @ngdoc provider\\n * @name $compileProvider\\n *\\n * @description\\n */\\n$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];\\nfunction $CompileProvider($provide, $$sanitizeUriProvider) {\\n  var hasDirectives = {},\\n      Suffix = 'Directive',\\n      COMMENT_DIRECTIVE_REGEXP = /^\\\\s*directive\\\\:\\\\s*([\\\\w\\\\-]+)\\\\s+(.*)$/,\\n      CLASS_DIRECTIVE_REGEXP = /(([\\\\w\\\\-]+)(?:\\\\:([^;]+))?;?)/,\\n      ALL_OR_NOTHING_ATTRS = makeMap('ngSrc,ngSrcset,src,srcset'),\\n      REQUIRE_PREFIX_REGEXP = /^(?:(\\\\^\\\\^?)?(\\\\?)?(\\\\^\\\\^?)?)?/;\\n\\n  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes\\n  // The assumption is that future DOM event attribute names will begin with\\n  // 'on' and be composed of only English letters.\\n  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;\\n\\n  function parseIsolateBindings(scope, directiveName) {\\n    var LOCAL_REGEXP = /^\\\\s*([@&]|=(\\\\*?))(\\\\??)\\\\s*(\\\\w*)\\\\s*$/;\\n\\n    var bindings = {};\\n\\n    forEach(scope, function(definition, scopeName) {\\n      var match = definition.match(LOCAL_REGEXP);\\n\\n      if (!match) {\\n        throw $compileMinErr('iscp',\\n            \\\"Invalid isolate scope definition for directive '{0}'.\\\" +\\n            \\\" Definition: {... {1}: '{2}' ...}\\\",\\n            directiveName, scopeName, definition);\\n      }\\n\\n      bindings[scopeName] = {\\n        mode: match[1][0],\\n        collection: match[2] === '*',\\n        optional: match[3] === '?',\\n        attrName: match[4] || scopeName\\n      };\\n    });\\n\\n    return bindings;\\n  }\\n\\n  /**\\n   * @ngdoc method\\n   * @name $compileProvider#directive\\n   * @kind function\\n   *\\n   * @description\\n   * Register a new directive with the compiler.\\n   *\\n   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which\\n   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the\\n   *    names and the values are the factories.\\n   * @param {Function|Array} directiveFactory An injectable directive factory function. See\\n   *    {@link guide/directive} for more info.\\n   * @returns {ng.$compileProvider} Self for chaining.\\n   */\\n   this.directive = function registerDirective(name, directiveFactory) {\\n    assertNotHasOwnProperty(name, 'directive');\\n    if (isString(name)) {\\n      assertArg(directiveFactory, 'directiveFactory');\\n      if (!hasDirectives.hasOwnProperty(name)) {\\n        hasDirectives[name] = [];\\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\\n          function($injector, $exceptionHandler) {\\n            var directives = [];\\n            forEach(hasDirectives[name], function(directiveFactory, index) {\\n              try {\\n                var directive = $injector.invoke(directiveFactory);\\n                if (isFunction(directive)) {\\n                  directive = { compile: valueFn(directive) };\\n                } else if (!directive.compile && directive.link) {\\n                  directive.compile = valueFn(directive.link);\\n                }\\n                directive.priority = directive.priority || 0;\\n                directive.index = index;\\n                directive.name = directive.name || name;\\n                directive.require = directive.require || (directive.controller && directive.name);\\n                directive.restrict = directive.restrict || 'EA';\\n                if (isObject(directive.scope)) {\\n                  directive.$$isolateBindings = parseIsolateBindings(directive.scope, directive.name);\\n                }\\n                directives.push(directive);\\n              } catch (e) {\\n                $exceptionHandler(e);\\n              }\\n            });\\n            return directives;\\n          }]);\\n      }\\n      hasDirectives[name].push(directiveFactory);\\n    } else {\\n      forEach(name, reverseParams(registerDirective));\\n    }\\n    return this;\\n  };\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name $compileProvider#aHrefSanitizationWhitelist\\n   * @kind function\\n   *\\n   * @description\\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\\n   * urls during a[href] sanitization.\\n   *\\n   * The sanitization is a security measure aimed at preventing XSS attacks via html links.\\n   *\\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\\n   *\\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\\n   *    chaining otherwise.\\n   */\\n  this.aHrefSanitizationWhitelist = function(regexp) {\\n    if (isDefined(regexp)) {\\n      $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);\\n      return this;\\n    } else {\\n      return $$sanitizeUriProvider.aHrefSanitizationWhitelist();\\n    }\\n  };\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name $compileProvider#imgSrcSanitizationWhitelist\\n   * @kind function\\n   *\\n   * @description\\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\\n   * urls during img[src] sanitization.\\n   *\\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\\n   *\\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\\n   *\\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\\n   *    chaining otherwise.\\n   */\\n  this.imgSrcSanitizationWhitelist = function(regexp) {\\n    if (isDefined(regexp)) {\\n      $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);\\n      return this;\\n    } else {\\n      return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name  $compileProvider#debugInfoEnabled\\n   *\\n   * @param {boolean=} enabled update the debugInfoEnabled state if provided, otherwise just return the\\n   * current debugInfoEnabled state\\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\\n   *\\n   * @kind function\\n   *\\n   * @description\\n   * Call this method to enable/disable various debug runtime information in the compiler such as adding\\n   * binding information and a reference to the current scope on to DOM elements.\\n   * If enabled, the compiler will add the following to DOM elements that have been bound to the scope\\n   * * `ng-binding` CSS class\\n   * * `$binding` data property containing an array of the binding expressions\\n   *\\n   * You may want to disable this in production for a significant performance boost. See\\n   * {@link guide/production#disabling-debug-data Disabling Debug Data} for more.\\n   *\\n   * The default value is true.\\n   */\\n  var debugInfoEnabled = true;\\n  this.debugInfoEnabled = function(enabled) {\\n    if (isDefined(enabled)) {\\n      debugInfoEnabled = enabled;\\n      return this;\\n    }\\n    return debugInfoEnabled;\\n  };\\n\\n  this.$get = [\\n            '$injector', '$interpolate', '$exceptionHandler', '$templateRequest', '$parse',\\n            '$controller', '$rootScope', '$document', '$sce', '$animate', '$$sanitizeUri',\\n    function($injector,   $interpolate,   $exceptionHandler,   $templateRequest,   $parse,\\n             $controller,   $rootScope,   $document,   $sce,   $animate,   $$sanitizeUri) {\\n\\n    var Attributes = function(element, attributesToCopy) {\\n      if (attributesToCopy) {\\n        var keys = Object.keys(attributesToCopy);\\n        var i, l, key;\\n\\n        for (i = 0, l = keys.length; i < l; i++) {\\n          key = keys[i];\\n          this[key] = attributesToCopy[key];\\n        }\\n      } else {\\n        this.$attr = {};\\n      }\\n\\n      this.$$element = element;\\n    };\\n\\n    Attributes.prototype = {\\n      /**\\n       * @ngdoc method\\n       * @name $compile.directive.Attributes#$normalize\\n       * @kind function\\n       *\\n       * @description\\n       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\\n       * `data-`) to its normalized, camelCase form.\\n       *\\n       * Also there is special case for Moz prefix starting with upper case letter.\\n       *\\n       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\\n       *\\n       * @param {string} name Name to normalize\\n       */\\n      $normalize: directiveNormalize,\\n\\n\\n      /**\\n       * @ngdoc method\\n       * @name $compile.directive.Attributes#$addClass\\n       * @kind function\\n       *\\n       * @description\\n       * Adds the CSS class value specified by the classVal parameter to the element. If animations\\n       * are enabled then an animation will be triggered for the class addition.\\n       *\\n       * @param {string} classVal The className value that will be added to the element\\n       */\\n      $addClass: function(classVal) {\\n        if (classVal && classVal.length > 0) {\\n          $animate.addClass(this.$$element, classVal);\\n        }\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $compile.directive.Attributes#$removeClass\\n       * @kind function\\n       *\\n       * @description\\n       * Removes the CSS class value specified by the classVal parameter from the element. If\\n       * animations are enabled then an animation will be triggered for the class removal.\\n       *\\n       * @param {string} classVal The className value that will be removed from the element\\n       */\\n      $removeClass: function(classVal) {\\n        if (classVal && classVal.length > 0) {\\n          $animate.removeClass(this.$$element, classVal);\\n        }\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $compile.directive.Attributes#$updateClass\\n       * @kind function\\n       *\\n       * @description\\n       * Adds and removes the appropriate CSS class values to the element based on the difference\\n       * between the new and old CSS class values (specified as newClasses and oldClasses).\\n       *\\n       * @param {string} newClasses The current CSS className value\\n       * @param {string} oldClasses The former CSS className value\\n       */\\n      $updateClass: function(newClasses, oldClasses) {\\n        var toAdd = tokenDifference(newClasses, oldClasses);\\n        if (toAdd && toAdd.length) {\\n          $animate.addClass(this.$$element, toAdd);\\n        }\\n\\n        var toRemove = tokenDifference(oldClasses, newClasses);\\n        if (toRemove && toRemove.length) {\\n          $animate.removeClass(this.$$element, toRemove);\\n        }\\n      },\\n\\n      /**\\n       * Set a normalized attribute on the element in a way such that all directives\\n       * can share the attribute. This function properly handles boolean attributes.\\n       * @param {string} key Normalized key. (ie ngAttribute)\\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\\n       *     Defaults to true.\\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\\n       */\\n      $set: function(key, value, writeAttr, attrName) {\\n        // TODO: decide whether or not to throw an error if \\\"class\\\"\\n        //is set through this function since it may cause $updateClass to\\n        //become unstable.\\n\\n        var node = this.$$element[0],\\n            booleanKey = getBooleanAttrName(node, key),\\n            aliasedKey = getAliasedAttrName(node, key),\\n            observer = key,\\n            nodeName;\\n\\n        if (booleanKey) {\\n          this.$$element.prop(key, value);\\n          attrName = booleanKey;\\n        } else if (aliasedKey) {\\n          this[aliasedKey] = value;\\n          observer = aliasedKey;\\n        }\\n\\n        this[key] = value;\\n\\n        // translate normalized key to actual key\\n        if (attrName) {\\n          this.$attr[key] = attrName;\\n        } else {\\n          attrName = this.$attr[key];\\n          if (!attrName) {\\n            this.$attr[key] = attrName = snake_case(key, '-');\\n          }\\n        }\\n\\n        nodeName = nodeName_(this.$$element);\\n\\n        if ((nodeName === 'a' && key === 'href') ||\\n            (nodeName === 'img' && key === 'src')) {\\n          // sanitize a[href] and img[src] values\\n          this[key] = value = $$sanitizeUri(value, key === 'src');\\n        } else if (nodeName === 'img' && key === 'srcset') {\\n          // sanitize img[srcset] values\\n          var result = \\\"\\\";\\n\\n          // first check if there are spaces because it's not the same pattern\\n          var trimmedSrcset = trim(value);\\n          //                (   999x   ,|   999w   ,|   ,|,   )\\n          var srcPattern = /(\\\\s+\\\\d+x\\\\s*,|\\\\s+\\\\d+w\\\\s*,|\\\\s+,|,\\\\s+)/;\\n          var pattern = /\\\\s/.test(trimmedSrcset) ? srcPattern : /(,)/;\\n\\n          // split srcset into tuple of uri and descriptor except for the last item\\n          var rawUris = trimmedSrcset.split(pattern);\\n\\n          // for each tuples\\n          var nbrUrisWith2parts = Math.floor(rawUris.length / 2);\\n          for (var i = 0; i < nbrUrisWith2parts; i++) {\\n            var innerIdx = i * 2;\\n            // sanitize the uri\\n            result += $$sanitizeUri(trim(rawUris[innerIdx]), true);\\n            // add the descriptor\\n            result += (\\\" \\\" + trim(rawUris[innerIdx + 1]));\\n          }\\n\\n          // split the last item into uri and descriptor\\n          var lastTuple = trim(rawUris[i * 2]).split(/\\\\s/);\\n\\n          // sanitize the last uri\\n          result += $$sanitizeUri(trim(lastTuple[0]), true);\\n\\n          // and add the last descriptor if any\\n          if (lastTuple.length === 2) {\\n            result += (\\\" \\\" + trim(lastTuple[1]));\\n          }\\n          this[key] = value = result;\\n        }\\n\\n        if (writeAttr !== false) {\\n          if (value === null || value === undefined) {\\n            this.$$element.removeAttr(attrName);\\n          } else {\\n            this.$$element.attr(attrName, value);\\n          }\\n        }\\n\\n        // fire observers\\n        var $$observers = this.$$observers;\\n        $$observers && forEach($$observers[observer], function(fn) {\\n          try {\\n            fn(value);\\n          } catch (e) {\\n            $exceptionHandler(e);\\n          }\\n        });\\n      },\\n\\n\\n      /**\\n       * @ngdoc method\\n       * @name $compile.directive.Attributes#$observe\\n       * @kind function\\n       *\\n       * @description\\n       * Observes an interpolated attribute.\\n       *\\n       * The observer function will be invoked once during the next `$digest` following\\n       * compilation. The observer is then invoked whenever the interpolated value\\n       * changes.\\n       *\\n       * @param {string} key Normalized key. (ie ngAttribute) .\\n       * @param {function(interpolatedValue)} fn Function that will be called whenever\\n                the interpolated value of the attribute changes.\\n       *        See the {@link guide/directive#text-and-attribute-bindings Directives} guide for more info.\\n       * @returns {function()} Returns a deregistration function for this observer.\\n       */\\n      $observe: function(key, fn) {\\n        var attrs = this,\\n            $$observers = (attrs.$$observers || (attrs.$$observers = createMap())),\\n            listeners = ($$observers[key] || ($$observers[key] = []));\\n\\n        listeners.push(fn);\\n        $rootScope.$evalAsync(function() {\\n          if (!listeners.$$inter && attrs.hasOwnProperty(key)) {\\n            // no one registered attribute interpolation function, so lets call it manually\\n            fn(attrs[key]);\\n          }\\n        });\\n\\n        return function() {\\n          arrayRemove(listeners, fn);\\n        };\\n      }\\n    };\\n\\n\\n    function safeAddClass($element, className) {\\n      try {\\n        $element.addClass(className);\\n      } catch (e) {\\n        // ignore, since it means that we are trying to set class on\\n        // SVG element, where class name is read-only.\\n      }\\n    }\\n\\n\\n    var startSymbol = $interpolate.startSymbol(),\\n        endSymbol = $interpolate.endSymbol(),\\n        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\\n            ? identity\\n            : function denormalizeTemplate(template) {\\n              return template.replace(/\\\\{\\\\{/g, startSymbol).replace(/}}/g, endSymbol);\\n        },\\n        NG_ATTR_BINDING = /^ngAttr[A-Z]/;\\n\\n    compile.$$addBindingInfo = debugInfoEnabled ? function $$addBindingInfo($element, binding) {\\n      var bindings = $element.data('$binding') || [];\\n\\n      if (isArray(binding)) {\\n        bindings = bindings.concat(binding);\\n      } else {\\n        bindings.push(binding);\\n      }\\n\\n      $element.data('$binding', bindings);\\n    } : noop;\\n\\n    compile.$$addBindingClass = debugInfoEnabled ? function $$addBindingClass($element) {\\n      safeAddClass($element, 'ng-binding');\\n    } : noop;\\n\\n    compile.$$addScopeInfo = debugInfoEnabled ? function $$addScopeInfo($element, scope, isolated, noTemplate) {\\n      var dataName = isolated ? (noTemplate ? '$isolateScopeNoTemplate' : '$isolateScope') : '$scope';\\n      $element.data(dataName, scope);\\n    } : noop;\\n\\n    compile.$$addScopeClass = debugInfoEnabled ? function $$addScopeClass($element, isolated) {\\n      safeAddClass($element, isolated ? 'ng-isolate-scope' : 'ng-scope');\\n    } : noop;\\n\\n    return compile;\\n\\n    //================================\\n\\n    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,\\n                        previousCompileContext) {\\n      if (!($compileNodes instanceof jqLite)) {\\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can\\n        // modify it.\\n        $compileNodes = jqLite($compileNodes);\\n      }\\n      // We can not compile top level text elements since text nodes can be merged and we will\\n      // not be able to attach scope data to them, so we will wrap them in <span>\\n      forEach($compileNodes, function(node, index) {\\n        if (node.nodeType == NODE_TYPE_TEXT && node.nodeValue.match(/\\\\S+/) /* non-empty */ ) {\\n          $compileNodes[index] = jqLite(node).wrap('<span></span>').parent()[0];\\n        }\\n      });\\n      var compositeLinkFn =\\n              compileNodes($compileNodes, transcludeFn, $compileNodes,\\n                           maxPriority, ignoreDirective, previousCompileContext);\\n      compile.$$addScopeClass($compileNodes);\\n      var namespace = null;\\n      return function publicLinkFn(scope, cloneConnectFn, options) {\\n        assertArg(scope, 'scope');\\n\\n        options = options || {};\\n        var parentBoundTranscludeFn = options.parentBoundTranscludeFn,\\n          transcludeControllers = options.transcludeControllers,\\n          futureParentElement = options.futureParentElement;\\n\\n        // When `parentBoundTranscludeFn` is passed, it is a\\n        // `controllersBoundTransclude` function (it was previously passed\\n        // as `transclude` to directive.link) so we must unwrap it to get\\n        // its `boundTranscludeFn`\\n        if (parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude) {\\n          parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude;\\n        }\\n\\n        if (!namespace) {\\n          namespace = detectNamespaceForChildElements(futureParentElement);\\n        }\\n        var $linkNode;\\n        if (namespace !== 'html') {\\n          // When using a directive with replace:true and templateUrl the $compileNodes\\n          // (or a child element inside of them)\\n          // might change, so we need to recreate the namespace adapted compileNodes\\n          // for call to the link function.\\n          // Note: This will already clone the nodes...\\n          $linkNode = jqLite(\\n            wrapTemplate(namespace, jqLite('<div>').append($compileNodes).html())\\n          );\\n        } else if (cloneConnectFn) {\\n          // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\\n          // and sometimes changes the structure of the DOM.\\n          $linkNode = JQLitePrototype.clone.call($compileNodes);\\n        } else {\\n          $linkNode = $compileNodes;\\n        }\\n\\n        if (transcludeControllers) {\\n          for (var controllerName in transcludeControllers) {\\n            $linkNode.data('$' + controllerName + 'Controller', transcludeControllers[controllerName].instance);\\n          }\\n        }\\n\\n        compile.$$addScopeInfo($linkNode, scope);\\n\\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);\\n        return $linkNode;\\n      };\\n    }\\n\\n    function detectNamespaceForChildElements(parentElement) {\\n      // TODO: Make this detect MathML as well...\\n      var node = parentElement && parentElement[0];\\n      if (!node) {\\n        return 'html';\\n      } else {\\n        return nodeName_(node) !== 'foreignobject' && node.toString().match(/SVG/) ? 'svg' : 'html';\\n      }\\n    }\\n\\n    /**\\n     * Compile function matches each node in nodeList against the directives. Once all directives\\n     * for a particular node are collected their compile functions are executed. The compile\\n     * functions return values - the linking functions - are combined into a composite linking\\n     * function, which is the a linking function for the node.\\n     *\\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then\\n     *        the rootElement must be set the jqLite collection of the compile root. This is\\n     *        needed so that the jqLite collection items can be replaced with widgets.\\n     * @param {number=} maxPriority Max directive priority.\\n     * @returns {Function} A composite linking function of all of the matched directives or null.\\n     */\\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,\\n                            previousCompileContext) {\\n      var linkFns = [],\\n          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, nodeLinkFnFound;\\n\\n      for (var i = 0; i < nodeList.length; i++) {\\n        attrs = new Attributes();\\n\\n        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\\n        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,\\n                                        ignoreDirective);\\n\\n        nodeLinkFn = (directives.length)\\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,\\n                                      null, [], [], previousCompileContext)\\n            : null;\\n\\n        if (nodeLinkFn && nodeLinkFn.scope) {\\n          compile.$$addScopeClass(attrs.$$element);\\n        }\\n\\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||\\n                      !(childNodes = nodeList[i].childNodes) ||\\n                      !childNodes.length)\\n            ? null\\n            : compileNodes(childNodes,\\n                 nodeLinkFn ? (\\n                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)\\n                     && nodeLinkFn.transclude) : transcludeFn);\\n\\n        if (nodeLinkFn || childLinkFn) {\\n          linkFns.push(i, nodeLinkFn, childLinkFn);\\n          linkFnFound = true;\\n          nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn;\\n        }\\n\\n        //use the previous context only for the first element in the virtual group\\n        previousCompileContext = null;\\n      }\\n\\n      // return a linking function if we have found anything, null otherwise\\n      return linkFnFound ? compositeLinkFn : null;\\n\\n      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {\\n        var nodeLinkFn, childLinkFn, node, childScope, i, ii, idx, childBoundTranscludeFn;\\n        var stableNodeList;\\n\\n\\n        if (nodeLinkFnFound) {\\n          // copy nodeList so that if a nodeLinkFn removes or adds an element at this DOM level our\\n          // offsets don't get screwed up\\n          var nodeListLength = nodeList.length;\\n          stableNodeList = new Array(nodeListLength);\\n\\n          // create a sparse array by only copying the elements which have a linkFn\\n          for (i = 0; i < linkFns.length; i+=3) {\\n            idx = linkFns[i];\\n            stableNodeList[idx] = nodeList[idx];\\n          }\\n        } else {\\n          stableNodeList = nodeList;\\n        }\\n\\n        for (i = 0, ii = linkFns.length; i < ii;) {\\n          node = stableNodeList[linkFns[i++]];\\n          nodeLinkFn = linkFns[i++];\\n          childLinkFn = linkFns[i++];\\n\\n          if (nodeLinkFn) {\\n            if (nodeLinkFn.scope) {\\n              childScope = scope.$new();\\n              compile.$$addScopeInfo(jqLite(node), childScope);\\n            } else {\\n              childScope = scope;\\n            }\\n\\n            if (nodeLinkFn.transcludeOnThisElement) {\\n              childBoundTranscludeFn = createBoundTranscludeFn(\\n                  scope, nodeLinkFn.transclude, parentBoundTranscludeFn,\\n                  nodeLinkFn.elementTranscludeOnThisElement);\\n\\n            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {\\n              childBoundTranscludeFn = parentBoundTranscludeFn;\\n\\n            } else if (!parentBoundTranscludeFn && transcludeFn) {\\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);\\n\\n            } else {\\n              childBoundTranscludeFn = null;\\n            }\\n\\n            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);\\n\\n          } else if (childLinkFn) {\\n            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);\\n          }\\n        }\\n      }\\n    }\\n\\n    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn, elementTransclusion) {\\n\\n      var boundTranscludeFn = function(transcludedScope, cloneFn, controllers, futureParentElement, containingScope) {\\n\\n        if (!transcludedScope) {\\n          transcludedScope = scope.$new(false, containingScope);\\n          transcludedScope.$$transcluded = true;\\n        }\\n\\n        return transcludeFn(transcludedScope, cloneFn, {\\n          parentBoundTranscludeFn: previousBoundTranscludeFn,\\n          transcludeControllers: controllers,\\n          futureParentElement: futureParentElement\\n        });\\n      };\\n\\n      return boundTranscludeFn;\\n    }\\n\\n    /**\\n     * Looks for directives on the given node and adds them to the directive collection which is\\n     * sorted.\\n     *\\n     * @param node Node to search.\\n     * @param directives An array to which the directives are added to. This array is sorted before\\n     *        the function returns.\\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\\n     * @param {number=} maxPriority Max directive priority.\\n     */\\n    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {\\n      var nodeType = node.nodeType,\\n          attrsMap = attrs.$attr,\\n          match,\\n          className;\\n\\n      switch (nodeType) {\\n        case NODE_TYPE_ELEMENT: /* Element */\\n          // use the node name: <directive>\\n          addDirective(directives,\\n              directiveNormalize(nodeName_(node)), 'E', maxPriority, ignoreDirective);\\n\\n          // iterate over the attributes\\n          for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes,\\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\\n            var attrStartName = false;\\n            var attrEndName = false;\\n\\n            attr = nAttrs[j];\\n            name = attr.name;\\n            value = trim(attr.value);\\n\\n            // support ngAttr attribute binding\\n            ngAttrName = directiveNormalize(name);\\n            if (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) {\\n              name = name.replace(PREFIX_REGEXP, '')\\n                .substr(8).replace(/_(.)/g, function(match, letter) {\\n                  return letter.toUpperCase();\\n                });\\n            }\\n\\n            var directiveNName = ngAttrName.replace(/(Start|End)$/, '');\\n            if (directiveIsMultiElement(directiveNName)) {\\n              if (ngAttrName === directiveNName + 'Start') {\\n                attrStartName = name;\\n                attrEndName = name.substr(0, name.length - 5) + 'end';\\n                name = name.substr(0, name.length - 6);\\n              }\\n            }\\n\\n            nName = directiveNormalize(name.toLowerCase());\\n            attrsMap[nName] = name;\\n            if (isNgAttr || !attrs.hasOwnProperty(nName)) {\\n                attrs[nName] = value;\\n                if (getBooleanAttrName(node, nName)) {\\n                  attrs[nName] = true; // presence means true\\n                }\\n            }\\n            addAttrInterpolateDirective(node, directives, value, nName, isNgAttr);\\n            addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,\\n                          attrEndName);\\n          }\\n\\n          // use class as directive\\n          className = node.className;\\n          if (isObject(className)) {\\n              // Maybe SVGAnimatedString\\n              className = className.animVal;\\n          }\\n          if (isString(className) && className !== '') {\\n            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\\n              nName = directiveNormalize(match[2]);\\n              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {\\n                attrs[nName] = trim(match[3]);\\n              }\\n              className = className.substr(match.index + match[0].length);\\n            }\\n          }\\n          break;\\n        case NODE_TYPE_TEXT: /* Text Node */\\n          addTextInterpolateDirective(directives, node.nodeValue);\\n          break;\\n        case NODE_TYPE_COMMENT: /* Comment */\\n          try {\\n            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\\n            if (match) {\\n              nName = directiveNormalize(match[1]);\\n              if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {\\n                attrs[nName] = trim(match[2]);\\n              }\\n            }\\n          } catch (e) {\\n            // turns out that under some circumstances IE9 throws errors when one attempts to read\\n            // comment's node value.\\n            // Just ignore it and continue. (Can't seem to reproduce in test case.)\\n          }\\n          break;\\n      }\\n\\n      directives.sort(byPriority);\\n      return directives;\\n    }\\n\\n    /**\\n     * Given a node with an directive-start it collects all of the siblings until it finds\\n     * directive-end.\\n     * @param node\\n     * @param attrStart\\n     * @param attrEnd\\n     * @returns {*}\\n     */\\n    function groupScan(node, attrStart, attrEnd) {\\n      var nodes = [];\\n      var depth = 0;\\n      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {\\n        do {\\n          if (!node) {\\n            throw $compileMinErr('uterdir',\\n                      \\\"Unterminated attribute, found '{0}' but no matching '{1}' found.\\\",\\n                      attrStart, attrEnd);\\n          }\\n          if (node.nodeType == NODE_TYPE_ELEMENT) {\\n            if (node.hasAttribute(attrStart)) depth++;\\n            if (node.hasAttribute(attrEnd)) depth--;\\n          }\\n          nodes.push(node);\\n          node = node.nextSibling;\\n        } while (depth > 0);\\n      } else {\\n        nodes.push(node);\\n      }\\n\\n      return jqLite(nodes);\\n    }\\n\\n    /**\\n     * Wrapper for linking function which converts normal linking function into a grouped\\n     * linking function.\\n     * @param linkFn\\n     * @param attrStart\\n     * @param attrEnd\\n     * @returns {Function}\\n     */\\n    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {\\n      return function(scope, element, attrs, controllers, transcludeFn) {\\n        element = groupScan(element[0], attrStart, attrEnd);\\n        return linkFn(scope, element, attrs, controllers, transcludeFn);\\n      };\\n    }\\n\\n    /**\\n     * Once the directives have been collected, their compile functions are executed. This method\\n     * is responsible for inlining directive templates as well as terminating the application\\n     * of the directives if the terminal directive has been reached.\\n     *\\n     * @param {Array} directives Array of collected directives to execute their compile function.\\n     *        this needs to be pre-sorted by priority order.\\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\\n     * @param {Object} templateAttrs The shared attribute function\\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\\n     *                                                  scope argument is auto-generated to the new\\n     *                                                  child of the transcluded parent scope.\\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\\n     *                              argument has the root jqLite array so that we can replace nodes\\n     *                              on it.\\n     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when\\n     *                                           compiling the transclusion.\\n     * @param {Array.<Function>} preLinkFns\\n     * @param {Array.<Function>} postLinkFns\\n     * @param {Object} previousCompileContext Context used for previous compilation of the current\\n     *                                        node\\n     * @returns {Function} linkFn\\n     */\\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,\\n                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,\\n                                   previousCompileContext) {\\n      previousCompileContext = previousCompileContext || {};\\n\\n      var terminalPriority = -Number.MAX_VALUE,\\n          newScopeDirective,\\n          controllerDirectives = previousCompileContext.controllerDirectives,\\n          controllers,\\n          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,\\n          templateDirective = previousCompileContext.templateDirective,\\n          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,\\n          hasTranscludeDirective = false,\\n          hasTemplate = false,\\n          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,\\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\\n          directive,\\n          directiveName,\\n          $template,\\n          replaceDirective = originalReplaceDirective,\\n          childTranscludeFn = transcludeFn,\\n          linkFn,\\n          directiveValue;\\n\\n      // executes all directives on the current element\\n      for (var i = 0, ii = directives.length; i < ii; i++) {\\n        directive = directives[i];\\n        var attrStart = directive.$$start;\\n        var attrEnd = directive.$$end;\\n\\n        // collect multiblock sections\\n        if (attrStart) {\\n          $compileNode = groupScan(compileNode, attrStart, attrEnd);\\n        }\\n        $template = undefined;\\n\\n        if (terminalPriority > directive.priority) {\\n          break; // prevent further processing of directives\\n        }\\n\\n        if (directiveValue = directive.scope) {\\n\\n          // skip the check for directives with async templates, we'll check the derived sync\\n          // directive when the template arrives\\n          if (!directive.templateUrl) {\\n            if (isObject(directiveValue)) {\\n              // This directive is trying to add an isolated scope.\\n              // Check that there is no scope of any kind already\\n              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective || newScopeDirective,\\n                                directive, $compileNode);\\n              newIsolateScopeDirective = directive;\\n            } else {\\n              // This directive is trying to add a child scope.\\n              // Check that there is no isolated scope already\\n              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,\\n                                $compileNode);\\n            }\\n          }\\n\\n          newScopeDirective = newScopeDirective || directive;\\n        }\\n\\n        directiveName = directive.name;\\n\\n        if (!directive.templateUrl && directive.controller) {\\n          directiveValue = directive.controller;\\n          controllerDirectives = controllerDirectives || {};\\n          assertNoDuplicate(\\\"'\\\" + directiveName + \\\"' controller\\\",\\n              controllerDirectives[directiveName], directive, $compileNode);\\n          controllerDirectives[directiveName] = directive;\\n        }\\n\\n        if (directiveValue = directive.transclude) {\\n          hasTranscludeDirective = true;\\n\\n          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.\\n          // This option should only be used by directives that know how to safely handle element transclusion,\\n          // where the transcluded nodes are added or replaced after linking.\\n          if (!directive.$$tlb) {\\n            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);\\n            nonTlbTranscludeDirective = directive;\\n          }\\n\\n          if (directiveValue == 'element') {\\n            hasElementTranscludeDirective = true;\\n            terminalPriority = directive.priority;\\n            $template = $compileNode;\\n            $compileNode = templateAttrs.$$element =\\n                jqLite(document.createComment(' ' + directiveName + ': ' +\\n                                              templateAttrs[directiveName] + ' '));\\n            compileNode = $compileNode[0];\\n            replaceWith(jqCollection, sliceArgs($template), compileNode);\\n\\n            childTranscludeFn = compile($template, transcludeFn, terminalPriority,\\n                                        replaceDirective && replaceDirective.name, {\\n                                          // Don't pass in:\\n                                          // - controllerDirectives - otherwise we'll create duplicates controllers\\n                                          // - newIsolateScopeDirective or templateDirective - combining templates with\\n                                          //   element transclusion doesn't make sense.\\n                                          //\\n                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion\\n                                          // on the same element more than once.\\n                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective\\n                                        });\\n          } else {\\n            $template = jqLite(jqLiteClone(compileNode)).contents();\\n            $compileNode.empty(); // clear contents\\n            childTranscludeFn = compile($template, transcludeFn);\\n          }\\n        }\\n\\n        if (directive.template) {\\n          hasTemplate = true;\\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\\n          templateDirective = directive;\\n\\n          directiveValue = (isFunction(directive.template))\\n              ? directive.template($compileNode, templateAttrs)\\n              : directive.template;\\n\\n          directiveValue = denormalizeTemplate(directiveValue);\\n\\n          if (directive.replace) {\\n            replaceDirective = directive;\\n            if (jqLiteIsTextNode(directiveValue)) {\\n              $template = [];\\n            } else {\\n              $template = removeComments(wrapTemplate(directive.templateNamespace, trim(directiveValue)));\\n            }\\n            compileNode = $template[0];\\n\\n            if ($template.length != 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {\\n              throw $compileMinErr('tplrt',\\n                  \\\"Template for directive '{0}' must have exactly one root element. {1}\\\",\\n                  directiveName, '');\\n            }\\n\\n            replaceWith(jqCollection, $compileNode, compileNode);\\n\\n            var newTemplateAttrs = {$attr: {}};\\n\\n            // combine directives from the original node and from the template:\\n            // - take the array of directives for this element\\n            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)\\n            // - collect directives from the template and sort them by priority\\n            // - combine directives as: processed + template + unprocessed\\n            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);\\n            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));\\n\\n            if (newIsolateScopeDirective) {\\n              markDirectivesAsIsolate(templateDirectives);\\n            }\\n            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);\\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\\n\\n            ii = directives.length;\\n          } else {\\n            $compileNode.html(directiveValue);\\n          }\\n        }\\n\\n        if (directive.templateUrl) {\\n          hasTemplate = true;\\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\\n          templateDirective = directive;\\n\\n          if (directive.replace) {\\n            replaceDirective = directive;\\n          }\\n\\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,\\n              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {\\n                controllerDirectives: controllerDirectives,\\n                newIsolateScopeDirective: newIsolateScopeDirective,\\n                templateDirective: templateDirective,\\n                nonTlbTranscludeDirective: nonTlbTranscludeDirective\\n              });\\n          ii = directives.length;\\n        } else if (directive.compile) {\\n          try {\\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\\n            if (isFunction(linkFn)) {\\n              addLinkFns(null, linkFn, attrStart, attrEnd);\\n            } else if (linkFn) {\\n              addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd);\\n            }\\n          } catch (e) {\\n            $exceptionHandler(e, startingTag($compileNode));\\n          }\\n        }\\n\\n        if (directive.terminal) {\\n          nodeLinkFn.terminal = true;\\n          terminalPriority = Math.max(terminalPriority, directive.priority);\\n        }\\n\\n      }\\n\\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;\\n      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;\\n      nodeLinkFn.elementTranscludeOnThisElement = hasElementTranscludeDirective;\\n      nodeLinkFn.templateOnThisElement = hasTemplate;\\n      nodeLinkFn.transclude = childTranscludeFn;\\n\\n      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;\\n\\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\\n      return nodeLinkFn;\\n\\n      ////////////////////\\n\\n      function addLinkFns(pre, post, attrStart, attrEnd) {\\n        if (pre) {\\n          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);\\n          pre.require = directive.require;\\n          pre.directiveName = directiveName;\\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\\n            pre = cloneAndAnnotateFn(pre, {isolateScope: true});\\n          }\\n          preLinkFns.push(pre);\\n        }\\n        if (post) {\\n          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);\\n          post.require = directive.require;\\n          post.directiveName = directiveName;\\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\\n            post = cloneAndAnnotateFn(post, {isolateScope: true});\\n          }\\n          postLinkFns.push(post);\\n        }\\n      }\\n\\n\\n      function getControllers(directiveName, require, $element, elementControllers) {\\n        var value, retrievalMethod = 'data', optional = false;\\n        var $searchElement = $element;\\n        var match;\\n        if (isString(require)) {\\n          match = require.match(REQUIRE_PREFIX_REGEXP);\\n          require = require.substring(match[0].length);\\n\\n          if (match[3]) {\\n            if (match[1]) match[3] = null;\\n            else match[1] = match[3];\\n          }\\n          if (match[1] === '^') {\\n            retrievalMethod = 'inheritedData';\\n          } else if (match[1] === '^^') {\\n            retrievalMethod = 'inheritedData';\\n            $searchElement = $element.parent();\\n          }\\n          if (match[2] === '?') {\\n            optional = true;\\n          }\\n\\n          value = null;\\n\\n          if (elementControllers && retrievalMethod === 'data') {\\n            if (value = elementControllers[require]) {\\n              value = value.instance;\\n            }\\n          }\\n          value = value || $searchElement[retrievalMethod]('$' + require + 'Controller');\\n\\n          if (!value && !optional) {\\n            throw $compileMinErr('ctreq',\\n                \\\"Controller '{0}', required by directive '{1}', can't be found!\\\",\\n                require, directiveName);\\n          }\\n          return value || null;\\n        } else if (isArray(require)) {\\n          value = [];\\n          forEach(require, function(require) {\\n            value.push(getControllers(directiveName, require, $element, elementControllers));\\n          });\\n        }\\n        return value;\\n      }\\n\\n\\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\\n        var i, ii, linkFn, controller, isolateScope, elementControllers, transcludeFn, $element,\\n            attrs;\\n\\n        if (compileNode === linkNode) {\\n          attrs = templateAttrs;\\n          $element = templateAttrs.$$element;\\n        } else {\\n          $element = jqLite(linkNode);\\n          attrs = new Attributes($element, templateAttrs);\\n        }\\n\\n        if (newIsolateScopeDirective) {\\n          isolateScope = scope.$new(true);\\n        }\\n\\n        if (boundTranscludeFn) {\\n          // track `boundTranscludeFn` so it can be unwrapped if `transcludeFn`\\n          // is later passed as `parentBoundTranscludeFn` to `publicLinkFn`\\n          transcludeFn = controllersBoundTransclude;\\n          transcludeFn.$$boundTransclude = boundTranscludeFn;\\n        }\\n\\n        if (controllerDirectives) {\\n          // TODO: merge `controllers` and `elementControllers` into single object.\\n          controllers = {};\\n          elementControllers = {};\\n          forEach(controllerDirectives, function(directive) {\\n            var locals = {\\n              $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,\\n              $element: $element,\\n              $attrs: attrs,\\n              $transclude: transcludeFn\\n            }, controllerInstance;\\n\\n            controller = directive.controller;\\n            if (controller == '@') {\\n              controller = attrs[directive.name];\\n            }\\n\\n            controllerInstance = $controller(controller, locals, true, directive.controllerAs);\\n\\n            // For directives with element transclusion the element is a comment,\\n            // but jQuery .data doesn't support attaching data to comment nodes as it's hard to\\n            // clean up (http://bugs.jquery.com/ticket/8335).\\n            // Instead, we save the controllers for the element in a local hash and attach to .data\\n            // later, once we have the actual element.\\n            elementControllers[directive.name] = controllerInstance;\\n            if (!hasElementTranscludeDirective) {\\n              $element.data('$' + directive.name + 'Controller', controllerInstance.instance);\\n            }\\n\\n            controllers[directive.name] = controllerInstance;\\n          });\\n        }\\n\\n        if (newIsolateScopeDirective) {\\n          compile.$$addScopeInfo($element, isolateScope, true, !(templateDirective && (templateDirective === newIsolateScopeDirective ||\\n              templateDirective === newIsolateScopeDirective.$$originalDirective)));\\n          compile.$$addScopeClass($element, true);\\n\\n          var isolateScopeController = controllers && controllers[newIsolateScopeDirective.name];\\n          var isolateBindingContext = isolateScope;\\n          if (isolateScopeController && isolateScopeController.identifier &&\\n              newIsolateScopeDirective.bindToController === true) {\\n            isolateBindingContext = isolateScopeController.instance;\\n          }\\n\\n          forEach(isolateScope.$$isolateBindings = newIsolateScopeDirective.$$isolateBindings, function(definition, scopeName) {\\n            var attrName = definition.attrName,\\n                optional = definition.optional,\\n                mode = definition.mode, // @, =, or &\\n                lastValue,\\n                parentGet, parentSet, compare;\\n\\n            switch (mode) {\\n\\n              case '@':\\n                attrs.$observe(attrName, function(value) {\\n                  isolateBindingContext[scopeName] = value;\\n                });\\n                attrs.$$observers[attrName].$$scope = scope;\\n                if (attrs[attrName]) {\\n                  // If the attribute has been provided then we trigger an interpolation to ensure\\n                  // the value is there for use in the link fn\\n                  isolateBindingContext[scopeName] = $interpolate(attrs[attrName])(scope);\\n                }\\n                break;\\n\\n              case '=':\\n                if (optional && !attrs[attrName]) {\\n                  return;\\n                }\\n                parentGet = $parse(attrs[attrName]);\\n                if (parentGet.literal) {\\n                  compare = equals;\\n                } else {\\n                  compare = function(a, b) { return a === b || (a !== a && b !== b); };\\n                }\\n                parentSet = parentGet.assign || function() {\\n                  // reset the change, or we will throw this exception on every $digest\\n                  lastValue = isolateBindingContext[scopeName] = parentGet(scope);\\n                  throw $compileMinErr('nonassign',\\n                      \\\"Expression '{0}' used with directive '{1}' is non-assignable!\\\",\\n                      attrs[attrName], newIsolateScopeDirective.name);\\n                };\\n                lastValue = isolateBindingContext[scopeName] = parentGet(scope);\\n                var parentValueWatch = function parentValueWatch(parentValue) {\\n                  if (!compare(parentValue, isolateBindingContext[scopeName])) {\\n                    // we are out of sync and need to copy\\n                    if (!compare(parentValue, lastValue)) {\\n                      // parent changed and it has precedence\\n                      isolateBindingContext[scopeName] = parentValue;\\n                    } else {\\n                      // if the parent can be assigned then do so\\n                      parentSet(scope, parentValue = isolateBindingContext[scopeName]);\\n                    }\\n                  }\\n                  return lastValue = parentValue;\\n                };\\n                parentValueWatch.$stateful = true;\\n                var unwatch;\\n                if (definition.collection) {\\n                  unwatch = scope.$watchCollection(attrs[attrName], parentValueWatch);\\n                } else {\\n                  unwatch = scope.$watch($parse(attrs[attrName], parentValueWatch), null, parentGet.literal);\\n                }\\n                isolateScope.$on('$destroy', unwatch);\\n                break;\\n\\n              case '&':\\n                parentGet = $parse(attrs[attrName]);\\n                isolateBindingContext[scopeName] = function(locals) {\\n                  return parentGet(scope, locals);\\n                };\\n                break;\\n            }\\n          });\\n        }\\n        if (controllers) {\\n          forEach(controllers, function(controller) {\\n            controller();\\n          });\\n          controllers = null;\\n        }\\n\\n        // PRELINKING\\n        for (i = 0, ii = preLinkFns.length; i < ii; i++) {\\n          linkFn = preLinkFns[i];\\n          invokeLinkFn(linkFn,\\n              linkFn.isolateScope ? isolateScope : scope,\\n              $element,\\n              attrs,\\n              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),\\n              transcludeFn\\n          );\\n        }\\n\\n        // RECURSION\\n        // We only pass the isolate scope, if the isolate directive has a template,\\n        // otherwise the child elements do not belong to the isolate directive.\\n        var scopeToChild = scope;\\n        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {\\n          scopeToChild = isolateScope;\\n        }\\n        childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);\\n\\n        // POSTLINKING\\n        for (i = postLinkFns.length - 1; i >= 0; i--) {\\n          linkFn = postLinkFns[i];\\n          invokeLinkFn(linkFn,\\n              linkFn.isolateScope ? isolateScope : scope,\\n              $element,\\n              attrs,\\n              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),\\n              transcludeFn\\n          );\\n        }\\n\\n        // This is the function that is injected as `$transclude`.\\n        // Note: all arguments are optional!\\n        function controllersBoundTransclude(scope, cloneAttachFn, futureParentElement) {\\n          var transcludeControllers;\\n\\n          // No scope passed in:\\n          if (!isScope(scope)) {\\n            futureParentElement = cloneAttachFn;\\n            cloneAttachFn = scope;\\n            scope = undefined;\\n          }\\n\\n          if (hasElementTranscludeDirective) {\\n            transcludeControllers = elementControllers;\\n          }\\n          if (!futureParentElement) {\\n            futureParentElement = hasElementTranscludeDirective ? $element.parent() : $element;\\n          }\\n          return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);\\n        }\\n      }\\n    }\\n\\n    function markDirectivesAsIsolate(directives) {\\n      // mark all directives as needing isolate scope.\\n      for (var j = 0, jj = directives.length; j < jj; j++) {\\n        directives[j] = inherit(directives[j], {$$isolateScope: true});\\n      }\\n    }\\n\\n    /**\\n     * looks up the directive and decorates it with exception handling and proper parameters. We\\n     * call this the boundDirective.\\n     *\\n     * @param {string} name name of the directive to look up.\\n     * @param {string} location The directive must be found in specific format.\\n     *   String containing any of theses characters:\\n     *\\n     *   * `E`: element name\\n     *   * `A': attribute\\n     *   * `C`: class\\n     *   * `M`: comment\\n     * @returns {boolean} true if directive was added.\\n     */\\n    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,\\n                          endAttrName) {\\n      if (name === ignoreDirective) return null;\\n      var match = null;\\n      if (hasDirectives.hasOwnProperty(name)) {\\n        for (var directive, directives = $injector.get(name + Suffix),\\n            i = 0, ii = directives.length; i < ii; i++) {\\n          try {\\n            directive = directives[i];\\n            if ((maxPriority === undefined || maxPriority > directive.priority) &&\\n                 directive.restrict.indexOf(location) != -1) {\\n              if (startAttrName) {\\n                directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});\\n              }\\n              tDirectives.push(directive);\\n              match = directive;\\n            }\\n          } catch (e) { $exceptionHandler(e); }\\n        }\\n      }\\n      return match;\\n    }\\n\\n\\n    /**\\n     * looks up the directive and returns true if it is a multi-element directive,\\n     * and therefore requires DOM nodes between -start and -end markers to be grouped\\n     * together.\\n     *\\n     * @param {string} name name of the directive to look up.\\n     * @returns true if directive was registered as multi-element.\\n     */\\n    function directiveIsMultiElement(name) {\\n      if (hasDirectives.hasOwnProperty(name)) {\\n        for (var directive, directives = $injector.get(name + Suffix),\\n            i = 0, ii = directives.length; i < ii; i++) {\\n          directive = directives[i];\\n          if (directive.multiElement) {\\n            return true;\\n          }\\n        }\\n      }\\n      return false;\\n    }\\n\\n    /**\\n     * When the element is replaced with HTML template then the new attributes\\n     * on the template need to be merged with the existing attributes in the DOM.\\n     * The desired effect is to have both of the attributes present.\\n     *\\n     * @param {object} dst destination attributes (original DOM)\\n     * @param {object} src source attributes (from the directive template)\\n     */\\n    function mergeTemplateAttributes(dst, src) {\\n      var srcAttr = src.$attr,\\n          dstAttr = dst.$attr,\\n          $element = dst.$$element;\\n\\n      // reapply the old attributes to the new element\\n      forEach(dst, function(value, key) {\\n        if (key.charAt(0) != '$') {\\n          if (src[key] && src[key] !== value) {\\n            value += (key === 'style' ? ';' : ' ') + src[key];\\n          }\\n          dst.$set(key, value, true, srcAttr[key]);\\n        }\\n      });\\n\\n      // copy the new attributes on the old attrs object\\n      forEach(src, function(value, key) {\\n        if (key == 'class') {\\n          safeAddClass($element, value);\\n          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\\n        } else if (key == 'style') {\\n          $element.attr('style', $element.attr('style') + ';' + value);\\n          dst['style'] = (dst['style'] ? dst['style'] + ';' : '') + value;\\n          // `dst` will never contain hasOwnProperty as DOM parser won't let it.\\n          // You will get an \\\"InvalidCharacterError: DOM Exception 5\\\" error if you\\n          // have an attribute like \\\"has-own-property\\\" or \\\"data-has-own-property\\\", etc.\\n        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\\n          dst[key] = value;\\n          dstAttr[key] = srcAttr[key];\\n        }\\n      });\\n    }\\n\\n\\n    function compileTemplateUrl(directives, $compileNode, tAttrs,\\n        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {\\n      var linkQueue = [],\\n          afterTemplateNodeLinkFn,\\n          afterTemplateChildLinkFn,\\n          beforeTemplateCompileNode = $compileNode[0],\\n          origAsyncDirective = directives.shift(),\\n          // The fact that we have to copy and patch the directive seems wrong!\\n          derivedSyncDirective = extend({}, origAsyncDirective, {\\n            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective\\n          }),\\n          templateUrl = (isFunction(origAsyncDirective.templateUrl))\\n              ? origAsyncDirective.templateUrl($compileNode, tAttrs)\\n              : origAsyncDirective.templateUrl,\\n          templateNamespace = origAsyncDirective.templateNamespace;\\n\\n      $compileNode.empty();\\n\\n      $templateRequest($sce.getTrustedResourceUrl(templateUrl))\\n        .then(function(content) {\\n          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;\\n\\n          content = denormalizeTemplate(content);\\n\\n          if (origAsyncDirective.replace) {\\n            if (jqLiteIsTextNode(content)) {\\n              $template = [];\\n            } else {\\n              $template = removeComments(wrapTemplate(templateNamespace, trim(content)));\\n            }\\n            compileNode = $template[0];\\n\\n            if ($template.length != 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {\\n              throw $compileMinErr('tplrt',\\n                  \\\"Template for directive '{0}' must have exactly one root element. {1}\\\",\\n                  origAsyncDirective.name, templateUrl);\\n            }\\n\\n            tempTemplateAttrs = {$attr: {}};\\n            replaceWith($rootElement, $compileNode, compileNode);\\n            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);\\n\\n            if (isObject(origAsyncDirective.scope)) {\\n              markDirectivesAsIsolate(templateDirectives);\\n            }\\n            directives = templateDirectives.concat(directives);\\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\\n          } else {\\n            compileNode = beforeTemplateCompileNode;\\n            $compileNode.html(content);\\n          }\\n\\n          directives.unshift(derivedSyncDirective);\\n\\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,\\n              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,\\n              previousCompileContext);\\n          forEach($rootElement, function(node, i) {\\n            if (node == compileNode) {\\n              $rootElement[i] = $compileNode[0];\\n            }\\n          });\\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\\n\\n          while (linkQueue.length) {\\n            var scope = linkQueue.shift(),\\n                beforeTemplateLinkNode = linkQueue.shift(),\\n                linkRootElement = linkQueue.shift(),\\n                boundTranscludeFn = linkQueue.shift(),\\n                linkNode = $compileNode[0];\\n\\n            if (scope.$$destroyed) continue;\\n\\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\\n              var oldClasses = beforeTemplateLinkNode.className;\\n\\n              if (!(previousCompileContext.hasElementTranscludeDirective &&\\n                  origAsyncDirective.replace)) {\\n                // it was cloned therefore we have to clone as well.\\n                linkNode = jqLiteClone(compileNode);\\n              }\\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\\n\\n              // Copy in CSS classes from original node\\n              safeAddClass(jqLite(linkNode), oldClasses);\\n            }\\n            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\\n            } else {\\n              childBoundTranscludeFn = boundTranscludeFn;\\n            }\\n            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,\\n              childBoundTranscludeFn);\\n          }\\n          linkQueue = null;\\n        });\\n\\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {\\n        var childBoundTranscludeFn = boundTranscludeFn;\\n        if (scope.$$destroyed) return;\\n        if (linkQueue) {\\n          linkQueue.push(scope,\\n                         node,\\n                         rootElement,\\n                         childBoundTranscludeFn);\\n        } else {\\n          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\\n            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\\n          }\\n          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);\\n        }\\n      };\\n    }\\n\\n\\n    /**\\n     * Sorting function for bound directives.\\n     */\\n    function byPriority(a, b) {\\n      var diff = b.priority - a.priority;\\n      if (diff !== 0) return diff;\\n      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;\\n      return a.index - b.index;\\n    }\\n\\n\\n    function assertNoDuplicate(what, previousDirective, directive, element) {\\n      if (previousDirective) {\\n        throw $compileMinErr('multidir', 'Multiple directives [{0}, {1}] asking for {2} on: {3}',\\n            previousDirective.name, directive.name, what, startingTag(element));\\n      }\\n    }\\n\\n\\n    function addTextInterpolateDirective(directives, text) {\\n      var interpolateFn = $interpolate(text, true);\\n      if (interpolateFn) {\\n        directives.push({\\n          priority: 0,\\n          compile: function textInterpolateCompileFn(templateNode) {\\n            var templateNodeParent = templateNode.parent(),\\n                hasCompileParent = !!templateNodeParent.length;\\n\\n            // When transcluding a template that has bindings in the root\\n            // we don't have a parent and thus need to add the class during linking fn.\\n            if (hasCompileParent) compile.$$addBindingClass(templateNodeParent);\\n\\n            return function textInterpolateLinkFn(scope, node) {\\n              var parent = node.parent();\\n              if (!hasCompileParent) compile.$$addBindingClass(parent);\\n              compile.$$addBindingInfo(parent, interpolateFn.expressions);\\n              scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\\n                node[0].nodeValue = value;\\n              });\\n            };\\n          }\\n        });\\n      }\\n    }\\n\\n\\n    function wrapTemplate(type, template) {\\n      type = lowercase(type || 'html');\\n      switch (type) {\\n      case 'svg':\\n      case 'math':\\n        var wrapper = document.createElement('div');\\n        wrapper.innerHTML = '<' + type + '>' + template + '</' + type + '>';\\n        return wrapper.childNodes[0].childNodes;\\n      default:\\n        return template;\\n      }\\n    }\\n\\n\\n    function getTrustedContext(node, attrNormalizedName) {\\n      if (attrNormalizedName == \\\"srcdoc\\\") {\\n        return $sce.HTML;\\n      }\\n      var tag = nodeName_(node);\\n      // maction[xlink:href] can source SVG.  It's not limited to <maction>.\\n      if (attrNormalizedName == \\\"xlinkHref\\\" ||\\n          (tag == \\\"form\\\" && attrNormalizedName == \\\"action\\\") ||\\n          (tag != \\\"img\\\" && (attrNormalizedName == \\\"src\\\" ||\\n                            attrNormalizedName == \\\"ngSrc\\\"))) {\\n        return $sce.RESOURCE_URL;\\n      }\\n    }\\n\\n\\n    function addAttrInterpolateDirective(node, directives, value, name, allOrNothing) {\\n      var trustedContext = getTrustedContext(node, name);\\n      allOrNothing = ALL_OR_NOTHING_ATTRS[name] || allOrNothing;\\n\\n      var interpolateFn = $interpolate(value, true, trustedContext, allOrNothing);\\n\\n      // no interpolation found -> ignore\\n      if (!interpolateFn) return;\\n\\n\\n      if (name === \\\"multiple\\\" && nodeName_(node) === \\\"select\\\") {\\n        throw $compileMinErr(\\\"selmulti\\\",\\n            \\\"Binding to the 'multiple' attribute is not supported. Element: {0}\\\",\\n            startingTag(node));\\n      }\\n\\n      directives.push({\\n        priority: 100,\\n        compile: function() {\\n            return {\\n              pre: function attrInterpolatePreLinkFn(scope, element, attr) {\\n                var $$observers = (attr.$$observers || (attr.$$observers = {}));\\n\\n                if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {\\n                  throw $compileMinErr('nodomevents',\\n                      \\\"Interpolations for HTML DOM event attributes are disallowed.  Please use the \\\" +\\n                          \\\"ng- versions (such as ng-click instead of onclick) instead.\\\");\\n                }\\n\\n                // If the attribute has changed since last $interpolate()ed\\n                var newValue = attr[name];\\n                if (newValue !== value) {\\n                  // we need to interpolate again since the attribute value has been updated\\n                  // (e.g. by another directive's compile function)\\n                  // ensure unset/empty values make interpolateFn falsy\\n                  interpolateFn = newValue && $interpolate(newValue, true, trustedContext, allOrNothing);\\n                  value = newValue;\\n                }\\n\\n                // if attribute was updated so that there is no interpolation going on we don't want to\\n                // register any observers\\n                if (!interpolateFn) return;\\n\\n                // initialize attr object so that it's ready in case we need the value for isolate\\n                // scope initialization, otherwise the value would not be available from isolate\\n                // directive's linking fn during linking phase\\n                attr[name] = interpolateFn(scope);\\n\\n                ($$observers[name] || ($$observers[name] = [])).$$inter = true;\\n                (attr.$$observers && attr.$$observers[name].$$scope || scope).\\n                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {\\n                    //special case for class attribute addition + removal\\n                    //so that class changes can tap into the animation\\n                    //hooks provided by the $animate service. Be sure to\\n                    //skip animations when the first digest occurs (when\\n                    //both the new and the old values are the same) since\\n                    //the CSS classes are the non-interpolated values\\n                    if (name === 'class' && newValue != oldValue) {\\n                      attr.$updateClass(newValue, oldValue);\\n                    } else {\\n                      attr.$set(name, newValue);\\n                    }\\n                  });\\n              }\\n            };\\n          }\\n      });\\n    }\\n\\n\\n    /**\\n     * This is a special jqLite.replaceWith, which can replace items which\\n     * have no parents, provided that the containing jqLite collection is provided.\\n     *\\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\\n     *                               in the root of the tree.\\n     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep\\n     *                                  the shell, but replace its DOM node reference.\\n     * @param {Node} newNode The new DOM node.\\n     */\\n    function replaceWith($rootElement, elementsToRemove, newNode) {\\n      var firstElementToRemove = elementsToRemove[0],\\n          removeCount = elementsToRemove.length,\\n          parent = firstElementToRemove.parentNode,\\n          i, ii;\\n\\n      if ($rootElement) {\\n        for (i = 0, ii = $rootElement.length; i < ii; i++) {\\n          if ($rootElement[i] == firstElementToRemove) {\\n            $rootElement[i++] = newNode;\\n            for (var j = i, j2 = j + removeCount - 1,\\n                     jj = $rootElement.length;\\n                 j < jj; j++, j2++) {\\n              if (j2 < jj) {\\n                $rootElement[j] = $rootElement[j2];\\n              } else {\\n                delete $rootElement[j];\\n              }\\n            }\\n            $rootElement.length -= removeCount - 1;\\n\\n            // If the replaced element is also the jQuery .context then replace it\\n            // .context is a deprecated jQuery api, so we should set it only when jQuery set it\\n            // http://api.jquery.com/context/\\n            if ($rootElement.context === firstElementToRemove) {\\n              $rootElement.context = newNode;\\n            }\\n            break;\\n          }\\n        }\\n      }\\n\\n      if (parent) {\\n        parent.replaceChild(newNode, firstElementToRemove);\\n      }\\n\\n      // TODO(perf): what's this document fragment for? is it needed? can we at least reuse it?\\n      var fragment = document.createDocumentFragment();\\n      fragment.appendChild(firstElementToRemove);\\n\\n      // Copy over user data (that includes Angular's $scope etc.). Don't copy private\\n      // data here because there's no public interface in jQuery to do that and copying over\\n      // event listeners (which is the main use of private data) wouldn't work anyway.\\n      jqLite(newNode).data(jqLite(firstElementToRemove).data());\\n\\n      // Remove data of the replaced element. We cannot just call .remove()\\n      // on the element it since that would deallocate scope that is needed\\n      // for the new node. Instead, remove the data \\\"manually\\\".\\n      if (!jQuery) {\\n        delete jqLite.cache[firstElementToRemove[jqLite.expando]];\\n      } else {\\n        // jQuery 2.x doesn't expose the data storage. Use jQuery.cleanData to clean up after\\n        // the replaced element. The cleanData version monkey-patched by Angular would cause\\n        // the scope to be trashed and we do need the very same scope to work with the new\\n        // element. However, we cannot just cache the non-patched version and use it here as\\n        // that would break if another library patches the method after Angular does (one\\n        // example is jQuery UI). Instead, set a flag indicating scope destroying should be\\n        // skipped this one time.\\n        skipDestroyOnNextJQueryCleanData = true;\\n        jQuery.cleanData([firstElementToRemove]);\\n      }\\n\\n      for (var k = 1, kk = elementsToRemove.length; k < kk; k++) {\\n        var element = elementsToRemove[k];\\n        jqLite(element).remove(); // must do this way to clean up expando\\n        fragment.appendChild(element);\\n        delete elementsToRemove[k];\\n      }\\n\\n      elementsToRemove[0] = newNode;\\n      elementsToRemove.length = 1;\\n    }\\n\\n\\n    function cloneAndAnnotateFn(fn, annotation) {\\n      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);\\n    }\\n\\n\\n    function invokeLinkFn(linkFn, scope, $element, attrs, controllers, transcludeFn) {\\n      try {\\n        linkFn(scope, $element, attrs, controllers, transcludeFn);\\n      } catch (e) {\\n        $exceptionHandler(e, startingTag($element));\\n      }\\n    }\\n  }];\\n}\\n\\nvar PREFIX_REGEXP = /^((?:x|data)[\\\\:\\\\-_])/i;\\n/**\\n * Converts all accepted directives format into proper directive name.\\n * @param name Name to normalize\\n */\\nfunction directiveNormalize(name) {\\n  return camelCase(name.replace(PREFIX_REGEXP, ''));\\n}\\n\\n/**\\n * @ngdoc type\\n * @name $compile.directive.Attributes\\n *\\n * @description\\n * A shared object between directive compile / linking functions which contains normalized DOM\\n * element attributes. The values reflect current binding state `{{ }}`. The normalization is\\n * needed since all of these are treated as equivalent in Angular:\\n *\\n * ```\\n *    <span ng:bind=\\\"a\\\" ng-bind=\\\"a\\\" data-ng-bind=\\\"a\\\" x-ng-bind=\\\"a\\\">\\n * ```\\n */\\n\\n/**\\n * @ngdoc property\\n * @name $compile.directive.Attributes#$attr\\n *\\n * @description\\n * A map of DOM element attribute names to the normalized name. This is\\n * needed to do reverse lookup from normalized name back to actual name.\\n */\\n\\n\\n/**\\n * @ngdoc method\\n * @name $compile.directive.Attributes#$set\\n * @kind function\\n *\\n * @description\\n * Set DOM element attribute value.\\n *\\n *\\n * @param {string} name Normalized element attribute name of the property to modify. The name is\\n *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\\n *          property to the original name.\\n * @param {string} value Value to set the attribute to. The value can be an interpolated string.\\n */\\n\\n\\n\\n/**\\n * Closure compiler type information\\n */\\n\\nfunction nodesetLinkingFn(\\n  /* angular.Scope */ scope,\\n  /* NodeList */ nodeList,\\n  /* Element */ rootElement,\\n  /* function(Function) */ boundTranscludeFn\\n) {}\\n\\nfunction directiveLinkingFn(\\n  /* nodesetLinkingFn */ nodesetLinkingFn,\\n  /* angular.Scope */ scope,\\n  /* Node */ node,\\n  /* Element */ rootElement,\\n  /* function(Function) */ boundTranscludeFn\\n) {}\\n\\nfunction tokenDifference(str1, str2) {\\n  var values = '',\\n      tokens1 = str1.split(/\\\\s+/),\\n      tokens2 = str2.split(/\\\\s+/);\\n\\n  outer:\\n  for (var i = 0; i < tokens1.length; i++) {\\n    var token = tokens1[i];\\n    for (var j = 0; j < tokens2.length; j++) {\\n      if (token == tokens2[j]) continue outer;\\n    }\\n    values += (values.length > 0 ? ' ' : '') + token;\\n  }\\n  return values;\\n}\\n\\nfunction removeComments(jqNodes) {\\n  jqNodes = jqLite(jqNodes);\\n  var i = jqNodes.length;\\n\\n  if (i <= 1) {\\n    return jqNodes;\\n  }\\n\\n  while (i--) {\\n    var node = jqNodes[i];\\n    if (node.nodeType === NODE_TYPE_COMMENT) {\\n      splice.call(jqNodes, i, 1);\\n    }\\n  }\\n  return jqNodes;\\n}\\n\\n/**\\n * @ngdoc provider\\n * @name $controllerProvider\\n * @description\\n * The {@link ng.$controller $controller service} is used by Angular to create new\\n * controllers.\\n *\\n * This provider allows controller registration via the\\n * {@link ng.$controllerProvider#register register} method.\\n */\\nfunction $ControllerProvider() {\\n  var controllers = {},\\n      globals = false,\\n      CNTRL_REG = /^(\\\\S+)(\\\\s+as\\\\s+(\\\\w+))?$/;\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name $controllerProvider#register\\n   * @param {string|Object} name Controller name, or an object map of controllers where the keys are\\n   *    the names and the values are the constructors.\\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\\n   *    annotations in the array notation).\\n   */\\n  this.register = function(name, constructor) {\\n    assertNotHasOwnProperty(name, 'controller');\\n    if (isObject(name)) {\\n      extend(controllers, name);\\n    } else {\\n      controllers[name] = constructor;\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $controllerProvider#allowGlobals\\n   * @description If called, allows `$controller` to find controller constructors on `window`\\n   */\\n  this.allowGlobals = function() {\\n    globals = true;\\n  };\\n\\n\\n  this.$get = ['$injector', '$window', function($injector, $window) {\\n\\n    /**\\n     * @ngdoc service\\n     * @name $controller\\n     * @requires $injector\\n     *\\n     * @param {Function|string} constructor If called with a function then it's considered to be the\\n     *    controller constructor function. Otherwise it's considered to be a string which is used\\n     *    to retrieve the controller constructor using the following steps:\\n     *\\n     *    * check if a controller with given name is registered via `$controllerProvider`\\n     *    * check if evaluating the string on the current scope returns a constructor\\n     *    * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\\n     *      `window` object (not recommended)\\n     *\\n     *    The string can use the `controller as property` syntax, where the controller instance is published\\n     *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\\n     *    to work correctly.\\n     *\\n     * @param {Object} locals Injection locals for Controller.\\n     * @return {Object} Instance of given controller.\\n     *\\n     * @description\\n     * `$controller` service is responsible for instantiating controllers.\\n     *\\n     * It's just a simple call to {@link auto.$injector $injector}, but extracted into\\n     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).\\n     */\\n    return function(expression, locals, later, ident) {\\n      // PRIVATE API:\\n      //   param `later` --- indicates that the controller's constructor is invoked at a later time.\\n      //                     If true, $controller will allocate the object with the correct\\n      //                     prototype chain, but will not invoke the controller until a returned\\n      //                     callback is invoked.\\n      //   param `ident` --- An optional label which overrides the label parsed from the controller\\n      //                     expression, if any.\\n      var instance, match, constructor, identifier;\\n      later = later === true;\\n      if (ident && isString(ident)) {\\n        identifier = ident;\\n      }\\n\\n      if (isString(expression)) {\\n        match = expression.match(CNTRL_REG),\\n        constructor = match[1],\\n        identifier = identifier || match[3];\\n        expression = controllers.hasOwnProperty(constructor)\\n            ? controllers[constructor]\\n            : getter(locals.$scope, constructor, true) ||\\n                (globals ? getter($window, constructor, true) : undefined);\\n\\n        assertArgFn(expression, constructor, true);\\n      }\\n\\n      if (later) {\\n        // Instantiate controller later:\\n        // This machinery is used to create an instance of the object before calling the\\n        // controller's constructor itself.\\n        //\\n        // This allows properties to be added to the controller before the constructor is\\n        // invoked. Primarily, this is used for isolate scope bindings in $compile.\\n        //\\n        // This feature is not intended for use by applications, and is thus not documented\\n        // publicly.\\n        // Object creation: http://jsperf.com/create-constructor/2\\n        var controllerPrototype = (isArray(expression) ?\\n          expression[expression.length - 1] : expression).prototype;\\n        instance = Object.create(controllerPrototype || null);\\n\\n        if (identifier) {\\n          addIdentifier(locals, identifier, instance, constructor || expression.name);\\n        }\\n\\n        return extend(function() {\\n          $injector.invoke(expression, instance, locals, constructor);\\n          return instance;\\n        }, {\\n          instance: instance,\\n          identifier: identifier\\n        });\\n      }\\n\\n      instance = $injector.instantiate(expression, locals, constructor);\\n\\n      if (identifier) {\\n        addIdentifier(locals, identifier, instance, constructor || expression.name);\\n      }\\n\\n      return instance;\\n    };\\n\\n    function addIdentifier(locals, identifier, instance, name) {\\n      if (!(locals && isObject(locals.$scope))) {\\n        throw minErr('$controller')('noscp',\\n          \\\"Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.\\\",\\n          name, identifier);\\n      }\\n\\n      locals.$scope[identifier] = instance;\\n    }\\n  }];\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $document\\n * @requires $window\\n *\\n * @description\\n * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.\\n *\\n * @example\\n   <example module=\\\"documentExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <p>$document title: <b ng-bind=\\\"title\\\"></b></p>\\n         <p>window.document title: <b ng-bind=\\\"windowTitle\\\"></b></p>\\n       </div>\\n     </file>\\n     <file name=\\\"script.js\\\">\\n       angular.module('documentExample', [])\\n         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\\n           $scope.title = $document[0].title;\\n           $scope.windowTitle = angular.element(window.document)[0].title;\\n         }]);\\n     </file>\\n   </example>\\n */\\nfunction $DocumentProvider() {\\n  this.$get = ['$window', function(window) {\\n    return jqLite(window.document);\\n  }];\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $exceptionHandler\\n * @requires ng.$log\\n *\\n * @description\\n * Any uncaught exception in angular expressions is delegated to this service.\\n * The default implementation simply delegates to `$log.error` which logs it into\\n * the browser console.\\n *\\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\\n *\\n * ## Example:\\n *\\n * ```js\\n *   angular.module('exceptionOverride', []).factory('$exceptionHandler', function() {\\n *     return function(exception, cause) {\\n *       exception.message += ' (caused by \\\"' + cause + '\\\")';\\n *       throw exception;\\n *     };\\n *   });\\n * ```\\n *\\n * This example will override the normal action of `$exceptionHandler`, to make angular\\n * exceptions fail hard when they happen, instead of just logging to the console.\\n *\\n * <hr />\\n * Note, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\\n * methods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\\n * (unless executed during a digest).\\n *\\n * If you wish, you can manually delegate exceptions, e.g.\\n * `try { ... } catch(e) { $exceptionHandler(e); }`\\n *\\n * @param {Error} exception Exception associated with the error.\\n * @param {string=} cause optional information about the context in which\\n *       the error was thrown.\\n *\\n */\\nfunction $ExceptionHandlerProvider() {\\n  this.$get = ['$log', function($log) {\\n    return function(exception, cause) {\\n      $log.error.apply($log, arguments);\\n    };\\n  }];\\n}\\n\\nvar APPLICATION_JSON = 'application/json';\\nvar CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': APPLICATION_JSON + ';charset=utf-8'};\\nvar JSON_START = /^\\\\[|^\\\\{(?!\\\\{)/;\\nvar JSON_ENDS = {\\n  '[': /]$/,\\n  '{': /}$/\\n};\\nvar JSON_PROTECTION_PREFIX = /^\\\\)\\\\]\\\\}',?\\\\n/;\\n\\nfunction defaultHttpResponseTransform(data, headers) {\\n  if (isString(data)) {\\n    // Strip json vulnerability protection prefix and trim whitespace\\n    var tempData = data.replace(JSON_PROTECTION_PREFIX, '').trim();\\n\\n    if (tempData) {\\n      var contentType = headers('Content-Type');\\n      if ((contentType && (contentType.indexOf(APPLICATION_JSON) === 0)) || isJsonLike(tempData)) {\\n        data = fromJson(tempData);\\n      }\\n    }\\n  }\\n\\n  return data;\\n}\\n\\nfunction isJsonLike(str) {\\n    var jsonStart = str.match(JSON_START);\\n    return jsonStart && JSON_ENDS[jsonStart[0]].test(str);\\n}\\n\\n/**\\n * Parse headers into key value object\\n *\\n * @param {string} headers Raw headers as a string\\n * @returns {Object} Parsed headers as key value object\\n */\\nfunction parseHeaders(headers) {\\n  var parsed = createMap(), key, val, i;\\n\\n  if (!headers) return parsed;\\n\\n  forEach(headers.split('\\\\n'), function(line) {\\n    i = line.indexOf(':');\\n    key = lowercase(trim(line.substr(0, i)));\\n    val = trim(line.substr(i + 1));\\n\\n    if (key) {\\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\\n    }\\n  });\\n\\n  return parsed;\\n}\\n\\n\\n/**\\n * Returns a function that provides access to parsed headers.\\n *\\n * Headers are lazy parsed when first requested.\\n * @see parseHeaders\\n *\\n * @param {(string|Object)} headers Headers to provide access to.\\n * @returns {function(string=)} Returns a getter function which if called with:\\n *\\n *   - if called with single an argument returns a single header value or null\\n *   - if called with no arguments returns an object containing all headers.\\n */\\nfunction headersGetter(headers) {\\n  var headersObj = isObject(headers) ? headers : undefined;\\n\\n  return function(name) {\\n    if (!headersObj) headersObj =  parseHeaders(headers);\\n\\n    if (name) {\\n      var value = headersObj[lowercase(name)];\\n      if (value === void 0) {\\n        value = null;\\n      }\\n      return value;\\n    }\\n\\n    return headersObj;\\n  };\\n}\\n\\n\\n/**\\n * Chain all given functions\\n *\\n * This function is used for both request and response transforming\\n *\\n * @param {*} data Data to transform.\\n * @param {function(string=)} headers HTTP headers getter fn.\\n * @param {number} status HTTP status code of the response.\\n * @param {(Function|Array.<Function>)} fns Function or an array of functions.\\n * @returns {*} Transformed data.\\n */\\nfunction transformData(data, headers, status, fns) {\\n  if (isFunction(fns))\\n    return fns(data, headers, status);\\n\\n  forEach(fns, function(fn) {\\n    data = fn(data, headers, status);\\n  });\\n\\n  return data;\\n}\\n\\n\\nfunction isSuccess(status) {\\n  return 200 <= status && status < 300;\\n}\\n\\n\\n/**\\n * @ngdoc provider\\n * @name $httpProvider\\n * @description\\n * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.\\n * */\\nfunction $HttpProvider() {\\n  /**\\n   * @ngdoc property\\n   * @name $httpProvider#defaults\\n   * @description\\n   *\\n   * Object containing default values for all {@link ng.$http $http} requests.\\n   *\\n   * - **`defaults.cache`** - {Object} - an object built with {@link ng.$cacheFactory `$cacheFactory`}\\n   * that will provide the cache for all requests who set their `cache` property to `true`.\\n   * If you set the `default.cache = false` then only requests that specify their own custom\\n   * cache object will be cached. See {@link $http#caching $http Caching} for more information.\\n   *\\n   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\\n   * Defaults value is `'XSRF-TOKEN'`.\\n   *\\n   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\\n   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.\\n   *\\n   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.\\n   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on\\n   * setting default headers.\\n   *     - **`defaults.headers.common`**\\n   *     - **`defaults.headers.post`**\\n   *     - **`defaults.headers.put`**\\n   *     - **`defaults.headers.patch`**\\n   *\\n   **/\\n  var defaults = this.defaults = {\\n    // transform incoming response data\\n    transformResponse: [defaultHttpResponseTransform],\\n\\n    // transform outgoing request data\\n    transformRequest: [function(d) {\\n      return isObject(d) && !isFile(d) && !isBlob(d) && !isFormData(d) ? toJson(d) : d;\\n    }],\\n\\n    // default headers\\n    headers: {\\n      common: {\\n        'Accept': 'application/json, text/plain, */*'\\n      },\\n      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\\n      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\\n      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)\\n    },\\n\\n    xsrfCookieName: 'XSRF-TOKEN',\\n    xsrfHeaderName: 'X-XSRF-TOKEN'\\n  };\\n\\n  var useApplyAsync = false;\\n  /**\\n   * @ngdoc method\\n   * @name $httpProvider#useApplyAsync\\n   * @description\\n   *\\n   * Configure $http service to combine processing of multiple http responses received at around\\n   * the same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\\n   * significant performance improvement for bigger applications that make many HTTP requests\\n   * concurrently (common during application bootstrap).\\n   *\\n   * Defaults to false. If no value is specifed, returns the current configured value.\\n   *\\n   * @param {boolean=} value If true, when requests are loaded, they will schedule a deferred\\n   *    \\\"apply\\\" on the next tick, giving time for subsequent requests in a roughly ~10ms window\\n   *    to load and share the same digest cycle.\\n   *\\n   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.\\n   *    otherwise, returns the current configured value.\\n   **/\\n  this.useApplyAsync = function(value) {\\n    if (isDefined(value)) {\\n      useApplyAsync = !!value;\\n      return this;\\n    }\\n    return useApplyAsync;\\n  };\\n\\n  /**\\n   * @ngdoc property\\n   * @name $httpProvider#interceptors\\n   * @description\\n   *\\n   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\\n   * pre-processing of request or postprocessing of responses.\\n   *\\n   * These service factories are ordered by request, i.e. they are applied in the same order as the\\n   * array, on request, but reverse order, on response.\\n   *\\n   * {@link ng.$http#interceptors Interceptors detailed info}\\n   **/\\n  var interceptorFactories = this.interceptors = [];\\n\\n  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\\n      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\\n\\n    var defaultCache = $cacheFactory('$http');\\n\\n    /**\\n     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.\\n     * The reversal is needed so that we can build up the interception chain around the\\n     * server request.\\n     */\\n    var reversedInterceptors = [];\\n\\n    forEach(interceptorFactories, function(interceptorFactory) {\\n      reversedInterceptors.unshift(isString(interceptorFactory)\\n          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));\\n    });\\n\\n    /**\\n     * @ngdoc service\\n     * @kind function\\n     * @name $http\\n     * @requires ng.$httpBackend\\n     * @requires $cacheFactory\\n     * @requires $rootScope\\n     * @requires $q\\n     * @requires $injector\\n     *\\n     * @description\\n     * The `$http` service is a core Angular service that facilitates communication with the remote\\n     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\\n     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\\n     *\\n     * For unit testing applications that use `$http` service, see\\n     * {@link ngMock.$httpBackend $httpBackend mock}.\\n     *\\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\\n     * $resource} service.\\n     *\\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\\n     *\\n     *\\n     * ## General usage\\n     * The `$http` service is a function which takes a single argument — a configuration object —\\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\\n     * with two $http specific methods: `success` and `error`.\\n     *\\n     * ```js\\n     *   // Simple GET request example :\\n     *   $http.get('/someUrl').\\n     *     success(function(data, status, headers, config) {\\n     *       // this callback will be called asynchronously\\n     *       // when the response is available\\n     *     }).\\n     *     error(function(data, status, headers, config) {\\n     *       // called asynchronously if an error occurs\\n     *       // or server returns response with an error status.\\n     *     });\\n     * ```\\n     *\\n     * ```js\\n     *   // Simple POST request example (passing data) :\\n     *   $http.post('/someUrl', {msg:'hello word!'}).\\n     *     success(function(data, status, headers, config) {\\n     *       // this callback will be called asynchronously\\n     *       // when the response is available\\n     *     }).\\n     *     error(function(data, status, headers, config) {\\n     *       // called asynchronously if an error occurs\\n     *       // or server returns response with an error status.\\n     *     });\\n     * ```\\n     *\\n     *\\n     * Since the returned value of calling the $http function is a `promise`, you can also use\\n     * the `then` method to register callbacks, and these callbacks will receive a single argument –\\n     * an object representing the response. See the API signature and type info below for more\\n     * details.\\n     *\\n     * A response status code between 200 and 299 is considered a success status and\\n     * will result in the success callback being called. Note that if the response is a redirect,\\n     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\\n     * called for such responses.\\n     *\\n     * ## Writing Unit Tests that use $http\\n     * When unit testing (using {@link ngMock ngMock}), it is necessary to call\\n     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\\n     * request using trained responses.\\n     *\\n     * ```\\n     * $httpBackend.expectGET(...);\\n     * $http.get(...);\\n     * $httpBackend.flush();\\n     * ```\\n     *\\n     * ## Shortcut methods\\n     *\\n     * Shortcut methods are also available. All shortcut methods require passing in the URL, and\\n     * request data must be passed in for POST/PUT requests.\\n     *\\n     * ```js\\n     *   $http.get('/someUrl').success(successCallback);\\n     *   $http.post('/someUrl', data).success(successCallback);\\n     * ```\\n     *\\n     * Complete list of shortcut methods:\\n     *\\n     * - {@link ng.$http#get $http.get}\\n     * - {@link ng.$http#head $http.head}\\n     * - {@link ng.$http#post $http.post}\\n     * - {@link ng.$http#put $http.put}\\n     * - {@link ng.$http#delete $http.delete}\\n     * - {@link ng.$http#jsonp $http.jsonp}\\n     * - {@link ng.$http#patch $http.patch}\\n     *\\n     *\\n     * ## Setting HTTP Headers\\n     *\\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\\n     * object, which currently contains this default configuration:\\n     *\\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\\n     *   - `Accept: application/json, text/plain, * / *`\\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\\n     *   - `Content-Type: application/json`\\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\\n     *   - `Content-Type: application/json`\\n     *\\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\\n     * with the lowercased HTTP method name as the key, e.g.\\n     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }.\\n     *\\n     * The defaults can also be set at runtime via the `$http.defaults` object in the same\\n     * fashion. For example:\\n     *\\n     * ```\\n     * module.run(function($http) {\\n     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'\\n     * });\\n     * ```\\n     *\\n     * In addition, you can supply a `headers` property in the config object passed when\\n     * calling `$http(config)`, which overrides the defaults without changing them globally.\\n     *\\n     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\\n     * Use the `headers` property, setting the desired header to `undefined`. For example:\\n     *\\n     * ```js\\n     * var req = {\\n     *  method: 'POST',\\n     *  url: 'http://example.com',\\n     *  headers: {\\n     *    'Content-Type': undefined\\n     *  },\\n     *  data: { test: 'test' },\\n     * }\\n     *\\n     * $http(req).success(function(){...}).error(function(){...});\\n     * ```\\n     *\\n     * ## Transforming Requests and Responses\\n     *\\n     * Both requests and responses can be transformed using transformation functions: `transformRequest`\\n     * and `transformResponse`. These properties can be a single function that returns\\n     * the transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,\\n     * which allows you to `push` or `unshift` a new transformation function into the transformation chain.\\n     *\\n     * ### Default Transformations\\n     *\\n     * The `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and\\n     * `defaults.transformResponse` properties. If a request does not provide its own transformations\\n     * then these will be applied.\\n     *\\n     * You can augment or replace the default transformations by modifying these properties by adding to or\\n     * replacing the array.\\n     *\\n     * Angular provides the following default transformations:\\n     *\\n     * Request transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`):\\n     *\\n     * - If the `data` property of the request configuration object contains an object, serialize it\\n     *   into JSON format.\\n     *\\n     * Response transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`):\\n     *\\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\\n     *  - If JSON response is detected, deserialize it using a JSON parser.\\n     *\\n     *\\n     * ### Overriding the Default Transformations Per Request\\n     *\\n     * If you wish override the request/response transformations only for a single request then provide\\n     * `transformRequest` and/or `transformResponse` properties on the configuration object passed\\n     * into `$http`.\\n     *\\n     * Note that if you provide these properties on the config object the default transformations will be\\n     * overwritten. If you wish to augment the default transformations then you must include them in your\\n     * local transformation array.\\n     *\\n     * The following code demonstrates adding a new response transformation to be run after the default response\\n     * transformations have been run.\\n     *\\n     * ```js\\n     * function appendTransform(defaults, transform) {\\n     *\\n     *   // We can't guarantee that the default transformation is an array\\n     *   defaults = angular.isArray(defaults) ? defaults : [defaults];\\n     *\\n     *   // Append the new transformation to the defaults\\n     *   return defaults.concat(transform);\\n     * }\\n     *\\n     * $http({\\n     *   url: '...',\\n     *   method: 'GET',\\n     *   transformResponse: appendTransform($http.defaults.transformResponse, function(value) {\\n     *     return doTransform(value);\\n     *   })\\n     * });\\n     * ```\\n     *\\n     *\\n     * ## Caching\\n     *\\n     * To enable caching, set the request configuration `cache` property to `true` (to use default\\n     * cache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).\\n     * When the cache is enabled, `$http` stores the response from the server in the specified\\n     * cache. The next time the same request is made, the response is served from the cache without\\n     * sending a request to the server.\\n     *\\n     * Note that even if the response is served from cache, delivery of the data is asynchronous in\\n     * the same way that real requests are.\\n     *\\n     * If there are multiple GET requests for the same URL that should be cached using the same\\n     * cache, but the cache is not populated yet, only one request to the server will be made and\\n     * the remaining requests will be fulfilled using the response from the first request.\\n     *\\n     * You can change the default cache to a new object (built with\\n     * {@link ng.$cacheFactory `$cacheFactory`}) by updating the\\n     * {@link ng.$http#defaults `$http.defaults.cache`} property. All requests who set\\n     * their `cache` property to `true` will now use this cache object.\\n     *\\n     * If you set the default cache to `false` then only requests that specify their own custom\\n     * cache object will be cached.\\n     *\\n     * ## Interceptors\\n     *\\n     * Before you start creating interceptors, be sure to understand the\\n     * {@link ng.$q $q and deferred/promise APIs}.\\n     *\\n     * For purposes of global error handling, authentication, or any kind of synchronous or\\n     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be\\n     * able to intercept requests before they are handed to the server and\\n     * responses before they are handed over to the application code that\\n     * initiated these requests. The interceptors leverage the {@link ng.$q\\n     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\\n     *\\n     * The interceptors are service factories that are registered with the `$httpProvider` by\\n     * adding them to the `$httpProvider.interceptors` array. The factory is called and\\n     * injected with dependencies (if specified) and returns the interceptor.\\n     *\\n     * There are two kinds of interceptors (and two kinds of rejection interceptors):\\n     *\\n     *   * `request`: interceptors get called with a http `config` object. The function is free to\\n     *     modify the `config` object or create a new one. The function needs to return the `config`\\n     *     object directly, or a promise containing the `config` or a new `config` object.\\n     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or\\n     *     resolved with a rejection.\\n     *   * `response`: interceptors get called with http `response` object. The function is free to\\n     *     modify the `response` object or create a new one. The function needs to return the `response`\\n     *     object directly, or as a promise containing the `response` or a new `response` object.\\n     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or\\n     *     resolved with a rejection.\\n     *\\n     *\\n     * ```js\\n     *   // register the interceptor as a service\\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\\n     *     return {\\n     *       // optional method\\n     *       'request': function(config) {\\n     *         // do something on success\\n     *         return config;\\n     *       },\\n     *\\n     *       // optional method\\n     *      'requestError': function(rejection) {\\n     *         // do something on error\\n     *         if (canRecover(rejection)) {\\n     *           return responseOrNewPromise\\n     *         }\\n     *         return $q.reject(rejection);\\n     *       },\\n     *\\n     *\\n     *\\n     *       // optional method\\n     *       'response': function(response) {\\n     *         // do something on success\\n     *         return response;\\n     *       },\\n     *\\n     *       // optional method\\n     *      'responseError': function(rejection) {\\n     *         // do something on error\\n     *         if (canRecover(rejection)) {\\n     *           return responseOrNewPromise\\n     *         }\\n     *         return $q.reject(rejection);\\n     *       }\\n     *     };\\n     *   });\\n     *\\n     *   $httpProvider.interceptors.push('myHttpInterceptor');\\n     *\\n     *\\n     *   // alternatively, register the interceptor via an anonymous factory\\n     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\\n     *     return {\\n     *      'request': function(config) {\\n     *          // same as above\\n     *       },\\n     *\\n     *       'response': function(response) {\\n     *          // same as above\\n     *       }\\n     *     };\\n     *   });\\n     * ```\\n     *\\n     * ## Security Considerations\\n     *\\n     * When designing web applications, consider security threats from:\\n     *\\n     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\\n     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\\n     *\\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\\n     * pre-configured with strategies that address these issues, but for this to work backend server\\n     * cooperation is required.\\n     *\\n     * ### JSON Vulnerability Protection\\n     *\\n     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\\n     * allows third party website to turn your JSON resource URL into\\n     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\\n     * counter this your server can prefix all JSON requests with following string `\\\")]}',\\\\n\\\"`.\\n     * Angular will automatically strip the prefix before processing it as JSON.\\n     *\\n     * For example if your server needs to return:\\n     * ```js\\n     * ['one','two']\\n     * ```\\n     *\\n     * which is vulnerable to attack, your server can return:\\n     * ```js\\n     * )]}',\\n     * ['one','two']\\n     * ```\\n     *\\n     * Angular will strip the prefix, before processing the JSON.\\n     *\\n     *\\n     * ### Cross Site Request Forgery (XSRF) Protection\\n     *\\n     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is a technique by which\\n     * an unauthorized site can gain your user's private data. Angular provides a mechanism\\n     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\\n     * (by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only\\n     * JavaScript that runs on your domain could read the cookie, your server can be assured that\\n     * the XHR came from JavaScript running on your domain. The header will not be set for\\n     * cross-domain requests.\\n     *\\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\\n     * that only JavaScript running on your domain could have sent the request. The token must be\\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from\\n     * making up its own tokens). We recommend that the token is a digest of your site's\\n     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\\n     * for added security.\\n     *\\n     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\\n     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\\n     * or the per-request config object.\\n     *\\n     *\\n     * @param {object} config Object describing the request to be made and how it should be\\n     *    processed. The object has following properties:\\n     *\\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\\n     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned\\n     *      to `?key1=value1&key2=value2` after the url. If the value is not a string, it will be\\n     *      JSONified.\\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\\n     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing\\n     *      HTTP headers to send to the server. If the return value of a function is null, the\\n     *      header will not be sent.\\n     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\\n     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\\n     *    - **transformRequest** –\\n     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\\n     *      transform function or an array of such functions. The transform function takes the http\\n     *      request body and headers and returns its transformed (typically serialized) version.\\n     *      See {@link ng.$http#overriding-the-default-transformations-per-request\\n     *      Overriding the Default Transformations}\\n     *    - **transformResponse** –\\n     *      `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –\\n     *      transform function or an array of such functions. The transform function takes the http\\n     *      response body, headers and status and returns its transformed (typically deserialized) version.\\n     *      See {@link ng.$http#overriding-the-default-transformations-per-request\\n     *      Overriding the Default Transformations}\\n     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\\n     *      GET request, otherwise if a cache instance built with\\n     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\\n     *      caching.\\n     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\\n     *      that should abort the request when resolved.\\n     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\\n     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\\n     *      for more information.\\n     *    - **responseType** - `{string}` - see\\n     *      [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\\n     *\\n     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\\n     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\\n     *   method takes two arguments a success and an error callback which will be called with a\\n     *   response object. The `success` and `error` methods take a single argument - a function that\\n     *   will be called when the request succeeds or fails respectively. The arguments passed into\\n     *   these functions are destructured representation of the response object passed into the\\n     *   `then` method. The response object has these properties:\\n     *\\n     *   - **data** – `{string|Object}` – The response body transformed with the transform\\n     *     functions.\\n     *   - **status** – `{number}` – HTTP status code of the response.\\n     *   - **headers** – `{function([headerName])}` – Header getter function.\\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\\n     *   - **statusText** – `{string}` – HTTP status text of the response.\\n     *\\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\\n     *   requests. This is primarily meant to be used for debugging purposes.\\n     *\\n     *\\n     * @example\\n<example module=\\\"httpExample\\\">\\n<file name=\\\"index.html\\\">\\n  <div ng-controller=\\\"FetchController\\\">\\n    <select ng-model=\\\"method\\\">\\n      <option>GET</option>\\n      <option>JSONP</option>\\n    </select>\\n    <input type=\\\"text\\\" ng-model=\\\"url\\\" size=\\\"80\\\"/>\\n    <button id=\\\"fetchbtn\\\" ng-click=\\\"fetch()\\\">fetch</button><br>\\n    <button id=\\\"samplegetbtn\\\" ng-click=\\\"updateModel('GET', 'http-hello.html')\\\">Sample GET</button>\\n    <button id=\\\"samplejsonpbtn\\\"\\n      ng-click=\\\"updateModel('JSONP',\\n                    'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\\\">\\n      Sample JSONP\\n    </button>\\n    <button id=\\\"invalidjsonpbtn\\\"\\n      ng-click=\\\"updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')\\\">\\n        Invalid JSONP\\n      </button>\\n    <pre>http status code: {{status}}</pre>\\n    <pre>http response data: {{data}}</pre>\\n  </div>\\n</file>\\n<file name=\\\"script.js\\\">\\n  angular.module('httpExample', [])\\n    .controller('FetchController', ['$scope', '$http', '$templateCache',\\n      function($scope, $http, $templateCache) {\\n        $scope.method = 'GET';\\n        $scope.url = 'http-hello.html';\\n\\n        $scope.fetch = function() {\\n          $scope.code = null;\\n          $scope.response = null;\\n\\n          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\\n            success(function(data, status) {\\n              $scope.status = status;\\n              $scope.data = data;\\n            }).\\n            error(function(data, status) {\\n              $scope.data = data || \\\"Request failed\\\";\\n              $scope.status = status;\\n          });\\n        };\\n\\n        $scope.updateModel = function(method, url) {\\n          $scope.method = method;\\n          $scope.url = url;\\n        };\\n      }]);\\n</file>\\n<file name=\\\"http-hello.html\\\">\\n  Hello, $http!\\n</file>\\n<file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n  var status = element(by.binding('status'));\\n  var data = element(by.binding('data'));\\n  var fetchBtn = element(by.id('fetchbtn'));\\n  var sampleGetBtn = element(by.id('samplegetbtn'));\\n  var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\\n  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\\n\\n  it('should make an xhr GET request', function() {\\n    sampleGetBtn.click();\\n    fetchBtn.click();\\n    expect(status.getText()).toMatch('200');\\n    expect(data.getText()).toMatch(/Hello, \\\\$http!/);\\n  });\\n\\n// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\\n// it('should make a JSONP request to angularjs.org', function() {\\n//   sampleJsonpBtn.click();\\n//   fetchBtn.click();\\n//   expect(status.getText()).toMatch('200');\\n//   expect(data.getText()).toMatch(/Super Hero!/);\\n// });\\n\\n  it('should make JSONP request to invalid URL and invoke the error handler',\\n      function() {\\n    invalidJsonpBtn.click();\\n    fetchBtn.click();\\n    expect(status.getText()).toMatch('0');\\n    expect(data.getText()).toMatch('Request failed');\\n  });\\n</file>\\n</example>\\n     */\\n    function $http(requestConfig) {\\n\\n      if (!angular.isObject(requestConfig)) {\\n        throw minErr('$http')('badreq', 'Http request configuration must be an object.  Received: {0}', requestConfig);\\n      }\\n\\n      var config = extend({\\n        method: 'get',\\n        transformRequest: defaults.transformRequest,\\n        transformResponse: defaults.transformResponse\\n      }, requestConfig);\\n\\n      config.headers = mergeHeaders(requestConfig);\\n      config.method = uppercase(config.method);\\n\\n      var serverRequest = function(config) {\\n        var headers = config.headers;\\n        var reqData = transformData(config.data, headersGetter(headers), undefined, config.transformRequest);\\n\\n        // strip content-type if data is undefined\\n        if (isUndefined(reqData)) {\\n          forEach(headers, function(value, header) {\\n            if (lowercase(header) === 'content-type') {\\n                delete headers[header];\\n            }\\n          });\\n        }\\n\\n        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {\\n          config.withCredentials = defaults.withCredentials;\\n        }\\n\\n        // send request\\n        return sendReq(config, reqData).then(transformResponse, transformResponse);\\n      };\\n\\n      var chain = [serverRequest, undefined];\\n      var promise = $q.when(config);\\n\\n      // apply interceptors\\n      forEach(reversedInterceptors, function(interceptor) {\\n        if (interceptor.request || interceptor.requestError) {\\n          chain.unshift(interceptor.request, interceptor.requestError);\\n        }\\n        if (interceptor.response || interceptor.responseError) {\\n          chain.push(interceptor.response, interceptor.responseError);\\n        }\\n      });\\n\\n      while (chain.length) {\\n        var thenFn = chain.shift();\\n        var rejectFn = chain.shift();\\n\\n        promise = promise.then(thenFn, rejectFn);\\n      }\\n\\n      promise.success = function(fn) {\\n        promise.then(function(response) {\\n          fn(response.data, response.status, response.headers, config);\\n        });\\n        return promise;\\n      };\\n\\n      promise.error = function(fn) {\\n        promise.then(null, function(response) {\\n          fn(response.data, response.status, response.headers, config);\\n        });\\n        return promise;\\n      };\\n\\n      return promise;\\n\\n      function transformResponse(response) {\\n        // make a copy since the response must be cacheable\\n        var resp = extend({}, response);\\n        if (!response.data) {\\n          resp.data = response.data;\\n        } else {\\n          resp.data = transformData(response.data, response.headers, response.status, config.transformResponse);\\n        }\\n        return (isSuccess(response.status))\\n          ? resp\\n          : $q.reject(resp);\\n      }\\n\\n      function executeHeaderFns(headers) {\\n        var headerContent, processedHeaders = {};\\n\\n        forEach(headers, function(headerFn, header) {\\n          if (isFunction(headerFn)) {\\n            headerContent = headerFn();\\n            if (headerContent != null) {\\n              processedHeaders[header] = headerContent;\\n            }\\n          } else {\\n            processedHeaders[header] = headerFn;\\n          }\\n        });\\n\\n        return processedHeaders;\\n      }\\n\\n      function mergeHeaders(config) {\\n        var defHeaders = defaults.headers,\\n            reqHeaders = extend({}, config.headers),\\n            defHeaderName, lowercaseDefHeaderName, reqHeaderName;\\n\\n        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);\\n\\n        // using for-in instead of forEach to avoid unecessary iteration after header has been found\\n        defaultHeadersIteration:\\n        for (defHeaderName in defHeaders) {\\n          lowercaseDefHeaderName = lowercase(defHeaderName);\\n\\n          for (reqHeaderName in reqHeaders) {\\n            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {\\n              continue defaultHeadersIteration;\\n            }\\n          }\\n\\n          reqHeaders[defHeaderName] = defHeaders[defHeaderName];\\n        }\\n\\n        // execute if header value is a function for merged headers\\n        return executeHeaderFns(reqHeaders);\\n      }\\n    }\\n\\n    $http.pendingRequests = [];\\n\\n    /**\\n     * @ngdoc method\\n     * @name $http#get\\n     *\\n     * @description\\n     * Shortcut method to perform `GET` request.\\n     *\\n     * @param {string} url Relative or absolute URL specifying the destination of the request\\n     * @param {Object=} config Optional configuration object\\n     * @returns {HttpPromise} Future object\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $http#delete\\n     *\\n     * @description\\n     * Shortcut method to perform `DELETE` request.\\n     *\\n     * @param {string} url Relative or absolute URL specifying the destination of the request\\n     * @param {Object=} config Optional configuration object\\n     * @returns {HttpPromise} Future object\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $http#head\\n     *\\n     * @description\\n     * Shortcut method to perform `HEAD` request.\\n     *\\n     * @param {string} url Relative or absolute URL specifying the destination of the request\\n     * @param {Object=} config Optional configuration object\\n     * @returns {HttpPromise} Future object\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $http#jsonp\\n     *\\n     * @description\\n     * Shortcut method to perform `JSONP` request.\\n     *\\n     * @param {string} url Relative or absolute URL specifying the destination of the request.\\n     *                     The name of the callback should be the string `JSON_CALLBACK`.\\n     * @param {Object=} config Optional configuration object\\n     * @returns {HttpPromise} Future object\\n     */\\n    createShortMethods('get', 'delete', 'head', 'jsonp');\\n\\n    /**\\n     * @ngdoc method\\n     * @name $http#post\\n     *\\n     * @description\\n     * Shortcut method to perform `POST` request.\\n     *\\n     * @param {string} url Relative or absolute URL specifying the destination of the request\\n     * @param {*} data Request content\\n     * @param {Object=} config Optional configuration object\\n     * @returns {HttpPromise} Future object\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $http#put\\n     *\\n     * @description\\n     * Shortcut method to perform `PUT` request.\\n     *\\n     * @param {string} url Relative or absolute URL specifying the destination of the request\\n     * @param {*} data Request content\\n     * @param {Object=} config Optional configuration object\\n     * @returns {HttpPromise} Future object\\n     */\\n\\n     /**\\n      * @ngdoc method\\n      * @name $http#patch\\n      *\\n      * @description\\n      * Shortcut method to perform `PATCH` request.\\n      *\\n      * @param {string} url Relative or absolute URL specifying the destination of the request\\n      * @param {*} data Request content\\n      * @param {Object=} config Optional configuration object\\n      * @returns {HttpPromise} Future object\\n      */\\n    createShortMethodsWithData('post', 'put', 'patch');\\n\\n        /**\\n         * @ngdoc property\\n         * @name $http#defaults\\n         *\\n         * @description\\n         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\\n         * default headers, withCredentials as well as request and response transformations.\\n         *\\n         * See \\\"Setting HTTP Headers\\\" and \\\"Transforming Requests and Responses\\\" sections above.\\n         */\\n    $http.defaults = defaults;\\n\\n\\n    return $http;\\n\\n\\n    function createShortMethods(names) {\\n      forEach(arguments, function(name) {\\n        $http[name] = function(url, config) {\\n          return $http(extend(config || {}, {\\n            method: name,\\n            url: url\\n          }));\\n        };\\n      });\\n    }\\n\\n\\n    function createShortMethodsWithData(name) {\\n      forEach(arguments, function(name) {\\n        $http[name] = function(url, data, config) {\\n          return $http(extend(config || {}, {\\n            method: name,\\n            url: url,\\n            data: data\\n          }));\\n        };\\n      });\\n    }\\n\\n\\n    /**\\n     * Makes the request.\\n     *\\n     * !!! ACCESSES CLOSURE VARS:\\n     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests\\n     */\\n    function sendReq(config, reqData) {\\n      var deferred = $q.defer(),\\n          promise = deferred.promise,\\n          cache,\\n          cachedResp,\\n          reqHeaders = config.headers,\\n          url = buildUrl(config.url, config.params);\\n\\n      $http.pendingRequests.push(config);\\n      promise.then(removePendingReq, removePendingReq);\\n\\n\\n      if ((config.cache || defaults.cache) && config.cache !== false &&\\n          (config.method === 'GET' || config.method === 'JSONP')) {\\n        cache = isObject(config.cache) ? config.cache\\n              : isObject(defaults.cache) ? defaults.cache\\n              : defaultCache;\\n      }\\n\\n      if (cache) {\\n        cachedResp = cache.get(url);\\n        if (isDefined(cachedResp)) {\\n          if (isPromiseLike(cachedResp)) {\\n            // cached request has already been sent, but there is no response yet\\n            cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult);\\n          } else {\\n            // serving from cache\\n            if (isArray(cachedResp)) {\\n              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);\\n            } else {\\n              resolvePromise(cachedResp, 200, {}, 'OK');\\n            }\\n          }\\n        } else {\\n          // put the promise for the non-transformed response into cache as a placeholder\\n          cache.put(url, promise);\\n        }\\n      }\\n\\n\\n      // if we won't have the response in cache, set the xsrf headers and\\n      // send the request to the backend\\n      if (isUndefined(cachedResp)) {\\n        var xsrfValue = urlIsSameOrigin(config.url)\\n            ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName]\\n            : undefined;\\n        if (xsrfValue) {\\n          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;\\n        }\\n\\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\\n            config.withCredentials, config.responseType);\\n      }\\n\\n      return promise;\\n\\n\\n      /**\\n       * Callback registered to $httpBackend():\\n       *  - caches the response if desired\\n       *  - resolves the raw $http promise\\n       *  - calls $apply\\n       */\\n      function done(status, response, headersString, statusText) {\\n        if (cache) {\\n          if (isSuccess(status)) {\\n            cache.put(url, [status, response, parseHeaders(headersString), statusText]);\\n          } else {\\n            // remove promise from the cache\\n            cache.remove(url);\\n          }\\n        }\\n\\n        function resolveHttpPromise() {\\n          resolvePromise(response, status, headersString, statusText);\\n        }\\n\\n        if (useApplyAsync) {\\n          $rootScope.$applyAsync(resolveHttpPromise);\\n        } else {\\n          resolveHttpPromise();\\n          if (!$rootScope.$$phase) $rootScope.$apply();\\n        }\\n      }\\n\\n\\n      /**\\n       * Resolves the raw $http promise.\\n       */\\n      function resolvePromise(response, status, headers, statusText) {\\n        // normalize internal statuses to 0\\n        status = Math.max(status, 0);\\n\\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\\n          data: response,\\n          status: status,\\n          headers: headersGetter(headers),\\n          config: config,\\n          statusText: statusText\\n        });\\n      }\\n\\n      function resolvePromiseWithResult(result) {\\n        resolvePromise(result.data, result.status, shallowCopy(result.headers()), result.statusText);\\n      }\\n\\n      function removePendingReq() {\\n        var idx = $http.pendingRequests.indexOf(config);\\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\\n      }\\n    }\\n\\n\\n    function buildUrl(url, params) {\\n      if (!params) return url;\\n      var parts = [];\\n      forEachSorted(params, function(value, key) {\\n        if (value === null || isUndefined(value)) return;\\n        if (!isArray(value)) value = [value];\\n\\n        forEach(value, function(v) {\\n          if (isObject(v)) {\\n            if (isDate(v)) {\\n              v = v.toISOString();\\n            } else {\\n              v = toJson(v);\\n            }\\n          }\\n          parts.push(encodeUriQuery(key) + '=' +\\n                     encodeUriQuery(v));\\n        });\\n      });\\n      if (parts.length > 0) {\\n        url += ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\\n      }\\n      return url;\\n    }\\n  }];\\n}\\n\\nfunction createXhr() {\\n    return new window.XMLHttpRequest();\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $httpBackend\\n * @requires $window\\n * @requires $document\\n *\\n * @description\\n * HTTP backend used by the {@link ng.$http service} that delegates to\\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\\n *\\n * You should never need to use this service directly, instead use the higher-level abstractions:\\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\\n *\\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\\n * $httpBackend} which can be trained with responses.\\n */\\nfunction $HttpBackendProvider() {\\n  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\\n    return createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0]);\\n  }];\\n}\\n\\nfunction createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {\\n  // TODO(vojta): fix the signature\\n  return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {\\n    $browser.$$incOutstandingRequestCount();\\n    url = url || $browser.url();\\n\\n    if (lowercase(method) == 'jsonp') {\\n      var callbackId = '_' + (callbacks.counter++).toString(36);\\n      callbacks[callbackId] = function(data) {\\n        callbacks[callbackId].data = data;\\n        callbacks[callbackId].called = true;\\n      };\\n\\n      var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\\n          callbackId, function(status, text) {\\n        completeRequest(callback, status, callbacks[callbackId].data, \\\"\\\", text);\\n        callbacks[callbackId] = noop;\\n      });\\n    } else {\\n\\n      var xhr = createXhr();\\n\\n      xhr.open(method, url, true);\\n      forEach(headers, function(value, key) {\\n        if (isDefined(value)) {\\n            xhr.setRequestHeader(key, value);\\n        }\\n      });\\n\\n      xhr.onload = function requestLoaded() {\\n        var statusText = xhr.statusText || '';\\n\\n        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\\n        // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\\n        var response = ('response' in xhr) ? xhr.response : xhr.responseText;\\n\\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\\n        var status = xhr.status === 1223 ? 204 : xhr.status;\\n\\n        // fix status code when it is 0 (0 status is undocumented).\\n        // Occurs when accessing file resources or on Android 4.1 stock browser\\n        // while retrieving files from application cache.\\n        if (status === 0) {\\n          status = response ? 200 : urlResolve(url).protocol == 'file' ? 404 : 0;\\n        }\\n\\n        completeRequest(callback,\\n            status,\\n            response,\\n            xhr.getAllResponseHeaders(),\\n            statusText);\\n      };\\n\\n      var requestError = function() {\\n        // The response is always empty\\n        // See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error\\n        completeRequest(callback, -1, null, null, '');\\n      };\\n\\n      xhr.onerror = requestError;\\n      xhr.onabort = requestError;\\n\\n      if (withCredentials) {\\n        xhr.withCredentials = true;\\n      }\\n\\n      if (responseType) {\\n        try {\\n          xhr.responseType = responseType;\\n        } catch (e) {\\n          // WebKit added support for the json responseType value on 09/03/2013\\n          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are\\n          // known to throw when setting the value \\\"json\\\" as the response type. Other older\\n          // browsers implementing the responseType\\n          //\\n          // The json response type can be ignored if not supported, because JSON payloads are\\n          // parsed on the client-side regardless.\\n          if (responseType !== 'json') {\\n            throw e;\\n          }\\n        }\\n      }\\n\\n      xhr.send(post || null);\\n    }\\n\\n    if (timeout > 0) {\\n      var timeoutId = $browserDefer(timeoutRequest, timeout);\\n    } else if (isPromiseLike(timeout)) {\\n      timeout.then(timeoutRequest);\\n    }\\n\\n\\n    function timeoutRequest() {\\n      jsonpDone && jsonpDone();\\n      xhr && xhr.abort();\\n    }\\n\\n    function completeRequest(callback, status, response, headersString, statusText) {\\n      // cancel timeout and subsequent timeout promise resolution\\n      if (timeoutId !== undefined) {\\n        $browserDefer.cancel(timeoutId);\\n      }\\n      jsonpDone = xhr = null;\\n\\n      callback(status, response, headersString, statusText);\\n      $browser.$$completeOutstandingRequest(noop);\\n    }\\n  };\\n\\n  function jsonpReq(url, callbackId, done) {\\n    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\\n    // - fetches local scripts via XHR and evals them\\n    // - adds and immediately removes script elements from the document\\n    var script = rawDocument.createElement('script'), callback = null;\\n    script.type = \\\"text/javascript\\\";\\n    script.src = url;\\n    script.async = true;\\n\\n    callback = function(event) {\\n      removeEventListenerFn(script, \\\"load\\\", callback);\\n      removeEventListenerFn(script, \\\"error\\\", callback);\\n      rawDocument.body.removeChild(script);\\n      script = null;\\n      var status = -1;\\n      var text = \\\"unknown\\\";\\n\\n      if (event) {\\n        if (event.type === \\\"load\\\" && !callbacks[callbackId].called) {\\n          event = { type: \\\"error\\\" };\\n        }\\n        text = event.type;\\n        status = event.type === \\\"error\\\" ? 404 : 200;\\n      }\\n\\n      if (done) {\\n        done(status, text);\\n      }\\n    };\\n\\n    addEventListenerFn(script, \\\"load\\\", callback);\\n    addEventListenerFn(script, \\\"error\\\", callback);\\n    rawDocument.body.appendChild(script);\\n    return callback;\\n  }\\n}\\n\\nvar $interpolateMinErr = minErr('$interpolate');\\n\\n/**\\n * @ngdoc provider\\n * @name $interpolateProvider\\n *\\n * @description\\n *\\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\\n *\\n * @example\\n<example module=\\\"customInterpolationApp\\\">\\n<file name=\\\"index.html\\\">\\n<script>\\n  var customInterpolationApp = angular.module('customInterpolationApp', []);\\n\\n  customInterpolationApp.config(function($interpolateProvider) {\\n    $interpolateProvider.startSymbol('//');\\n    $interpolateProvider.endSymbol('//');\\n  });\\n\\n\\n  customInterpolationApp.controller('DemoController', function() {\\n      this.label = \\\"This binding is brought you by // interpolation symbols.\\\";\\n  });\\n</script>\\n<div ng-app=\\\"App\\\" ng-controller=\\\"DemoController as demo\\\">\\n    //demo.label//\\n</div>\\n</file>\\n<file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n  it('should interpolate binding with custom symbols', function() {\\n    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\\n  });\\n</file>\\n</example>\\n */\\nfunction $InterpolateProvider() {\\n  var startSymbol = '{{';\\n  var endSymbol = '}}';\\n\\n  /**\\n   * @ngdoc method\\n   * @name $interpolateProvider#startSymbol\\n   * @description\\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\\n   *\\n   * @param {string=} value new value to set the starting symbol to.\\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\\n   */\\n  this.startSymbol = function(value) {\\n    if (value) {\\n      startSymbol = value;\\n      return this;\\n    } else {\\n      return startSymbol;\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $interpolateProvider#endSymbol\\n   * @description\\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\\n   *\\n   * @param {string=} value new value to set the ending symbol to.\\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\\n   */\\n  this.endSymbol = function(value) {\\n    if (value) {\\n      endSymbol = value;\\n      return this;\\n    } else {\\n      return endSymbol;\\n    }\\n  };\\n\\n\\n  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {\\n    var startSymbolLength = startSymbol.length,\\n        endSymbolLength = endSymbol.length,\\n        escapedStartRegexp = new RegExp(startSymbol.replace(/./g, escape), 'g'),\\n        escapedEndRegexp = new RegExp(endSymbol.replace(/./g, escape), 'g');\\n\\n    function escape(ch) {\\n      return '\\\\\\\\\\\\\\\\\\\\\\\\' + ch;\\n    }\\n\\n    /**\\n     * @ngdoc service\\n     * @name $interpolate\\n     * @kind function\\n     *\\n     * @requires $parse\\n     * @requires $sce\\n     *\\n     * @description\\n     *\\n     * Compiles a string with markup into an interpolation function. This service is used by the\\n     * HTML {@link ng.$compile $compile} service for data binding. See\\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\\n     * interpolation markup.\\n     *\\n     *\\n     * ```js\\n     *   var $interpolate = ...; // injected\\n     *   var exp = $interpolate('Hello {{name | uppercase}}!');\\n     *   expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');\\n     * ```\\n     *\\n     * `$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\\n     * `true`, the interpolation function will return `undefined` unless all embedded expressions\\n     * evaluate to a value other than `undefined`.\\n     *\\n     * ```js\\n     *   var $interpolate = ...; // injected\\n     *   var context = {greeting: 'Hello', name: undefined };\\n     *\\n     *   // default \\\"forgiving\\\" mode\\n     *   var exp = $interpolate('{{greeting}} {{name}}!');\\n     *   expect(exp(context)).toEqual('Hello !');\\n     *\\n     *   // \\\"allOrNothing\\\" mode\\n     *   exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\\n     *   expect(exp(context)).toBeUndefined();\\n     *   context.name = 'Angular';\\n     *   expect(exp(context)).toEqual('Hello Angular!');\\n     * ```\\n     *\\n     * `allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\\n     *\\n     * ####Escaped Interpolation\\n     * $interpolate provides a mechanism for escaping interpolation markers. Start and end markers\\n     * can be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\\n     * It will be rendered as a regular start/end marker, and will not be interpreted as an expression\\n     * or binding.\\n     *\\n     * This enables web-servers to prevent script injection attacks and defacing attacks, to some\\n     * degree, while also enabling code examples to work without relying on the\\n     * {@link ng.directive:ngNonBindable ngNonBindable} directive.\\n     *\\n     * **For security purposes, it is strongly encouraged that web servers escape user-supplied data,\\n     * replacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\\n     * interpolation start/end markers with their escaped counterparts.**\\n     *\\n     * Escaped interpolation markers are only replaced with the actual interpolation markers in rendered\\n     * output when the $interpolate service processes the text. So, for HTML elements interpolated\\n     * by {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\\n     * set to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\\n     * this is typically useful only when user-data is used in rendering a template from the server, or\\n     * when otherwise untrusted data is used by a directive.\\n     *\\n     * <example>\\n     *  <file name=\\\"index.html\\\">\\n     *    <div ng-init=\\\"username='A user'\\\">\\n     *      <p ng-init=\\\"apptitle='Escaping demo'\\\">{{apptitle}}: \\\\{\\\\{ username = \\\"defaced value\\\"; \\\\}\\\\}\\n     *        </p>\\n     *      <p><strong>{{username}}</strong> attempts to inject code which will deface the\\n     *        application, but fails to accomplish their task, because the server has correctly\\n     *        escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\\n     *        characters.</p>\\n     *      <p>Instead, the result of the attempted script injection is visible, and can be removed\\n     *        from the database by an administrator.</p>\\n     *    </div>\\n     *  </file>\\n     * </example>\\n     *\\n     * @param {string} text The text with markup to interpolate.\\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\\n     *    embedded expression in order to return an interpolation function. Strings with no\\n     *    embedded expression will return null for the interpolation function.\\n     * @param {string=} trustedContext when provided, the returned function passes the interpolated\\n     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\\n     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\\n     *    provides Strict Contextual Escaping for details.\\n     * @param {boolean=} allOrNothing if `true`, then the returned function returns undefined\\n     *    unless all embedded expressions evaluate to a value other than `undefined`.\\n     * @returns {function(context)} an interpolation function which is used to compute the\\n     *    interpolated string. The function has these parameters:\\n     *\\n     * - `context`: evaluation context for all expressions embedded in the interpolated text\\n     */\\n    function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {\\n      allOrNothing = !!allOrNothing;\\n      var startIndex,\\n          endIndex,\\n          index = 0,\\n          expressions = [],\\n          parseFns = [],\\n          textLength = text.length,\\n          exp,\\n          concat = [],\\n          expressionPositions = [];\\n\\n      while (index < textLength) {\\n        if (((startIndex = text.indexOf(startSymbol, index)) != -1) &&\\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1)) {\\n          if (index !== startIndex) {\\n            concat.push(unescapeText(text.substring(index, startIndex)));\\n          }\\n          exp = text.substring(startIndex + startSymbolLength, endIndex);\\n          expressions.push(exp);\\n          parseFns.push($parse(exp, parseStringifyInterceptor));\\n          index = endIndex + endSymbolLength;\\n          expressionPositions.push(concat.length);\\n          concat.push('');\\n        } else {\\n          // we did not find an interpolation, so we have to add the remainder to the separators array\\n          if (index !== textLength) {\\n            concat.push(unescapeText(text.substring(index)));\\n          }\\n          break;\\n        }\\n      }\\n\\n      // Concatenating expressions makes it hard to reason about whether some combination of\\n      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a\\n      // single expression be used for iframe[src], object[src], etc., we ensure that the value\\n      // that's used is assigned or constructed by some JS code somewhere that is more testable or\\n      // make it obvious that you bound the value to some user controlled value.  This helps reduce\\n      // the load when auditing for XSS issues.\\n      if (trustedContext && concat.length > 1) {\\n          throw $interpolateMinErr('noconcat',\\n              \\\"Error while interpolating: {0}\\\\nStrict Contextual Escaping disallows \\\" +\\n              \\\"interpolations that concatenate multiple expressions when a trusted value is \\\" +\\n              \\\"required.  See http://docs.angularjs.org/api/ng.$sce\\\", text);\\n      }\\n\\n      if (!mustHaveExpression || expressions.length) {\\n        var compute = function(values) {\\n          for (var i = 0, ii = expressions.length; i < ii; i++) {\\n            if (allOrNothing && isUndefined(values[i])) return;\\n            concat[expressionPositions[i]] = values[i];\\n          }\\n          return concat.join('');\\n        };\\n\\n        var getValue = function(value) {\\n          return trustedContext ?\\n            $sce.getTrusted(trustedContext, value) :\\n            $sce.valueOf(value);\\n        };\\n\\n        var stringify = function(value) {\\n          if (value == null) { // null || undefined\\n            return '';\\n          }\\n          switch (typeof value) {\\n            case 'string':\\n              break;\\n            case 'number':\\n              value = '' + value;\\n              break;\\n            default:\\n              value = toJson(value);\\n          }\\n\\n          return value;\\n        };\\n\\n        return extend(function interpolationFn(context) {\\n            var i = 0;\\n            var ii = expressions.length;\\n            var values = new Array(ii);\\n\\n            try {\\n              for (; i < ii; i++) {\\n                values[i] = parseFns[i](context);\\n              }\\n\\n              return compute(values);\\n            } catch (err) {\\n              var newErr = $interpolateMinErr('interr', \\\"Can't interpolate: {0}\\\\n{1}\\\", text,\\n                  err.toString());\\n              $exceptionHandler(newErr);\\n            }\\n\\n          }, {\\n          // all of these properties are undocumented for now\\n          exp: text, //just for compatibility with regular watchers created via $watch\\n          expressions: expressions,\\n          $$watchDelegate: function(scope, listener, objectEquality) {\\n            var lastValue;\\n            return scope.$watchGroup(parseFns, function interpolateFnWatcher(values, oldValues) {\\n              var currValue = compute(values);\\n              if (isFunction(listener)) {\\n                listener.call(this, currValue, values !== oldValues ? lastValue : currValue, scope);\\n              }\\n              lastValue = currValue;\\n            }, objectEquality);\\n          }\\n        });\\n      }\\n\\n      function unescapeText(text) {\\n        return text.replace(escapedStartRegexp, startSymbol).\\n          replace(escapedEndRegexp, endSymbol);\\n      }\\n\\n      function parseStringifyInterceptor(value) {\\n        try {\\n          value = getValue(value);\\n          return allOrNothing && !isDefined(value) ? value : stringify(value);\\n        } catch (err) {\\n          var newErr = $interpolateMinErr('interr', \\\"Can't interpolate: {0}\\\\n{1}\\\", text,\\n            err.toString());\\n          $exceptionHandler(newErr);\\n        }\\n      }\\n    }\\n\\n\\n    /**\\n     * @ngdoc method\\n     * @name $interpolate#startSymbol\\n     * @description\\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\\n     *\\n     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\\n     * the symbol.\\n     *\\n     * @returns {string} start symbol.\\n     */\\n    $interpolate.startSymbol = function() {\\n      return startSymbol;\\n    };\\n\\n\\n    /**\\n     * @ngdoc method\\n     * @name $interpolate#endSymbol\\n     * @description\\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\\n     *\\n     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\\n     * the symbol.\\n     *\\n     * @returns {string} end symbol.\\n     */\\n    $interpolate.endSymbol = function() {\\n      return endSymbol;\\n    };\\n\\n    return $interpolate;\\n  }];\\n}\\n\\nfunction $IntervalProvider() {\\n  this.$get = ['$rootScope', '$window', '$q', '$$q',\\n       function($rootScope,   $window,   $q,   $$q) {\\n    var intervals = {};\\n\\n\\n     /**\\n      * @ngdoc service\\n      * @name $interval\\n      *\\n      * @description\\n      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\\n      * milliseconds.\\n      *\\n      * The return value of registering an interval function is a promise. This promise will be\\n      * notified upon each tick of the interval, and will be resolved after `count` iterations, or\\n      * run indefinitely if `count` is not defined. The value of the notification will be the\\n      * number of iterations that have run.\\n      * To cancel an interval, call `$interval.cancel(promise)`.\\n      *\\n      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\\n      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that\\n      * time.\\n      *\\n      * <div class=\\\"alert alert-warning\\\">\\n      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished\\n      * with them.  In particular they are not automatically destroyed when a controller's scope or a\\n      * directive's element are destroyed.\\n      * You should take this into consideration and make sure to always cancel the interval at the\\n      * appropriate moment.  See the example below for more details on how and when to do this.\\n      * </div>\\n      *\\n      * @param {function()} fn A function that should be called repeatedly.\\n      * @param {number} delay Number of milliseconds between each function call.\\n      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat\\n      *   indefinitely.\\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\\n      * @returns {promise} A promise which will be notified on each iteration.\\n      *\\n      * @example\\n      * <example module=\\\"intervalExample\\\">\\n      * <file name=\\\"index.html\\\">\\n      *   <script>\\n      *     angular.module('intervalExample', [])\\n      *       .controller('ExampleController', ['$scope', '$interval',\\n      *         function($scope, $interval) {\\n      *           $scope.format = 'M/d/yy h:mm:ss a';\\n      *           $scope.blood_1 = 100;\\n      *           $scope.blood_2 = 120;\\n      *\\n      *           var stop;\\n      *           $scope.fight = function() {\\n      *             // Don't start a new fight if we are already fighting\\n      *             if ( angular.isDefined(stop) ) return;\\n      *\\n      *             stop = $interval(function() {\\n      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\\n      *                 $scope.blood_1 = $scope.blood_1 - 3;\\n      *                 $scope.blood_2 = $scope.blood_2 - 4;\\n      *               } else {\\n      *                 $scope.stopFight();\\n      *               }\\n      *             }, 100);\\n      *           };\\n      *\\n      *           $scope.stopFight = function() {\\n      *             if (angular.isDefined(stop)) {\\n      *               $interval.cancel(stop);\\n      *               stop = undefined;\\n      *             }\\n      *           };\\n      *\\n      *           $scope.resetFight = function() {\\n      *             $scope.blood_1 = 100;\\n      *             $scope.blood_2 = 120;\\n      *           };\\n      *\\n      *           $scope.$on('$destroy', function() {\\n      *             // Make sure that the interval is destroyed too\\n      *             $scope.stopFight();\\n      *           });\\n      *         }])\\n      *       // Register the 'myCurrentTime' directive factory method.\\n      *       // We inject $interval and dateFilter service since the factory method is DI.\\n      *       .directive('myCurrentTime', ['$interval', 'dateFilter',\\n      *         function($interval, dateFilter) {\\n      *           // return the directive link function. (compile function not needed)\\n      *           return function(scope, element, attrs) {\\n      *             var format,  // date format\\n      *                 stopTime; // so that we can cancel the time updates\\n      *\\n      *             // used to update the UI\\n      *             function updateTime() {\\n      *               element.text(dateFilter(new Date(), format));\\n      *             }\\n      *\\n      *             // watch the expression, and update the UI on change.\\n      *             scope.$watch(attrs.myCurrentTime, function(value) {\\n      *               format = value;\\n      *               updateTime();\\n      *             });\\n      *\\n      *             stopTime = $interval(updateTime, 1000);\\n      *\\n      *             // listen on DOM destroy (removal) event, and cancel the next UI update\\n      *             // to prevent updating time after the DOM element was removed.\\n      *             element.on('$destroy', function() {\\n      *               $interval.cancel(stopTime);\\n      *             });\\n      *           }\\n      *         }]);\\n      *   </script>\\n      *\\n      *   <div>\\n      *     <div ng-controller=\\\"ExampleController\\\">\\n      *       Date format: <input ng-model=\\\"format\\\"> <hr/>\\n      *       Current time is: <span my-current-time=\\\"format\\\"></span>\\n      *       <hr/>\\n      *       Blood 1 : <font color='red'>{{blood_1}}</font>\\n      *       Blood 2 : <font color='red'>{{blood_2}}</font>\\n      *       <button type=\\\"button\\\" data-ng-click=\\\"fight()\\\">Fight</button>\\n      *       <button type=\\\"button\\\" data-ng-click=\\\"stopFight()\\\">StopFight</button>\\n      *       <button type=\\\"button\\\" data-ng-click=\\\"resetFight()\\\">resetFight</button>\\n      *     </div>\\n      *   </div>\\n      *\\n      * </file>\\n      * </example>\\n      */\\n    function interval(fn, delay, count, invokeApply) {\\n      var setInterval = $window.setInterval,\\n          clearInterval = $window.clearInterval,\\n          iteration = 0,\\n          skipApply = (isDefined(invokeApply) && !invokeApply),\\n          deferred = (skipApply ? $$q : $q).defer(),\\n          promise = deferred.promise;\\n\\n      count = isDefined(count) ? count : 0;\\n\\n      promise.then(null, null, fn);\\n\\n      promise.$$intervalId = setInterval(function tick() {\\n        deferred.notify(iteration++);\\n\\n        if (count > 0 && iteration >= count) {\\n          deferred.resolve(iteration);\\n          clearInterval(promise.$$intervalId);\\n          delete intervals[promise.$$intervalId];\\n        }\\n\\n        if (!skipApply) $rootScope.$apply();\\n\\n      }, delay);\\n\\n      intervals[promise.$$intervalId] = deferred;\\n\\n      return promise;\\n    }\\n\\n\\n     /**\\n      * @ngdoc method\\n      * @name $interval#cancel\\n      *\\n      * @description\\n      * Cancels a task associated with the `promise`.\\n      *\\n      * @param {promise} promise returned by the `$interval` function.\\n      * @returns {boolean} Returns `true` if the task was successfully canceled.\\n      */\\n    interval.cancel = function(promise) {\\n      if (promise && promise.$$intervalId in intervals) {\\n        intervals[promise.$$intervalId].reject('canceled');\\n        $window.clearInterval(promise.$$intervalId);\\n        delete intervals[promise.$$intervalId];\\n        return true;\\n      }\\n      return false;\\n    };\\n\\n    return interval;\\n  }];\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $locale\\n *\\n * @description\\n * $locale service provides localization rules for various Angular components. As of right now the\\n * only public api is:\\n *\\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\\n */\\nfunction $LocaleProvider() {\\n  this.$get = function() {\\n    return {\\n      id: 'en-us',\\n\\n      NUMBER_FORMATS: {\\n        DECIMAL_SEP: '.',\\n        GROUP_SEP: ',',\\n        PATTERNS: [\\n          { // Decimal Pattern\\n            minInt: 1,\\n            minFrac: 0,\\n            maxFrac: 3,\\n            posPre: '',\\n            posSuf: '',\\n            negPre: '-',\\n            negSuf: '',\\n            gSize: 3,\\n            lgSize: 3\\n          },{ //Currency Pattern\\n            minInt: 1,\\n            minFrac: 2,\\n            maxFrac: 2,\\n            posPre: '\\\\u00A4',\\n            posSuf: '',\\n            negPre: '(\\\\u00A4',\\n            negSuf: ')',\\n            gSize: 3,\\n            lgSize: 3\\n          }\\n        ],\\n        CURRENCY_SYM: '$'\\n      },\\n\\n      DATETIME_FORMATS: {\\n        MONTH:\\n            'January,February,March,April,May,June,July,August,September,October,November,December'\\n            .split(','),\\n        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\\n        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\\n        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\\n        AMPMS: ['AM','PM'],\\n        medium: 'MMM d, y h:mm:ss a',\\n        'short': 'M/d/yy h:mm a',\\n        fullDate: 'EEEE, MMMM d, y',\\n        longDate: 'MMMM d, y',\\n        mediumDate: 'MMM d, y',\\n        shortDate: 'M/d/yy',\\n        mediumTime: 'h:mm:ss a',\\n        shortTime: 'h:mm a'\\n      },\\n\\n      pluralCat: function(num) {\\n        if (num === 1) {\\n          return 'one';\\n        }\\n        return 'other';\\n      }\\n    };\\n  };\\n}\\n\\nvar PATH_MATCH = /^([^\\\\?#]*)(\\\\?([^#]*))?(#(.*))?$/,\\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\\nvar $locationMinErr = minErr('$location');\\n\\n\\n/**\\n * Encode path using encodeUriSegment, ignoring forward slashes\\n *\\n * @param {string} path Path to encode\\n * @returns {string}\\n */\\nfunction encodePath(path) {\\n  var segments = path.split('/'),\\n      i = segments.length;\\n\\n  while (i--) {\\n    segments[i] = encodeUriSegment(segments[i]);\\n  }\\n\\n  return segments.join('/');\\n}\\n\\nfunction parseAbsoluteUrl(absoluteUrl, locationObj) {\\n  var parsedUrl = urlResolve(absoluteUrl);\\n\\n  locationObj.$$protocol = parsedUrl.protocol;\\n  locationObj.$$host = parsedUrl.hostname;\\n  locationObj.$$port = int(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;\\n}\\n\\n\\nfunction parseAppUrl(relativeUrl, locationObj) {\\n  var prefixed = (relativeUrl.charAt(0) !== '/');\\n  if (prefixed) {\\n    relativeUrl = '/' + relativeUrl;\\n  }\\n  var match = urlResolve(relativeUrl);\\n  locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ?\\n      match.pathname.substring(1) : match.pathname);\\n  locationObj.$$search = parseKeyValue(match.search);\\n  locationObj.$$hash = decodeURIComponent(match.hash);\\n\\n  // make sure path starts with '/';\\n  if (locationObj.$$path && locationObj.$$path.charAt(0) != '/') {\\n    locationObj.$$path = '/' + locationObj.$$path;\\n  }\\n}\\n\\n\\n/**\\n *\\n * @param {string} begin\\n * @param {string} whole\\n * @returns {string} returns text from whole after begin or undefined if it does not begin with\\n *                   expected string.\\n */\\nfunction beginsWith(begin, whole) {\\n  if (whole.indexOf(begin) === 0) {\\n    return whole.substr(begin.length);\\n  }\\n}\\n\\n\\nfunction stripHash(url) {\\n  var index = url.indexOf('#');\\n  return index == -1 ? url : url.substr(0, index);\\n}\\n\\nfunction trimEmptyHash(url) {\\n  return url.replace(/(#.+)|#$/, '$1');\\n}\\n\\n\\nfunction stripFile(url) {\\n  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);\\n}\\n\\n/* return the server only (scheme://host:port) */\\nfunction serverBase(url) {\\n  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));\\n}\\n\\n\\n/**\\n * LocationHtml5Url represents an url\\n * This object is exposed as $location service when HTML5 mode is enabled and supported\\n *\\n * @constructor\\n * @param {string} appBase application base URL\\n * @param {string} basePrefix url path prefix\\n */\\nfunction LocationHtml5Url(appBase, basePrefix) {\\n  this.$$html5 = true;\\n  basePrefix = basePrefix || '';\\n  var appBaseNoFile = stripFile(appBase);\\n  parseAbsoluteUrl(appBase, this);\\n\\n\\n  /**\\n   * Parse given html5 (regular) url string into properties\\n   * @param {string} url HTML5 url\\n   * @private\\n   */\\n  this.$$parse = function(url) {\\n    var pathUrl = beginsWith(appBaseNoFile, url);\\n    if (!isString(pathUrl)) {\\n      throw $locationMinErr('ipthprfx', 'Invalid url \\\"{0}\\\", missing path prefix \\\"{1}\\\".', url,\\n          appBaseNoFile);\\n    }\\n\\n    parseAppUrl(pathUrl, this);\\n\\n    if (!this.$$path) {\\n      this.$$path = '/';\\n    }\\n\\n    this.$$compose();\\n  };\\n\\n  /**\\n   * Compose url and update `absUrl` property\\n   * @private\\n   */\\n  this.$$compose = function() {\\n    var search = toKeyValue(this.$$search),\\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\\n\\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\\n    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'\\n  };\\n\\n  this.$$parseLinkUrl = function(url, relHref) {\\n    if (relHref && relHref[0] === '#') {\\n      // special case for links to hash fragments:\\n      // keep the old url and only replace the hash fragment\\n      this.hash(relHref.slice(1));\\n      return true;\\n    }\\n    var appUrl, prevAppUrl;\\n    var rewrittenUrl;\\n\\n    if ((appUrl = beginsWith(appBase, url)) !== undefined) {\\n      prevAppUrl = appUrl;\\n      if ((appUrl = beginsWith(basePrefix, appUrl)) !== undefined) {\\n        rewrittenUrl = appBaseNoFile + (beginsWith('/', appUrl) || appUrl);\\n      } else {\\n        rewrittenUrl = appBase + prevAppUrl;\\n      }\\n    } else if ((appUrl = beginsWith(appBaseNoFile, url)) !== undefined) {\\n      rewrittenUrl = appBaseNoFile + appUrl;\\n    } else if (appBaseNoFile == url + '/') {\\n      rewrittenUrl = appBaseNoFile;\\n    }\\n    if (rewrittenUrl) {\\n      this.$$parse(rewrittenUrl);\\n    }\\n    return !!rewrittenUrl;\\n  };\\n}\\n\\n\\n/**\\n * LocationHashbangUrl represents url\\n * This object is exposed as $location service when developer doesn't opt into html5 mode.\\n * It also serves as the base class for html5 mode fallback on legacy browsers.\\n *\\n * @constructor\\n * @param {string} appBase application base URL\\n * @param {string} hashPrefix hashbang prefix\\n */\\nfunction LocationHashbangUrl(appBase, hashPrefix) {\\n  var appBaseNoFile = stripFile(appBase);\\n\\n  parseAbsoluteUrl(appBase, this);\\n\\n\\n  /**\\n   * Parse given hashbang url into properties\\n   * @param {string} url Hashbang url\\n   * @private\\n   */\\n  this.$$parse = function(url) {\\n    var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);\\n    var withoutHashUrl;\\n\\n    if (withoutBaseUrl.charAt(0) === '#') {\\n\\n      // The rest of the url starts with a hash so we have\\n      // got either a hashbang path or a plain hash fragment\\n      withoutHashUrl = beginsWith(hashPrefix, withoutBaseUrl);\\n      if (isUndefined(withoutHashUrl)) {\\n        // There was no hashbang prefix so we just have a hash fragment\\n        withoutHashUrl = withoutBaseUrl;\\n      }\\n\\n    } else {\\n      // There was no hashbang path nor hash fragment:\\n      // If we are in HTML5 mode we use what is left as the path;\\n      // Otherwise we ignore what is left\\n      withoutHashUrl = this.$$html5 ? withoutBaseUrl : '';\\n    }\\n\\n    parseAppUrl(withoutHashUrl, this);\\n\\n    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);\\n\\n    this.$$compose();\\n\\n    /*\\n     * In Windows, on an anchor node on documents loaded from\\n     * the filesystem, the browser will return a pathname\\n     * prefixed with the drive name ('/C:/path') when a\\n     * pathname without a drive is set:\\n     *  * a.setAttribute('href', '/foo')\\n     *   * a.pathname === '/C:/foo' //true\\n     *\\n     * Inside of Angular, we're always using pathnames that\\n     * do not include drive names for routing.\\n     */\\n    function removeWindowsDriveName(path, url, base) {\\n      /*\\n      Matches paths for file protocol on windows,\\n      such as /C:/foo/bar, and captures only /foo/bar.\\n      */\\n      var windowsFilePathExp = /^\\\\/[A-Z]:(\\\\/.*)/;\\n\\n      var firstPathSegmentMatch;\\n\\n      //Get the relative path from the input URL.\\n      if (url.indexOf(base) === 0) {\\n        url = url.replace(base, '');\\n      }\\n\\n      // The input URL intentionally contains a first path segment that ends with a colon.\\n      if (windowsFilePathExp.exec(url)) {\\n        return path;\\n      }\\n\\n      firstPathSegmentMatch = windowsFilePathExp.exec(path);\\n      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;\\n    }\\n  };\\n\\n  /**\\n   * Compose hashbang url and update `absUrl` property\\n   * @private\\n   */\\n  this.$$compose = function() {\\n    var search = toKeyValue(this.$$search),\\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\\n\\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\\n    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');\\n  };\\n\\n  this.$$parseLinkUrl = function(url, relHref) {\\n    if (stripHash(appBase) == stripHash(url)) {\\n      this.$$parse(url);\\n      return true;\\n    }\\n    return false;\\n  };\\n}\\n\\n\\n/**\\n * LocationHashbangUrl represents url\\n * This object is exposed as $location service when html5 history api is enabled but the browser\\n * does not support it.\\n *\\n * @constructor\\n * @param {string} appBase application base URL\\n * @param {string} hashPrefix hashbang prefix\\n */\\nfunction LocationHashbangInHtml5Url(appBase, hashPrefix) {\\n  this.$$html5 = true;\\n  LocationHashbangUrl.apply(this, arguments);\\n\\n  var appBaseNoFile = stripFile(appBase);\\n\\n  this.$$parseLinkUrl = function(url, relHref) {\\n    if (relHref && relHref[0] === '#') {\\n      // special case for links to hash fragments:\\n      // keep the old url and only replace the hash fragment\\n      this.hash(relHref.slice(1));\\n      return true;\\n    }\\n\\n    var rewrittenUrl;\\n    var appUrl;\\n\\n    if (appBase == stripHash(url)) {\\n      rewrittenUrl = url;\\n    } else if ((appUrl = beginsWith(appBaseNoFile, url))) {\\n      rewrittenUrl = appBase + hashPrefix + appUrl;\\n    } else if (appBaseNoFile === url + '/') {\\n      rewrittenUrl = appBaseNoFile;\\n    }\\n    if (rewrittenUrl) {\\n      this.$$parse(rewrittenUrl);\\n    }\\n    return !!rewrittenUrl;\\n  };\\n\\n  this.$$compose = function() {\\n    var search = toKeyValue(this.$$search),\\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\\n\\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\\n    // include hashPrefix in $$absUrl when $$url is empty so IE8 & 9 do not reload page because of removal of '#'\\n    this.$$absUrl = appBase + hashPrefix + this.$$url;\\n  };\\n\\n}\\n\\n\\nvar locationPrototype = {\\n\\n  /**\\n   * Are we in html5 mode?\\n   * @private\\n   */\\n  $$html5: false,\\n\\n  /**\\n   * Has any change been replacing?\\n   * @private\\n   */\\n  $$replace: false,\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#absUrl\\n   *\\n   * @description\\n   * This method is getter only.\\n   *\\n   * Return full url representation with all segments encoded according to rules specified in\\n   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var absUrl = $location.absUrl();\\n   * // => \\\"http://example.com/#/some/path?foo=bar&baz=xoxo\\\"\\n   * ```\\n   *\\n   * @return {string} full url\\n   */\\n  absUrl: locationGetter('$$absUrl'),\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#url\\n   *\\n   * @description\\n   * This method is getter / setter.\\n   *\\n   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\\n   *\\n   * Change path, search and hash, when called with parameter and return `$location`.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var url = $location.url();\\n   * // => \\\"/some/path?foo=bar&baz=xoxo\\\"\\n   * ```\\n   *\\n   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\\n   * @return {string} url\\n   */\\n  url: function(url) {\\n    if (isUndefined(url))\\n      return this.$$url;\\n\\n    var match = PATH_MATCH.exec(url);\\n    if (match[1] || url === '') this.path(decodeURIComponent(match[1]));\\n    if (match[2] || match[1] || url === '') this.search(match[3] || '');\\n    this.hash(match[5] || '');\\n\\n    return this;\\n  },\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#protocol\\n   *\\n   * @description\\n   * This method is getter only.\\n   *\\n   * Return protocol of current url.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var protocol = $location.protocol();\\n   * // => \\\"http\\\"\\n   * ```\\n   *\\n   * @return {string} protocol of current url\\n   */\\n  protocol: locationGetter('$$protocol'),\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#host\\n   *\\n   * @description\\n   * This method is getter only.\\n   *\\n   * Return host of current url.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var host = $location.host();\\n   * // => \\\"example.com\\\"\\n   * ```\\n   *\\n   * @return {string} host of current url.\\n   */\\n  host: locationGetter('$$host'),\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#port\\n   *\\n   * @description\\n   * This method is getter only.\\n   *\\n   * Return port of current url.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var port = $location.port();\\n   * // => 80\\n   * ```\\n   *\\n   * @return {Number} port\\n   */\\n  port: locationGetter('$$port'),\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#path\\n   *\\n   * @description\\n   * This method is getter / setter.\\n   *\\n   * Return path of current url when called without any parameter.\\n   *\\n   * Change path when called with parameter and return `$location`.\\n   *\\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\\n   * if it is missing.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var path = $location.path();\\n   * // => \\\"/some/path\\\"\\n   * ```\\n   *\\n   * @param {(string|number)=} path New path\\n   * @return {string} path\\n   */\\n  path: locationGetterSetter('$$path', function(path) {\\n    path = path !== null ? path.toString() : '';\\n    return path.charAt(0) == '/' ? path : '/' + path;\\n  }),\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#search\\n   *\\n   * @description\\n   * This method is getter / setter.\\n   *\\n   * Return search part (as object) of current url when called without any parameter.\\n   *\\n   * Change search part when called with parameter and return `$location`.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\\n   * var searchObject = $location.search();\\n   * // => {foo: 'bar', baz: 'xoxo'}\\n   *\\n   * // set foo to 'yipee'\\n   * $location.search('foo', 'yipee');\\n   * // $location.search() => {foo: 'yipee', baz: 'xoxo'}\\n   * ```\\n   *\\n   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or\\n   * hash object.\\n   *\\n   * When called with a single argument the method acts as a setter, setting the `search` component\\n   * of `$location` to the specified value.\\n   *\\n   * If the argument is a hash object containing an array of values, these values will be encoded\\n   * as duplicate search parameters in the url.\\n   *\\n   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`\\n   * will override only a single search property.\\n   *\\n   * If `paramValue` is an array, it will override the property of the `search` component of\\n   * `$location` specified via the first argument.\\n   *\\n   * If `paramValue` is `null`, the property specified via the first argument will be deleted.\\n   *\\n   * If `paramValue` is `true`, the property specified via the first argument will be added with no\\n   * value nor trailing equal sign.\\n   *\\n   * @return {Object} If called with no arguments returns the parsed `search` object. If called with\\n   * one or more arguments returns `$location` object itself.\\n   */\\n  search: function(search, paramValue) {\\n    switch (arguments.length) {\\n      case 0:\\n        return this.$$search;\\n      case 1:\\n        if (isString(search) || isNumber(search)) {\\n          search = search.toString();\\n          this.$$search = parseKeyValue(search);\\n        } else if (isObject(search)) {\\n          search = copy(search, {});\\n          // remove object undefined or null properties\\n          forEach(search, function(value, key) {\\n            if (value == null) delete search[key];\\n          });\\n\\n          this.$$search = search;\\n        } else {\\n          throw $locationMinErr('isrcharg',\\n              'The first argument of the `$location#search()` call must be a string or an object.');\\n        }\\n        break;\\n      default:\\n        if (isUndefined(paramValue) || paramValue === null) {\\n          delete this.$$search[search];\\n        } else {\\n          this.$$search[search] = paramValue;\\n        }\\n    }\\n\\n    this.$$compose();\\n    return this;\\n  },\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#hash\\n   *\\n   * @description\\n   * This method is getter / setter.\\n   *\\n   * Return hash fragment when called without any parameter.\\n   *\\n   * Change hash fragment when called with parameter and return `$location`.\\n   *\\n   *\\n   * ```js\\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\\n   * var hash = $location.hash();\\n   * // => \\\"hashValue\\\"\\n   * ```\\n   *\\n   * @param {(string|number)=} hash New hash fragment\\n   * @return {string} hash\\n   */\\n  hash: locationGetterSetter('$$hash', function(hash) {\\n    return hash !== null ? hash.toString() : '';\\n  }),\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#replace\\n   *\\n   * @description\\n   * If called, all changes to $location during current `$digest` will be replacing current history\\n   * record, instead of adding new one.\\n   */\\n  replace: function() {\\n    this.$$replace = true;\\n    return this;\\n  }\\n};\\n\\nforEach([LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url], function(Location) {\\n  Location.prototype = Object.create(locationPrototype);\\n\\n  /**\\n   * @ngdoc method\\n   * @name $location#state\\n   *\\n   * @description\\n   * This method is getter / setter.\\n   *\\n   * Return the history state object when called without any parameter.\\n   *\\n   * Change the history state object when called with one parameter and return `$location`.\\n   * The state object is later passed to `pushState` or `replaceState`.\\n   *\\n   * NOTE: This method is supported only in HTML5 mode and only in browsers supporting\\n   * the HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\\n   * older browsers (like IE9 or Android < 4.0), don't use this method.\\n   *\\n   * @param {object=} state State object for pushState or replaceState\\n   * @return {object} state\\n   */\\n  Location.prototype.state = function(state) {\\n    if (!arguments.length)\\n      return this.$$state;\\n\\n    if (Location !== LocationHtml5Url || !this.$$html5) {\\n      throw $locationMinErr('nostate', 'History API state support is available only ' +\\n        'in HTML5 mode and only in browsers supporting HTML5 History API');\\n    }\\n    // The user might modify `stateObject` after invoking `$location.state(stateObject)`\\n    // but we're changing the $$state reference to $browser.state() during the $digest\\n    // so the modification window is narrow.\\n    this.$$state = isUndefined(state) ? null : state;\\n\\n    return this;\\n  };\\n});\\n\\n\\nfunction locationGetter(property) {\\n  return function() {\\n    return this[property];\\n  };\\n}\\n\\n\\nfunction locationGetterSetter(property, preprocess) {\\n  return function(value) {\\n    if (isUndefined(value))\\n      return this[property];\\n\\n    this[property] = preprocess(value);\\n    this.$$compose();\\n\\n    return this;\\n  };\\n}\\n\\n\\n/**\\n * @ngdoc service\\n * @name $location\\n *\\n * @requires $rootElement\\n *\\n * @description\\n * The $location service parses the URL in the browser address bar (based on the\\n * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\\n * available to your application. Changes to the URL in the address bar are reflected into\\n * $location service and changes to $location are reflected into the browser address bar.\\n *\\n * **The $location service:**\\n *\\n * - Exposes the current URL in the browser address bar, so you can\\n *   - Watch and observe the URL.\\n *   - Change the URL.\\n * - Synchronizes the URL with the browser when the user\\n *   - Changes the address bar.\\n *   - Clicks the back or forward button (or clicks a History link).\\n *   - Clicks on a link.\\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\\n *\\n * For more information see {@link guide/$location Developer Guide: Using $location}\\n */\\n\\n/**\\n * @ngdoc provider\\n * @name $locationProvider\\n * @description\\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\\n */\\nfunction $LocationProvider() {\\n  var hashPrefix = '',\\n      html5Mode = {\\n        enabled: false,\\n        requireBase: true,\\n        rewriteLinks: true\\n      };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $locationProvider#hashPrefix\\n   * @description\\n   * @param {string=} prefix Prefix for hash part (containing path and search)\\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\\n   */\\n  this.hashPrefix = function(prefix) {\\n    if (isDefined(prefix)) {\\n      hashPrefix = prefix;\\n      return this;\\n    } else {\\n      return hashPrefix;\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $locationProvider#html5Mode\\n   * @description\\n   * @param {(boolean|Object)=} mode If boolean, sets `html5Mode.enabled` to value.\\n   *   If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported\\n   *   properties:\\n   *   - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to\\n   *     change urls where supported. Will fall back to hash-prefixed paths in browsers that do not\\n   *     support `pushState`.\\n   *   - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies\\n   *     whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are\\n   *     true, and a base tag is not present, an error will be thrown when `$location` is injected.\\n   *     See the {@link guide/$location $location guide for more information}\\n   *   - **rewriteLinks** - `{boolean}` - (default: `true`) When html5Mode is enabled,\\n   *     enables/disables url rewriting for relative links.\\n   *\\n   * @returns {Object} html5Mode object if used as getter or itself (chaining) if used as setter\\n   */\\n  this.html5Mode = function(mode) {\\n    if (isBoolean(mode)) {\\n      html5Mode.enabled = mode;\\n      return this;\\n    } else if (isObject(mode)) {\\n\\n      if (isBoolean(mode.enabled)) {\\n        html5Mode.enabled = mode.enabled;\\n      }\\n\\n      if (isBoolean(mode.requireBase)) {\\n        html5Mode.requireBase = mode.requireBase;\\n      }\\n\\n      if (isBoolean(mode.rewriteLinks)) {\\n        html5Mode.rewriteLinks = mode.rewriteLinks;\\n      }\\n\\n      return this;\\n    } else {\\n      return html5Mode;\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc event\\n   * @name $location#$locationChangeStart\\n   * @eventType broadcast on root scope\\n   * @description\\n   * Broadcasted before a URL will change.\\n   *\\n   * This change can be prevented by calling\\n   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\\n   * details about event object. Upon successful change\\n   * {@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\\n   *\\n   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when\\n   * the browser supports the HTML5 History API.\\n   *\\n   * @param {Object} angularEvent Synthetic event object.\\n   * @param {string} newUrl New URL\\n   * @param {string=} oldUrl URL that was before it was changed.\\n   * @param {string=} newState New history state object\\n   * @param {string=} oldState History state object that was before it was changed.\\n   */\\n\\n  /**\\n   * @ngdoc event\\n   * @name $location#$locationChangeSuccess\\n   * @eventType broadcast on root scope\\n   * @description\\n   * Broadcasted after a URL was changed.\\n   *\\n   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when\\n   * the browser supports the HTML5 History API.\\n   *\\n   * @param {Object} angularEvent Synthetic event object.\\n   * @param {string} newUrl New URL\\n   * @param {string=} oldUrl URL that was before it was changed.\\n   * @param {string=} newState New history state object\\n   * @param {string=} oldState History state object that was before it was changed.\\n   */\\n\\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window',\\n      function($rootScope, $browser, $sniffer, $rootElement, $window) {\\n    var $location,\\n        LocationMode,\\n        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''\\n        initialUrl = $browser.url(),\\n        appBase;\\n\\n    if (html5Mode.enabled) {\\n      if (!baseHref && html5Mode.requireBase) {\\n        throw $locationMinErr('nobase',\\n          \\\"$location in HTML5 mode requires a <base> tag to be present!\\\");\\n      }\\n      appBase = serverBase(initialUrl) + (baseHref || '/');\\n      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;\\n    } else {\\n      appBase = stripHash(initialUrl);\\n      LocationMode = LocationHashbangUrl;\\n    }\\n    $location = new LocationMode(appBase, '#' + hashPrefix);\\n    $location.$$parseLinkUrl(initialUrl, initialUrl);\\n\\n    $location.$$state = $browser.state();\\n\\n    var IGNORE_URI_REGEXP = /^\\\\s*(javascript|mailto):/i;\\n\\n    function setBrowserUrlWithFallback(url, replace, state) {\\n      var oldUrl = $location.url();\\n      var oldState = $location.$$state;\\n      try {\\n        $browser.url(url, replace, state);\\n\\n        // Make sure $location.state() returns referentially identical (not just deeply equal)\\n        // state object; this makes possible quick checking if the state changed in the digest\\n        // loop. Checking deep equality would be too expensive.\\n        $location.$$state = $browser.state();\\n      } catch (e) {\\n        // Restore old values if pushState fails\\n        $location.url(oldUrl);\\n        $location.$$state = oldState;\\n\\n        throw e;\\n      }\\n    }\\n\\n    $rootElement.on('click', function(event) {\\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\\n      // currently we open nice url link and redirect then\\n\\n      if (!html5Mode.rewriteLinks || event.ctrlKey || event.metaKey || event.shiftKey || event.which == 2 || event.button == 2) return;\\n\\n      var elm = jqLite(event.target);\\n\\n      // traverse the DOM up to find first A tag\\n      while (nodeName_(elm[0]) !== 'a') {\\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\\n      }\\n\\n      var absHref = elm.prop('href');\\n      // get the actual href attribute - see\\n      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx\\n      var relHref = elm.attr('href') || elm.attr('xlink:href');\\n\\n      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {\\n        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during\\n        // an animation.\\n        absHref = urlResolve(absHref.animVal).href;\\n      }\\n\\n      // Ignore when url is started with javascript: or mailto:\\n      if (IGNORE_URI_REGEXP.test(absHref)) return;\\n\\n      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {\\n        if ($location.$$parseLinkUrl(absHref, relHref)) {\\n          // We do a preventDefault for all urls that are part of the angular application,\\n          // in html5mode and also without, so that we are able to abort navigation without\\n          // getting double entries in the location history.\\n          event.preventDefault();\\n          // update location manually\\n          if ($location.absUrl() != $browser.url()) {\\n            $rootScope.$apply();\\n            // hack to work around FF6 bug 684208 when scenario runner clicks on links\\n            $window.angular['ff-684208-preventDefault'] = true;\\n          }\\n        }\\n      }\\n    });\\n\\n\\n    // rewrite hashbang url <> html5 url\\n    if ($location.absUrl() != initialUrl) {\\n      $browser.url($location.absUrl(), true);\\n    }\\n\\n    var initializing = true;\\n\\n    // update $location when $browser url changes\\n    $browser.onUrlChange(function(newUrl, newState) {\\n      $rootScope.$evalAsync(function() {\\n        var oldUrl = $location.absUrl();\\n        var oldState = $location.$$state;\\n        var defaultPrevented;\\n\\n        $location.$$parse(newUrl);\\n        $location.$$state = newState;\\n\\n        defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,\\n            newState, oldState).defaultPrevented;\\n\\n        // if the location was changed by a `$locationChangeStart` handler then stop\\n        // processing this location change\\n        if ($location.absUrl() !== newUrl) return;\\n\\n        if (defaultPrevented) {\\n          $location.$$parse(oldUrl);\\n          $location.$$state = oldState;\\n          setBrowserUrlWithFallback(oldUrl, false, oldState);\\n        } else {\\n          initializing = false;\\n          afterLocationChange(oldUrl, oldState);\\n        }\\n      });\\n      if (!$rootScope.$$phase) $rootScope.$digest();\\n    });\\n\\n    // update browser\\n    $rootScope.$watch(function $locationWatch() {\\n      var oldUrl = trimEmptyHash($browser.url());\\n      var newUrl = trimEmptyHash($location.absUrl());\\n      var oldState = $browser.state();\\n      var currentReplace = $location.$$replace;\\n      var urlOrStateChanged = oldUrl !== newUrl ||\\n        ($location.$$html5 && $sniffer.history && oldState !== $location.$$state);\\n\\n      if (initializing || urlOrStateChanged) {\\n        initializing = false;\\n\\n        $rootScope.$evalAsync(function() {\\n          var newUrl = $location.absUrl();\\n          var defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,\\n              $location.$$state, oldState).defaultPrevented;\\n\\n          // if the location was changed by a `$locationChangeStart` handler then stop\\n          // processing this location change\\n          if ($location.absUrl() !== newUrl) return;\\n\\n          if (defaultPrevented) {\\n            $location.$$parse(oldUrl);\\n            $location.$$state = oldState;\\n          } else {\\n            if (urlOrStateChanged) {\\n              setBrowserUrlWithFallback(newUrl, currentReplace,\\n                                        oldState === $location.$$state ? null : $location.$$state);\\n            }\\n            afterLocationChange(oldUrl, oldState);\\n          }\\n        });\\n      }\\n\\n      $location.$$replace = false;\\n\\n      // we don't need to return anything because $evalAsync will make the digest loop dirty when\\n      // there is a change\\n    });\\n\\n    return $location;\\n\\n    function afterLocationChange(oldUrl, oldState) {\\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl,\\n        $location.$$state, oldState);\\n    }\\n}];\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $log\\n * @requires $window\\n *\\n * @description\\n * Simple service for logging. Default implementation safely writes the message\\n * into the browser's console (if present).\\n *\\n * The main purpose of this service is to simplify debugging and troubleshooting.\\n *\\n * The default is to log `debug` messages. You can use\\n * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.\\n *\\n * @example\\n   <example module=\\\"logExample\\\">\\n     <file name=\\\"script.js\\\">\\n       angular.module('logExample', [])\\n         .controller('LogController', ['$scope', '$log', function($scope, $log) {\\n           $scope.$log = $log;\\n           $scope.message = 'Hello World!';\\n         }]);\\n     </file>\\n     <file name=\\\"index.html\\\">\\n       <div ng-controller=\\\"LogController\\\">\\n         <p>Reload this page with open console, enter text and hit the log button...</p>\\n         Message:\\n         <input type=\\\"text\\\" ng-model=\\\"message\\\"/>\\n         <button ng-click=\\\"$log.log(message)\\\">log</button>\\n         <button ng-click=\\\"$log.warn(message)\\\">warn</button>\\n         <button ng-click=\\\"$log.info(message)\\\">info</button>\\n         <button ng-click=\\\"$log.error(message)\\\">error</button>\\n       </div>\\n     </file>\\n   </example>\\n */\\n\\n/**\\n * @ngdoc provider\\n * @name $logProvider\\n * @description\\n * Use the `$logProvider` to configure how the application logs messages\\n */\\nfunction $LogProvider() {\\n  var debug = true,\\n      self = this;\\n\\n  /**\\n   * @ngdoc method\\n   * @name $logProvider#debugEnabled\\n   * @description\\n   * @param {boolean=} flag enable or disable debug level messages\\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\\n   */\\n  this.debugEnabled = function(flag) {\\n    if (isDefined(flag)) {\\n      debug = flag;\\n    return this;\\n    } else {\\n      return debug;\\n    }\\n  };\\n\\n  this.$get = ['$window', function($window) {\\n    return {\\n      /**\\n       * @ngdoc method\\n       * @name $log#log\\n       *\\n       * @description\\n       * Write a log message\\n       */\\n      log: consoleLog('log'),\\n\\n      /**\\n       * @ngdoc method\\n       * @name $log#info\\n       *\\n       * @description\\n       * Write an information message\\n       */\\n      info: consoleLog('info'),\\n\\n      /**\\n       * @ngdoc method\\n       * @name $log#warn\\n       *\\n       * @description\\n       * Write a warning message\\n       */\\n      warn: consoleLog('warn'),\\n\\n      /**\\n       * @ngdoc method\\n       * @name $log#error\\n       *\\n       * @description\\n       * Write an error message\\n       */\\n      error: consoleLog('error'),\\n\\n      /**\\n       * @ngdoc method\\n       * @name $log#debug\\n       *\\n       * @description\\n       * Write a debug message\\n       */\\n      debug: (function() {\\n        var fn = consoleLog('debug');\\n\\n        return function() {\\n          if (debug) {\\n            fn.apply(self, arguments);\\n          }\\n        };\\n      }())\\n    };\\n\\n    function formatError(arg) {\\n      if (arg instanceof Error) {\\n        if (arg.stack) {\\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\\n              ? 'Error: ' + arg.message + '\\\\n' + arg.stack\\n              : arg.stack;\\n        } else if (arg.sourceURL) {\\n          arg = arg.message + '\\\\n' + arg.sourceURL + ':' + arg.line;\\n        }\\n      }\\n      return arg;\\n    }\\n\\n    function consoleLog(type) {\\n      var console = $window.console || {},\\n          logFn = console[type] || console.log || noop,\\n          hasApply = false;\\n\\n      // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.\\n      // The reason behind this is that console.log has type \\\"object\\\" in IE8...\\n      try {\\n        hasApply = !!logFn.apply;\\n      } catch (e) {}\\n\\n      if (hasApply) {\\n        return function() {\\n          var args = [];\\n          forEach(arguments, function(arg) {\\n            args.push(formatError(arg));\\n          });\\n          return logFn.apply(console, args);\\n        };\\n      }\\n\\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\\n      return function(arg1, arg2) {\\n        logFn(arg1, arg2 == null ? '' : arg2);\\n      };\\n    }\\n  }];\\n}\\n\\nvar $parseMinErr = minErr('$parse');\\n\\n// Sandboxing Angular Expressions\\n// ------------------------------\\n// Angular expressions are generally considered safe because these expressions only have direct\\n// access to `$scope` and locals. However, one can obtain the ability to execute arbitrary JS code by\\n// obtaining a reference to native JS functions such as the Function constructor.\\n//\\n// As an example, consider the following Angular expression:\\n//\\n//   {}.toString.constructor('alert(\\\"evil JS code\\\")')\\n//\\n// This sandboxing technique is not perfect and doesn't aim to be. The goal is to prevent exploits\\n// against the expression language, but not to prevent exploits that were enabled by exposing\\n// sensitive JavaScript or browser APIs on Scope. Exposing such objects on a Scope is never a good\\n// practice and therefore we are not even trying to protect against interaction with an object\\n// explicitly exposed in this way.\\n//\\n// In general, it is not possible to access a Window object from an angular expression unless a\\n// window or some DOM object that has a reference to window is published onto a Scope.\\n// Similarly we prevent invocations of function known to be dangerous, as well as assignments to\\n// native objects.\\n//\\n// See https://docs.angularjs.org/guide/security\\n\\n\\nfunction ensureSafeMemberName(name, fullExpression) {\\n  if (name === \\\"__defineGetter__\\\" || name === \\\"__defineSetter__\\\"\\n      || name === \\\"__lookupGetter__\\\" || name === \\\"__lookupSetter__\\\"\\n      || name === \\\"__proto__\\\") {\\n    throw $parseMinErr('isecfld',\\n        'Attempting to access a disallowed field in Angular expressions! '\\n        + 'Expression: {0}', fullExpression);\\n  }\\n  return name;\\n}\\n\\nfunction ensureSafeObject(obj, fullExpression) {\\n  // nifty check if obj is Function that is fast and works across iframes and other contexts\\n  if (obj) {\\n    if (obj.constructor === obj) {\\n      throw $parseMinErr('isecfn',\\n          'Referencing Function in Angular expressions is disallowed! Expression: {0}',\\n          fullExpression);\\n    } else if (// isWindow(obj)\\n        obj.window === obj) {\\n      throw $parseMinErr('isecwindow',\\n          'Referencing the Window in Angular expressions is disallowed! Expression: {0}',\\n          fullExpression);\\n    } else if (// isElement(obj)\\n        obj.children && (obj.nodeName || (obj.prop && obj.attr && obj.find))) {\\n      throw $parseMinErr('isecdom',\\n          'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}',\\n          fullExpression);\\n    } else if (// block Object so that we can't get hold of dangerous Object.* methods\\n        obj === Object) {\\n      throw $parseMinErr('isecobj',\\n          'Referencing Object in Angular expressions is disallowed! Expression: {0}',\\n          fullExpression);\\n    }\\n  }\\n  return obj;\\n}\\n\\nvar CALL = Function.prototype.call;\\nvar APPLY = Function.prototype.apply;\\nvar BIND = Function.prototype.bind;\\n\\nfunction ensureSafeFunction(obj, fullExpression) {\\n  if (obj) {\\n    if (obj.constructor === obj) {\\n      throw $parseMinErr('isecfn',\\n        'Referencing Function in Angular expressions is disallowed! Expression: {0}',\\n        fullExpression);\\n    } else if (obj === CALL || obj === APPLY || obj === BIND) {\\n      throw $parseMinErr('isecff',\\n        'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}',\\n        fullExpression);\\n    }\\n  }\\n}\\n\\n//Keyword constants\\nvar CONSTANTS = createMap();\\nforEach({\\n  'null': function() { return null; },\\n  'true': function() { return true; },\\n  'false': function() { return false; },\\n  'undefined': function() {}\\n}, function(constantGetter, name) {\\n  constantGetter.constant = constantGetter.literal = constantGetter.sharedGetter = true;\\n  CONSTANTS[name] = constantGetter;\\n});\\n\\n//Not quite a constant, but can be lex/parsed the same\\nCONSTANTS['this'] = function(self) { return self; };\\nCONSTANTS['this'].sharedGetter = true;\\n\\n\\n//Operators - will be wrapped by binaryFn/unaryFn/assignment/filter\\nvar OPERATORS = extend(createMap(), {\\n    '+':function(self, locals, a, b) {\\n      a=a(self, locals); b=b(self, locals);\\n      if (isDefined(a)) {\\n        if (isDefined(b)) {\\n          return a + b;\\n        }\\n        return a;\\n      }\\n      return isDefined(b) ? b : undefined;},\\n    '-':function(self, locals, a, b) {\\n          a=a(self, locals); b=b(self, locals);\\n          return (isDefined(a) ? a : 0) - (isDefined(b) ? b : 0);\\n        },\\n    '*':function(self, locals, a, b) {return a(self, locals) * b(self, locals);},\\n    '/':function(self, locals, a, b) {return a(self, locals) / b(self, locals);},\\n    '%':function(self, locals, a, b) {return a(self, locals) % b(self, locals);},\\n    '===':function(self, locals, a, b) {return a(self, locals) === b(self, locals);},\\n    '!==':function(self, locals, a, b) {return a(self, locals) !== b(self, locals);},\\n    '==':function(self, locals, a, b) {return a(self, locals) == b(self, locals);},\\n    '!=':function(self, locals, a, b) {return a(self, locals) != b(self, locals);},\\n    '<':function(self, locals, a, b) {return a(self, locals) < b(self, locals);},\\n    '>':function(self, locals, a, b) {return a(self, locals) > b(self, locals);},\\n    '<=':function(self, locals, a, b) {return a(self, locals) <= b(self, locals);},\\n    '>=':function(self, locals, a, b) {return a(self, locals) >= b(self, locals);},\\n    '&&':function(self, locals, a, b) {return a(self, locals) && b(self, locals);},\\n    '||':function(self, locals, a, b) {return a(self, locals) || b(self, locals);},\\n    '!':function(self, locals, a) {return !a(self, locals);},\\n\\n    //Tokenized as operators but parsed as assignment/filters\\n    '=':true,\\n    '|':true\\n});\\nvar ESCAPE = {\\\"n\\\":\\\"\\\\n\\\", \\\"f\\\":\\\"\\\\f\\\", \\\"r\\\":\\\"\\\\r\\\", \\\"t\\\":\\\"\\\\t\\\", \\\"v\\\":\\\"\\\\v\\\", \\\"'\\\":\\\"'\\\", '\\\"':'\\\"'};\\n\\n\\n/////////////////////////////////////////\\n\\n\\n/**\\n * @constructor\\n */\\nvar Lexer = function(options) {\\n  this.options = options;\\n};\\n\\nLexer.prototype = {\\n  constructor: Lexer,\\n\\n  lex: function(text) {\\n    this.text = text;\\n    this.index = 0;\\n    this.tokens = [];\\n\\n    while (this.index < this.text.length) {\\n      var ch = this.text.charAt(this.index);\\n      if (ch === '\\\"' || ch === \\\"'\\\") {\\n        this.readString(ch);\\n      } else if (this.isNumber(ch) || ch === '.' && this.isNumber(this.peek())) {\\n        this.readNumber();\\n      } else if (this.isIdent(ch)) {\\n        this.readIdent();\\n      } else if (this.is(ch, '(){}[].,;:?')) {\\n        this.tokens.push({index: this.index, text: ch});\\n        this.index++;\\n      } else if (this.isWhitespace(ch)) {\\n        this.index++;\\n      } else {\\n        var ch2 = ch + this.peek();\\n        var ch3 = ch2 + this.peek(2);\\n        var op1 = OPERATORS[ch];\\n        var op2 = OPERATORS[ch2];\\n        var op3 = OPERATORS[ch3];\\n        if (op1 || op2 || op3) {\\n          var token = op3 ? ch3 : (op2 ? ch2 : ch);\\n          this.tokens.push({index: this.index, text: token, operator: true});\\n          this.index += token.length;\\n        } else {\\n          this.throwError('Unexpected next character ', this.index, this.index + 1);\\n        }\\n      }\\n    }\\n    return this.tokens;\\n  },\\n\\n  is: function(ch, chars) {\\n    return chars.indexOf(ch) !== -1;\\n  },\\n\\n  peek: function(i) {\\n    var num = i || 1;\\n    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;\\n  },\\n\\n  isNumber: function(ch) {\\n    return ('0' <= ch && ch <= '9') && typeof ch === \\\"string\\\";\\n  },\\n\\n  isWhitespace: function(ch) {\\n    // IE treats non-breaking space as \\\\u00A0\\n    return (ch === ' ' || ch === '\\\\r' || ch === '\\\\t' ||\\n            ch === '\\\\n' || ch === '\\\\v' || ch === '\\\\u00A0');\\n  },\\n\\n  isIdent: function(ch) {\\n    return ('a' <= ch && ch <= 'z' ||\\n            'A' <= ch && ch <= 'Z' ||\\n            '_' === ch || ch === '$');\\n  },\\n\\n  isExpOperator: function(ch) {\\n    return (ch === '-' || ch === '+' || this.isNumber(ch));\\n  },\\n\\n  throwError: function(error, start, end) {\\n    end = end || this.index;\\n    var colStr = (isDefined(start)\\n            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'\\n            : ' ' + end);\\n    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',\\n        error, colStr, this.text);\\n  },\\n\\n  readNumber: function() {\\n    var number = '';\\n    var start = this.index;\\n    while (this.index < this.text.length) {\\n      var ch = lowercase(this.text.charAt(this.index));\\n      if (ch == '.' || this.isNumber(ch)) {\\n        number += ch;\\n      } else {\\n        var peekCh = this.peek();\\n        if (ch == 'e' && this.isExpOperator(peekCh)) {\\n          number += ch;\\n        } else if (this.isExpOperator(ch) &&\\n            peekCh && this.isNumber(peekCh) &&\\n            number.charAt(number.length - 1) == 'e') {\\n          number += ch;\\n        } else if (this.isExpOperator(ch) &&\\n            (!peekCh || !this.isNumber(peekCh)) &&\\n            number.charAt(number.length - 1) == 'e') {\\n          this.throwError('Invalid exponent');\\n        } else {\\n          break;\\n        }\\n      }\\n      this.index++;\\n    }\\n    this.tokens.push({\\n      index: start,\\n      text: number,\\n      constant: true,\\n      value: Number(number)\\n    });\\n  },\\n\\n  readIdent: function() {\\n    var start = this.index;\\n    while (this.index < this.text.length) {\\n      var ch = this.text.charAt(this.index);\\n      if (!(this.isIdent(ch) || this.isNumber(ch))) {\\n        break;\\n      }\\n      this.index++;\\n    }\\n    this.tokens.push({\\n      index: start,\\n      text: this.text.slice(start, this.index),\\n      identifier: true\\n    });\\n  },\\n\\n  readString: function(quote) {\\n    var start = this.index;\\n    this.index++;\\n    var string = '';\\n    var rawString = quote;\\n    var escape = false;\\n    while (this.index < this.text.length) {\\n      var ch = this.text.charAt(this.index);\\n      rawString += ch;\\n      if (escape) {\\n        if (ch === 'u') {\\n          var hex = this.text.substring(this.index + 1, this.index + 5);\\n          if (!hex.match(/[\\\\da-f]{4}/i))\\n            this.throwError('Invalid unicode escape [\\\\\\\\u' + hex + ']');\\n          this.index += 4;\\n          string += String.fromCharCode(parseInt(hex, 16));\\n        } else {\\n          var rep = ESCAPE[ch];\\n          string = string + (rep || ch);\\n        }\\n        escape = false;\\n      } else if (ch === '\\\\\\\\') {\\n        escape = true;\\n      } else if (ch === quote) {\\n        this.index++;\\n        this.tokens.push({\\n          index: start,\\n          text: rawString,\\n          constant: true,\\n          value: string\\n        });\\n        return;\\n      } else {\\n        string += ch;\\n      }\\n      this.index++;\\n    }\\n    this.throwError('Unterminated quote', start);\\n  }\\n};\\n\\n\\nfunction isConstant(exp) {\\n  return exp.constant;\\n}\\n\\n/**\\n * @constructor\\n */\\nvar Parser = function(lexer, $filter, options) {\\n  this.lexer = lexer;\\n  this.$filter = $filter;\\n  this.options = options;\\n};\\n\\nParser.ZERO = extend(function() {\\n  return 0;\\n}, {\\n  sharedGetter: true,\\n  constant: true\\n});\\n\\nParser.prototype = {\\n  constructor: Parser,\\n\\n  parse: function(text) {\\n    this.text = text;\\n    this.tokens = this.lexer.lex(text);\\n\\n    var value = this.statements();\\n\\n    if (this.tokens.length !== 0) {\\n      this.throwError('is an unexpected token', this.tokens[0]);\\n    }\\n\\n    value.literal = !!value.literal;\\n    value.constant = !!value.constant;\\n\\n    return value;\\n  },\\n\\n  primary: function() {\\n    var primary;\\n    if (this.expect('(')) {\\n      primary = this.filterChain();\\n      this.consume(')');\\n    } else if (this.expect('[')) {\\n      primary = this.arrayDeclaration();\\n    } else if (this.expect('{')) {\\n      primary = this.object();\\n    } else if (this.peek().identifier && this.peek().text in CONSTANTS) {\\n      primary = CONSTANTS[this.consume().text];\\n    } else if (this.peek().identifier) {\\n      primary = this.identifier();\\n    } else if (this.peek().constant) {\\n      primary = this.constant();\\n    } else {\\n      this.throwError('not a primary expression', this.peek());\\n    }\\n\\n    var next, context;\\n    while ((next = this.expect('(', '[', '.'))) {\\n      if (next.text === '(') {\\n        primary = this.functionCall(primary, context);\\n        context = null;\\n      } else if (next.text === '[') {\\n        context = primary;\\n        primary = this.objectIndex(primary);\\n      } else if (next.text === '.') {\\n        context = primary;\\n        primary = this.fieldAccess(primary);\\n      } else {\\n        this.throwError('IMPOSSIBLE');\\n      }\\n    }\\n    return primary;\\n  },\\n\\n  throwError: function(msg, token) {\\n    throw $parseMinErr('syntax',\\n        'Syntax Error: Token \\\\'{0}\\\\' {1} at column {2} of the expression [{3}] starting at [{4}].',\\n          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));\\n  },\\n\\n  peekToken: function() {\\n    if (this.tokens.length === 0)\\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\\n    return this.tokens[0];\\n  },\\n\\n  peek: function(e1, e2, e3, e4) {\\n    return this.peekAhead(0, e1, e2, e3, e4);\\n  },\\n  peekAhead: function(i, e1, e2, e3, e4) {\\n    if (this.tokens.length > i) {\\n      var token = this.tokens[i];\\n      var t = token.text;\\n      if (t === e1 || t === e2 || t === e3 || t === e4 ||\\n          (!e1 && !e2 && !e3 && !e4)) {\\n        return token;\\n      }\\n    }\\n    return false;\\n  },\\n\\n  expect: function(e1, e2, e3, e4) {\\n    var token = this.peek(e1, e2, e3, e4);\\n    if (token) {\\n      this.tokens.shift();\\n      return token;\\n    }\\n    return false;\\n  },\\n\\n  consume: function(e1) {\\n    if (this.tokens.length === 0) {\\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\\n    }\\n\\n    var token = this.expect(e1);\\n    if (!token) {\\n      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());\\n    }\\n    return token;\\n  },\\n\\n  unaryFn: function(op, right) {\\n    var fn = OPERATORS[op];\\n    return extend(function $parseUnaryFn(self, locals) {\\n      return fn(self, locals, right);\\n    }, {\\n      constant:right.constant,\\n      inputs: [right]\\n    });\\n  },\\n\\n  binaryFn: function(left, op, right, isBranching) {\\n    var fn = OPERATORS[op];\\n    return extend(function $parseBinaryFn(self, locals) {\\n      return fn(self, locals, left, right);\\n    }, {\\n      constant: left.constant && right.constant,\\n      inputs: !isBranching && [left, right]\\n    });\\n  },\\n\\n  identifier: function() {\\n    var id = this.consume().text;\\n\\n    //Continue reading each `.identifier` unless it is a method invocation\\n    while (this.peek('.') && this.peekAhead(1).identifier && !this.peekAhead(2, '(')) {\\n      id += this.consume().text + this.consume().text;\\n    }\\n\\n    return getterFn(id, this.options, this.text);\\n  },\\n\\n  constant: function() {\\n    var value = this.consume().value;\\n\\n    return extend(function $parseConstant() {\\n      return value;\\n    }, {\\n      constant: true,\\n      literal: true\\n    });\\n  },\\n\\n  statements: function() {\\n    var statements = [];\\n    while (true) {\\n      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))\\n        statements.push(this.filterChain());\\n      if (!this.expect(';')) {\\n        // optimize for the common case where there is only one statement.\\n        // TODO(size): maybe we should not support multiple statements?\\n        return (statements.length === 1)\\n            ? statements[0]\\n            : function $parseStatements(self, locals) {\\n                var value;\\n                for (var i = 0, ii = statements.length; i < ii; i++) {\\n                  value = statements[i](self, locals);\\n                }\\n                return value;\\n              };\\n      }\\n    }\\n  },\\n\\n  filterChain: function() {\\n    var left = this.expression();\\n    var token;\\n    while ((token = this.expect('|'))) {\\n      left = this.filter(left);\\n    }\\n    return left;\\n  },\\n\\n  filter: function(inputFn) {\\n    var fn = this.$filter(this.consume().text);\\n    var argsFn;\\n    var args;\\n\\n    if (this.peek(':')) {\\n      argsFn = [];\\n      args = []; // we can safely reuse the array\\n      while (this.expect(':')) {\\n        argsFn.push(this.expression());\\n      }\\n    }\\n\\n    var inputs = [inputFn].concat(argsFn || []);\\n\\n    return extend(function $parseFilter(self, locals) {\\n      var input = inputFn(self, locals);\\n      if (args) {\\n        args[0] = input;\\n\\n        var i = argsFn.length;\\n        while (i--) {\\n          args[i + 1] = argsFn[i](self, locals);\\n        }\\n\\n        return fn.apply(undefined, args);\\n      }\\n\\n      return fn(input);\\n    }, {\\n      constant: !fn.$stateful && inputs.every(isConstant),\\n      inputs: !fn.$stateful && inputs\\n    });\\n  },\\n\\n  expression: function() {\\n    return this.assignment();\\n  },\\n\\n  assignment: function() {\\n    var left = this.ternary();\\n    var right;\\n    var token;\\n    if ((token = this.expect('='))) {\\n      if (!left.assign) {\\n        this.throwError('implies assignment but [' +\\n            this.text.substring(0, token.index) + '] can not be assigned to', token);\\n      }\\n      right = this.ternary();\\n      return extend(function $parseAssignment(scope, locals) {\\n        return left.assign(scope, right(scope, locals), locals);\\n      }, {\\n        inputs: [left, right]\\n      });\\n    }\\n    return left;\\n  },\\n\\n  ternary: function() {\\n    var left = this.logicalOR();\\n    var middle;\\n    var token;\\n    if ((token = this.expect('?'))) {\\n      middle = this.assignment();\\n      if (this.consume(':')) {\\n        var right = this.assignment();\\n\\n        return extend(function $parseTernary(self, locals) {\\n          return left(self, locals) ? middle(self, locals) : right(self, locals);\\n        }, {\\n          constant: left.constant && middle.constant && right.constant\\n        });\\n      }\\n    }\\n\\n    return left;\\n  },\\n\\n  logicalOR: function() {\\n    var left = this.logicalAND();\\n    var token;\\n    while ((token = this.expect('||'))) {\\n      left = this.binaryFn(left, token.text, this.logicalAND(), true);\\n    }\\n    return left;\\n  },\\n\\n  logicalAND: function() {\\n    var left = this.equality();\\n    var token;\\n    while ((token = this.expect('&&'))) {\\n      left = this.binaryFn(left, token.text, this.equality(), true);\\n    }\\n    return left;\\n  },\\n\\n  equality: function() {\\n    var left = this.relational();\\n    var token;\\n    while ((token = this.expect('==','!=','===','!=='))) {\\n      left = this.binaryFn(left, token.text, this.relational());\\n    }\\n    return left;\\n  },\\n\\n  relational: function() {\\n    var left = this.additive();\\n    var token;\\n    while ((token = this.expect('<', '>', '<=', '>='))) {\\n      left = this.binaryFn(left, token.text, this.additive());\\n    }\\n    return left;\\n  },\\n\\n  additive: function() {\\n    var left = this.multiplicative();\\n    var token;\\n    while ((token = this.expect('+','-'))) {\\n      left = this.binaryFn(left, token.text, this.multiplicative());\\n    }\\n    return left;\\n  },\\n\\n  multiplicative: function() {\\n    var left = this.unary();\\n    var token;\\n    while ((token = this.expect('*','/','%'))) {\\n      left = this.binaryFn(left, token.text, this.unary());\\n    }\\n    return left;\\n  },\\n\\n  unary: function() {\\n    var token;\\n    if (this.expect('+')) {\\n      return this.primary();\\n    } else if ((token = this.expect('-'))) {\\n      return this.binaryFn(Parser.ZERO, token.text, this.unary());\\n    } else if ((token = this.expect('!'))) {\\n      return this.unaryFn(token.text, this.unary());\\n    } else {\\n      return this.primary();\\n    }\\n  },\\n\\n  fieldAccess: function(object) {\\n    var getter = this.identifier();\\n\\n    return extend(function $parseFieldAccess(scope, locals, self) {\\n      var o = self || object(scope, locals);\\n      return (o == null) ? undefined : getter(o);\\n    }, {\\n      assign: function(scope, value, locals) {\\n        var o = object(scope, locals);\\n        if (!o) object.assign(scope, o = {}, locals);\\n        return getter.assign(o, value);\\n      }\\n    });\\n  },\\n\\n  objectIndex: function(obj) {\\n    var expression = this.text;\\n\\n    var indexFn = this.expression();\\n    this.consume(']');\\n\\n    return extend(function $parseObjectIndex(self, locals) {\\n      var o = obj(self, locals),\\n          i = indexFn(self, locals),\\n          v;\\n\\n      ensureSafeMemberName(i, expression);\\n      if (!o) return undefined;\\n      v = ensureSafeObject(o[i], expression);\\n      return v;\\n    }, {\\n      assign: function(self, value, locals) {\\n        var key = ensureSafeMemberName(indexFn(self, locals), expression);\\n        // prevent overwriting of Function.constructor which would break ensureSafeObject check\\n        var o = ensureSafeObject(obj(self, locals), expression);\\n        if (!o) obj.assign(self, o = {}, locals);\\n        return o[key] = value;\\n      }\\n    });\\n  },\\n\\n  functionCall: function(fnGetter, contextGetter) {\\n    var argsFn = [];\\n    if (this.peekToken().text !== ')') {\\n      do {\\n        argsFn.push(this.expression());\\n      } while (this.expect(','));\\n    }\\n    this.consume(')');\\n\\n    var expressionText = this.text;\\n    // we can safely reuse the array across invocations\\n    var args = argsFn.length ? [] : null;\\n\\n    return function $parseFunctionCall(scope, locals) {\\n      var context = contextGetter ? contextGetter(scope, locals) : isDefined(contextGetter) ? undefined : scope;\\n      var fn = fnGetter(scope, locals, context) || noop;\\n\\n      if (args) {\\n        var i = argsFn.length;\\n        while (i--) {\\n          args[i] = ensureSafeObject(argsFn[i](scope, locals), expressionText);\\n        }\\n      }\\n\\n      ensureSafeObject(context, expressionText);\\n      ensureSafeFunction(fn, expressionText);\\n\\n      // IE doesn't have apply for some native functions\\n      var v = fn.apply\\n            ? fn.apply(context, args)\\n            : fn(args[0], args[1], args[2], args[3], args[4]);\\n\\n      return ensureSafeObject(v, expressionText);\\n      };\\n  },\\n\\n  // This is used with json array declaration\\n  arrayDeclaration: function() {\\n    var elementFns = [];\\n    if (this.peekToken().text !== ']') {\\n      do {\\n        if (this.peek(']')) {\\n          // Support trailing commas per ES5.1.\\n          break;\\n        }\\n        elementFns.push(this.expression());\\n      } while (this.expect(','));\\n    }\\n    this.consume(']');\\n\\n    return extend(function $parseArrayLiteral(self, locals) {\\n      var array = [];\\n      for (var i = 0, ii = elementFns.length; i < ii; i++) {\\n        array.push(elementFns[i](self, locals));\\n      }\\n      return array;\\n    }, {\\n      literal: true,\\n      constant: elementFns.every(isConstant),\\n      inputs: elementFns\\n    });\\n  },\\n\\n  object: function() {\\n    var keys = [], valueFns = [];\\n    if (this.peekToken().text !== '}') {\\n      do {\\n        if (this.peek('}')) {\\n          // Support trailing commas per ES5.1.\\n          break;\\n        }\\n        var token = this.consume();\\n        if (token.constant) {\\n          keys.push(token.value);\\n        } else if (token.identifier) {\\n          keys.push(token.text);\\n        } else {\\n          this.throwError(\\\"invalid key\\\", token);\\n        }\\n        this.consume(':');\\n        valueFns.push(this.expression());\\n      } while (this.expect(','));\\n    }\\n    this.consume('}');\\n\\n    return extend(function $parseObjectLiteral(self, locals) {\\n      var object = {};\\n      for (var i = 0, ii = valueFns.length; i < ii; i++) {\\n        object[keys[i]] = valueFns[i](self, locals);\\n      }\\n      return object;\\n    }, {\\n      literal: true,\\n      constant: valueFns.every(isConstant),\\n      inputs: valueFns\\n    });\\n  }\\n};\\n\\n\\n//////////////////////////////////////////////////\\n// Parser helper functions\\n//////////////////////////////////////////////////\\n\\nfunction setter(obj, locals, path, setValue, fullExp) {\\n  ensureSafeObject(obj, fullExp);\\n  ensureSafeObject(locals, fullExp);\\n\\n  var element = path.split('.'), key;\\n  for (var i = 0; element.length > 1; i++) {\\n    key = ensureSafeMemberName(element.shift(), fullExp);\\n    var propertyObj = (i === 0 && locals && locals[key]) || obj[key];\\n    if (!propertyObj) {\\n      propertyObj = {};\\n      obj[key] = propertyObj;\\n    }\\n    obj = ensureSafeObject(propertyObj, fullExp);\\n  }\\n  key = ensureSafeMemberName(element.shift(), fullExp);\\n  ensureSafeObject(obj[key], fullExp);\\n  obj[key] = setValue;\\n  return setValue;\\n}\\n\\nvar getterFnCacheDefault = createMap();\\nvar getterFnCacheExpensive = createMap();\\n\\nfunction isPossiblyDangerousMemberName(name) {\\n  return name == 'constructor';\\n}\\n\\n/**\\n * Implementation of the \\\"Black Hole\\\" variant from:\\n * - http://jsperf.com/angularjs-parse-getter/4\\n * - http://jsperf.com/path-evaluation-simplified/7\\n */\\nfunction cspSafeGetterFn(key0, key1, key2, key3, key4, fullExp, expensiveChecks) {\\n  ensureSafeMemberName(key0, fullExp);\\n  ensureSafeMemberName(key1, fullExp);\\n  ensureSafeMemberName(key2, fullExp);\\n  ensureSafeMemberName(key3, fullExp);\\n  ensureSafeMemberName(key4, fullExp);\\n  var eso = function(o) {\\n    return ensureSafeObject(o, fullExp);\\n  };\\n  var eso0 = (expensiveChecks || isPossiblyDangerousMemberName(key0)) ? eso : identity;\\n  var eso1 = (expensiveChecks || isPossiblyDangerousMemberName(key1)) ? eso : identity;\\n  var eso2 = (expensiveChecks || isPossiblyDangerousMemberName(key2)) ? eso : identity;\\n  var eso3 = (expensiveChecks || isPossiblyDangerousMemberName(key3)) ? eso : identity;\\n  var eso4 = (expensiveChecks || isPossiblyDangerousMemberName(key4)) ? eso : identity;\\n\\n  return function cspSafeGetter(scope, locals) {\\n    var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope;\\n\\n    if (pathVal == null) return pathVal;\\n    pathVal = eso0(pathVal[key0]);\\n\\n    if (!key1) return pathVal;\\n    if (pathVal == null) return undefined;\\n    pathVal = eso1(pathVal[key1]);\\n\\n    if (!key2) return pathVal;\\n    if (pathVal == null) return undefined;\\n    pathVal = eso2(pathVal[key2]);\\n\\n    if (!key3) return pathVal;\\n    if (pathVal == null) return undefined;\\n    pathVal = eso3(pathVal[key3]);\\n\\n    if (!key4) return pathVal;\\n    if (pathVal == null) return undefined;\\n    pathVal = eso4(pathVal[key4]);\\n\\n    return pathVal;\\n  };\\n}\\n\\nfunction getterFnWithEnsureSafeObject(fn, fullExpression) {\\n  return function(s, l) {\\n    return fn(s, l, ensureSafeObject, fullExpression);\\n  };\\n}\\n\\nfunction getterFn(path, options, fullExp) {\\n  var expensiveChecks = options.expensiveChecks;\\n  var getterFnCache = (expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault);\\n  var fn = getterFnCache[path];\\n  if (fn) return fn;\\n\\n\\n  var pathKeys = path.split('.'),\\n      pathKeysLength = pathKeys.length;\\n\\n  // http://jsperf.com/angularjs-parse-getter/6\\n  if (options.csp) {\\n    if (pathKeysLength < 6) {\\n      fn = cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4], fullExp, expensiveChecks);\\n    } else {\\n      fn = function cspSafeGetter(scope, locals) {\\n        var i = 0, val;\\n        do {\\n          val = cspSafeGetterFn(pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++],\\n                                pathKeys[i++], fullExp, expensiveChecks)(scope, locals);\\n\\n          locals = undefined; // clear after first iteration\\n          scope = val;\\n        } while (i < pathKeysLength);\\n        return val;\\n      };\\n    }\\n  } else {\\n    var code = '';\\n    if (expensiveChecks) {\\n      code += 's = eso(s, fe);\\\\nl = eso(l, fe);\\\\n';\\n    }\\n    var needsEnsureSafeObject = expensiveChecks;\\n    forEach(pathKeys, function(key, index) {\\n      ensureSafeMemberName(key, fullExp);\\n      var lookupJs = (index\\n                      // we simply dereference 's' on any .dot notation\\n                      ? 's'\\n                      // but if we are first then we check locals first, and if so read it first\\n                      : '((l&&l.hasOwnProperty(\\\"' + key + '\\\"))?l:s)') + '.' + key;\\n      if (expensiveChecks || isPossiblyDangerousMemberName(key)) {\\n        lookupJs = 'eso(' + lookupJs + ', fe)';\\n        needsEnsureSafeObject = true;\\n      }\\n      code += 'if(s == null) return undefined;\\\\n' +\\n              's=' + lookupJs + ';\\\\n';\\n    });\\n    code += 'return s;';\\n\\n    /* jshint -W054 */\\n    var evaledFnGetter = new Function('s', 'l', 'eso', 'fe', code); // s=scope, l=locals, eso=ensureSafeObject\\n    /* jshint +W054 */\\n    evaledFnGetter.toString = valueFn(code);\\n    if (needsEnsureSafeObject) {\\n      evaledFnGetter = getterFnWithEnsureSafeObject(evaledFnGetter, fullExp);\\n    }\\n    fn = evaledFnGetter;\\n  }\\n\\n  fn.sharedGetter = true;\\n  fn.assign = function(self, value, locals) {\\n    return setter(self, locals, path, value, path);\\n  };\\n  getterFnCache[path] = fn;\\n  return fn;\\n}\\n\\nvar objectValueOf = Object.prototype.valueOf;\\n\\nfunction getValueOf(value) {\\n  return isFunction(value.valueOf) ? value.valueOf() : objectValueOf.call(value);\\n}\\n\\n///////////////////////////////////\\n\\n/**\\n * @ngdoc service\\n * @name $parse\\n * @kind function\\n *\\n * @description\\n *\\n * Converts Angular {@link guide/expression expression} into a function.\\n *\\n * ```js\\n *   var getter = $parse('user.name');\\n *   var setter = getter.assign;\\n *   var context = {user:{name:'angular'}};\\n *   var locals = {user:{name:'local'}};\\n *\\n *   expect(getter(context)).toEqual('angular');\\n *   setter(context, 'newValue');\\n *   expect(context.user.name).toEqual('newValue');\\n *   expect(getter(context, locals)).toEqual('local');\\n * ```\\n *\\n *\\n * @param {string} expression String expression to compile.\\n * @returns {function(context, locals)} a function which represents the compiled expression:\\n *\\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n *      are evaluated against (typically a scope object).\\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n *      `context`.\\n *\\n *    The returned function also has the following properties:\\n *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\\n *        literal.\\n *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\\n *        constant literals.\\n *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\\n *        set to a function to change its value on the given context.\\n *\\n */\\n\\n\\n/**\\n * @ngdoc provider\\n * @name $parseProvider\\n *\\n * @description\\n * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\\n *  service.\\n */\\nfunction $ParseProvider() {\\n  var cacheDefault = createMap();\\n  var cacheExpensive = createMap();\\n\\n\\n\\n  this.$get = ['$filter', '$sniffer', function($filter, $sniffer) {\\n    var $parseOptions = {\\n          csp: $sniffer.csp,\\n          expensiveChecks: false\\n        },\\n        $parseOptionsExpensive = {\\n          csp: $sniffer.csp,\\n          expensiveChecks: true\\n        };\\n\\n    function wrapSharedExpression(exp) {\\n      var wrapped = exp;\\n\\n      if (exp.sharedGetter) {\\n        wrapped = function $parseWrapper(self, locals) {\\n          return exp(self, locals);\\n        };\\n        wrapped.literal = exp.literal;\\n        wrapped.constant = exp.constant;\\n        wrapped.assign = exp.assign;\\n      }\\n\\n      return wrapped;\\n    }\\n\\n    return function $parse(exp, interceptorFn, expensiveChecks) {\\n      var parsedExpression, oneTime, cacheKey;\\n\\n      switch (typeof exp) {\\n        case 'string':\\n          cacheKey = exp = exp.trim();\\n\\n          var cache = (expensiveChecks ? cacheExpensive : cacheDefault);\\n          parsedExpression = cache[cacheKey];\\n\\n          if (!parsedExpression) {\\n            if (exp.charAt(0) === ':' && exp.charAt(1) === ':') {\\n              oneTime = true;\\n              exp = exp.substring(2);\\n            }\\n\\n            var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions;\\n            var lexer = new Lexer(parseOptions);\\n            var parser = new Parser(lexer, $filter, parseOptions);\\n            parsedExpression = parser.parse(exp);\\n\\n            if (parsedExpression.constant) {\\n              parsedExpression.$$watchDelegate = constantWatchDelegate;\\n            } else if (oneTime) {\\n              //oneTime is not part of the exp passed to the Parser so we may have to\\n              //wrap the parsedExpression before adding a $$watchDelegate\\n              parsedExpression = wrapSharedExpression(parsedExpression);\\n              parsedExpression.$$watchDelegate = parsedExpression.literal ?\\n                oneTimeLiteralWatchDelegate : oneTimeWatchDelegate;\\n            } else if (parsedExpression.inputs) {\\n              parsedExpression.$$watchDelegate = inputsWatchDelegate;\\n            }\\n\\n            cache[cacheKey] = parsedExpression;\\n          }\\n          return addInterceptor(parsedExpression, interceptorFn);\\n\\n        case 'function':\\n          return addInterceptor(exp, interceptorFn);\\n\\n        default:\\n          return addInterceptor(noop, interceptorFn);\\n      }\\n    };\\n\\n    function collectExpressionInputs(inputs, list) {\\n      for (var i = 0, ii = inputs.length; i < ii; i++) {\\n        var input = inputs[i];\\n        if (!input.constant) {\\n          if (input.inputs) {\\n            collectExpressionInputs(input.inputs, list);\\n          } else if (list.indexOf(input) === -1) { // TODO(perf) can we do better?\\n            list.push(input);\\n          }\\n        }\\n      }\\n\\n      return list;\\n    }\\n\\n    function expressionInputDirtyCheck(newValue, oldValueOfValue) {\\n\\n      if (newValue == null || oldValueOfValue == null) { // null/undefined\\n        return newValue === oldValueOfValue;\\n      }\\n\\n      if (typeof newValue === 'object') {\\n\\n        // attempt to convert the value to a primitive type\\n        // TODO(docs): add a note to docs that by implementing valueOf even objects and arrays can\\n        //             be cheaply dirty-checked\\n        newValue = getValueOf(newValue);\\n\\n        if (typeof newValue === 'object') {\\n          // objects/arrays are not supported - deep-watching them would be too expensive\\n          return false;\\n        }\\n\\n        // fall-through to the primitive equality check\\n      }\\n\\n      //Primitive or NaN\\n      return newValue === oldValueOfValue || (newValue !== newValue && oldValueOfValue !== oldValueOfValue);\\n    }\\n\\n    function inputsWatchDelegate(scope, listener, objectEquality, parsedExpression) {\\n      var inputExpressions = parsedExpression.$$inputs ||\\n                    (parsedExpression.$$inputs = collectExpressionInputs(parsedExpression.inputs, []));\\n\\n      var lastResult;\\n\\n      if (inputExpressions.length === 1) {\\n        var oldInputValue = expressionInputDirtyCheck; // init to something unique so that equals check fails\\n        inputExpressions = inputExpressions[0];\\n        return scope.$watch(function expressionInputWatch(scope) {\\n          var newInputValue = inputExpressions(scope);\\n          if (!expressionInputDirtyCheck(newInputValue, oldInputValue)) {\\n            lastResult = parsedExpression(scope);\\n            oldInputValue = newInputValue && getValueOf(newInputValue);\\n          }\\n          return lastResult;\\n        }, listener, objectEquality);\\n      }\\n\\n      var oldInputValueOfValues = [];\\n      for (var i = 0, ii = inputExpressions.length; i < ii; i++) {\\n        oldInputValueOfValues[i] = expressionInputDirtyCheck; // init to something unique so that equals check fails\\n      }\\n\\n      return scope.$watch(function expressionInputsWatch(scope) {\\n        var changed = false;\\n\\n        for (var i = 0, ii = inputExpressions.length; i < ii; i++) {\\n          var newInputValue = inputExpressions[i](scope);\\n          if (changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i]))) {\\n            oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue);\\n          }\\n        }\\n\\n        if (changed) {\\n          lastResult = parsedExpression(scope);\\n        }\\n\\n        return lastResult;\\n      }, listener, objectEquality);\\n    }\\n\\n    function oneTimeWatchDelegate(scope, listener, objectEquality, parsedExpression) {\\n      var unwatch, lastValue;\\n      return unwatch = scope.$watch(function oneTimeWatch(scope) {\\n        return parsedExpression(scope);\\n      }, function oneTimeListener(value, old, scope) {\\n        lastValue = value;\\n        if (isFunction(listener)) {\\n          listener.apply(this, arguments);\\n        }\\n        if (isDefined(value)) {\\n          scope.$$postDigest(function() {\\n            if (isDefined(lastValue)) {\\n              unwatch();\\n            }\\n          });\\n        }\\n      }, objectEquality);\\n    }\\n\\n    function oneTimeLiteralWatchDelegate(scope, listener, objectEquality, parsedExpression) {\\n      var unwatch, lastValue;\\n      return unwatch = scope.$watch(function oneTimeWatch(scope) {\\n        return parsedExpression(scope);\\n      }, function oneTimeListener(value, old, scope) {\\n        lastValue = value;\\n        if (isFunction(listener)) {\\n          listener.call(this, value, old, scope);\\n        }\\n        if (isAllDefined(value)) {\\n          scope.$$postDigest(function() {\\n            if (isAllDefined(lastValue)) unwatch();\\n          });\\n        }\\n      }, objectEquality);\\n\\n      function isAllDefined(value) {\\n        var allDefined = true;\\n        forEach(value, function(val) {\\n          if (!isDefined(val)) allDefined = false;\\n        });\\n        return allDefined;\\n      }\\n    }\\n\\n    function constantWatchDelegate(scope, listener, objectEquality, parsedExpression) {\\n      var unwatch;\\n      return unwatch = scope.$watch(function constantWatch(scope) {\\n        return parsedExpression(scope);\\n      }, function constantListener(value, old, scope) {\\n        if (isFunction(listener)) {\\n          listener.apply(this, arguments);\\n        }\\n        unwatch();\\n      }, objectEquality);\\n    }\\n\\n    function addInterceptor(parsedExpression, interceptorFn) {\\n      if (!interceptorFn) return parsedExpression;\\n      var watchDelegate = parsedExpression.$$watchDelegate;\\n\\n      var regularWatch =\\n          watchDelegate !== oneTimeLiteralWatchDelegate &&\\n          watchDelegate !== oneTimeWatchDelegate;\\n\\n      var fn = regularWatch ? function regularInterceptedExpression(scope, locals) {\\n        var value = parsedExpression(scope, locals);\\n        return interceptorFn(value, scope, locals);\\n      } : function oneTimeInterceptedExpression(scope, locals) {\\n        var value = parsedExpression(scope, locals);\\n        var result = interceptorFn(value, scope, locals);\\n        // we only return the interceptor's result if the\\n        // initial value is defined (for bind-once)\\n        return isDefined(value) ? result : value;\\n      };\\n\\n      // Propagate $$watchDelegates other then inputsWatchDelegate\\n      if (parsedExpression.$$watchDelegate &&\\n          parsedExpression.$$watchDelegate !== inputsWatchDelegate) {\\n        fn.$$watchDelegate = parsedExpression.$$watchDelegate;\\n      } else if (!interceptorFn.$stateful) {\\n        // If there is an interceptor, but no watchDelegate then treat the interceptor like\\n        // we treat filters - it is assumed to be a pure function unless flagged with $stateful\\n        fn.$$watchDelegate = inputsWatchDelegate;\\n        fn.inputs = [parsedExpression];\\n      }\\n\\n      return fn;\\n    }\\n  }];\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $q\\n * @requires $rootScope\\n *\\n * @description\\n * A service that helps you run functions asynchronously, and use their return values (or exceptions)\\n * when they are done processing.\\n *\\n * This is an implementation of promises/deferred objects inspired by\\n * [Kris Kowal's Q](https://github.com/kriskowal/q).\\n *\\n * $q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\\n * implementations, and the other which resembles ES6 promises to some degree.\\n *\\n * # $q constructor\\n *\\n * The streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\\n * function as the first argument. This is similar to the native Promise implementation from ES6 Harmony,\\n * see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\\n *\\n * While the constructor-style use is supported, not all of the supporting methods from ES6 Harmony promises are\\n * available yet.\\n *\\n * It can be used like so:\\n *\\n * ```js\\n *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`\\n *   // are available in the current lexical scope (they could have been injected or passed in).\\n *\\n *   function asyncGreet(name) {\\n *     // perform some asynchronous operation, resolve or reject the promise when appropriate.\\n *     return $q(function(resolve, reject) {\\n *       setTimeout(function() {\\n *         if (okToGreet(name)) {\\n *           resolve('Hello, ' + name + '!');\\n *         } else {\\n *           reject('Greeting ' + name + ' is not allowed.');\\n *         }\\n *       }, 1000);\\n *     });\\n *   }\\n *\\n *   var promise = asyncGreet('Robin Hood');\\n *   promise.then(function(greeting) {\\n *     alert('Success: ' + greeting);\\n *   }, function(reason) {\\n *     alert('Failed: ' + reason);\\n *   });\\n * ```\\n *\\n * Note: progress/notify callbacks are not currently supported via the ES6-style interface.\\n *\\n * However, the more traditional CommonJS-style usage is still available, and documented below.\\n *\\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\\n * interface for interacting with an object that represents the result of an action that is\\n * performed asynchronously, and may or may not be finished at any given point in time.\\n *\\n * From the perspective of dealing with error handling, deferred and promise APIs are to\\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\\n *\\n * ```js\\n *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`\\n *   // are available in the current lexical scope (they could have been injected or passed in).\\n *\\n *   function asyncGreet(name) {\\n *     var deferred = $q.defer();\\n *\\n *     setTimeout(function() {\\n *       deferred.notify('About to greet ' + name + '.');\\n *\\n *       if (okToGreet(name)) {\\n *         deferred.resolve('Hello, ' + name + '!');\\n *       } else {\\n *         deferred.reject('Greeting ' + name + ' is not allowed.');\\n *       }\\n *     }, 1000);\\n *\\n *     return deferred.promise;\\n *   }\\n *\\n *   var promise = asyncGreet('Robin Hood');\\n *   promise.then(function(greeting) {\\n *     alert('Success: ' + greeting);\\n *   }, function(reason) {\\n *     alert('Failed: ' + reason);\\n *   }, function(update) {\\n *     alert('Got notification: ' + update);\\n *   });\\n * ```\\n *\\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\\n * comes in the way of guarantees that promise and deferred APIs make, see\\n * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\\n *\\n * Additionally the promise api allows for composition that is very hard to do with the\\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\\n * section on serial or parallel joining of promises.\\n *\\n * # The Deferred API\\n *\\n * A new instance of deferred is constructed by calling `$q.defer()`.\\n *\\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\\n * that can be used for signaling the successful or unsuccessful completion, as well as the status\\n * of the task.\\n *\\n * **Methods**\\n *\\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\\n *   constructed via `$q.reject`, the promise will be rejected instead.\\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\\n *   resolving it with a rejection constructed via `$q.reject`.\\n * - `notify(value)` - provides updates on the status of the promise's execution. This may be called\\n *   multiple times before the promise is either resolved or rejected.\\n *\\n * **Properties**\\n *\\n * - promise – `{Promise}` – promise object associated with this deferred.\\n *\\n *\\n * # The Promise API\\n *\\n * A new promise instance is created when a deferred instance is created and can be retrieved by\\n * calling `deferred.promise`.\\n *\\n * The purpose of the promise object is to allow for interested parties to get access to the result\\n * of the deferred task when it completes.\\n *\\n * **Methods**\\n *\\n * - `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\\n *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\\n *   as soon as the result is available. The callbacks are called with a single argument: the result\\n *   or rejection reason. Additionally, the notify callback may be called zero or more times to\\n *   provide a progress indication, before the promise is resolved or rejected.\\n *\\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\\n *   `successCallback`, `errorCallback`. It also notifies via the return value of the\\n *   `notifyCallback` method. The promise cannot be resolved or rejected from the notifyCallback\\n *   method.\\n *\\n * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\\n *\\n * - `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\\n *   but to do so without modifying the final value. This is useful to release resources or do some\\n *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full\\n *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\\n *   more information.\\n *\\n * # Chaining promises\\n *\\n * Because calling the `then` method of a promise returns a new derived promise, it is easily\\n * possible to create a chain of promises:\\n *\\n * ```js\\n *   promiseB = promiseA.then(function(result) {\\n *     return result + 1;\\n *   });\\n *\\n *   // promiseB will be resolved immediately after promiseA is resolved and its value\\n *   // will be the result of promiseA incremented by 1\\n * ```\\n *\\n * It is possible to create chains of any length and since a promise can be resolved with another\\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\\n * the promises at any point in the chain. This makes it possible to implement powerful APIs like\\n * $http's response interceptors.\\n *\\n *\\n * # Differences between Kris Kowal's Q and $q\\n *\\n *  There are two main differences:\\n *\\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\\n *   all the important functionality needed for common async tasks.\\n *\\n *  # Testing\\n *\\n *  ```js\\n *    it('should simulate promise', inject(function($q, $rootScope) {\\n *      var deferred = $q.defer();\\n *      var promise = deferred.promise;\\n *      var resolvedValue;\\n *\\n *      promise.then(function(value) { resolvedValue = value; });\\n *      expect(resolvedValue).toBeUndefined();\\n *\\n *      // Simulate resolving of promise\\n *      deferred.resolve(123);\\n *      // Note that the 'then' function does not get called synchronously.\\n *      // This is because we want the promise API to always be async, whether or not\\n *      // it got called synchronously or asynchronously.\\n *      expect(resolvedValue).toBeUndefined();\\n *\\n *      // Propagate promise resolution to 'then' functions using $apply().\\n *      $rootScope.$apply();\\n *      expect(resolvedValue).toEqual(123);\\n *    }));\\n *  ```\\n *\\n * @param {function(function, function)} resolver Function which is responsible for resolving or\\n *   rejecting the newly created promise. The first parameter is a function which resolves the\\n *   promise, the second parameter is a function which rejects the promise.\\n *\\n * @returns {Promise} The newly created promise.\\n */\\nfunction $QProvider() {\\n\\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\\n    return qFactory(function(callback) {\\n      $rootScope.$evalAsync(callback);\\n    }, $exceptionHandler);\\n  }];\\n}\\n\\nfunction $$QProvider() {\\n  this.$get = ['$browser', '$exceptionHandler', function($browser, $exceptionHandler) {\\n    return qFactory(function(callback) {\\n      $browser.defer(callback);\\n    }, $exceptionHandler);\\n  }];\\n}\\n\\n/**\\n * Constructs a promise manager.\\n *\\n * @param {function(function)} nextTick Function for executing functions in the next turn.\\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\\n *     debugging purposes.\\n * @returns {object} Promise manager.\\n */\\nfunction qFactory(nextTick, exceptionHandler) {\\n  var $qMinErr = minErr('$q', TypeError);\\n  function callOnce(self, resolveFn, rejectFn) {\\n    var called = false;\\n    function wrap(fn) {\\n      return function(value) {\\n        if (called) return;\\n        called = true;\\n        fn.call(self, value);\\n      };\\n    }\\n\\n    return [wrap(resolveFn), wrap(rejectFn)];\\n  }\\n\\n  /**\\n   * @ngdoc method\\n   * @name ng.$q#defer\\n   * @kind function\\n   *\\n   * @description\\n   * Creates a `Deferred` object which represents a task which will finish in the future.\\n   *\\n   * @returns {Deferred} Returns a new instance of deferred.\\n   */\\n  var defer = function() {\\n    return new Deferred();\\n  };\\n\\n  function Promise() {\\n    this.$$state = { status: 0 };\\n  }\\n\\n  Promise.prototype = {\\n    then: function(onFulfilled, onRejected, progressBack) {\\n      var result = new Deferred();\\n\\n      this.$$state.pending = this.$$state.pending || [];\\n      this.$$state.pending.push([result, onFulfilled, onRejected, progressBack]);\\n      if (this.$$state.status > 0) scheduleProcessQueue(this.$$state);\\n\\n      return result.promise;\\n    },\\n\\n    \\\"catch\\\": function(callback) {\\n      return this.then(null, callback);\\n    },\\n\\n    \\\"finally\\\": function(callback, progressBack) {\\n      return this.then(function(value) {\\n        return handleCallback(value, true, callback);\\n      }, function(error) {\\n        return handleCallback(error, false, callback);\\n      }, progressBack);\\n    }\\n  };\\n\\n  //Faster, more basic than angular.bind http://jsperf.com/angular-bind-vs-custom-vs-native\\n  function simpleBind(context, fn) {\\n    return function(value) {\\n      fn.call(context, value);\\n    };\\n  }\\n\\n  function processQueue(state) {\\n    var fn, promise, pending;\\n\\n    pending = state.pending;\\n    state.processScheduled = false;\\n    state.pending = undefined;\\n    for (var i = 0, ii = pending.length; i < ii; ++i) {\\n      promise = pending[i][0];\\n      fn = pending[i][state.status];\\n      try {\\n        if (isFunction(fn)) {\\n          promise.resolve(fn(state.value));\\n        } else if (state.status === 1) {\\n          promise.resolve(state.value);\\n        } else {\\n          promise.reject(state.value);\\n        }\\n      } catch (e) {\\n        promise.reject(e);\\n        exceptionHandler(e);\\n      }\\n    }\\n  }\\n\\n  function scheduleProcessQueue(state) {\\n    if (state.processScheduled || !state.pending) return;\\n    state.processScheduled = true;\\n    nextTick(function() { processQueue(state); });\\n  }\\n\\n  function Deferred() {\\n    this.promise = new Promise();\\n    //Necessary to support unbound execution :/\\n    this.resolve = simpleBind(this, this.resolve);\\n    this.reject = simpleBind(this, this.reject);\\n    this.notify = simpleBind(this, this.notify);\\n  }\\n\\n  Deferred.prototype = {\\n    resolve: function(val) {\\n      if (this.promise.$$state.status) return;\\n      if (val === this.promise) {\\n        this.$$reject($qMinErr(\\n          'qcycle',\\n          \\\"Expected promise to be resolved with value other than itself '{0}'\\\",\\n          val));\\n      }\\n      else {\\n        this.$$resolve(val);\\n      }\\n\\n    },\\n\\n    $$resolve: function(val) {\\n      var then, fns;\\n\\n      fns = callOnce(this, this.$$resolve, this.$$reject);\\n      try {\\n        if ((isObject(val) || isFunction(val))) then = val && val.then;\\n        if (isFunction(then)) {\\n          this.promise.$$state.status = -1;\\n          then.call(val, fns[0], fns[1], this.notify);\\n        } else {\\n          this.promise.$$state.value = val;\\n          this.promise.$$state.status = 1;\\n          scheduleProcessQueue(this.promise.$$state);\\n        }\\n      } catch (e) {\\n        fns[1](e);\\n        exceptionHandler(e);\\n      }\\n    },\\n\\n    reject: function(reason) {\\n      if (this.promise.$$state.status) return;\\n      this.$$reject(reason);\\n    },\\n\\n    $$reject: function(reason) {\\n      this.promise.$$state.value = reason;\\n      this.promise.$$state.status = 2;\\n      scheduleProcessQueue(this.promise.$$state);\\n    },\\n\\n    notify: function(progress) {\\n      var callbacks = this.promise.$$state.pending;\\n\\n      if ((this.promise.$$state.status <= 0) && callbacks && callbacks.length) {\\n        nextTick(function() {\\n          var callback, result;\\n          for (var i = 0, ii = callbacks.length; i < ii; i++) {\\n            result = callbacks[i][0];\\n            callback = callbacks[i][3];\\n            try {\\n              result.notify(isFunction(callback) ? callback(progress) : progress);\\n            } catch (e) {\\n              exceptionHandler(e);\\n            }\\n          }\\n        });\\n      }\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $q#reject\\n   * @kind function\\n   *\\n   * @description\\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\\n   * a promise chain, you don't need to worry about it.\\n   *\\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \\\"catch\\\" an error via\\n   * a promise error callback and you want to forward the error to the promise derived from the\\n   * current promise, you have to \\\"rethrow\\\" the error by returning a rejection constructed via\\n   * `reject`.\\n   *\\n   * ```js\\n   *   promiseB = promiseA.then(function(result) {\\n   *     // success: do something and resolve promiseB\\n   *     //          with the old or a new result\\n   *     return result;\\n   *   }, function(reason) {\\n   *     // error: handle the error if possible and\\n   *     //        resolve promiseB with newPromiseOrValue,\\n   *     //        otherwise forward the rejection to promiseB\\n   *     if (canHandle(reason)) {\\n   *      // handle the error and recover\\n   *      return newPromiseOrValue;\\n   *     }\\n   *     return $q.reject(reason);\\n   *   });\\n   * ```\\n   *\\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\\n   */\\n  var reject = function(reason) {\\n    var result = new Deferred();\\n    result.reject(reason);\\n    return result.promise;\\n  };\\n\\n  var makePromise = function makePromise(value, resolved) {\\n    var result = new Deferred();\\n    if (resolved) {\\n      result.resolve(value);\\n    } else {\\n      result.reject(value);\\n    }\\n    return result.promise;\\n  };\\n\\n  var handleCallback = function handleCallback(value, isResolved, callback) {\\n    var callbackOutput = null;\\n    try {\\n      if (isFunction(callback)) callbackOutput = callback();\\n    } catch (e) {\\n      return makePromise(e, false);\\n    }\\n    if (isPromiseLike(callbackOutput)) {\\n      return callbackOutput.then(function() {\\n        return makePromise(value, isResolved);\\n      }, function(error) {\\n        return makePromise(error, false);\\n      });\\n    } else {\\n      return makePromise(value, isResolved);\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $q#when\\n   * @kind function\\n   *\\n   * @description\\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\\n   * the promise comes from a source that can't be trusted.\\n   *\\n   * @param {*} value Value or a promise\\n   * @returns {Promise} Returns a promise of the passed value or promise\\n   */\\n\\n\\n  var when = function(value, callback, errback, progressBack) {\\n    var result = new Deferred();\\n    result.resolve(value);\\n    return result.promise.then(callback, errback, progressBack);\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $q#all\\n   * @kind function\\n   *\\n   * @description\\n   * Combines multiple promises into a single promise that is resolved when all of the input\\n   * promises are resolved.\\n   *\\n   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\\n   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,\\n   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.\\n   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected\\n   *   with the same rejection value.\\n   */\\n\\n  function all(promises) {\\n    var deferred = new Deferred(),\\n        counter = 0,\\n        results = isArray(promises) ? [] : {};\\n\\n    forEach(promises, function(promise, key) {\\n      counter++;\\n      when(promise).then(function(value) {\\n        if (results.hasOwnProperty(key)) return;\\n        results[key] = value;\\n        if (!(--counter)) deferred.resolve(results);\\n      }, function(reason) {\\n        if (results.hasOwnProperty(key)) return;\\n        deferred.reject(reason);\\n      });\\n    });\\n\\n    if (counter === 0) {\\n      deferred.resolve(results);\\n    }\\n\\n    return deferred.promise;\\n  }\\n\\n  var $Q = function Q(resolver) {\\n    if (!isFunction(resolver)) {\\n      throw $qMinErr('norslvr', \\\"Expected resolverFn, got '{0}'\\\", resolver);\\n    }\\n\\n    if (!(this instanceof Q)) {\\n      // More useful when $Q is the Promise itself.\\n      return new Q(resolver);\\n    }\\n\\n    var deferred = new Deferred();\\n\\n    function resolveFn(value) {\\n      deferred.resolve(value);\\n    }\\n\\n    function rejectFn(reason) {\\n      deferred.reject(reason);\\n    }\\n\\n    resolver(resolveFn, rejectFn);\\n\\n    return deferred.promise;\\n  };\\n\\n  $Q.defer = defer;\\n  $Q.reject = reject;\\n  $Q.when = when;\\n  $Q.all = all;\\n\\n  return $Q;\\n}\\n\\nfunction $$RAFProvider() { //rAF\\n  this.$get = ['$window', '$timeout', function($window, $timeout) {\\n    var requestAnimationFrame = $window.requestAnimationFrame ||\\n                                $window.webkitRequestAnimationFrame;\\n\\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\\n                               $window.webkitCancelAnimationFrame ||\\n                               $window.webkitCancelRequestAnimationFrame;\\n\\n    var rafSupported = !!requestAnimationFrame;\\n    var raf = rafSupported\\n      ? function(fn) {\\n          var id = requestAnimationFrame(fn);\\n          return function() {\\n            cancelAnimationFrame(id);\\n          };\\n        }\\n      : function(fn) {\\n          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\\n          return function() {\\n            $timeout.cancel(timer);\\n          };\\n        };\\n\\n    raf.supported = rafSupported;\\n\\n    return raf;\\n  }];\\n}\\n\\n/**\\n * DESIGN NOTES\\n *\\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\\n *\\n * The typical use of scope is to watch the expressions, which most of the time return the same\\n * value as last time so we optimize the operation.\\n *\\n * Closures construction is expensive in terms of speed as well as memory:\\n *   - No closures, instead use prototypical inheritance for API\\n *   - Internal state needs to be stored on scope directly, which means that private state is\\n *     exposed as $$____ properties\\n *\\n * Loop operations are optimized by using while(count--) { ... }\\n *   - this means that in order to keep the same order of execution as addition we have to add\\n *     items to the array at the beginning (unshift) instead of at the end (push)\\n *\\n * Child scopes are created and removed often\\n *   - Using an array would be slow since inserts in middle are expensive so we use linked list\\n *\\n * There are few watches then a lot of observers. This is why you don't want the observer to be\\n * implemented in the same way as watch. Watch requires return of initialization function which\\n * are expensive to construct.\\n */\\n\\n\\n/**\\n * @ngdoc provider\\n * @name $rootScopeProvider\\n * @description\\n *\\n * Provider for the $rootScope service.\\n */\\n\\n/**\\n * @ngdoc method\\n * @name $rootScopeProvider#digestTtl\\n * @description\\n *\\n * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\\n * assuming that the model is unstable.\\n *\\n * The current default is 10 iterations.\\n *\\n * In complex applications it's possible that the dependencies between `$watch`s will result in\\n * several digest iterations. However if an application needs more than the default 10 digest\\n * iterations for its model to stabilize then you should investigate what is causing the model to\\n * continuously change during the digest.\\n *\\n * Increasing the TTL could have performance implications, so you should not change it without\\n * proper justification.\\n *\\n * @param {number} limit The number of digest iterations.\\n */\\n\\n\\n/**\\n * @ngdoc service\\n * @name $rootScope\\n * @description\\n *\\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\\n * All other scopes are descendant scopes of the root scope. Scopes provide separation\\n * between the model and the view, via a mechanism for watching the model for changes.\\n * They also provide an event emission/broadcast and subscription facility. See the\\n * {@link guide/scope developer guide on scopes}.\\n */\\nfunction $RootScopeProvider() {\\n  var TTL = 10;\\n  var $rootScopeMinErr = minErr('$rootScope');\\n  var lastDirtyWatch = null;\\n  var applyAsyncId = null;\\n\\n  this.digestTtl = function(value) {\\n    if (arguments.length) {\\n      TTL = value;\\n    }\\n    return TTL;\\n  };\\n\\n  this.$get = ['$injector', '$exceptionHandler', '$parse', '$browser',\\n      function($injector, $exceptionHandler, $parse, $browser) {\\n\\n    /**\\n     * @ngdoc type\\n     * @name $rootScope.Scope\\n     *\\n     * @description\\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\\n     * {@link auto.$injector $injector}. Child scopes are created using the\\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\\n     * compiled HTML template is executed.)\\n     *\\n     * Here is a simple scope snippet to show how you can interact with the scope.\\n     * ```html\\n     * <file src=\\\"./test/ng/rootScopeSpec.js\\\" tag=\\\"docs1\\\" />\\n     * ```\\n     *\\n     * # Inheritance\\n     * A scope can inherit from a parent scope, as in this example:\\n     * ```js\\n         var parent = $rootScope;\\n         var child = parent.$new();\\n\\n         parent.salutation = \\\"Hello\\\";\\n         expect(child.salutation).toEqual('Hello');\\n\\n         child.salutation = \\\"Welcome\\\";\\n         expect(child.salutation).toEqual('Welcome');\\n         expect(parent.salutation).toEqual('Hello');\\n     * ```\\n     *\\n     * When interacting with `Scope` in tests, additional helper methods are available on the\\n     * instances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\\n     * details.\\n     *\\n     *\\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be\\n     *                                       provided for the current scope. Defaults to {@link ng}.\\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\\n     *                              append/override services provided by `providers`. This is handy\\n     *                              when unit-testing and having the need to override a default\\n     *                              service.\\n     * @returns {Object} Newly created scope.\\n     *\\n     */\\n    function Scope() {\\n      this.$id = nextUid();\\n      this.$$phase = this.$parent = this.$$watchers =\\n                     this.$$nextSibling = this.$$prevSibling =\\n                     this.$$childHead = this.$$childTail = null;\\n      this.$root = this;\\n      this.$$destroyed = false;\\n      this.$$listeners = {};\\n      this.$$listenerCount = {};\\n      this.$$isolateBindings = null;\\n    }\\n\\n    /**\\n     * @ngdoc property\\n     * @name $rootScope.Scope#$id\\n     *\\n     * @description\\n     * Unique scope ID (monotonically increasing) useful for debugging.\\n     */\\n\\n     /**\\n      * @ngdoc property\\n      * @name $rootScope.Scope#$parent\\n      *\\n      * @description\\n      * Reference to the parent scope.\\n      */\\n\\n      /**\\n       * @ngdoc property\\n       * @name $rootScope.Scope#$root\\n       *\\n       * @description\\n       * Reference to the root scope.\\n       */\\n\\n    Scope.prototype = {\\n      constructor: Scope,\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$new\\n       * @kind function\\n       *\\n       * @description\\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\\n       *\\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\\n       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\\n       *\\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\\n       * desired for the scope and its child scopes to be permanently detached from the parent and\\n       * thus stop participating in model change detection and listener notification by invoking.\\n       *\\n       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the\\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\\n       *         When creating widgets, it is useful for the widget to not accidentally read parent\\n       *         state.\\n       *\\n       * @param {Scope} [parent=this] The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`\\n       *                              of the newly created scope. Defaults to `this` scope if not provided.\\n       *                              This is used when creating a transclude scope to correctly place it\\n       *                              in the scope hierarchy while maintaining the correct prototypical\\n       *                              inheritance.\\n       *\\n       * @returns {Object} The newly created child scope.\\n       *\\n       */\\n      $new: function(isolate, parent) {\\n        var child;\\n\\n        parent = parent || this;\\n\\n        if (isolate) {\\n          child = new Scope();\\n          child.$root = this.$root;\\n        } else {\\n          // Only create a child scope class if somebody asks for one,\\n          // but cache it to allow the VM to optimize lookups.\\n          if (!this.$$ChildScope) {\\n            this.$$ChildScope = function ChildScope() {\\n              this.$$watchers = this.$$nextSibling =\\n                  this.$$childHead = this.$$childTail = null;\\n              this.$$listeners = {};\\n              this.$$listenerCount = {};\\n              this.$id = nextUid();\\n              this.$$ChildScope = null;\\n            };\\n            this.$$ChildScope.prototype = this;\\n          }\\n          child = new this.$$ChildScope();\\n        }\\n        child.$parent = parent;\\n        child.$$prevSibling = parent.$$childTail;\\n        if (parent.$$childHead) {\\n          parent.$$childTail.$$nextSibling = child;\\n          parent.$$childTail = child;\\n        } else {\\n          parent.$$childHead = parent.$$childTail = child;\\n        }\\n\\n        // When the new scope is not isolated or we inherit from `this`, and\\n        // the parent scope is destroyed, the property `$$destroyed` is inherited\\n        // prototypically. In all other cases, this property needs to be set\\n        // when the parent scope is destroyed.\\n        // The listener needs to be added after the parent is set\\n        if (isolate || parent != this) child.$on('$destroy', destroyChild);\\n\\n        return child;\\n\\n        function destroyChild() {\\n          child.$$destroyed = true;\\n        }\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$watch\\n       * @kind function\\n       *\\n       * @description\\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\\n       *\\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\\n       *   $digest()} and should return the value that will be watched. (Since\\n       *   {@link ng.$rootScope.Scope#$digest $digest()} reruns when it detects changes the\\n       *   `watchExpression` can execute multiple times per\\n       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\\n       * - The `listener` is called only when the value from the current `watchExpression` and the\\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\\n       *   see below). Inequality is determined according to reference inequality,\\n       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\\n       *    via the `!==` Javascript operator, unless `objectEquality == true`\\n       *   (see next point)\\n       * - When `objectEquality == true`, inequality of the `watchExpression` is determined\\n       *   according to the {@link angular.equals} function. To save the value of the object for\\n       *   later comparison, the {@link angular.copy} function is used. This therefore means that\\n       *   watching complex objects will have adverse memory and performance implications.\\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.\\n       *   This is achieved by rerunning the watchers until no changes are detected. The rerun\\n       *   iteration limit is 10 to prevent an infinite loop deadlock.\\n       *\\n       *\\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\\n       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\\n       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a\\n       * change is detected, be prepared for multiple calls to your listener.)\\n       *\\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\\n       * listener was called due to initialization.\\n       *\\n       *\\n       *\\n       * # Example\\n       * ```js\\n           // let's assume that scope was dependency injected as the $rootScope\\n           var scope = $rootScope;\\n           scope.name = 'misko';\\n           scope.counter = 0;\\n\\n           expect(scope.counter).toEqual(0);\\n           scope.$watch('name', function(newValue, oldValue) {\\n             scope.counter = scope.counter + 1;\\n           });\\n           expect(scope.counter).toEqual(0);\\n\\n           scope.$digest();\\n           // the listener is always called during the first $digest loop after it was registered\\n           expect(scope.counter).toEqual(1);\\n\\n           scope.$digest();\\n           // but now it will not be called unless the value changes\\n           expect(scope.counter).toEqual(1);\\n\\n           scope.name = 'adam';\\n           scope.$digest();\\n           expect(scope.counter).toEqual(2);\\n\\n\\n\\n           // Using a function as a watchExpression\\n           var food;\\n           scope.foodCounter = 0;\\n           expect(scope.foodCounter).toEqual(0);\\n           scope.$watch(\\n             // This function returns the value being watched. It is called for each turn of the $digest loop\\n             function() { return food; },\\n             // This is the change listener, called when the value returned from the above function changes\\n             function(newValue, oldValue) {\\n               if ( newValue !== oldValue ) {\\n                 // Only increment the counter if the value changed\\n                 scope.foodCounter = scope.foodCounter + 1;\\n               }\\n             }\\n           );\\n           // No digest has been run so the counter will be zero\\n           expect(scope.foodCounter).toEqual(0);\\n\\n           // Run the digest but since food has not changed count will still be zero\\n           scope.$digest();\\n           expect(scope.foodCounter).toEqual(0);\\n\\n           // Update food and run digest.  Now the counter will increment\\n           food = 'cheeseburger';\\n           scope.$digest();\\n           expect(scope.foodCounter).toEqual(1);\\n\\n       * ```\\n       *\\n       *\\n       *\\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\\n       *    a call to the `listener`.\\n       *\\n       *    - `string`: Evaluated as {@link guide/expression expression}\\n       *    - `function(scope)`: called with current `scope` as a parameter.\\n       * @param {function(newVal, oldVal, scope)} listener Callback called whenever the value\\n       *    of `watchExpression` changes.\\n       *\\n       *    - `newVal` contains the current value of the `watchExpression`\\n       *    - `oldVal` contains the previous value of the `watchExpression`\\n       *    - `scope` refers to the current scope\\n       * @param {boolean=} objectEquality Compare for object equality using {@link angular.equals} instead of\\n       *     comparing for reference equality.\\n       * @returns {function()} Returns a deregistration function for this listener.\\n       */\\n      $watch: function(watchExp, listener, objectEquality) {\\n        var get = $parse(watchExp);\\n\\n        if (get.$$watchDelegate) {\\n          return get.$$watchDelegate(this, listener, objectEquality, get);\\n        }\\n        var scope = this,\\n            array = scope.$$watchers,\\n            watcher = {\\n              fn: listener,\\n              last: initWatchVal,\\n              get: get,\\n              exp: watchExp,\\n              eq: !!objectEquality\\n            };\\n\\n        lastDirtyWatch = null;\\n\\n        if (!isFunction(listener)) {\\n          watcher.fn = noop;\\n        }\\n\\n        if (!array) {\\n          array = scope.$$watchers = [];\\n        }\\n        // we use unshift since we use a while loop in $digest for speed.\\n        // the while loop reads in reverse order.\\n        array.unshift(watcher);\\n\\n        return function deregisterWatch() {\\n          arrayRemove(array, watcher);\\n          lastDirtyWatch = null;\\n        };\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$watchGroup\\n       * @kind function\\n       *\\n       * @description\\n       * A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\\n       * If any one expression in the collection changes the `listener` is executed.\\n       *\\n       * - The items in the `watchExpressions` array are observed via standard $watch operation and are examined on every\\n       *   call to $digest() to see if any items changes.\\n       * - The `listener` is called whenever any expression in the `watchExpressions` array changes.\\n       *\\n       * @param {Array.<string|Function(scope)>} watchExpressions Array of expressions that will be individually\\n       * watched using {@link ng.$rootScope.Scope#$watch $watch()}\\n       *\\n       * @param {function(newValues, oldValues, scope)} listener Callback called whenever the return value of any\\n       *    expression in `watchExpressions` changes\\n       *    The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching\\n       *    those of `watchExpression`\\n       *    and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching\\n       *    those of `watchExpression`\\n       *    The `scope` refers to the current scope.\\n       * @returns {function()} Returns a de-registration function for all listeners.\\n       */\\n      $watchGroup: function(watchExpressions, listener) {\\n        var oldValues = new Array(watchExpressions.length);\\n        var newValues = new Array(watchExpressions.length);\\n        var deregisterFns = [];\\n        var self = this;\\n        var changeReactionScheduled = false;\\n        var firstRun = true;\\n\\n        if (!watchExpressions.length) {\\n          // No expressions means we call the listener ASAP\\n          var shouldCall = true;\\n          self.$evalAsync(function() {\\n            if (shouldCall) listener(newValues, newValues, self);\\n          });\\n          return function deregisterWatchGroup() {\\n            shouldCall = false;\\n          };\\n        }\\n\\n        if (watchExpressions.length === 1) {\\n          // Special case size of one\\n          return this.$watch(watchExpressions[0], function watchGroupAction(value, oldValue, scope) {\\n            newValues[0] = value;\\n            oldValues[0] = oldValue;\\n            listener(newValues, (value === oldValue) ? newValues : oldValues, scope);\\n          });\\n        }\\n\\n        forEach(watchExpressions, function(expr, i) {\\n          var unwatchFn = self.$watch(expr, function watchGroupSubAction(value, oldValue) {\\n            newValues[i] = value;\\n            oldValues[i] = oldValue;\\n            if (!changeReactionScheduled) {\\n              changeReactionScheduled = true;\\n              self.$evalAsync(watchGroupAction);\\n            }\\n          });\\n          deregisterFns.push(unwatchFn);\\n        });\\n\\n        function watchGroupAction() {\\n          changeReactionScheduled = false;\\n\\n          if (firstRun) {\\n            firstRun = false;\\n            listener(newValues, newValues, self);\\n          } else {\\n            listener(newValues, oldValues, self);\\n          }\\n        }\\n\\n        return function deregisterWatchGroup() {\\n          while (deregisterFns.length) {\\n            deregisterFns.shift()();\\n          }\\n        };\\n      },\\n\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$watchCollection\\n       * @kind function\\n       *\\n       * @description\\n       * Shallow watches the properties of an object and fires whenever any of the properties change\\n       * (for arrays, this implies watching the array items; for object maps, this implies watching\\n       * the properties). If a change is detected, the `listener` callback is fired.\\n       *\\n       * - The `obj` collection is observed via standard $watch operation and is examined on every\\n       *   call to $digest() to see if any items have been added, removed, or moved.\\n       * - The `listener` is called whenever anything within the `obj` has changed. Examples include\\n       *   adding, removing, and moving items belonging to an object or array.\\n       *\\n       *\\n       * # Example\\n       * ```js\\n          $scope.names = ['igor', 'matias', 'misko', 'james'];\\n          $scope.dataCount = 4;\\n\\n          $scope.$watchCollection('names', function(newNames, oldNames) {\\n            $scope.dataCount = newNames.length;\\n          });\\n\\n          expect($scope.dataCount).toEqual(4);\\n          $scope.$digest();\\n\\n          //still at 4 ... no changes\\n          expect($scope.dataCount).toEqual(4);\\n\\n          $scope.names.pop();\\n          $scope.$digest();\\n\\n          //now there's been a change\\n          expect($scope.dataCount).toEqual(3);\\n       * ```\\n       *\\n       *\\n       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The\\n       *    expression value should evaluate to an object or an array which is observed on each\\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\\n       *    collection will trigger a call to the `listener`.\\n       *\\n       * @param {function(newCollection, oldCollection, scope)} listener a callback function called\\n       *    when a change is detected.\\n       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression\\n       *    - The `oldCollection` object is a copy of the former collection data.\\n       *      Due to performance considerations, the`oldCollection` value is computed only if the\\n       *      `listener` function declares two or more arguments.\\n       *    - The `scope` argument refers to the current scope.\\n       *\\n       * @returns {function()} Returns a de-registration function for this listener. When the\\n       *    de-registration function is executed, the internal watch operation is terminated.\\n       */\\n      $watchCollection: function(obj, listener) {\\n        $watchCollectionInterceptor.$stateful = true;\\n\\n        var self = this;\\n        // the current value, updated on each dirty-check run\\n        var newValue;\\n        // a shallow copy of the newValue from the last dirty-check run,\\n        // updated to match newValue during dirty-check run\\n        var oldValue;\\n        // a shallow copy of the newValue from when the last change happened\\n        var veryOldValue;\\n        // only track veryOldValue if the listener is asking for it\\n        var trackVeryOldValue = (listener.length > 1);\\n        var changeDetected = 0;\\n        var changeDetector = $parse(obj, $watchCollectionInterceptor);\\n        var internalArray = [];\\n        var internalObject = {};\\n        var initRun = true;\\n        var oldLength = 0;\\n\\n        function $watchCollectionInterceptor(_value) {\\n          newValue = _value;\\n          var newLength, key, bothNaN, newItem, oldItem;\\n\\n          // If the new value is undefined, then return undefined as the watch may be a one-time watch\\n          if (isUndefined(newValue)) return;\\n\\n          if (!isObject(newValue)) { // if primitive\\n            if (oldValue !== newValue) {\\n              oldValue = newValue;\\n              changeDetected++;\\n            }\\n          } else if (isArrayLike(newValue)) {\\n            if (oldValue !== internalArray) {\\n              // we are transitioning from something which was not an array into array.\\n              oldValue = internalArray;\\n              oldLength = oldValue.length = 0;\\n              changeDetected++;\\n            }\\n\\n            newLength = newValue.length;\\n\\n            if (oldLength !== newLength) {\\n              // if lengths do not match we need to trigger change notification\\n              changeDetected++;\\n              oldValue.length = oldLength = newLength;\\n            }\\n            // copy the items to oldValue and look for changes.\\n            for (var i = 0; i < newLength; i++) {\\n              oldItem = oldValue[i];\\n              newItem = newValue[i];\\n\\n              bothNaN = (oldItem !== oldItem) && (newItem !== newItem);\\n              if (!bothNaN && (oldItem !== newItem)) {\\n                changeDetected++;\\n                oldValue[i] = newItem;\\n              }\\n            }\\n          } else {\\n            if (oldValue !== internalObject) {\\n              // we are transitioning from something which was not an object into object.\\n              oldValue = internalObject = {};\\n              oldLength = 0;\\n              changeDetected++;\\n            }\\n            // copy the items to oldValue and look for changes.\\n            newLength = 0;\\n            for (key in newValue) {\\n              if (newValue.hasOwnProperty(key)) {\\n                newLength++;\\n                newItem = newValue[key];\\n                oldItem = oldValue[key];\\n\\n                if (key in oldValue) {\\n                  bothNaN = (oldItem !== oldItem) && (newItem !== newItem);\\n                  if (!bothNaN && (oldItem !== newItem)) {\\n                    changeDetected++;\\n                    oldValue[key] = newItem;\\n                  }\\n                } else {\\n                  oldLength++;\\n                  oldValue[key] = newItem;\\n                  changeDetected++;\\n                }\\n              }\\n            }\\n            if (oldLength > newLength) {\\n              // we used to have more keys, need to find them and destroy them.\\n              changeDetected++;\\n              for (key in oldValue) {\\n                if (!newValue.hasOwnProperty(key)) {\\n                  oldLength--;\\n                  delete oldValue[key];\\n                }\\n              }\\n            }\\n          }\\n          return changeDetected;\\n        }\\n\\n        function $watchCollectionAction() {\\n          if (initRun) {\\n            initRun = false;\\n            listener(newValue, newValue, self);\\n          } else {\\n            listener(newValue, veryOldValue, self);\\n          }\\n\\n          // make a copy for the next time a collection is changed\\n          if (trackVeryOldValue) {\\n            if (!isObject(newValue)) {\\n              //primitive\\n              veryOldValue = newValue;\\n            } else if (isArrayLike(newValue)) {\\n              veryOldValue = new Array(newValue.length);\\n              for (var i = 0; i < newValue.length; i++) {\\n                veryOldValue[i] = newValue[i];\\n              }\\n            } else { // if object\\n              veryOldValue = {};\\n              for (var key in newValue) {\\n                if (hasOwnProperty.call(newValue, key)) {\\n                  veryOldValue[key] = newValue[key];\\n                }\\n              }\\n            }\\n          }\\n        }\\n\\n        return this.$watch(changeDetector, $watchCollectionAction);\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$digest\\n       * @kind function\\n       *\\n       * @description\\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\\n       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\\n       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\\n       * until no more listeners are firing. This means that it is possible to get into an infinite\\n       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\\n       * iterations exceeds 10.\\n       *\\n       * Usually, you don't call `$digest()` directly in\\n       * {@link ng.directive:ngController controllers} or in\\n       * {@link ng.$compileProvider#directive directives}.\\n       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\\n       * a {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\\n       *\\n       * If you want to be notified whenever `$digest()` is called,\\n       * you can register a `watchExpression` function with\\n       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\\n       *\\n       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.\\n       *\\n       * # Example\\n       * ```js\\n           var scope = ...;\\n           scope.name = 'misko';\\n           scope.counter = 0;\\n\\n           expect(scope.counter).toEqual(0);\\n           scope.$watch('name', function(newValue, oldValue) {\\n             scope.counter = scope.counter + 1;\\n           });\\n           expect(scope.counter).toEqual(0);\\n\\n           scope.$digest();\\n           // the listener is always called during the first $digest loop after it was registered\\n           expect(scope.counter).toEqual(1);\\n\\n           scope.$digest();\\n           // but now it will not be called unless the value changes\\n           expect(scope.counter).toEqual(1);\\n\\n           scope.name = 'adam';\\n           scope.$digest();\\n           expect(scope.counter).toEqual(2);\\n       * ```\\n       *\\n       */\\n      $digest: function() {\\n        var watch, value, last,\\n            watchers,\\n            length,\\n            dirty, ttl = TTL,\\n            next, current, target = this,\\n            watchLog = [],\\n            logIdx, logMsg, asyncTask;\\n\\n        beginPhase('$digest');\\n        // Check for changes to browser url that happened in sync before the call to $digest\\n        $browser.$$checkUrlChange();\\n\\n        if (this === $rootScope && applyAsyncId !== null) {\\n          // If this is the root scope, and $applyAsync has scheduled a deferred $apply(), then\\n          // cancel the scheduled $apply and flush the queue of expressions to be evaluated.\\n          $browser.defer.cancel(applyAsyncId);\\n          flushApplyAsync();\\n        }\\n\\n        lastDirtyWatch = null;\\n\\n        do { // \\\"while dirty\\\" loop\\n          dirty = false;\\n          current = target;\\n\\n          while (asyncQueue.length) {\\n            try {\\n              asyncTask = asyncQueue.shift();\\n              asyncTask.scope.$eval(asyncTask.expression, asyncTask.locals);\\n            } catch (e) {\\n              $exceptionHandler(e);\\n            }\\n            lastDirtyWatch = null;\\n          }\\n\\n          traverseScopesLoop:\\n          do { // \\\"traverse the scopes\\\" loop\\n            if ((watchers = current.$$watchers)) {\\n              // process our watches\\n              length = watchers.length;\\n              while (length--) {\\n                try {\\n                  watch = watchers[length];\\n                  // Most common watches are on primitives, in which case we can short\\n                  // circuit it with === operator, only when === fails do we use .equals\\n                  if (watch) {\\n                    if ((value = watch.get(current)) !== (last = watch.last) &&\\n                        !(watch.eq\\n                            ? equals(value, last)\\n                            : (typeof value === 'number' && typeof last === 'number'\\n                               && isNaN(value) && isNaN(last)))) {\\n                      dirty = true;\\n                      lastDirtyWatch = watch;\\n                      watch.last = watch.eq ? copy(value, null) : value;\\n                      watch.fn(value, ((last === initWatchVal) ? value : last), current);\\n                      if (ttl < 5) {\\n                        logIdx = 4 - ttl;\\n                        if (!watchLog[logIdx]) watchLog[logIdx] = [];\\n                        watchLog[logIdx].push({\\n                          msg: isFunction(watch.exp) ? 'fn: ' + (watch.exp.name || watch.exp.toString()) : watch.exp,\\n                          newVal: value,\\n                          oldVal: last\\n                        });\\n                      }\\n                    } else if (watch === lastDirtyWatch) {\\n                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers\\n                      // have already been tested.\\n                      dirty = false;\\n                      break traverseScopesLoop;\\n                    }\\n                  }\\n                } catch (e) {\\n                  $exceptionHandler(e);\\n                }\\n              }\\n            }\\n\\n            // Insanity Warning: scope depth-first traversal\\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\\n            // this piece should be kept in sync with the traversal in $broadcast\\n            if (!(next = (current.$$childHead ||\\n                (current !== target && current.$$nextSibling)))) {\\n              while (current !== target && !(next = current.$$nextSibling)) {\\n                current = current.$parent;\\n              }\\n            }\\n          } while ((current = next));\\n\\n          // `break traverseScopesLoop;` takes us to here\\n\\n          if ((dirty || asyncQueue.length) && !(ttl--)) {\\n            clearPhase();\\n            throw $rootScopeMinErr('infdig',\\n                '{0} $digest() iterations reached. Aborting!\\\\n' +\\n                'Watchers fired in the last 5 iterations: {1}',\\n                TTL, watchLog);\\n          }\\n\\n        } while (dirty || asyncQueue.length);\\n\\n        clearPhase();\\n\\n        while (postDigestQueue.length) {\\n          try {\\n            postDigestQueue.shift()();\\n          } catch (e) {\\n            $exceptionHandler(e);\\n          }\\n        }\\n      },\\n\\n\\n      /**\\n       * @ngdoc event\\n       * @name $rootScope.Scope#$destroy\\n       * @eventType broadcast on scope being destroyed\\n       *\\n       * @description\\n       * Broadcasted when a scope and its children are being destroyed.\\n       *\\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\\n       * clean up DOM bindings before an element is removed from the DOM.\\n       */\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$destroy\\n       * @kind function\\n       *\\n       * @description\\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\\n       * propagate to the current scope and its children. Removal also implies that the current\\n       * scope is eligible for garbage collection.\\n       *\\n       * The `$destroy()` is usually used by directives such as\\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\\n       * unrolling of the loop.\\n       *\\n       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\\n       * Application code can register a `$destroy` event handler that will give it a chance to\\n       * perform any necessary cleanup.\\n       *\\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\\n       * clean up DOM bindings before an element is removed from the DOM.\\n       */\\n      $destroy: function() {\\n        // we can't destroy the root scope or a scope that has been already destroyed\\n        if (this.$$destroyed) return;\\n        var parent = this.$parent;\\n\\n        this.$broadcast('$destroy');\\n        this.$$destroyed = true;\\n        if (this === $rootScope) return;\\n\\n        for (var eventName in this.$$listenerCount) {\\n          decrementListenerCount(this, this.$$listenerCount[eventName], eventName);\\n        }\\n\\n        // sever all the references to parent scopes (after this cleanup, the current scope should\\n        // not be retained by any of our references and should be eligible for garbage collection)\\n        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\\n        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\\n\\n        // Disable listeners, watchers and apply/digest methods\\n        this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop;\\n        this.$on = this.$watch = this.$watchGroup = function() { return noop; };\\n        this.$$listeners = {};\\n\\n        // All of the code below is bogus code that works around V8's memory leak via optimized code\\n        // and inline caches.\\n        //\\n        // see:\\n        // - https://code.google.com/p/v8/issues/detail?id=2073#c26\\n        // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909\\n        // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\\n\\n        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\\n            this.$$childTail = this.$root = this.$$watchers = null;\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$eval\\n       * @kind function\\n       *\\n       * @description\\n       * Executes the `expression` on the current scope and returns the result. Any exceptions in\\n       * the expression are propagated (uncaught). This is useful when evaluating Angular\\n       * expressions.\\n       *\\n       * # Example\\n       * ```js\\n           var scope = ng.$rootScope.Scope();\\n           scope.a = 1;\\n           scope.b = 2;\\n\\n           expect(scope.$eval('a+b')).toEqual(3);\\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\\n       * ```\\n       *\\n       * @param {(string|function())=} expression An angular expression to be executed.\\n       *\\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\\n       *\\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\\n       * @returns {*} The result of evaluating the expression.\\n       */\\n      $eval: function(expr, locals) {\\n        return $parse(expr)(this, locals);\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$evalAsync\\n       * @kind function\\n       *\\n       * @description\\n       * Executes the expression on the current scope at a later point in time.\\n       *\\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\\n       * that:\\n       *\\n       *   - it will execute after the function that scheduled the evaluation (preferably before DOM\\n       *     rendering).\\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\\n       *     `expression` execution.\\n       *\\n       * Any exceptions from the execution of the expression are forwarded to the\\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\\n       *\\n       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\\n       * will be scheduled. However, it is encouraged to always call code that changes the model\\n       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.\\n       *\\n       * @param {(string|function())=} expression An angular expression to be executed.\\n       *\\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\\n       *\\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\\n       */\\n      $evalAsync: function(expr, locals) {\\n        // if we are outside of an $digest loop and this is the first time we are scheduling async\\n        // task also schedule async auto-flush\\n        if (!$rootScope.$$phase && !asyncQueue.length) {\\n          $browser.defer(function() {\\n            if (asyncQueue.length) {\\n              $rootScope.$digest();\\n            }\\n          });\\n        }\\n\\n        asyncQueue.push({scope: this, expression: expr, locals: locals});\\n      },\\n\\n      $$postDigest: function(fn) {\\n        postDigestQueue.push(fn);\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$apply\\n       * @kind function\\n       *\\n       * @description\\n       * `$apply()` is used to execute an expression in angular from outside of the angular\\n       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\\n       * Because we are calling into the angular framework we need to perform proper scope life\\n       * cycle of {@link ng.$exceptionHandler exception handling},\\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\\n       *\\n       * ## Life cycle\\n       *\\n       * # Pseudo-Code of `$apply()`\\n       * ```js\\n           function $apply(expr) {\\n             try {\\n               return $eval(expr);\\n             } catch (e) {\\n               $exceptionHandler(e);\\n             } finally {\\n               $root.$digest();\\n             }\\n           }\\n       * ```\\n       *\\n       *\\n       * Scope's `$apply()` method transitions through the following stages:\\n       *\\n       * 1. The {@link guide/expression expression} is executed using the\\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\\n       * 2. Any exceptions from the execution of the expression are forwarded to the\\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\\n       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\\n       *\\n       *\\n       * @param {(string|function())=} exp An angular expression to be executed.\\n       *\\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\\n       *    - `function(scope)`: execute the function with current `scope` parameter.\\n       *\\n       * @returns {*} The result of evaluating the expression.\\n       */\\n      $apply: function(expr) {\\n        try {\\n          beginPhase('$apply');\\n          return this.$eval(expr);\\n        } catch (e) {\\n          $exceptionHandler(e);\\n        } finally {\\n          clearPhase();\\n          try {\\n            $rootScope.$digest();\\n          } catch (e) {\\n            $exceptionHandler(e);\\n            throw e;\\n          }\\n        }\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$applyAsync\\n       * @kind function\\n       *\\n       * @description\\n       * Schedule the invocation of $apply to occur at a later time. The actual time difference\\n       * varies across browsers, but is typically around ~10 milliseconds.\\n       *\\n       * This can be used to queue up multiple expressions which need to be evaluated in the same\\n       * digest.\\n       *\\n       * @param {(string|function())=} exp An angular expression to be executed.\\n       *\\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\\n       *    - `function(scope)`: execute the function with current `scope` parameter.\\n       */\\n      $applyAsync: function(expr) {\\n        var scope = this;\\n        expr && applyAsyncQueue.push($applyAsyncExpression);\\n        scheduleApplyAsync();\\n\\n        function $applyAsyncExpression() {\\n          scope.$eval(expr);\\n        }\\n      },\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$on\\n       * @kind function\\n       *\\n       * @description\\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\\n       * discussion of event life cycle.\\n       *\\n       * The event listener function format is: `function(event, args...)`. The `event` object\\n       * passed into the listener has the following attributes:\\n       *\\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\\n       *     `$broadcast`-ed.\\n       *   - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\\n       *     event propagates through the scope hierarchy, this property is set to null.\\n       *   - `name` - `{string}`: name of the event.\\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\\n       *     further event propagation (available only for events that were `$emit`-ed).\\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\\n       *     to true.\\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\\n       *\\n       * @param {string} name Event name to listen on.\\n       * @param {function(event, ...args)} listener Function to call when the event is emitted.\\n       * @returns {function()} Returns a deregistration function for this listener.\\n       */\\n      $on: function(name, listener) {\\n        var namedListeners = this.$$listeners[name];\\n        if (!namedListeners) {\\n          this.$$listeners[name] = namedListeners = [];\\n        }\\n        namedListeners.push(listener);\\n\\n        var current = this;\\n        do {\\n          if (!current.$$listenerCount[name]) {\\n            current.$$listenerCount[name] = 0;\\n          }\\n          current.$$listenerCount[name]++;\\n        } while ((current = current.$parent));\\n\\n        var self = this;\\n        return function() {\\n          var indexOfListener = namedListeners.indexOf(listener);\\n          if (indexOfListener !== -1) {\\n            namedListeners[indexOfListener] = null;\\n            decrementListenerCount(self, 1, name);\\n          }\\n        };\\n      },\\n\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$emit\\n       * @kind function\\n       *\\n       * @description\\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\\n       *\\n       * The event life cycle starts at the scope on which `$emit` was called. All\\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\\n       * notified. Afterwards, the event traverses upwards toward the root scope and calls all\\n       * registered listeners along the way. The event will stop propagating if one of the listeners\\n       * cancels it.\\n       *\\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\\n       *\\n       * @param {string} name Event name to emit.\\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\\n       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).\\n       */\\n      $emit: function(name, args) {\\n        var empty = [],\\n            namedListeners,\\n            scope = this,\\n            stopPropagation = false,\\n            event = {\\n              name: name,\\n              targetScope: scope,\\n              stopPropagation: function() {stopPropagation = true;},\\n              preventDefault: function() {\\n                event.defaultPrevented = true;\\n              },\\n              defaultPrevented: false\\n            },\\n            listenerArgs = concat([event], arguments, 1),\\n            i, length;\\n\\n        do {\\n          namedListeners = scope.$$listeners[name] || empty;\\n          event.currentScope = scope;\\n          for (i = 0, length = namedListeners.length; i < length; i++) {\\n\\n            // if listeners were deregistered, defragment the array\\n            if (!namedListeners[i]) {\\n              namedListeners.splice(i, 1);\\n              i--;\\n              length--;\\n              continue;\\n            }\\n            try {\\n              //allow all listeners attached to the current scope to run\\n              namedListeners[i].apply(null, listenerArgs);\\n            } catch (e) {\\n              $exceptionHandler(e);\\n            }\\n          }\\n          //if any listener on the current scope stops propagation, prevent bubbling\\n          if (stopPropagation) {\\n            event.currentScope = null;\\n            return event;\\n          }\\n          //traverse upwards\\n          scope = scope.$parent;\\n        } while (scope);\\n\\n        event.currentScope = null;\\n\\n        return event;\\n      },\\n\\n\\n      /**\\n       * @ngdoc method\\n       * @name $rootScope.Scope#$broadcast\\n       * @kind function\\n       *\\n       * @description\\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\\n       *\\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\\n       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current\\n       * scope and calls all registered listeners along the way. The event cannot be canceled.\\n       *\\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\\n       *\\n       * @param {string} name Event name to broadcast.\\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\\n       */\\n      $broadcast: function(name, args) {\\n        var target = this,\\n            current = target,\\n            next = target,\\n            event = {\\n              name: name,\\n              targetScope: target,\\n              preventDefault: function() {\\n                event.defaultPrevented = true;\\n              },\\n              defaultPrevented: false\\n            };\\n\\n        if (!target.$$listenerCount[name]) return event;\\n\\n        var listenerArgs = concat([event], arguments, 1),\\n            listeners, i, length;\\n\\n        //down while you can, then up and next sibling or up and next sibling until back at root\\n        while ((current = next)) {\\n          event.currentScope = current;\\n          listeners = current.$$listeners[name] || [];\\n          for (i = 0, length = listeners.length; i < length; i++) {\\n            // if listeners were deregistered, defragment the array\\n            if (!listeners[i]) {\\n              listeners.splice(i, 1);\\n              i--;\\n              length--;\\n              continue;\\n            }\\n\\n            try {\\n              listeners[i].apply(null, listenerArgs);\\n            } catch (e) {\\n              $exceptionHandler(e);\\n            }\\n          }\\n\\n          // Insanity Warning: scope depth-first traversal\\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\\n          // this piece should be kept in sync with the traversal in $digest\\n          // (though it differs due to having the extra check for $$listenerCount)\\n          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||\\n              (current !== target && current.$$nextSibling)))) {\\n            while (current !== target && !(next = current.$$nextSibling)) {\\n              current = current.$parent;\\n            }\\n          }\\n        }\\n\\n        event.currentScope = null;\\n        return event;\\n      }\\n    };\\n\\n    var $rootScope = new Scope();\\n\\n    //The internal queues. Expose them on the $rootScope for debugging/testing purposes.\\n    var asyncQueue = $rootScope.$$asyncQueue = [];\\n    var postDigestQueue = $rootScope.$$postDigestQueue = [];\\n    var applyAsyncQueue = $rootScope.$$applyAsyncQueue = [];\\n\\n    return $rootScope;\\n\\n\\n    function beginPhase(phase) {\\n      if ($rootScope.$$phase) {\\n        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);\\n      }\\n\\n      $rootScope.$$phase = phase;\\n    }\\n\\n    function clearPhase() {\\n      $rootScope.$$phase = null;\\n    }\\n\\n\\n    function decrementListenerCount(current, count, name) {\\n      do {\\n        current.$$listenerCount[name] -= count;\\n\\n        if (current.$$listenerCount[name] === 0) {\\n          delete current.$$listenerCount[name];\\n        }\\n      } while ((current = current.$parent));\\n    }\\n\\n    /**\\n     * function used as an initial value for watchers.\\n     * because it's unique we can easily tell it apart from other values\\n     */\\n    function initWatchVal() {}\\n\\n    function flushApplyAsync() {\\n      while (applyAsyncQueue.length) {\\n        try {\\n          applyAsyncQueue.shift()();\\n        } catch (e) {\\n          $exceptionHandler(e);\\n        }\\n      }\\n      applyAsyncId = null;\\n    }\\n\\n    function scheduleApplyAsync() {\\n      if (applyAsyncId === null) {\\n        applyAsyncId = $browser.defer(function() {\\n          $rootScope.$apply(flushApplyAsync);\\n        });\\n      }\\n    }\\n  }];\\n}\\n\\n/**\\n * @description\\n * Private service to sanitize uris for links and images. Used by $compile and $sanitize.\\n */\\nfunction $$SanitizeUriProvider() {\\n  var aHrefSanitizationWhitelist = /^\\\\s*(https?|ftp|mailto|tel|file):/,\\n    imgSrcSanitizationWhitelist = /^\\\\s*((https?|ftp|file|blob):|data:image\\\\/)/;\\n\\n  /**\\n   * @description\\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\\n   * urls during a[href] sanitization.\\n   *\\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\\n   *\\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\\n   *\\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\\n   *    chaining otherwise.\\n   */\\n  this.aHrefSanitizationWhitelist = function(regexp) {\\n    if (isDefined(regexp)) {\\n      aHrefSanitizationWhitelist = regexp;\\n      return this;\\n    }\\n    return aHrefSanitizationWhitelist;\\n  };\\n\\n\\n  /**\\n   * @description\\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\\n   * urls during img[src] sanitization.\\n   *\\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\\n   *\\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\\n   *\\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\\n   *    chaining otherwise.\\n   */\\n  this.imgSrcSanitizationWhitelist = function(regexp) {\\n    if (isDefined(regexp)) {\\n      imgSrcSanitizationWhitelist = regexp;\\n      return this;\\n    }\\n    return imgSrcSanitizationWhitelist;\\n  };\\n\\n  this.$get = function() {\\n    return function sanitizeUri(uri, isImage) {\\n      var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;\\n      var normalizedVal;\\n      normalizedVal = urlResolve(uri).href;\\n      if (normalizedVal !== '' && !normalizedVal.match(regex)) {\\n        return 'unsafe:' + normalizedVal;\\n      }\\n      return uri;\\n    };\\n  };\\n}\\n\\nvar $sceMinErr = minErr('$sce');\\n\\nvar SCE_CONTEXTS = {\\n  HTML: 'html',\\n  CSS: 'css',\\n  URL: 'url',\\n  // RESOURCE_URL is a subtype of URL used in contexts where a privileged resource is sourced from a\\n  // url.  (e.g. ng-include, script src, templateUrl)\\n  RESOURCE_URL: 'resourceUrl',\\n  JS: 'js'\\n};\\n\\n// Helper functions follow.\\n\\nfunction adjustMatcher(matcher) {\\n  if (matcher === 'self') {\\n    return matcher;\\n  } else if (isString(matcher)) {\\n    // Strings match exactly except for 2 wildcards - '*' and '**'.\\n    // '*' matches any character except those from the set ':/.?&'.\\n    // '**' matches any character (like .* in a RegExp).\\n    // More than 2 *'s raises an error as it's ill defined.\\n    if (matcher.indexOf('***') > -1) {\\n      throw $sceMinErr('iwcard',\\n          'Illegal sequence *** in string matcher.  String: {0}', matcher);\\n    }\\n    matcher = escapeForRegexp(matcher).\\n                  replace('\\\\\\\\*\\\\\\\\*', '.*').\\n                  replace('\\\\\\\\*', '[^:/.?&;]*');\\n    return new RegExp('^' + matcher + '$');\\n  } else if (isRegExp(matcher)) {\\n    // The only other type of matcher allowed is a Regexp.\\n    // Match entire URL / disallow partial matches.\\n    // Flags are reset (i.e. no global, ignoreCase or multiline)\\n    return new RegExp('^' + matcher.source + '$');\\n  } else {\\n    throw $sceMinErr('imatcher',\\n        'Matchers may only be \\\"self\\\", string patterns or RegExp objects');\\n  }\\n}\\n\\n\\nfunction adjustMatchers(matchers) {\\n  var adjustedMatchers = [];\\n  if (isDefined(matchers)) {\\n    forEach(matchers, function(matcher) {\\n      adjustedMatchers.push(adjustMatcher(matcher));\\n    });\\n  }\\n  return adjustedMatchers;\\n}\\n\\n\\n/**\\n * @ngdoc service\\n * @name $sceDelegate\\n * @kind function\\n *\\n * @description\\n *\\n * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\\n * Contextual Escaping (SCE)} services to AngularJS.\\n *\\n * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\\n * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\\n * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to\\n * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\\n * work because `$sce` delegates to `$sceDelegate` for these operations.\\n *\\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\\n *\\n * The default instance of `$sceDelegate` should work out of the box with little pain.  While you\\n * can override it completely to change the behavior of `$sce`, the common case would\\n * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\\n * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\\n * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\\n * $sceDelegateProvider.resourceUrlWhitelist} and {@link\\n * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\\n */\\n\\n/**\\n * @ngdoc provider\\n * @name $sceDelegateProvider\\n * @description\\n *\\n * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\\n * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\\n * that the URLs used for sourcing Angular templates are safe.  Refer {@link\\n * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\\n * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\\n *\\n * For the general details about this service in Angular, read the main page for {@link ng.$sce\\n * Strict Contextual Escaping (SCE)}.\\n *\\n * **Example**:  Consider the following case. <a name=\\\"example\\\"></a>\\n *\\n * - your app is hosted at url `http://myapp.example.com/`\\n * - but some of your templates are hosted on other domains you control such as\\n *   `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\\n * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.\\n *\\n * Here is what a secure configuration for this scenario might look like:\\n *\\n * ```\\n *  angular.module('myApp', []).config(function($sceDelegateProvider) {\\n *    $sceDelegateProvider.resourceUrlWhitelist([\\n *      // Allow same origin resource loads.\\n *      'self',\\n *      // Allow loading from our assets domain.  Notice the difference between * and **.\\n *      'http://srv*.assets.example.com/**'\\n *    ]);\\n *\\n *    // The blacklist overrides the whitelist so the open redirect here is blocked.\\n *    $sceDelegateProvider.resourceUrlBlacklist([\\n *      'http://myapp.example.com/clickThru**'\\n *    ]);\\n *  });\\n * ```\\n */\\n\\nfunction $SceDelegateProvider() {\\n  this.SCE_CONTEXTS = SCE_CONTEXTS;\\n\\n  // Resource URLs can also be trusted by policy.\\n  var resourceUrlWhitelist = ['self'],\\n      resourceUrlBlacklist = [];\\n\\n  /**\\n   * @ngdoc method\\n   * @name $sceDelegateProvider#resourceUrlWhitelist\\n   * @kind function\\n   *\\n   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value\\n   *     provided.  This must be an array or null.  A snapshot of this array is used so further\\n   *     changes to the array are ignored.\\n   *\\n   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\\n   *     allowed in this array.\\n   *\\n   *     Note: **an empty whitelist array will block all URLs**!\\n   *\\n   * @return {Array} the currently set whitelist array.\\n   *\\n   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only\\n   * same origin resource requests.\\n   *\\n   * @description\\n   * Sets/Gets the whitelist of trusted resource URLs.\\n   */\\n  this.resourceUrlWhitelist = function(value) {\\n    if (arguments.length) {\\n      resourceUrlWhitelist = adjustMatchers(value);\\n    }\\n    return resourceUrlWhitelist;\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name $sceDelegateProvider#resourceUrlBlacklist\\n   * @kind function\\n   *\\n   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value\\n   *     provided.  This must be an array or null.  A snapshot of this array is used so further\\n   *     changes to the array are ignored.\\n   *\\n   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\\n   *     allowed in this array.\\n   *\\n   *     The typical usage for the blacklist is to **block\\n   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\\n   *     these would otherwise be trusted but actually return content from the redirected domain.\\n   *\\n   *     Finally, **the blacklist overrides the whitelist** and has the final say.\\n   *\\n   * @return {Array} the currently set blacklist array.\\n   *\\n   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there\\n   * is no blacklist.)\\n   *\\n   * @description\\n   * Sets/Gets the blacklist of trusted resource URLs.\\n   */\\n\\n  this.resourceUrlBlacklist = function(value) {\\n    if (arguments.length) {\\n      resourceUrlBlacklist = adjustMatchers(value);\\n    }\\n    return resourceUrlBlacklist;\\n  };\\n\\n  this.$get = ['$injector', function($injector) {\\n\\n    var htmlSanitizer = function htmlSanitizer(html) {\\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\\n    };\\n\\n    if ($injector.has('$sanitize')) {\\n      htmlSanitizer = $injector.get('$sanitize');\\n    }\\n\\n\\n    function matchUrl(matcher, parsedUrl) {\\n      if (matcher === 'self') {\\n        return urlIsSameOrigin(parsedUrl);\\n      } else {\\n        // definitely a regex.  See adjustMatchers()\\n        return !!matcher.exec(parsedUrl.href);\\n      }\\n    }\\n\\n    function isResourceUrlAllowedByPolicy(url) {\\n      var parsedUrl = urlResolve(url.toString());\\n      var i, n, allowed = false;\\n      // Ensure that at least one item from the whitelist allows this url.\\n      for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {\\n        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {\\n          allowed = true;\\n          break;\\n        }\\n      }\\n      if (allowed) {\\n        // Ensure that no item from the blacklist blocked this url.\\n        for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {\\n          if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {\\n            allowed = false;\\n            break;\\n          }\\n        }\\n      }\\n      return allowed;\\n    }\\n\\n    function generateHolderType(Base) {\\n      var holderType = function TrustedValueHolderType(trustedValue) {\\n        this.$$unwrapTrustedValue = function() {\\n          return trustedValue;\\n        };\\n      };\\n      if (Base) {\\n        holderType.prototype = new Base();\\n      }\\n      holderType.prototype.valueOf = function sceValueOf() {\\n        return this.$$unwrapTrustedValue();\\n      };\\n      holderType.prototype.toString = function sceToString() {\\n        return this.$$unwrapTrustedValue().toString();\\n      };\\n      return holderType;\\n    }\\n\\n    var trustedValueHolderBase = generateHolderType(),\\n        byType = {};\\n\\n    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);\\n    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);\\n    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);\\n    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);\\n    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sceDelegate#trustAs\\n     *\\n     * @description\\n     * Returns an object that is trusted by angular for use in specified strict\\n     * contextual escaping contexts (such as ng-bind-html, ng-include, any src\\n     * attribute interpolation, any dom event binding attribute interpolation\\n     * such as for onclick,  etc.) that uses the provided value.\\n     * See {@link ng.$sce $sce} for enabling strict contextual escaping.\\n     *\\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\\n     *   resourceUrl, html, js and css.\\n     * @param {*} value The value that that should be considered trusted/safe.\\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\\n     * where Angular expects a $sce.trustAs() return value.\\n     */\\n    function trustAs(type, trustedValue) {\\n      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\\n      if (!Constructor) {\\n        throw $sceMinErr('icontext',\\n            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',\\n            type, trustedValue);\\n      }\\n      if (trustedValue === null || trustedValue === undefined || trustedValue === '') {\\n        return trustedValue;\\n      }\\n      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting\\n      // mutable objects, we ensure here that the value passed in is actually a string.\\n      if (typeof trustedValue !== 'string') {\\n        throw $sceMinErr('itype',\\n            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',\\n            type);\\n      }\\n      return new Constructor(trustedValue);\\n    }\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sceDelegate#valueOf\\n     *\\n     * @description\\n     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\\n     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link\\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\\n     *\\n     * If the passed parameter is not a value that had been returned by {@link\\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.\\n     *\\n     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\\n     *      call or anything else.\\n     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\\n     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\\n     *     `value` unchanged.\\n     */\\n    function valueOf(maybeTrusted) {\\n      if (maybeTrusted instanceof trustedValueHolderBase) {\\n        return maybeTrusted.$$unwrapTrustedValue();\\n      } else {\\n        return maybeTrusted;\\n      }\\n    }\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sceDelegate#getTrusted\\n     *\\n     * @description\\n     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\\n     * returns the originally supplied value if the queried context type is a supertype of the\\n     * created type.  If this condition isn't satisfied, throws an exception.\\n     *\\n     * @param {string} type The kind of context in which this value is to be used.\\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs\\n     *     `$sceDelegate.trustAs`} call.\\n     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs\\n     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.\\n     */\\n    function getTrusted(type, maybeTrusted) {\\n      if (maybeTrusted === null || maybeTrusted === undefined || maybeTrusted === '') {\\n        return maybeTrusted;\\n      }\\n      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\\n      if (constructor && maybeTrusted instanceof constructor) {\\n        return maybeTrusted.$$unwrapTrustedValue();\\n      }\\n      // If we get here, then we may only take one of two actions.\\n      // 1. sanitize the value for the requested type, or\\n      // 2. throw an exception.\\n      if (type === SCE_CONTEXTS.RESOURCE_URL) {\\n        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {\\n          return maybeTrusted;\\n        } else {\\n          throw $sceMinErr('insecurl',\\n              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',\\n              maybeTrusted.toString());\\n        }\\n      } else if (type === SCE_CONTEXTS.HTML) {\\n        return htmlSanitizer(maybeTrusted);\\n      }\\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\\n    }\\n\\n    return { trustAs: trustAs,\\n             getTrusted: getTrusted,\\n             valueOf: valueOf };\\n  }];\\n}\\n\\n\\n/**\\n * @ngdoc provider\\n * @name $sceProvider\\n * @description\\n *\\n * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\\n * -   enable/disable Strict Contextual Escaping (SCE) in a module\\n * -   override the default implementation with a custom delegate\\n *\\n * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.\\n */\\n\\n/* jshint maxlen: false*/\\n\\n/**\\n * @ngdoc service\\n * @name $sce\\n * @kind function\\n *\\n * @description\\n *\\n * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\\n *\\n * # Strict Contextual Escaping\\n *\\n * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\\n * contexts to result in a value that is marked as safe to use for that context.  One example of\\n * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\\n * to these contexts as privileged or SCE contexts.\\n *\\n * As of version 1.2, Angular ships with SCE enabled by default.\\n *\\n * Note:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\\n * one to execute arbitrary javascript by the use of the expression() syntax.  Refer\\n * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\\n * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\\n * to the top of your HTML document.\\n *\\n * SCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\\n * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.\\n *\\n * Here's an example of a binding in a privileged context:\\n *\\n * ```\\n * <input ng-model=\\\"userHtml\\\">\\n * <div ng-bind-html=\\\"userHtml\\\"></div>\\n * ```\\n *\\n * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\\n * disabled, this application allows the user to render arbitrary HTML into the DIV.\\n * In a more realistic example, one may be rendering user comments, blog articles, etc. via\\n * bindings.  (HTML is just one example of a context where rendering user controlled input creates\\n * security vulnerabilities.)\\n *\\n * For the case of HTML, you might use a library, either on the client side, or on the server side,\\n * to sanitize unsafe HTML before binding to the value and rendering it in the document.\\n *\\n * How would you ensure that every place that used these types of bindings was bound to a value that\\n * was sanitized by your library (or returned as safe for rendering by your server?)  How can you\\n * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some\\n * properties/fields and forgot to update the binding to the sanitized value?\\n *\\n * To be secure by default, you want to ensure that any such bindings are disallowed unless you can\\n * determine that something explicitly says it's safe to use a value for binding in that\\n * context.  You can then audit your code (a simple grep would do) to ensure that this is only done\\n * for those values that you can easily tell are safe - because they were received from your server,\\n * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps\\n * allowing only the files in a specific directory to do this.  Ensuring that the internal API\\n * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\\n *\\n * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\\n * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\\n * obtain values that will be accepted by SCE / privileged contexts.\\n *\\n *\\n * ## How does it work?\\n *\\n * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\\n * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\\n * ng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\\n * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\\n *\\n * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\\n * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\\n * simplified):\\n *\\n * ```\\n * var ngBindHtmlDirective = ['$sce', function($sce) {\\n *   return function(scope, element, attr) {\\n *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\\n *       element.html(value || '');\\n *     });\\n *   };\\n * }];\\n * ```\\n *\\n * ## Impact on loading templates\\n *\\n * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\\n * `templateUrl`'s specified by {@link guide/directive directives}.\\n *\\n * By default, Angular only loads templates from the same domain and protocol as the application\\n * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\\n * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\\n * protocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\\n * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\\n *\\n * *Please note*:\\n * The browser's\\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\\n * policy apply in addition to this and may further restrict whether the template is successfully\\n * loaded.  This means that without the right CORS policy, loading templates from a different domain\\n * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some\\n * browsers.\\n *\\n * ## This feels like too much overhead\\n *\\n * It's important to remember that SCE only applies to interpolation expressions.\\n *\\n * If your expressions are constant literals, they're automatically trusted and you don't need to\\n * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\\n * `<div ng-bind-html=\\\"'<b>implicitly trusted</b>'\\\"></div>`) just works.\\n *\\n * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\\n * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\\n *\\n * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\\n * templates in `ng-include` from your application's domain without having to even know about SCE.\\n * It blocks loading templates from other domains or loading templates over http from an https\\n * served document.  You can change these by setting your own custom {@link\\n * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\\n * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\\n *\\n * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an\\n * application that's secure and can be audited to verify that with much more ease than bolting\\n * security onto an application later.\\n *\\n * <a name=\\\"contexts\\\"></a>\\n * ## What trusted context types are supported?\\n *\\n * | Context             | Notes          |\\n * |---------------------|----------------|\\n * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\\n * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\\n * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\\n * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\\n * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\\n *\\n * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\\\"resourceUrlPatternItem\\\"></a>\\n *\\n *  Each element in these arrays must be one of the following:\\n *\\n *  - **'self'**\\n *    - The special **string**, `'self'`, can be used to match against all URLs of the **same\\n *      domain** as the application document using the **same protocol**.\\n *  - **String** (except the special value `'self'`)\\n *    - The string is matched against the full *normalized / absolute URL* of the resource\\n *      being tested (substring matches are not good enough.)\\n *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\\n *      match themselves.\\n *    - `*`: matches zero or more occurrences of any character other than one of the following 6\\n *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use\\n *      in a whitelist.\\n *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not\\n *      not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.\\n *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\\n *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\\n *      http://foo.example.com/templates/**).\\n *  - **RegExp** (*see caveat below*)\\n *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\\n *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\\n *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should\\n *      have good test coverage.).  For instance, the use of `.` in the regex is correct only in a\\n *      small number of cases.  A `.` character in the regex used when matching the scheme or a\\n *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\\n *      is highly recommended to use the string patterns and only fall back to regular expressions\\n *      if they as a last resort.\\n *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\\n *      matched against the **entire** *normalized / absolute URL* of the resource being tested\\n *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\\n *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.\\n *    - If you are generating your JavaScript from some other templating engine (not\\n *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\\n *      remember to escape your regular expression (and be aware that you might need more than\\n *      one level of escaping depending on your templating engine and the way you interpolated\\n *      the value.)  Do make use of your platform's escaping mechanism as it might be good\\n *      enough before coding your own.  e.g. Ruby has\\n *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\\n *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\\n *      Javascript lacks a similar built in function for escaping.  Take a look at Google\\n *      Closure library's [goog.string.regExpEscape(s)](\\n *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\\n *\\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\\n *\\n * ## Show me an example using SCE.\\n *\\n * <example module=\\\"mySceApp\\\" deps=\\\"angular-sanitize.js\\\">\\n * <file name=\\\"index.html\\\">\\n *   <div ng-controller=\\\"AppController as myCtrl\\\">\\n *     <i ng-bind-html=\\\"myCtrl.explicitlyTrustedHtml\\\" id=\\\"explicitlyTrustedHtml\\\"></i><br><br>\\n *     <b>User comments</b><br>\\n *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\\n *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\\n *     exploit.\\n *     <div class=\\\"well\\\">\\n *       <div ng-repeat=\\\"userComment in myCtrl.userComments\\\">\\n *         <b>{{userComment.name}}</b>:\\n *         <span ng-bind-html=\\\"userComment.htmlComment\\\" class=\\\"htmlComment\\\"></span>\\n *         <br>\\n *       </div>\\n *     </div>\\n *   </div>\\n * </file>\\n *\\n * <file name=\\\"script.js\\\">\\n *   angular.module('mySceApp', ['ngSanitize'])\\n *     .controller('AppController', ['$http', '$templateCache', '$sce',\\n *       function($http, $templateCache, $sce) {\\n *         var self = this;\\n *         $http.get(\\\"test_data.json\\\", {cache: $templateCache}).success(function(userComments) {\\n *           self.userComments = userComments;\\n *         });\\n *         self.explicitlyTrustedHtml = $sce.trustAsHtml(\\n *             '<span onmouseover=\\\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\\n *             'sanitization.&quot;\\\">Hover over this text.</span>');\\n *       }]);\\n * </file>\\n *\\n * <file name=\\\"test_data.json\\\">\\n * [\\n *   { \\\"name\\\": \\\"Alice\\\",\\n *     \\\"htmlComment\\\":\\n *         \\\"<span onmouseover='this.textContent=\\\\\\\"PWN3D!\\\\\\\"'>Is <i>anyone</i> reading this?</span>\\\"\\n *   },\\n *   { \\\"name\\\": \\\"Bob\\\",\\n *     \\\"htmlComment\\\": \\\"<i>Yes!</i>  Am I the only other one?\\\"\\n *   }\\n * ]\\n * </file>\\n *\\n * <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n *   describe('SCE doc demo', function() {\\n *     it('should sanitize untrusted values', function() {\\n *       expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\\n *           .toBe('<span>Is <i>anyone</i> reading this?</span>');\\n *     });\\n *\\n *     it('should NOT sanitize explicitly trusted values', function() {\\n *       expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\\n *           '<span onmouseover=\\\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\\n *           'sanitization.&quot;\\\">Hover over this text.</span>');\\n *     });\\n *   });\\n * </file>\\n * </example>\\n *\\n *\\n *\\n * ## Can I disable SCE completely?\\n *\\n * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\\n * for little coding overhead.  It will be much harder to take an SCE disabled application and\\n * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\\n * for cases where you have a lot of existing code that was written before SCE was introduced and\\n * you're migrating them a module at a time.\\n *\\n * That said, here's how you can completely disable SCE:\\n *\\n * ```\\n * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\\n *   // Completely disable SCE.  For demonstration purposes only!\\n *   // Do not use in new projects.\\n *   $sceProvider.enabled(false);\\n * });\\n * ```\\n *\\n */\\n/* jshint maxlen: 100 */\\n\\nfunction $SceProvider() {\\n  var enabled = true;\\n\\n  /**\\n   * @ngdoc method\\n   * @name $sceProvider#enabled\\n   * @kind function\\n   *\\n   * @param {boolean=} value If provided, then enables/disables SCE.\\n   * @return {boolean} true if SCE is enabled, false otherwise.\\n   *\\n   * @description\\n   * Enables/disables SCE and returns the current value.\\n   */\\n  this.enabled = function(value) {\\n    if (arguments.length) {\\n      enabled = !!value;\\n    }\\n    return enabled;\\n  };\\n\\n\\n  /* Design notes on the default implementation for SCE.\\n   *\\n   * The API contract for the SCE delegate\\n   * -------------------------------------\\n   * The SCE delegate object must provide the following 3 methods:\\n   *\\n   * - trustAs(contextEnum, value)\\n   *     This method is used to tell the SCE service that the provided value is OK to use in the\\n   *     contexts specified by contextEnum.  It must return an object that will be accepted by\\n   *     getTrusted() for a compatible contextEnum and return this value.\\n   *\\n   * - valueOf(value)\\n   *     For values that were not produced by trustAs(), return them as is.  For values that were\\n   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if\\n   *     trustAs is wrapping the given values into some type, this operation unwraps it when given\\n   *     such a value.\\n   *\\n   * - getTrusted(contextEnum, value)\\n   *     This function should return the a value that is safe to use in the context specified by\\n   *     contextEnum or throw and exception otherwise.\\n   *\\n   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be\\n   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For\\n   * instance, an implementation could maintain a registry of all trusted objects by context.  In\\n   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would\\n   * return the same object passed in if it was found in the registry under a compatible context or\\n   * throw an exception otherwise.  An implementation might only wrap values some of the time based\\n   * on some criteria.  getTrusted() might return a value and not throw an exception for special\\n   * constants or objects even if not wrapped.  All such implementations fulfill this contract.\\n   *\\n   *\\n   * A note on the inheritance model for SCE contexts\\n   * ------------------------------------------------\\n   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This\\n   * is purely an implementation details.\\n   *\\n   * The contract is simply this:\\n   *\\n   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)\\n   *     will also succeed.\\n   *\\n   * Inheritance happens to capture this in a natural way.  In some future, we\\n   * may not use inheritance anymore.  That is OK because no code outside of\\n   * sce.js and sceSpecs.js would need to be aware of this detail.\\n   */\\n\\n  this.$get = ['$parse', '$sceDelegate', function(\\n                $parse,   $sceDelegate) {\\n    // Prereq: Ensure that we're not running in IE<11 quirks mode.  In that mode, IE < 11 allow\\n    // the \\\"expression(javascript expression)\\\" syntax which is insecure.\\n    if (enabled && msie < 8) {\\n      throw $sceMinErr('iequirks',\\n        'Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks ' +\\n        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +\\n        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');\\n    }\\n\\n    var sce = shallowCopy(SCE_CONTEXTS);\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#isEnabled\\n     * @kind function\\n     *\\n     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you\\n     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.\\n     *\\n     * @description\\n     * Returns a boolean indicating if SCE is enabled.\\n     */\\n    sce.isEnabled = function() {\\n      return enabled;\\n    };\\n    sce.trustAs = $sceDelegate.trustAs;\\n    sce.getTrusted = $sceDelegate.getTrusted;\\n    sce.valueOf = $sceDelegate.valueOf;\\n\\n    if (!enabled) {\\n      sce.trustAs = sce.getTrusted = function(type, value) { return value; };\\n      sce.valueOf = identity;\\n    }\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#parseAs\\n     *\\n     * @description\\n     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link\\n     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\\n     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\\n     * *result*)}\\n     *\\n     * @param {string} type The kind of SCE context in which this result will be used.\\n     * @param {string} expression String expression to compile.\\n     * @returns {function(context, locals)} a function which represents the compiled expression:\\n     *\\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n     *      are evaluated against (typically a scope object).\\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n     *      `context`.\\n     */\\n    sce.parseAs = function sceParseAs(type, expr) {\\n      var parsed = $parse(expr);\\n      if (parsed.literal && parsed.constant) {\\n        return parsed;\\n      } else {\\n        return $parse(expr, function(value) {\\n          return sce.getTrusted(type, value);\\n        });\\n      }\\n    };\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#trustAs\\n     *\\n     * @description\\n     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\\n     * returns an object that is trusted by angular for use in specified strict contextual\\n     * escaping contexts (such as ng-bind-html, ng-include, any src attribute\\n     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\\n     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\\n     * escaping.\\n     *\\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\\n     *   resource_url, html, js and css.\\n     * @param {*} value The value that that should be considered trusted/safe.\\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\\n     * where Angular expects a $sce.trustAs() return value.\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#trustAsHtml\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.trustAsHtml(value)` →\\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}\\n     *\\n     * @param {*} value The value to trustAs.\\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml\\n     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\\n     *     only accept expressions that are either literal constants or are the\\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#trustAsUrl\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.trustAsUrl(value)` →\\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}\\n     *\\n     * @param {*} value The value to trustAs.\\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl\\n     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\\n     *     only accept expressions that are either literal constants or are the\\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#trustAsResourceUrl\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →\\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}\\n     *\\n     * @param {*} value The value to trustAs.\\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\\n     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\\n     *     only accept expressions that are either literal constants or are the return\\n     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#trustAsJs\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.trustAsJs(value)` →\\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}\\n     *\\n     * @param {*} value The value to trustAs.\\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs\\n     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\\n     *     only accept expressions that are either literal constants or are the\\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#getTrusted\\n     *\\n     * @description\\n     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\\n     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\\n     * originally supplied value if the queried context type is a supertype of the created type.\\n     * If this condition isn't satisfied, throws an exception.\\n     *\\n     * @param {string} type The kind of context in which this value is to be used.\\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\\n     *                         call.\\n     * @returns {*} The value the was originally provided to\\n     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\\n     *              Otherwise, throws an exception.\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#getTrustedHtml\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.getTrustedHtml(value)` →\\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}\\n     *\\n     * @param {*} value The value to pass to `$sce.getTrusted`.\\n     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#getTrustedCss\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.getTrustedCss(value)` →\\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}\\n     *\\n     * @param {*} value The value to pass to `$sce.getTrusted`.\\n     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#getTrustedUrl\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.getTrustedUrl(value)` →\\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}\\n     *\\n     * @param {*} value The value to pass to `$sce.getTrusted`.\\n     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#getTrustedResourceUrl\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}\\n     *\\n     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.\\n     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#getTrustedJs\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.getTrustedJs(value)` →\\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}\\n     *\\n     * @param {*} value The value to pass to `$sce.getTrusted`.\\n     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#parseAsHtml\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.parseAsHtml(expression string)` →\\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}\\n     *\\n     * @param {string} expression String expression to compile.\\n     * @returns {function(context, locals)} a function which represents the compiled expression:\\n     *\\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n     *      are evaluated against (typically a scope object).\\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n     *      `context`.\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#parseAsCss\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.parseAsCss(value)` →\\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}\\n     *\\n     * @param {string} expression String expression to compile.\\n     * @returns {function(context, locals)} a function which represents the compiled expression:\\n     *\\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n     *      are evaluated against (typically a scope object).\\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n     *      `context`.\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#parseAsUrl\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.parseAsUrl(value)` →\\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}\\n     *\\n     * @param {string} expression String expression to compile.\\n     * @returns {function(context, locals)} a function which represents the compiled expression:\\n     *\\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n     *      are evaluated against (typically a scope object).\\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n     *      `context`.\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#parseAsResourceUrl\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →\\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}\\n     *\\n     * @param {string} expression String expression to compile.\\n     * @returns {function(context, locals)} a function which represents the compiled expression:\\n     *\\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n     *      are evaluated against (typically a scope object).\\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n     *      `context`.\\n     */\\n\\n    /**\\n     * @ngdoc method\\n     * @name $sce#parseAsJs\\n     *\\n     * @description\\n     * Shorthand method.  `$sce.parseAsJs(value)` →\\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}\\n     *\\n     * @param {string} expression String expression to compile.\\n     * @returns {function(context, locals)} a function which represents the compiled expression:\\n     *\\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\\n     *      are evaluated against (typically a scope object).\\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\\n     *      `context`.\\n     */\\n\\n    // Shorthand delegations.\\n    var parse = sce.parseAs,\\n        getTrusted = sce.getTrusted,\\n        trustAs = sce.trustAs;\\n\\n    forEach(SCE_CONTEXTS, function(enumValue, name) {\\n      var lName = lowercase(name);\\n      sce[camelCase(\\\"parse_as_\\\" + lName)] = function(expr) {\\n        return parse(enumValue, expr);\\n      };\\n      sce[camelCase(\\\"get_trusted_\\\" + lName)] = function(value) {\\n        return getTrusted(enumValue, value);\\n      };\\n      sce[camelCase(\\\"trust_as_\\\" + lName)] = function(value) {\\n        return trustAs(enumValue, value);\\n      };\\n    });\\n\\n    return sce;\\n  }];\\n}\\n\\n/**\\n * !!! This is an undocumented \\\"private\\\" service !!!\\n *\\n * @name $sniffer\\n * @requires $window\\n * @requires $document\\n *\\n * @property {boolean} history Does the browser support html5 history api ?\\n * @property {boolean} transitions Does the browser support CSS transition events ?\\n * @property {boolean} animations Does the browser support CSS animation events ?\\n *\\n * @description\\n * This is very simple implementation of testing browser's features.\\n */\\nfunction $SnifferProvider() {\\n  this.$get = ['$window', '$document', function($window, $document) {\\n    var eventSupport = {},\\n        android =\\n          int((/android (\\\\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),\\n        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),\\n        document = $document[0] || {},\\n        vendorPrefix,\\n        vendorRegex = /^(Moz|webkit|ms)(?=[A-Z])/,\\n        bodyStyle = document.body && document.body.style,\\n        transitions = false,\\n        animations = false,\\n        match;\\n\\n    if (bodyStyle) {\\n      for (var prop in bodyStyle) {\\n        if (match = vendorRegex.exec(prop)) {\\n          vendorPrefix = match[0];\\n          vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);\\n          break;\\n        }\\n      }\\n\\n      if (!vendorPrefix) {\\n        vendorPrefix = ('WebkitOpacity' in bodyStyle) && 'webkit';\\n      }\\n\\n      transitions = !!(('transition' in bodyStyle) || (vendorPrefix + 'Transition' in bodyStyle));\\n      animations  = !!(('animation' in bodyStyle) || (vendorPrefix + 'Animation' in bodyStyle));\\n\\n      if (android && (!transitions ||  !animations)) {\\n        transitions = isString(document.body.style.webkitTransition);\\n        animations = isString(document.body.style.webkitAnimation);\\n      }\\n    }\\n\\n\\n    return {\\n      // Android has history.pushState, but it does not update location correctly\\n      // so let's not use the history API at all.\\n      // http://code.google.com/p/android/issues/detail?id=17471\\n      // https://github.com/angular/angular.js/issues/904\\n\\n      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has\\n      // so let's not use the history API also\\n      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined\\n      // jshint -W018\\n      history: !!($window.history && $window.history.pushState && !(android < 4) && !boxee),\\n      // jshint +W018\\n      hasEvent: function(event) {\\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\\n        // it. In particular the event is not fired when backspace or delete key are pressed or\\n        // when cut operation is performed.\\n        // IE10+ implements 'input' event but it erroneously fires under various situations,\\n        // e.g. when placeholder changes, or a form is focused.\\n        if (event === 'input' && msie <= 11) return false;\\n\\n        if (isUndefined(eventSupport[event])) {\\n          var divElm = document.createElement('div');\\n          eventSupport[event] = 'on' + event in divElm;\\n        }\\n\\n        return eventSupport[event];\\n      },\\n      csp: csp(),\\n      vendorPrefix: vendorPrefix,\\n      transitions: transitions,\\n      animations: animations,\\n      android: android\\n    };\\n  }];\\n}\\n\\nvar $compileMinErr = minErr('$compile');\\n\\n/**\\n * @ngdoc service\\n * @name $templateRequest\\n *\\n * @description\\n * The `$templateRequest` service downloads the provided template using `$http` and, upon success,\\n * stores the contents inside of `$templateCache`. If the HTTP request fails or the response data\\n * of the HTTP request is empty, a `$compile` error will be thrown (the exception can be thwarted\\n * by setting the 2nd parameter of the function to true).\\n *\\n * @param {string} tpl The HTTP request template URL\\n * @param {boolean=} ignoreRequestError Whether or not to ignore the exception when the request fails or the template is empty\\n *\\n * @return {Promise} the HTTP Promise for the given.\\n *\\n * @property {number} totalPendingRequests total amount of pending template requests being downloaded.\\n */\\nfunction $TemplateRequestProvider() {\\n  this.$get = ['$templateCache', '$http', '$q', function($templateCache, $http, $q) {\\n    function handleRequestFn(tpl, ignoreRequestError) {\\n      handleRequestFn.totalPendingRequests++;\\n\\n      var transformResponse = $http.defaults && $http.defaults.transformResponse;\\n\\n      if (isArray(transformResponse)) {\\n        transformResponse = transformResponse.filter(function(transformer) {\\n          return transformer !== defaultHttpResponseTransform;\\n        });\\n      } else if (transformResponse === defaultHttpResponseTransform) {\\n        transformResponse = null;\\n      }\\n\\n      var httpOptions = {\\n        cache: $templateCache,\\n        transformResponse: transformResponse\\n      };\\n\\n      return $http.get(tpl, httpOptions)\\n        .finally(function() {\\n          handleRequestFn.totalPendingRequests--;\\n        })\\n        .then(function(response) {\\n          return response.data;\\n        }, handleError);\\n\\n      function handleError(resp) {\\n        if (!ignoreRequestError) {\\n          throw $compileMinErr('tpload', 'Failed to load template: {0}', tpl);\\n        }\\n        return $q.reject(resp);\\n      }\\n    }\\n\\n    handleRequestFn.totalPendingRequests = 0;\\n\\n    return handleRequestFn;\\n  }];\\n}\\n\\nfunction $$TestabilityProvider() {\\n  this.$get = ['$rootScope', '$browser', '$location',\\n       function($rootScope,   $browser,   $location) {\\n\\n    /**\\n     * @name $testability\\n     *\\n     * @description\\n     * The private $$testability service provides a collection of methods for use when debugging\\n     * or by automated test and debugging tools.\\n     */\\n    var testability = {};\\n\\n    /**\\n     * @name $$testability#findBindings\\n     *\\n     * @description\\n     * Returns an array of elements that are bound (via ng-bind or {{}})\\n     * to expressions matching the input.\\n     *\\n     * @param {Element} element The element root to search from.\\n     * @param {string} expression The binding expression to match.\\n     * @param {boolean} opt_exactMatch If true, only returns exact matches\\n     *     for the expression. Filters and whitespace are ignored.\\n     */\\n    testability.findBindings = function(element, expression, opt_exactMatch) {\\n      var bindings = element.getElementsByClassName('ng-binding');\\n      var matches = [];\\n      forEach(bindings, function(binding) {\\n        var dataBinding = angular.element(binding).data('$binding');\\n        if (dataBinding) {\\n          forEach(dataBinding, function(bindingName) {\\n            if (opt_exactMatch) {\\n              var matcher = new RegExp('(^|\\\\\\\\s)' + escapeForRegexp(expression) + '(\\\\\\\\s|\\\\\\\\||$)');\\n              if (matcher.test(bindingName)) {\\n                matches.push(binding);\\n              }\\n            } else {\\n              if (bindingName.indexOf(expression) != -1) {\\n                matches.push(binding);\\n              }\\n            }\\n          });\\n        }\\n      });\\n      return matches;\\n    };\\n\\n    /**\\n     * @name $$testability#findModels\\n     *\\n     * @description\\n     * Returns an array of elements that are two-way found via ng-model to\\n     * expressions matching the input.\\n     *\\n     * @param {Element} element The element root to search from.\\n     * @param {string} expression The model expression to match.\\n     * @param {boolean} opt_exactMatch If true, only returns exact matches\\n     *     for the expression.\\n     */\\n    testability.findModels = function(element, expression, opt_exactMatch) {\\n      var prefixes = ['ng-', 'data-ng-', 'ng\\\\\\\\:'];\\n      for (var p = 0; p < prefixes.length; ++p) {\\n        var attributeEquals = opt_exactMatch ? '=' : '*=';\\n        var selector = '[' + prefixes[p] + 'model' + attributeEquals + '\\\"' + expression + '\\\"]';\\n        var elements = element.querySelectorAll(selector);\\n        if (elements.length) {\\n          return elements;\\n        }\\n      }\\n    };\\n\\n    /**\\n     * @name $$testability#getLocation\\n     *\\n     * @description\\n     * Shortcut for getting the location in a browser agnostic way. Returns\\n     *     the path, search, and hash. (e.g. /path?a=b#hash)\\n     */\\n    testability.getLocation = function() {\\n      return $location.url();\\n    };\\n\\n    /**\\n     * @name $$testability#setLocation\\n     *\\n     * @description\\n     * Shortcut for navigating to a location without doing a full page reload.\\n     *\\n     * @param {string} url The location url (path, search and hash,\\n     *     e.g. /path?a=b#hash) to go to.\\n     */\\n    testability.setLocation = function(url) {\\n      if (url !== $location.url()) {\\n        $location.url(url);\\n        $rootScope.$digest();\\n      }\\n    };\\n\\n    /**\\n     * @name $$testability#whenStable\\n     *\\n     * @description\\n     * Calls the callback when $timeout and $http requests are completed.\\n     *\\n     * @param {function} callback\\n     */\\n    testability.whenStable = function(callback) {\\n      $browser.notifyWhenNoOutstandingRequests(callback);\\n    };\\n\\n    return testability;\\n  }];\\n}\\n\\nfunction $TimeoutProvider() {\\n  this.$get = ['$rootScope', '$browser', '$q', '$$q', '$exceptionHandler',\\n       function($rootScope,   $browser,   $q,   $$q,   $exceptionHandler) {\\n    var deferreds = {};\\n\\n\\n     /**\\n      * @ngdoc service\\n      * @name $timeout\\n      *\\n      * @description\\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\\n      * block and delegates any exceptions to\\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\\n      *\\n      * The return value of registering a timeout function is a promise, which will be resolved when\\n      * the timeout is reached and the timeout function is executed.\\n      *\\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\\n      *\\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\\n      * synchronously flush the queue of deferred functions.\\n      *\\n      * @param {function()} fn A function, whose execution should be delayed.\\n      * @param {number=} [delay=0] Delay in milliseconds.\\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\\n      *   promise will be resolved with is the return value of the `fn` function.\\n      *\\n      */\\n    function timeout(fn, delay, invokeApply) {\\n      var skipApply = (isDefined(invokeApply) && !invokeApply),\\n          deferred = (skipApply ? $$q : $q).defer(),\\n          promise = deferred.promise,\\n          timeoutId;\\n\\n      timeoutId = $browser.defer(function() {\\n        try {\\n          deferred.resolve(fn());\\n        } catch (e) {\\n          deferred.reject(e);\\n          $exceptionHandler(e);\\n        }\\n        finally {\\n          delete deferreds[promise.$$timeoutId];\\n        }\\n\\n        if (!skipApply) $rootScope.$apply();\\n      }, delay);\\n\\n      promise.$$timeoutId = timeoutId;\\n      deferreds[timeoutId] = deferred;\\n\\n      return promise;\\n    }\\n\\n\\n     /**\\n      * @ngdoc method\\n      * @name $timeout#cancel\\n      *\\n      * @description\\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\\n      * resolved with a rejection.\\n      *\\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\\n      *   canceled.\\n      */\\n    timeout.cancel = function(promise) {\\n      if (promise && promise.$$timeoutId in deferreds) {\\n        deferreds[promise.$$timeoutId].reject('canceled');\\n        delete deferreds[promise.$$timeoutId];\\n        return $browser.defer.cancel(promise.$$timeoutId);\\n      }\\n      return false;\\n    };\\n\\n    return timeout;\\n  }];\\n}\\n\\n// NOTE:  The usage of window and document instead of $window and $document here is\\n// deliberate.  This service depends on the specific behavior of anchor nodes created by the\\n// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and\\n// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it\\n// doesn't know about mocked locations and resolves URLs to the real document - which is\\n// exactly the behavior needed here.  There is little value is mocking these out for this\\n// service.\\nvar urlParsingNode = document.createElement(\\\"a\\\");\\nvar originUrl = urlResolve(window.location.href);\\n\\n\\n/**\\n *\\n * Implementation Notes for non-IE browsers\\n * ----------------------------------------\\n * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,\\n * results both in the normalizing and parsing of the URL.  Normalizing means that a relative\\n * URL will be resolved into an absolute URL in the context of the application document.\\n * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related\\n * properties are all populated to reflect the normalized URL.  This approach has wide\\n * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See\\n * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\\n *\\n * Implementation Notes for IE\\n * ---------------------------\\n * IE >= 8 and <= 10 normalizes the URL when assigned to the anchor node similar to the other\\n * browsers.  However, the parsed components will not be set if the URL assigned did not specify\\n * them.  (e.g. if you assign a.href = \\\"foo\\\", then a.protocol, a.host, etc. will be empty.)  We\\n * work around that by performing the parsing in a 2nd step by taking a previously normalized\\n * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the\\n * properties such as protocol, hostname, port, etc.\\n *\\n * IE7 does not normalize the URL when assigned to an anchor node.  (Apparently, it does, if one\\n * uses the inner HTML approach to assign the URL as part of an HTML snippet -\\n * http://stackoverflow.com/a/472729)  However, setting img[src] does normalize the URL.\\n * Unfortunately, setting img[src] to something like \\\"javascript:foo\\\" on IE throws an exception.\\n * Since the primary usage for normalizing URLs is to sanitize such URLs, we can't use that\\n * method and IE < 8 is unsupported.\\n *\\n * References:\\n *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\\n *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\\n *   http://url.spec.whatwg.org/#urlutils\\n *   https://github.com/angular/angular.js/pull/2902\\n *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\\n *\\n * @kind function\\n * @param {string} url The URL to be parsed.\\n * @description Normalizes and parses a URL.\\n * @returns {object} Returns the normalized URL as a dictionary.\\n *\\n *   | member name   | Description    |\\n *   |---------------|----------------|\\n *   | href          | A normalized version of the provided URL if it was not an absolute URL |\\n *   | protocol      | The protocol including the trailing colon                              |\\n *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\\n *   | search        | The search params, minus the question mark                             |\\n *   | hash          | The hash string, minus the hash symbol\\n *   | hostname      | The hostname\\n *   | port          | The port, without \\\":\\\"\\n *   | pathname      | The pathname, beginning with \\\"/\\\"\\n *\\n */\\nfunction urlResolve(url) {\\n  var href = url;\\n\\n  if (msie) {\\n    // Normalize before parse.  Refer Implementation Notes on why this is\\n    // done in two steps on IE.\\n    urlParsingNode.setAttribute(\\\"href\\\", href);\\n    href = urlParsingNode.href;\\n  }\\n\\n  urlParsingNode.setAttribute('href', href);\\n\\n  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\\n  return {\\n    href: urlParsingNode.href,\\n    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\\n    host: urlParsingNode.host,\\n    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, '') : '',\\n    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\\n    hostname: urlParsingNode.hostname,\\n    port: urlParsingNode.port,\\n    pathname: (urlParsingNode.pathname.charAt(0) === '/')\\n      ? urlParsingNode.pathname\\n      : '/' + urlParsingNode.pathname\\n  };\\n}\\n\\n/**\\n * Parse a request URL and determine whether this is a same-origin request as the application document.\\n *\\n * @param {string|object} requestUrl The url of the request as a string that will be resolved\\n * or a parsed URL object.\\n * @returns {boolean} Whether the request is for the same origin as the application document.\\n */\\nfunction urlIsSameOrigin(requestUrl) {\\n  var parsed = (isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;\\n  return (parsed.protocol === originUrl.protocol &&\\n          parsed.host === originUrl.host);\\n}\\n\\n/**\\n * @ngdoc service\\n * @name $window\\n *\\n * @description\\n * A reference to the browser's `window` object. While `window`\\n * is globally available in JavaScript, it causes testability problems, because\\n * it is a global variable. In angular we always refer to it through the\\n * `$window` service, so it may be overridden, removed or mocked for testing.\\n *\\n * Expressions, like the one defined for the `ngClick` directive in the example\\n * below, are evaluated with respect to the current scope.  Therefore, there is\\n * no risk of inadvertently coding in a dependency on a global value in such an\\n * expression.\\n *\\n * @example\\n   <example module=\\\"windowExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('windowExample', [])\\n           .controller('ExampleController', ['$scope', '$window', function($scope, $window) {\\n             $scope.greeting = 'Hello, World!';\\n             $scope.doGreeting = function(greeting) {\\n               $window.alert(greeting);\\n             };\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <input type=\\\"text\\\" ng-model=\\\"greeting\\\" />\\n         <button ng-click=\\\"doGreeting(greeting)\\\">ALERT</button>\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      it('should display the greeting in the input box', function() {\\n       element(by.model('greeting')).sendKeys('Hello, E2E Tests');\\n       // If we click the button it will block the test runner\\n       // element(':button').click();\\n      });\\n     </file>\\n   </example>\\n */\\nfunction $WindowProvider() {\\n  this.$get = valueFn(window);\\n}\\n\\n/* global currencyFilter: true,\\n dateFilter: true,\\n filterFilter: true,\\n jsonFilter: true,\\n limitToFilter: true,\\n lowercaseFilter: true,\\n numberFilter: true,\\n orderByFilter: true,\\n uppercaseFilter: true,\\n */\\n\\n/**\\n * @ngdoc provider\\n * @name $filterProvider\\n * @description\\n *\\n * Filters are just functions which transform input to an output. However filters need to be\\n * Dependency Injected. To achieve this a filter definition consists of a factory function which is\\n * annotated with dependencies and is responsible for creating a filter function.\\n *\\n * ```js\\n *   // Filter registration\\n *   function MyModule($provide, $filterProvider) {\\n *     // create a service to demonstrate injection (not always needed)\\n *     $provide.value('greet', function(name){\\n *       return 'Hello ' + name + '!';\\n *     });\\n *\\n *     // register a filter factory which uses the\\n *     // greet service to demonstrate DI.\\n *     $filterProvider.register('greet', function(greet){\\n *       // return the filter function which uses the greet service\\n *       // to generate salutation\\n *       return function(text) {\\n *         // filters need to be forgiving so check input validity\\n *         return text && greet(text) || text;\\n *       };\\n *     });\\n *   }\\n * ```\\n *\\n * The filter function is registered with the `$injector` under the filter name suffix with\\n * `Filter`.\\n *\\n * ```js\\n *   it('should be the same instance', inject(\\n *     function($filterProvider) {\\n *       $filterProvider.register('reverse', function(){\\n *         return ...;\\n *       });\\n *     },\\n *     function($filter, reverseFilter) {\\n *       expect($filter('reverse')).toBe(reverseFilter);\\n *     });\\n * ```\\n *\\n *\\n * For more information about how angular filters work, and how to create your own filters, see\\n * {@link guide/filter Filters} in the Angular Developer Guide.\\n */\\n\\n/**\\n * @ngdoc service\\n * @name $filter\\n * @kind function\\n * @description\\n * Filters are used for formatting data displayed to the user.\\n *\\n * The general syntax in templates is as follows:\\n *\\n *         {{ expression [| filter_name[:parameter_value] ... ] }}\\n *\\n * @param {String} name Name of the filter function to retrieve\\n * @return {Function} the filter function\\n * @example\\n   <example name=\\\"$filter\\\" module=\\\"filterExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <div ng-controller=\\\"MainCtrl\\\">\\n        <h3>{{ originalText }}</h3>\\n        <h3>{{ filteredText }}</h3>\\n       </div>\\n     </file>\\n\\n     <file name=\\\"script.js\\\">\\n      angular.module('filterExample', [])\\n      .controller('MainCtrl', function($scope, $filter) {\\n        $scope.originalText = 'hello';\\n        $scope.filteredText = $filter('uppercase')($scope.originalText);\\n      });\\n     </file>\\n   </example>\\n  */\\n$FilterProvider.$inject = ['$provide'];\\nfunction $FilterProvider($provide) {\\n  var suffix = 'Filter';\\n\\n  /**\\n   * @ngdoc method\\n   * @name $filterProvider#register\\n   * @param {string|Object} name Name of the filter function, or an object map of filters where\\n   *    the keys are the filter names and the values are the filter factories.\\n   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map\\n   *    of the registered filter instances.\\n   */\\n  function register(name, factory) {\\n    if (isObject(name)) {\\n      var filters = {};\\n      forEach(name, function(filter, key) {\\n        filters[key] = register(key, filter);\\n      });\\n      return filters;\\n    } else {\\n      return $provide.factory(name + suffix, factory);\\n    }\\n  }\\n  this.register = register;\\n\\n  this.$get = ['$injector', function($injector) {\\n    return function(name) {\\n      return $injector.get(name + suffix);\\n    };\\n  }];\\n\\n  ////////////////////////////////////////\\n\\n  /* global\\n    currencyFilter: false,\\n    dateFilter: false,\\n    filterFilter: false,\\n    jsonFilter: false,\\n    limitToFilter: false,\\n    lowercaseFilter: false,\\n    numberFilter: false,\\n    orderByFilter: false,\\n    uppercaseFilter: false,\\n  */\\n\\n  register('currency', currencyFilter);\\n  register('date', dateFilter);\\n  register('filter', filterFilter);\\n  register('json', jsonFilter);\\n  register('limitTo', limitToFilter);\\n  register('lowercase', lowercaseFilter);\\n  register('number', numberFilter);\\n  register('orderBy', orderByFilter);\\n  register('uppercase', uppercaseFilter);\\n}\\n\\n/**\\n * @ngdoc filter\\n * @name filter\\n * @kind function\\n *\\n * @description\\n * Selects a subset of items from `array` and returns it as a new array.\\n *\\n * @param {Array} array The source array.\\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\\n *   `array`.\\n *\\n *   Can be one of:\\n *\\n *   - `string`: The string is used for matching against the contents of the `array`. All strings or\\n *     objects with string properties in `array` that match this string will be returned. This also\\n *     applies to nested object properties.\\n *     The predicate can be negated by prefixing the string with `!`.\\n *\\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\\n *     by `array`. For example `{name:\\\"M\\\", phone:\\\"1\\\"}` predicate will return an array of items\\n *     which have property `name` containing \\\"M\\\" and property `phone` containing \\\"1\\\". A special\\n *     property name `$` can be used (as in `{$:\\\"text\\\"}`) to accept a match against any\\n *     property of the object or its nested object properties. That's equivalent to the simple\\n *     substring match with a `string` as described above. The predicate can be negated by prefixing\\n *     the string with `!`.\\n *     For example `{name: \\\"!M\\\"}` predicate will return an array of items which have property `name`\\n *     not containing \\\"M\\\".\\n *\\n *     Note that a named property will match properties on the same level only, while the special\\n *     `$` property will match properties on the same level or deeper. E.g. an array item like\\n *     `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but\\n *     **will** be matched by `{$: 'John'}`.\\n *\\n *   - `function(value, index)`: A predicate function can be used to write arbitrary filters. The\\n *     function is called for each element of `array`. The final result is an array of those\\n *     elements that the predicate returned true for.\\n *\\n * @param {function(actual, expected)|true|undefined} comparator Comparator which is used in\\n *     determining if the expected value (from the filter expression) and actual value (from\\n *     the object in the array) should be considered a match.\\n *\\n *   Can be one of:\\n *\\n *   - `function(actual, expected)`:\\n *     The function will be given the object value and the predicate value to compare and\\n *     should return true if both values should be considered equal.\\n *\\n *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.\\n *     This is essentially strict comparison of expected and actual.\\n *\\n *   - `false|undefined`: A short hand for a function which will look for a substring match in case\\n *     insensitive way.\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n       <div ng-init=\\\"friends = [{name:'John', phone:'555-1276'},\\n                                {name:'Mary', phone:'800-BIG-MARY'},\\n                                {name:'Mike', phone:'555-4321'},\\n                                {name:'Adam', phone:'555-5678'},\\n                                {name:'Julie', phone:'555-8765'},\\n                                {name:'Juliette', phone:'555-5678'}]\\\"></div>\\n\\n       Search: <input ng-model=\\\"searchText\\\">\\n       <table id=\\\"searchTextResults\\\">\\n         <tr><th>Name</th><th>Phone</th></tr>\\n         <tr ng-repeat=\\\"friend in friends | filter:searchText\\\">\\n           <td>{{friend.name}}</td>\\n           <td>{{friend.phone}}</td>\\n         </tr>\\n       </table>\\n       <hr>\\n       Any: <input ng-model=\\\"search.$\\\"> <br>\\n       Name only <input ng-model=\\\"search.name\\\"><br>\\n       Phone only <input ng-model=\\\"search.phone\\\"><br>\\n       Equality <input type=\\\"checkbox\\\" ng-model=\\\"strict\\\"><br>\\n       <table id=\\\"searchObjResults\\\">\\n         <tr><th>Name</th><th>Phone</th></tr>\\n         <tr ng-repeat=\\\"friendObj in friends | filter:search:strict\\\">\\n           <td>{{friendObj.name}}</td>\\n           <td>{{friendObj.phone}}</td>\\n         </tr>\\n       </table>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       var expectFriendNames = function(expectedNames, key) {\\n         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\\n           arr.forEach(function(wd, i) {\\n             expect(wd.getText()).toMatch(expectedNames[i]);\\n           });\\n         });\\n       };\\n\\n       it('should search across all fields when filtering with a string', function() {\\n         var searchText = element(by.model('searchText'));\\n         searchText.clear();\\n         searchText.sendKeys('m');\\n         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\\n\\n         searchText.clear();\\n         searchText.sendKeys('76');\\n         expectFriendNames(['John', 'Julie'], 'friend');\\n       });\\n\\n       it('should search in specific fields when filtering with a predicate object', function() {\\n         var searchAny = element(by.model('search.$'));\\n         searchAny.clear();\\n         searchAny.sendKeys('i');\\n         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\\n       });\\n       it('should use a equal comparison when comparator is true', function() {\\n         var searchName = element(by.model('search.name'));\\n         var strict = element(by.model('strict'));\\n         searchName.clear();\\n         searchName.sendKeys('Julie');\\n         strict.click();\\n         expectFriendNames(['Julie'], 'friendObj');\\n       });\\n     </file>\\n   </example>\\n */\\nfunction filterFilter() {\\n  return function(array, expression, comparator) {\\n    if (!isArray(array)) return array;\\n\\n    var predicateFn;\\n    var matchAgainstAnyProp;\\n\\n    switch (typeof expression) {\\n      case 'function':\\n        predicateFn = expression;\\n        break;\\n      case 'boolean':\\n      case 'number':\\n      case 'string':\\n        matchAgainstAnyProp = true;\\n        //jshint -W086\\n      case 'object':\\n        //jshint +W086\\n        predicateFn = createPredicateFn(expression, comparator, matchAgainstAnyProp);\\n        break;\\n      default:\\n        return array;\\n    }\\n\\n    return array.filter(predicateFn);\\n  };\\n}\\n\\n// Helper functions for `filterFilter`\\nfunction createPredicateFn(expression, comparator, matchAgainstAnyProp) {\\n  var shouldMatchPrimitives = isObject(expression) && ('$' in expression);\\n  var predicateFn;\\n\\n  if (comparator === true) {\\n    comparator = equals;\\n  } else if (!isFunction(comparator)) {\\n    comparator = function(actual, expected) {\\n      if (isObject(actual) || isObject(expected)) {\\n        // Prevent an object to be considered equal to a string like `'[object'`\\n        return false;\\n      }\\n\\n      actual = lowercase('' + actual);\\n      expected = lowercase('' + expected);\\n      return actual.indexOf(expected) !== -1;\\n    };\\n  }\\n\\n  predicateFn = function(item) {\\n    if (shouldMatchPrimitives && !isObject(item)) {\\n      return deepCompare(item, expression.$, comparator, false);\\n    }\\n    return deepCompare(item, expression, comparator, matchAgainstAnyProp);\\n  };\\n\\n  return predicateFn;\\n}\\n\\nfunction deepCompare(actual, expected, comparator, matchAgainstAnyProp, dontMatchWholeObject) {\\n  var actualType = typeof actual;\\n  var expectedType = typeof expected;\\n\\n  if ((expectedType === 'string') && (expected.charAt(0) === '!')) {\\n    return !deepCompare(actual, expected.substring(1), comparator, matchAgainstAnyProp);\\n  } else if (isArray(actual)) {\\n    // In case `actual` is an array, consider it a match\\n    // if ANY of it's items matches `expected`\\n    return actual.some(function(item) {\\n      return deepCompare(item, expected, comparator, matchAgainstAnyProp);\\n    });\\n  }\\n\\n  switch (actualType) {\\n    case 'object':\\n      var key;\\n      if (matchAgainstAnyProp) {\\n        for (key in actual) {\\n          if ((key.charAt(0) !== '$') && deepCompare(actual[key], expected, comparator, true)) {\\n            return true;\\n          }\\n        }\\n        return dontMatchWholeObject ? false : deepCompare(actual, expected, comparator, false);\\n      } else if (expectedType === 'object') {\\n        for (key in expected) {\\n          var expectedVal = expected[key];\\n          if (isFunction(expectedVal)) {\\n            continue;\\n          }\\n\\n          var matchAnyProperty = key === '$';\\n          var actualVal = matchAnyProperty ? actual : actual[key];\\n          if (!deepCompare(actualVal, expectedVal, comparator, matchAnyProperty, matchAnyProperty)) {\\n            return false;\\n          }\\n        }\\n        return true;\\n      } else {\\n        return comparator(actual, expected);\\n      }\\n      break;\\n    case 'function':\\n      return false;\\n    default:\\n      return comparator(actual, expected);\\n  }\\n}\\n\\n/**\\n * @ngdoc filter\\n * @name currency\\n * @kind function\\n *\\n * @description\\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\\n * symbol for current locale is used.\\n *\\n * @param {number} amount Input to filter.\\n * @param {string=} symbol Currency symbol or identifier to be displayed.\\n * @param {number=} fractionSize Number of decimal places to round the amount to, defaults to default max fraction size for current locale\\n * @returns {string} Formatted number.\\n *\\n *\\n * @example\\n   <example module=\\\"currencyExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('currencyExample', [])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.amount = 1234.56;\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <input type=\\\"number\\\" ng-model=\\\"amount\\\"> <br>\\n         default currency symbol ($): <span id=\\\"currency-default\\\">{{amount | currency}}</span><br>\\n         custom currency identifier (USD$): <span id=\\\"currency-custom\\\">{{amount | currency:\\\"USD$\\\"}}</span>\\n         no fractions (0): <span id=\\\"currency-no-fractions\\\">{{amount | currency:\\\"USD$\\\":0}}</span>\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should init with 1234.56', function() {\\n         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\\n         expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');\\n         expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');\\n       });\\n       it('should update', function() {\\n         if (browser.params.browser == 'safari') {\\n           // Safari does not understand the minus key. See\\n           // https://github.com/angular/protractor/issues/481\\n           return;\\n         }\\n         element(by.model('amount')).clear();\\n         element(by.model('amount')).sendKeys('-1234');\\n         expect(element(by.id('currency-default')).getText()).toBe('($1,234.00)');\\n         expect(element(by.id('currency-custom')).getText()).toBe('(USD$1,234.00)');\\n         expect(element(by.id('currency-no-fractions')).getText()).toBe('(USD$1,234)');\\n       });\\n     </file>\\n   </example>\\n */\\ncurrencyFilter.$inject = ['$locale'];\\nfunction currencyFilter($locale) {\\n  var formats = $locale.NUMBER_FORMATS;\\n  return function(amount, currencySymbol, fractionSize) {\\n    if (isUndefined(currencySymbol)) {\\n      currencySymbol = formats.CURRENCY_SYM;\\n    }\\n\\n    if (isUndefined(fractionSize)) {\\n      fractionSize = formats.PATTERNS[1].maxFrac;\\n    }\\n\\n    // if null or undefined pass it through\\n    return (amount == null)\\n        ? amount\\n        : formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize).\\n            replace(/\\\\u00A4/g, currencySymbol);\\n  };\\n}\\n\\n/**\\n * @ngdoc filter\\n * @name number\\n * @kind function\\n *\\n * @description\\n * Formats a number as text.\\n *\\n * If the input is not a number an empty string is returned.\\n *\\n * @param {number|string} number Number to format.\\n * @param {(number|string)=} fractionSize Number of decimal places to round the number to.\\n * If this is not provided then the fraction size is computed from the current locale's number\\n * formatting pattern. In the case of the default locale, it will be 3.\\n * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\\n *\\n * @example\\n   <example module=\\\"numberFilterExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('numberFilterExample', [])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.val = 1234.56789;\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         Enter number: <input ng-model='val'><br>\\n         Default formatting: <span id='number-default'>{{val | number}}</span><br>\\n         No fractions: <span>{{val | number:0}}</span><br>\\n         Negative number: <span>{{-val | number:4}}</span>\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should format numbers', function() {\\n         expect(element(by.id('number-default')).getText()).toBe('1,234.568');\\n         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\\n       });\\n\\n       it('should update', function() {\\n         element(by.model('val')).clear();\\n         element(by.model('val')).sendKeys('3374.333');\\n         expect(element(by.id('number-default')).getText()).toBe('3,374.333');\\n         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\\n      });\\n     </file>\\n   </example>\\n */\\n\\n\\nnumberFilter.$inject = ['$locale'];\\nfunction numberFilter($locale) {\\n  var formats = $locale.NUMBER_FORMATS;\\n  return function(number, fractionSize) {\\n\\n    // if null or undefined pass it through\\n    return (number == null)\\n        ? number\\n        : formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\\n                       fractionSize);\\n  };\\n}\\n\\nvar DECIMAL_SEP = '.';\\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\\n  if (!isFinite(number) || isObject(number)) return '';\\n\\n  var isNegative = number < 0;\\n  number = Math.abs(number);\\n  var numStr = number + '',\\n      formatedText = '',\\n      parts = [];\\n\\n  var hasExponent = false;\\n  if (numStr.indexOf('e') !== -1) {\\n    var match = numStr.match(/([\\\\d\\\\.]+)e(-?)(\\\\d+)/);\\n    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\\n      number = 0;\\n    } else {\\n      formatedText = numStr;\\n      hasExponent = true;\\n    }\\n  }\\n\\n  if (!hasExponent) {\\n    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\\n\\n    // determine fractionSize if it is not specified\\n    if (isUndefined(fractionSize)) {\\n      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\\n    }\\n\\n    // safely round numbers in JS without hitting imprecisions of floating-point arithmetics\\n    // inspired by:\\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\\n    number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);\\n\\n    var fraction = ('' + number).split(DECIMAL_SEP);\\n    var whole = fraction[0];\\n    fraction = fraction[1] || '';\\n\\n    var i, pos = 0,\\n        lgroup = pattern.lgSize,\\n        group = pattern.gSize;\\n\\n    if (whole.length >= (lgroup + group)) {\\n      pos = whole.length - lgroup;\\n      for (i = 0; i < pos; i++) {\\n        if ((pos - i) % group === 0 && i !== 0) {\\n          formatedText += groupSep;\\n        }\\n        formatedText += whole.charAt(i);\\n      }\\n    }\\n\\n    for (i = pos; i < whole.length; i++) {\\n      if ((whole.length - i) % lgroup === 0 && i !== 0) {\\n        formatedText += groupSep;\\n      }\\n      formatedText += whole.charAt(i);\\n    }\\n\\n    // format fraction part.\\n    while (fraction.length < fractionSize) {\\n      fraction += '0';\\n    }\\n\\n    if (fractionSize && fractionSize !== \\\"0\\\") formatedText += decimalSep + fraction.substr(0, fractionSize);\\n  } else {\\n    if (fractionSize > 0 && number < 1) {\\n      formatedText = number.toFixed(fractionSize);\\n      number = parseFloat(formatedText);\\n    }\\n  }\\n\\n  if (number === 0) {\\n    isNegative = false;\\n  }\\n\\n  parts.push(isNegative ? pattern.negPre : pattern.posPre,\\n             formatedText,\\n             isNegative ? pattern.negSuf : pattern.posSuf);\\n  return parts.join('');\\n}\\n\\nfunction padNumber(num, digits, trim) {\\n  var neg = '';\\n  if (num < 0) {\\n    neg =  '-';\\n    num = -num;\\n  }\\n  num = '' + num;\\n  while (num.length < digits) num = '0' + num;\\n  if (trim)\\n    num = num.substr(num.length - digits);\\n  return neg + num;\\n}\\n\\n\\nfunction dateGetter(name, size, offset, trim) {\\n  offset = offset || 0;\\n  return function(date) {\\n    var value = date['get' + name]();\\n    if (offset > 0 || value > -offset)\\n      value += offset;\\n    if (value === 0 && offset == -12) value = 12;\\n    return padNumber(value, size, trim);\\n  };\\n}\\n\\nfunction dateStrGetter(name, shortForm) {\\n  return function(date, formats) {\\n    var value = date['get' + name]();\\n    var get = uppercase(shortForm ? ('SHORT' + name) : name);\\n\\n    return formats[get][value];\\n  };\\n}\\n\\nfunction timeZoneGetter(date) {\\n  var zone = -1 * date.getTimezoneOffset();\\n  var paddedZone = (zone >= 0) ? \\\"+\\\" : \\\"\\\";\\n\\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\\n                padNumber(Math.abs(zone % 60), 2);\\n\\n  return paddedZone;\\n}\\n\\nfunction getFirstThursdayOfYear(year) {\\n    // 0 = index of January\\n    var dayOfWeekOnFirst = (new Date(year, 0, 1)).getDay();\\n    // 4 = index of Thursday (+1 to account for 1st = 5)\\n    // 11 = index of *next* Thursday (+1 account for 1st = 12)\\n    return new Date(year, 0, ((dayOfWeekOnFirst <= 4) ? 5 : 12) - dayOfWeekOnFirst);\\n}\\n\\nfunction getThursdayThisWeek(datetime) {\\n    return new Date(datetime.getFullYear(), datetime.getMonth(),\\n      // 4 = index of Thursday\\n      datetime.getDate() + (4 - datetime.getDay()));\\n}\\n\\nfunction weekGetter(size) {\\n   return function(date) {\\n      var firstThurs = getFirstThursdayOfYear(date.getFullYear()),\\n         thisThurs = getThursdayThisWeek(date);\\n\\n      var diff = +thisThurs - +firstThurs,\\n         result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\\n\\n      return padNumber(result, size);\\n   };\\n}\\n\\nfunction ampmGetter(date, formats) {\\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\\n}\\n\\nvar DATE_FORMATS = {\\n  yyyy: dateGetter('FullYear', 4),\\n    yy: dateGetter('FullYear', 2, 0, true),\\n     y: dateGetter('FullYear', 1),\\n  MMMM: dateStrGetter('Month'),\\n   MMM: dateStrGetter('Month', true),\\n    MM: dateGetter('Month', 2, 1),\\n     M: dateGetter('Month', 1, 1),\\n    dd: dateGetter('Date', 2),\\n     d: dateGetter('Date', 1),\\n    HH: dateGetter('Hours', 2),\\n     H: dateGetter('Hours', 1),\\n    hh: dateGetter('Hours', 2, -12),\\n     h: dateGetter('Hours', 1, -12),\\n    mm: dateGetter('Minutes', 2),\\n     m: dateGetter('Minutes', 1),\\n    ss: dateGetter('Seconds', 2),\\n     s: dateGetter('Seconds', 1),\\n     // while ISO 8601 requires fractions to be prefixed with `.` or `,`\\n     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\\n   sss: dateGetter('Milliseconds', 3),\\n  EEEE: dateStrGetter('Day'),\\n   EEE: dateStrGetter('Day', true),\\n     a: ampmGetter,\\n     Z: timeZoneGetter,\\n    ww: weekGetter(2),\\n     w: weekGetter(1)\\n};\\n\\nvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZEw']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|w+))(.*)/,\\n    NUMBER_STRING = /^\\\\-?\\\\d+$/;\\n\\n/**\\n * @ngdoc filter\\n * @name date\\n * @kind function\\n *\\n * @description\\n *   Formats `date` to a string based on the requested `format`.\\n *\\n *   `format` string can be composed of the following elements:\\n *\\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\\n *   * `'MMMM'`: Month in year (January-December)\\n *   * `'MMM'`: Month in year (Jan-Dec)\\n *   * `'MM'`: Month in year, padded (01-12)\\n *   * `'M'`: Month in year (1-12)\\n *   * `'dd'`: Day in month, padded (01-31)\\n *   * `'d'`: Day in month (1-31)\\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\\n *   * `'EEE'`: Day in Week, (Sun-Sat)\\n *   * `'HH'`: Hour in day, padded (00-23)\\n *   * `'H'`: Hour in day (0-23)\\n *   * `'hh'`: Hour in AM/PM, padded (01-12)\\n *   * `'h'`: Hour in AM/PM, (1-12)\\n *   * `'mm'`: Minute in hour, padded (00-59)\\n *   * `'m'`: Minute in hour (0-59)\\n *   * `'ss'`: Second in minute, padded (00-59)\\n *   * `'s'`: Second in minute (0-59)\\n *   * `'sss'`: Millisecond in second, padded (000-999)\\n *   * `'a'`: AM/PM marker\\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\\n *   * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\\n *   * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\\n *\\n *   `format` string can also be one of the following predefined\\n *   {@link guide/i18n localizable formats}:\\n *\\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\\n *     (e.g. Sep 3, 2010 12:05:08 PM)\\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\\n *     (e.g. Friday, September 3, 2010)\\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\\n *\\n *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\\n *   `\\\"h 'in the morning'\\\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\\n *   (e.g. `\\\"h 'o''clock'\\\"`).\\n *\\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\\n *    specified in the string input, the time is considered to be in the local timezone.\\n * @param {string=} format Formatting rules (see Description). If not specified,\\n *    `mediumDate` is used.\\n * @param {string=} timezone Timezone to be used for formatting. Right now, only `'UTC'` is supported.\\n *    If not specified, the timezone of the browser will be used.\\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\\n           <span>{{1288323623006 | date:'medium'}}</span><br>\\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\\n          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\\n          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\\n       <span ng-non-bindable>{{1288323623006 | date:\\\"MM/dd/yyyy 'at' h:mma\\\"}}</span>:\\n          <span>{{'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"}}</span><br>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should format date', function() {\\n         expect(element(by.binding(\\\"1288323623006 | date:'medium'\\\")).getText()).\\n            toMatch(/Oct 2\\\\d, 2010 \\\\d{1,2}:\\\\d{2}:\\\\d{2} (AM|PM)/);\\n         expect(element(by.binding(\\\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\\\")).getText()).\\n            toMatch(/2010\\\\-10\\\\-2\\\\d \\\\d{2}:\\\\d{2}:\\\\d{2} (\\\\-|\\\\+)?\\\\d{4}/);\\n         expect(element(by.binding(\\\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\\\")).getText()).\\n            toMatch(/10\\\\/2\\\\d\\\\/2010 @ \\\\d{1,2}:\\\\d{2}(AM|PM)/);\\n         expect(element(by.binding(\\\"'1288323623006' | date:\\\\\\\"MM/dd/yyyy 'at' h:mma\\\\\\\"\\\")).getText()).\\n            toMatch(/10\\\\/2\\\\d\\\\/2010 at \\\\d{1,2}:\\\\d{2}(AM|PM)/);\\n       });\\n     </file>\\n   </example>\\n */\\ndateFilter.$inject = ['$locale'];\\nfunction dateFilter($locale) {\\n\\n\\n  var R_ISO8601_STR = /^(\\\\d{4})-?(\\\\d\\\\d)-?(\\\\d\\\\d)(?:T(\\\\d\\\\d)(?::?(\\\\d\\\\d)(?::?(\\\\d\\\\d)(?:\\\\.(\\\\d+))?)?)?(Z|([+-])(\\\\d\\\\d):?(\\\\d\\\\d))?)?$/;\\n                     // 1        2       3         4          5          6          7          8  9     10      11\\n  function jsonStringToDate(string) {\\n    var match;\\n    if (match = string.match(R_ISO8601_STR)) {\\n      var date = new Date(0),\\n          tzHour = 0,\\n          tzMin  = 0,\\n          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\\n          timeSetter = match[8] ? date.setUTCHours : date.setHours;\\n\\n      if (match[9]) {\\n        tzHour = int(match[9] + match[10]);\\n        tzMin = int(match[9] + match[11]);\\n      }\\n      dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));\\n      var h = int(match[4] || 0) - tzHour;\\n      var m = int(match[5] || 0) - tzMin;\\n      var s = int(match[6] || 0);\\n      var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\\n      timeSetter.call(date, h, m, s, ms);\\n      return date;\\n    }\\n    return string;\\n  }\\n\\n\\n  return function(date, format, timezone) {\\n    var text = '',\\n        parts = [],\\n        fn, match;\\n\\n    format = format || 'mediumDate';\\n    format = $locale.DATETIME_FORMATS[format] || format;\\n    if (isString(date)) {\\n      date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date);\\n    }\\n\\n    if (isNumber(date)) {\\n      date = new Date(date);\\n    }\\n\\n    if (!isDate(date)) {\\n      return date;\\n    }\\n\\n    while (format) {\\n      match = DATE_FORMATS_SPLIT.exec(format);\\n      if (match) {\\n        parts = concat(parts, match, 1);\\n        format = parts.pop();\\n      } else {\\n        parts.push(format);\\n        format = null;\\n      }\\n    }\\n\\n    if (timezone && timezone === 'UTC') {\\n      date = new Date(date.getTime());\\n      date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\\n    }\\n    forEach(parts, function(value) {\\n      fn = DATE_FORMATS[value];\\n      text += fn ? fn(date, $locale.DATETIME_FORMATS)\\n                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \\\"'\\\");\\n    });\\n\\n    return text;\\n  };\\n}\\n\\n\\n/**\\n * @ngdoc filter\\n * @name json\\n * @kind function\\n *\\n * @description\\n *   Allows you to convert a JavaScript object into JSON string.\\n *\\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\\n *   the binding is automatically converted to JSON.\\n *\\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\\n * @param {number=} spacing The number of spaces to use per indentation, defaults to 2.\\n * @returns {string} JSON string.\\n *\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n       <pre id=\\\"default-spacing\\\">{{ {'name':'value'} | json }}</pre>\\n       <pre id=\\\"custom-spacing\\\">{{ {'name':'value'} | json:4 }}</pre>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should jsonify filtered objects', function() {\\n         expect(element(by.id('default-spacing')).getText()).toMatch(/\\\\{\\\\n  \\\"name\\\": ?\\\"value\\\"\\\\n}/);\\n         expect(element(by.id('custom-spacing')).getText()).toMatch(/\\\\{\\\\n    \\\"name\\\": ?\\\"value\\\"\\\\n}/);\\n       });\\n     </file>\\n   </example>\\n *\\n */\\nfunction jsonFilter() {\\n  return function(object, spacing) {\\n    if (isUndefined(spacing)) {\\n        spacing = 2;\\n    }\\n    return toJson(object, spacing);\\n  };\\n}\\n\\n\\n/**\\n * @ngdoc filter\\n * @name lowercase\\n * @kind function\\n * @description\\n * Converts string to lowercase.\\n * @see angular.lowercase\\n */\\nvar lowercaseFilter = valueFn(lowercase);\\n\\n\\n/**\\n * @ngdoc filter\\n * @name uppercase\\n * @kind function\\n * @description\\n * Converts string to uppercase.\\n * @see angular.uppercase\\n */\\nvar uppercaseFilter = valueFn(uppercase);\\n\\n/**\\n * @ngdoc filter\\n * @name limitTo\\n * @kind function\\n *\\n * @description\\n * Creates a new array or string containing only a specified number of elements. The elements\\n * are taken from either the beginning or the end of the source array, string or number, as specified by\\n * the value and sign (positive or negative) of `limit`. If a number is used as input, it is\\n * converted to a string.\\n *\\n * @param {Array|string|number} input Source array, string or number to be limited.\\n * @param {string|number} limit The length of the returned array or string. If the `limit` number\\n *     is positive, `limit` number of items from the beginning of the source array/string are copied.\\n *     If the number is negative, `limit` number  of items from the end of the source array/string\\n *     are copied. The `limit` will be trimmed if it exceeds `array.length`\\n * @returns {Array|string} A new sub-array or substring of length `limit` or less if input array\\n *     had less than `limit` elements.\\n *\\n * @example\\n   <example module=\\\"limitToExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('limitToExample', [])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.numbers = [1,2,3,4,5,6,7,8,9];\\n             $scope.letters = \\\"abcdefghi\\\";\\n             $scope.longNumber = 2345432342;\\n             $scope.numLimit = 3;\\n             $scope.letterLimit = 3;\\n             $scope.longNumberLimit = 3;\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         Limit {{numbers}} to: <input type=\\\"number\\\" step=\\\"1\\\" ng-model=\\\"numLimit\\\">\\n         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\\n         Limit {{letters}} to: <input type=\\\"number\\\" step=\\\"1\\\" ng-model=\\\"letterLimit\\\">\\n         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\\n         Limit {{longNumber}} to: <input type=\\\"number\\\" step=\\\"1\\\" ng-model=\\\"longNumberLimit\\\">\\n         <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       var numLimitInput = element(by.model('numLimit'));\\n       var letterLimitInput = element(by.model('letterLimit'));\\n       var longNumberLimitInput = element(by.model('longNumberLimit'));\\n       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\\n       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\\n       var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));\\n\\n       it('should limit the number array to first three items', function() {\\n         expect(numLimitInput.getAttribute('value')).toBe('3');\\n         expect(letterLimitInput.getAttribute('value')).toBe('3');\\n         expect(longNumberLimitInput.getAttribute('value')).toBe('3');\\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\\n         expect(limitedLetters.getText()).toEqual('Output letters: abc');\\n         expect(limitedLongNumber.getText()).toEqual('Output long number: 234');\\n       });\\n\\n       // There is a bug in safari and protractor that doesn't like the minus key\\n       // it('should update the output when -3 is entered', function() {\\n       //   numLimitInput.clear();\\n       //   numLimitInput.sendKeys('-3');\\n       //   letterLimitInput.clear();\\n       //   letterLimitInput.sendKeys('-3');\\n       //   longNumberLimitInput.clear();\\n       //   longNumberLimitInput.sendKeys('-3');\\n       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\\n       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\\n       //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');\\n       // });\\n\\n       it('should not exceed the maximum size of input array', function() {\\n         numLimitInput.clear();\\n         numLimitInput.sendKeys('100');\\n         letterLimitInput.clear();\\n         letterLimitInput.sendKeys('100');\\n         longNumberLimitInput.clear();\\n         longNumberLimitInput.sendKeys('100');\\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\\n         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\\n         expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');\\n       });\\n     </file>\\n   </example>\\n*/\\nfunction limitToFilter() {\\n  return function(input, limit) {\\n    if (isNumber(input)) input = input.toString();\\n    if (!isArray(input) && !isString(input)) return input;\\n\\n    if (Math.abs(Number(limit)) === Infinity) {\\n      limit = Number(limit);\\n    } else {\\n      limit = int(limit);\\n    }\\n\\n    //NaN check on limit\\n    if (limit) {\\n      return limit > 0 ? input.slice(0, limit) : input.slice(limit);\\n    } else {\\n      return isString(input) ? \\\"\\\" : [];\\n    }\\n  };\\n}\\n\\n/**\\n * @ngdoc filter\\n * @name orderBy\\n * @kind function\\n *\\n * @description\\n * Orders a specified `array` by the `expression` predicate. It is ordered alphabetically\\n * for strings and numerically for numbers. Note: if you notice numbers are not being sorted\\n * correctly, make sure they are actually being saved as numbers and not strings.\\n *\\n * @param {Array} array The array to sort.\\n * @param {function(*)|string|Array.<(function(*)|string)>=} expression A predicate to be\\n *    used by the comparator to determine the order of elements.\\n *\\n *    Can be one of:\\n *\\n *    - `function`: Getter function. The result of this function will be sorted using the\\n *      `<`, `=`, `>` operator.\\n *    - `string`: An Angular expression. The result of this expression is used to compare elements\\n *      (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by\\n *      3 first characters of a property called `name`). The result of a constant expression\\n *      is interpreted as a property name to be used in comparisons (for example `\\\"special name\\\"`\\n *      to sort object by the value of their `special name` property). An expression can be\\n *      optionally prefixed with `+` or `-` to control ascending or descending sort order\\n *      (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array\\n *      element itself is used to compare where sorting.\\n *    - `Array`: An array of function or string predicates. The first predicate in the array\\n *      is used for sorting, but when two items are equivalent, the next predicate is used.\\n *\\n *    If the predicate is missing or empty then it defaults to `'+'`.\\n *\\n * @param {boolean=} reverse Reverse the order of the array.\\n * @returns {Array} Sorted copy of the source array.\\n *\\n * @example\\n   <example module=\\\"orderByExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('orderByExample', [])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.friends =\\n                 [{name:'John', phone:'555-1212', age:10},\\n                  {name:'Mary', phone:'555-9876', age:19},\\n                  {name:'Mike', phone:'555-4321', age:21},\\n                  {name:'Adam', phone:'555-5678', age:35},\\n                  {name:'Julie', phone:'555-8765', age:29}];\\n             $scope.predicate = '-age';\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\\n         <hr/>\\n         [ <a href=\\\"\\\" ng-click=\\\"predicate=''\\\">unsorted</a> ]\\n         <table class=\\\"friend\\\">\\n           <tr>\\n             <th><a href=\\\"\\\" ng-click=\\\"predicate = 'name'; reverse=false\\\">Name</a>\\n                 (<a href=\\\"\\\" ng-click=\\\"predicate = '-name'; reverse=false\\\">^</a>)</th>\\n             <th><a href=\\\"\\\" ng-click=\\\"predicate = 'phone'; reverse=!reverse\\\">Phone Number</a></th>\\n             <th><a href=\\\"\\\" ng-click=\\\"predicate = 'age'; reverse=!reverse\\\">Age</a></th>\\n           </tr>\\n           <tr ng-repeat=\\\"friend in friends | orderBy:predicate:reverse\\\">\\n             <td>{{friend.name}}</td>\\n             <td>{{friend.phone}}</td>\\n             <td>{{friend.age}}</td>\\n           </tr>\\n         </table>\\n       </div>\\n     </file>\\n   </example>\\n *\\n * It's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the\\n * filter routine with `$filter('orderBy')`, and calling the returned filter routine with the\\n * desired parameters.\\n *\\n * Example:\\n *\\n * @example\\n  <example module=\\\"orderByExample\\\">\\n    <file name=\\\"index.html\\\">\\n      <div ng-controller=\\\"ExampleController\\\">\\n        <table class=\\\"friend\\\">\\n          <tr>\\n            <th><a href=\\\"\\\" ng-click=\\\"reverse=false;order('name', false)\\\">Name</a>\\n              (<a href=\\\"\\\" ng-click=\\\"order('-name',false)\\\">^</a>)</th>\\n            <th><a href=\\\"\\\" ng-click=\\\"reverse=!reverse;order('phone', reverse)\\\">Phone Number</a></th>\\n            <th><a href=\\\"\\\" ng-click=\\\"reverse=!reverse;order('age',reverse)\\\">Age</a></th>\\n          </tr>\\n          <tr ng-repeat=\\\"friend in friends\\\">\\n            <td>{{friend.name}}</td>\\n            <td>{{friend.phone}}</td>\\n            <td>{{friend.age}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </file>\\n\\n    <file name=\\\"script.js\\\">\\n      angular.module('orderByExample', [])\\n        .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {\\n          var orderBy = $filter('orderBy');\\n          $scope.friends = [\\n            { name: 'John',    phone: '555-1212',    age: 10 },\\n            { name: 'Mary',    phone: '555-9876',    age: 19 },\\n            { name: 'Mike',    phone: '555-4321',    age: 21 },\\n            { name: 'Adam',    phone: '555-5678',    age: 35 },\\n            { name: 'Julie',   phone: '555-8765',    age: 29 }\\n          ];\\n          $scope.order = function(predicate, reverse) {\\n            $scope.friends = orderBy($scope.friends, predicate, reverse);\\n          };\\n          $scope.order('-age',false);\\n        }]);\\n    </file>\\n</example>\\n */\\norderByFilter.$inject = ['$parse'];\\nfunction orderByFilter($parse) {\\n  return function(array, sortPredicate, reverseOrder) {\\n    if (!(isArrayLike(array))) return array;\\n    sortPredicate = isArray(sortPredicate) ? sortPredicate : [sortPredicate];\\n    if (sortPredicate.length === 0) { sortPredicate = ['+']; }\\n    sortPredicate = sortPredicate.map(function(predicate) {\\n      var descending = false, get = predicate || identity;\\n      if (isString(predicate)) {\\n        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\\n          descending = predicate.charAt(0) == '-';\\n          predicate = predicate.substring(1);\\n        }\\n        if (predicate === '') {\\n          // Effectively no predicate was passed so we compare identity\\n          return reverseComparator(compare, descending);\\n        }\\n        get = $parse(predicate);\\n        if (get.constant) {\\n          var key = get();\\n          return reverseComparator(function(a, b) {\\n            return compare(a[key], b[key]);\\n          }, descending);\\n        }\\n      }\\n      return reverseComparator(function(a, b) {\\n        return compare(get(a),get(b));\\n      }, descending);\\n    });\\n    return slice.call(array).sort(reverseComparator(comparator, reverseOrder));\\n\\n    function comparator(o1, o2) {\\n      for (var i = 0; i < sortPredicate.length; i++) {\\n        var comp = sortPredicate[i](o1, o2);\\n        if (comp !== 0) return comp;\\n      }\\n      return 0;\\n    }\\n    function reverseComparator(comp, descending) {\\n      return descending\\n          ? function(a, b) {return comp(b,a);}\\n          : comp;\\n    }\\n\\n    function isPrimitive(value) {\\n      switch (typeof value) {\\n        case 'number': /* falls through */\\n        case 'boolean': /* falls through */\\n        case 'string':\\n          return true;\\n        default:\\n          return false;\\n      }\\n    }\\n\\n    function objectToString(value) {\\n      if (value === null) return 'null';\\n      if (typeof value.valueOf === 'function') {\\n        value = value.valueOf();\\n        if (isPrimitive(value)) return value;\\n      }\\n      if (typeof value.toString === 'function') {\\n        value = value.toString();\\n        if (isPrimitive(value)) return value;\\n      }\\n      return '';\\n    }\\n\\n    function compare(v1, v2) {\\n      var t1 = typeof v1;\\n      var t2 = typeof v2;\\n      if (t1 === t2 && t1 === \\\"object\\\") {\\n        v1 = objectToString(v1);\\n        v2 = objectToString(v2);\\n      }\\n      if (t1 === t2) {\\n        if (t1 === \\\"string\\\") {\\n           v1 = v1.toLowerCase();\\n           v2 = v2.toLowerCase();\\n        }\\n        if (v1 === v2) return 0;\\n        return v1 < v2 ? -1 : 1;\\n      } else {\\n        return t1 < t2 ? -1 : 1;\\n      }\\n    }\\n  };\\n}\\n\\nfunction ngDirective(directive) {\\n  if (isFunction(directive)) {\\n    directive = {\\n      link: directive\\n    };\\n  }\\n  directive.restrict = directive.restrict || 'AC';\\n  return valueFn(directive);\\n}\\n\\n/**\\n * @ngdoc directive\\n * @name a\\n * @restrict E\\n *\\n * @description\\n * Modifies the default behavior of the html A tag so that the default action is prevented when\\n * the href attribute is empty.\\n *\\n * This change permits the easy creation of action links with the `ngClick` directive\\n * without changing the location or causing page reloads, e.g.:\\n * `<a href=\\\"\\\" ng-click=\\\"list.addItem()\\\">Add Item</a>`\\n */\\nvar htmlAnchorDirective = valueFn({\\n  restrict: 'E',\\n  compile: function(element, attr) {\\n    if (!attr.href && !attr.xlinkHref && !attr.name) {\\n      return function(scope, element) {\\n        // If the linked element is not an anchor tag anymore, do nothing\\n        if (element[0].nodeName.toLowerCase() !== 'a') return;\\n\\n        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\\n        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?\\n                   'xlink:href' : 'href';\\n        element.on('click', function(event) {\\n          // if we have no href url, then don't navigate anywhere.\\n          if (!element.attr(href)) {\\n            event.preventDefault();\\n          }\\n        });\\n      };\\n    }\\n  }\\n});\\n\\n/**\\n * @ngdoc directive\\n * @name ngHref\\n * @restrict A\\n * @priority 99\\n *\\n * @description\\n * Using Angular markup like `{{hash}}` in an href attribute will\\n * make the link go to the wrong URL if the user clicks it before\\n * Angular has a chance to replace the `{{hash}}` markup with its\\n * value. Until Angular replaces the markup the link will be broken\\n * and will most likely return a 404 error. The `ngHref` directive\\n * solves this problem.\\n *\\n * The wrong way to write it:\\n * ```html\\n * <a href=\\\"http://www.gravatar.com/avatar/{{hash}}\\\">link1</a>\\n * ```\\n *\\n * The correct way to write it:\\n * ```html\\n * <a ng-href=\\\"http://www.gravatar.com/avatar/{{hash}}\\\">link1</a>\\n * ```\\n *\\n * @element A\\n * @param {template} ngHref any string which can contain `{{}}` markup.\\n *\\n * @example\\n * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes\\n * in links and their different behaviors:\\n    <example>\\n      <file name=\\\"index.html\\\">\\n        <input ng-model=\\\"value\\\" /><br />\\n        <a id=\\\"link-1\\\" href ng-click=\\\"value = 1\\\">link 1</a> (link, don't reload)<br />\\n        <a id=\\\"link-2\\\" href=\\\"\\\" ng-click=\\\"value = 2\\\">link 2</a> (link, don't reload)<br />\\n        <a id=\\\"link-3\\\" ng-href=\\\"/{{'123'}}\\\">link 3</a> (link, reload!)<br />\\n        <a id=\\\"link-4\\\" href=\\\"\\\" name=\\\"xx\\\" ng-click=\\\"value = 4\\\">anchor</a> (link, don't reload)<br />\\n        <a id=\\\"link-5\\\" name=\\\"xxx\\\" ng-click=\\\"value = 5\\\">anchor</a> (no link)<br />\\n        <a id=\\\"link-6\\\" ng-href=\\\"{{value}}\\\">link</a> (link, change location)\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should execute ng-click but not reload when href without value', function() {\\n          element(by.id('link-1')).click();\\n          expect(element(by.model('value')).getAttribute('value')).toEqual('1');\\n          expect(element(by.id('link-1')).getAttribute('href')).toBe('');\\n        });\\n\\n        it('should execute ng-click but not reload when href empty string', function() {\\n          element(by.id('link-2')).click();\\n          expect(element(by.model('value')).getAttribute('value')).toEqual('2');\\n          expect(element(by.id('link-2')).getAttribute('href')).toBe('');\\n        });\\n\\n        it('should execute ng-click and change url when ng-href specified', function() {\\n          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\\\/123$/);\\n\\n          element(by.id('link-3')).click();\\n\\n          // At this point, we navigate away from an Angular page, so we need\\n          // to use browser.driver to get the base webdriver.\\n\\n          browser.wait(function() {\\n            return browser.driver.getCurrentUrl().then(function(url) {\\n              return url.match(/\\\\/123$/);\\n            });\\n          }, 5000, 'page should navigate to /123');\\n        });\\n\\n        xit('should execute ng-click but not reload when href empty string and name specified', function() {\\n          element(by.id('link-4')).click();\\n          expect(element(by.model('value')).getAttribute('value')).toEqual('4');\\n          expect(element(by.id('link-4')).getAttribute('href')).toBe('');\\n        });\\n\\n        it('should execute ng-click but not reload when no href but name specified', function() {\\n          element(by.id('link-5')).click();\\n          expect(element(by.model('value')).getAttribute('value')).toEqual('5');\\n          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\\n        });\\n\\n        it('should only change url when only ng-href', function() {\\n          element(by.model('value')).clear();\\n          element(by.model('value')).sendKeys('6');\\n          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\\\/6$/);\\n\\n          element(by.id('link-6')).click();\\n\\n          // At this point, we navigate away from an Angular page, so we need\\n          // to use browser.driver to get the base webdriver.\\n          browser.wait(function() {\\n            return browser.driver.getCurrentUrl().then(function(url) {\\n              return url.match(/\\\\/6$/);\\n            });\\n          }, 5000, 'page should navigate to /6');\\n        });\\n      </file>\\n    </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngSrc\\n * @restrict A\\n * @priority 99\\n *\\n * @description\\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\\n * work right: The browser will fetch from the URL with the literal\\n * text `{{hash}}` until Angular replaces the expression inside\\n * `{{hash}}`. The `ngSrc` directive solves this problem.\\n *\\n * The buggy way to write it:\\n * ```html\\n * <img src=\\\"http://www.gravatar.com/avatar/{{hash}}\\\"/>\\n * ```\\n *\\n * The correct way to write it:\\n * ```html\\n * <img ng-src=\\\"http://www.gravatar.com/avatar/{{hash}}\\\"/>\\n * ```\\n *\\n * @element IMG\\n * @param {template} ngSrc any string which can contain `{{}}` markup.\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngSrcset\\n * @restrict A\\n * @priority 99\\n *\\n * @description\\n * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\\n * work right: The browser will fetch from the URL with the literal\\n * text `{{hash}}` until Angular replaces the expression inside\\n * `{{hash}}`. The `ngSrcset` directive solves this problem.\\n *\\n * The buggy way to write it:\\n * ```html\\n * <img srcset=\\\"http://www.gravatar.com/avatar/{{hash}} 2x\\\"/>\\n * ```\\n *\\n * The correct way to write it:\\n * ```html\\n * <img ng-srcset=\\\"http://www.gravatar.com/avatar/{{hash}} 2x\\\"/>\\n * ```\\n *\\n * @element IMG\\n * @param {template} ngSrcset any string which can contain `{{}}` markup.\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngDisabled\\n * @restrict A\\n * @priority 100\\n *\\n * @description\\n *\\n * We shouldn't do this, because it will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:\\n * ```html\\n * <div ng-init=\\\"scope = { isDisabled: false }\\\">\\n *  <button disabled=\\\"{{scope.isDisabled}}\\\">Disabled</button>\\n * </div>\\n * ```\\n *\\n * The HTML specification does not require browsers to preserve the values of boolean attributes\\n * such as disabled. (Their presence means true and their absence means false.)\\n * If we put an Angular interpolation expression into such an attribute then the\\n * binding information would be lost when the browser removes the attribute.\\n * The `ngDisabled` directive solves this problem for the `disabled` attribute.\\n * This complementary directive is not removed by the browser and so provides\\n * a permanent reliable place to store the binding information.\\n *\\n * @example\\n    <example>\\n      <file name=\\\"index.html\\\">\\n        Click me to toggle: <input type=\\\"checkbox\\\" ng-model=\\\"checked\\\"><br/>\\n        <button ng-model=\\\"button\\\" ng-disabled=\\\"checked\\\">Button</button>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should toggle button', function() {\\n          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\\n          element(by.model('checked')).click();\\n          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\\n        });\\n      </file>\\n    </example>\\n *\\n * @element INPUT\\n * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,\\n *     then special attribute \\\"disabled\\\" will be set on the element\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngChecked\\n * @restrict A\\n * @priority 100\\n *\\n * @description\\n * The HTML specification does not require browsers to preserve the values of boolean attributes\\n * such as checked. (Their presence means true and their absence means false.)\\n * If we put an Angular interpolation expression into such an attribute then the\\n * binding information would be lost when the browser removes the attribute.\\n * The `ngChecked` directive solves this problem for the `checked` attribute.\\n * This complementary directive is not removed by the browser and so provides\\n * a permanent reliable place to store the binding information.\\n * @example\\n    <example>\\n      <file name=\\\"index.html\\\">\\n        Check me to check both: <input type=\\\"checkbox\\\" ng-model=\\\"master\\\"><br/>\\n        <input id=\\\"checkSlave\\\" type=\\\"checkbox\\\" ng-checked=\\\"master\\\">\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should check both checkBoxes', function() {\\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();\\n          element(by.model('master')).click();\\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();\\n        });\\n      </file>\\n    </example>\\n *\\n * @element INPUT\\n * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,\\n *     then special attribute \\\"checked\\\" will be set on the element\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngReadonly\\n * @restrict A\\n * @priority 100\\n *\\n * @description\\n * The HTML specification does not require browsers to preserve the values of boolean attributes\\n * such as readonly. (Their presence means true and their absence means false.)\\n * If we put an Angular interpolation expression into such an attribute then the\\n * binding information would be lost when the browser removes the attribute.\\n * The `ngReadonly` directive solves this problem for the `readonly` attribute.\\n * This complementary directive is not removed by the browser and so provides\\n * a permanent reliable place to store the binding information.\\n * @example\\n    <example>\\n      <file name=\\\"index.html\\\">\\n        Check me to make text readonly: <input type=\\\"checkbox\\\" ng-model=\\\"checked\\\"><br/>\\n        <input type=\\\"text\\\" ng-readonly=\\\"checked\\\" value=\\\"I'm Angular\\\"/>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should toggle readonly attr', function() {\\n          expect(element(by.css('[type=\\\"text\\\"]')).getAttribute('readonly')).toBeFalsy();\\n          element(by.model('checked')).click();\\n          expect(element(by.css('[type=\\\"text\\\"]')).getAttribute('readonly')).toBeTruthy();\\n        });\\n      </file>\\n    </example>\\n *\\n * @element INPUT\\n * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,\\n *     then special attribute \\\"readonly\\\" will be set on the element\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngSelected\\n * @restrict A\\n * @priority 100\\n *\\n * @description\\n * The HTML specification does not require browsers to preserve the values of boolean attributes\\n * such as selected. (Their presence means true and their absence means false.)\\n * If we put an Angular interpolation expression into such an attribute then the\\n * binding information would be lost when the browser removes the attribute.\\n * The `ngSelected` directive solves this problem for the `selected` attribute.\\n * This complementary directive is not removed by the browser and so provides\\n * a permanent reliable place to store the binding information.\\n *\\n * @example\\n    <example>\\n      <file name=\\\"index.html\\\">\\n        Check me to select: <input type=\\\"checkbox\\\" ng-model=\\\"selected\\\"><br/>\\n        <select>\\n          <option>Hello!</option>\\n          <option id=\\\"greet\\\" ng-selected=\\\"selected\\\">Greetings!</option>\\n        </select>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should select Greetings!', function() {\\n          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\\n          element(by.model('selected')).click();\\n          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\\n        });\\n      </file>\\n    </example>\\n *\\n * @element OPTION\\n * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,\\n *     then special attribute \\\"selected\\\" will be set on the element\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngOpen\\n * @restrict A\\n * @priority 100\\n *\\n * @description\\n * The HTML specification does not require browsers to preserve the values of boolean attributes\\n * such as open. (Their presence means true and their absence means false.)\\n * If we put an Angular interpolation expression into such an attribute then the\\n * binding information would be lost when the browser removes the attribute.\\n * The `ngOpen` directive solves this problem for the `open` attribute.\\n * This complementary directive is not removed by the browser and so provides\\n * a permanent reliable place to store the binding information.\\n * @example\\n     <example>\\n       <file name=\\\"index.html\\\">\\n         Check me check multiple: <input type=\\\"checkbox\\\" ng-model=\\\"open\\\"><br/>\\n         <details id=\\\"details\\\" ng-open=\\\"open\\\">\\n            <summary>Show/Hide me</summary>\\n         </details>\\n       </file>\\n       <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n         it('should toggle open', function() {\\n           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\\n           element(by.model('open')).click();\\n           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\\n         });\\n       </file>\\n     </example>\\n *\\n * @element DETAILS\\n * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,\\n *     then special attribute \\\"open\\\" will be set on the element\\n */\\n\\nvar ngAttributeAliasDirectives = {};\\n\\n\\n// boolean attrs are evaluated\\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\\n  // binding to multiple is not supported\\n  if (propName == \\\"multiple\\\") return;\\n\\n  var normalized = directiveNormalize('ng-' + attrName);\\n  ngAttributeAliasDirectives[normalized] = function() {\\n    return {\\n      restrict: 'A',\\n      priority: 100,\\n      link: function(scope, element, attr) {\\n        scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\\n          attr.$set(attrName, !!value);\\n        });\\n      }\\n    };\\n  };\\n});\\n\\n// aliased input attrs are evaluated\\nforEach(ALIASED_ATTR, function(htmlAttr, ngAttr) {\\n  ngAttributeAliasDirectives[ngAttr] = function() {\\n    return {\\n      priority: 100,\\n      link: function(scope, element, attr) {\\n        //special case ngPattern when a literal regular expression value\\n        //is used as the expression (this way we don't have to watch anything).\\n        if (ngAttr === \\\"ngPattern\\\" && attr.ngPattern.charAt(0) == \\\"/\\\") {\\n          var match = attr.ngPattern.match(REGEX_STRING_REGEXP);\\n          if (match) {\\n            attr.$set(\\\"ngPattern\\\", new RegExp(match[1], match[2]));\\n            return;\\n          }\\n        }\\n\\n        scope.$watch(attr[ngAttr], function ngAttrAliasWatchAction(value) {\\n          attr.$set(ngAttr, value);\\n        });\\n      }\\n    };\\n  };\\n});\\n\\n// ng-src, ng-srcset, ng-href are interpolated\\nforEach(['src', 'srcset', 'href'], function(attrName) {\\n  var normalized = directiveNormalize('ng-' + attrName);\\n  ngAttributeAliasDirectives[normalized] = function() {\\n    return {\\n      priority: 99, // it needs to run after the attributes are interpolated\\n      link: function(scope, element, attr) {\\n        var propName = attrName,\\n            name = attrName;\\n\\n        if (attrName === 'href' &&\\n            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {\\n          name = 'xlinkHref';\\n          attr.$attr[name] = 'xlink:href';\\n          propName = null;\\n        }\\n\\n        attr.$observe(normalized, function(value) {\\n          if (!value) {\\n            if (attrName === 'href') {\\n              attr.$set(name, null);\\n            }\\n            return;\\n          }\\n\\n          attr.$set(name, value);\\n\\n          // on IE, if \\\"ng:src\\\" directive declaration is used and \\\"src\\\" attribute doesn't exist\\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\\n          // to set the property as well to achieve the desired effect.\\n          // we use attr[attrName] value since $set can sanitize the url.\\n          if (msie && propName) element.prop(propName, attr[name]);\\n        });\\n      }\\n    };\\n  };\\n});\\n\\n/* global -nullFormCtrl, -SUBMITTED_CLASS, addSetValidityMethod: true\\n */\\nvar nullFormCtrl = {\\n  $addControl: noop,\\n  $$renameControl: nullFormRenameControl,\\n  $removeControl: noop,\\n  $setValidity: noop,\\n  $setDirty: noop,\\n  $setPristine: noop,\\n  $setSubmitted: noop\\n},\\nSUBMITTED_CLASS = 'ng-submitted';\\n\\nfunction nullFormRenameControl(control, name) {\\n  control.$name = name;\\n}\\n\\n/**\\n * @ngdoc type\\n * @name form.FormController\\n *\\n * @property {boolean} $pristine True if user has not interacted with the form yet.\\n * @property {boolean} $dirty True if user has already interacted with the form.\\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\\n * @property {boolean} $submitted True if user has submitted the form even if its invalid.\\n *\\n * @property {Object} $error Is an object hash, containing references to controls or\\n *  forms with failing validators, where:\\n *\\n *  - keys are validation tokens (error names),\\n *  - values are arrays of controls or forms that have a failing validator for given error name.\\n *\\n *  Built-in validation tokens:\\n *\\n *  - `email`\\n *  - `max`\\n *  - `maxlength`\\n *  - `min`\\n *  - `minlength`\\n *  - `number`\\n *  - `pattern`\\n *  - `required`\\n *  - `url`\\n *  - `date`\\n *  - `datetimelocal`\\n *  - `time`\\n *  - `week`\\n *  - `month`\\n *\\n * @description\\n * `FormController` keeps track of all its controls and nested forms as well as the state of them,\\n * such as being valid/invalid or dirty/pristine.\\n *\\n * Each {@link ng.directive:form form} directive creates an instance\\n * of `FormController`.\\n *\\n */\\n//asks for $scope to fool the BC controller module\\nFormController.$inject = ['$element', '$attrs', '$scope', '$animate', '$interpolate'];\\nfunction FormController(element, attrs, $scope, $animate, $interpolate) {\\n  var form = this,\\n      controls = [];\\n\\n  var parentForm = form.$$parentForm = element.parent().controller('form') || nullFormCtrl;\\n\\n  // init state\\n  form.$error = {};\\n  form.$$success = {};\\n  form.$pending = undefined;\\n  form.$name = $interpolate(attrs.name || attrs.ngForm || '')($scope);\\n  form.$dirty = false;\\n  form.$pristine = true;\\n  form.$valid = true;\\n  form.$invalid = false;\\n  form.$submitted = false;\\n\\n  parentForm.$addControl(form);\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$rollbackViewValue\\n   *\\n   * @description\\n   * Rollback all form controls pending updates to the `$modelValue`.\\n   *\\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\\n   * event defined in `ng-model-options`. This method is typically needed by the reset button of\\n   * a form that uses `ng-model-options` to pend updates.\\n   */\\n  form.$rollbackViewValue = function() {\\n    forEach(controls, function(control) {\\n      control.$rollbackViewValue();\\n    });\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$commitViewValue\\n   *\\n   * @description\\n   * Commit all form controls pending updates to the `$modelValue`.\\n   *\\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\\n   * event defined in `ng-model-options`. This method is rarely needed as `NgModelController`\\n   * usually handles calling this in response to input events.\\n   */\\n  form.$commitViewValue = function() {\\n    forEach(controls, function(control) {\\n      control.$commitViewValue();\\n    });\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$addControl\\n   *\\n   * @description\\n   * Register a control with the form.\\n   *\\n   * Input elements using ngModelController do this automatically when they are linked.\\n   */\\n  form.$addControl = function(control) {\\n    // Breaking change - before, inputs whose name was \\\"hasOwnProperty\\\" were quietly ignored\\n    // and not added to the scope.  Now we throw an error.\\n    assertNotHasOwnProperty(control.$name, 'input');\\n    controls.push(control);\\n\\n    if (control.$name) {\\n      form[control.$name] = control;\\n    }\\n  };\\n\\n  // Private API: rename a form control\\n  form.$$renameControl = function(control, newName) {\\n    var oldName = control.$name;\\n\\n    if (form[oldName] === control) {\\n      delete form[oldName];\\n    }\\n    form[newName] = control;\\n    control.$name = newName;\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$removeControl\\n   *\\n   * @description\\n   * Deregister a control from the form.\\n   *\\n   * Input elements using ngModelController do this automatically when they are destroyed.\\n   */\\n  form.$removeControl = function(control) {\\n    if (control.$name && form[control.$name] === control) {\\n      delete form[control.$name];\\n    }\\n    forEach(form.$pending, function(value, name) {\\n      form.$setValidity(name, null, control);\\n    });\\n    forEach(form.$error, function(value, name) {\\n      form.$setValidity(name, null, control);\\n    });\\n    forEach(form.$$success, function(value, name) {\\n      form.$setValidity(name, null, control);\\n    });\\n\\n    arrayRemove(controls, control);\\n  };\\n\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$setValidity\\n   *\\n   * @description\\n   * Sets the validity of a form control.\\n   *\\n   * This method will also propagate to parent forms.\\n   */\\n  addSetValidityMethod({\\n    ctrl: this,\\n    $element: element,\\n    set: function(object, property, controller) {\\n      var list = object[property];\\n      if (!list) {\\n        object[property] = [controller];\\n      } else {\\n        var index = list.indexOf(controller);\\n        if (index === -1) {\\n          list.push(controller);\\n        }\\n      }\\n    },\\n    unset: function(object, property, controller) {\\n      var list = object[property];\\n      if (!list) {\\n        return;\\n      }\\n      arrayRemove(list, controller);\\n      if (list.length === 0) {\\n        delete object[property];\\n      }\\n    },\\n    parentForm: parentForm,\\n    $animate: $animate\\n  });\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$setDirty\\n   *\\n   * @description\\n   * Sets the form to a dirty state.\\n   *\\n   * This method can be called to add the 'ng-dirty' class and set the form to a dirty\\n   * state (ng-dirty class). This method will also propagate to parent forms.\\n   */\\n  form.$setDirty = function() {\\n    $animate.removeClass(element, PRISTINE_CLASS);\\n    $animate.addClass(element, DIRTY_CLASS);\\n    form.$dirty = true;\\n    form.$pristine = false;\\n    parentForm.$setDirty();\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$setPristine\\n   *\\n   * @description\\n   * Sets the form to its pristine state.\\n   *\\n   * This method can be called to remove the 'ng-dirty' class and set the form to its pristine\\n   * state (ng-pristine class). This method will also propagate to all the controls contained\\n   * in this form.\\n   *\\n   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after\\n   * saving or resetting it.\\n   */\\n  form.$setPristine = function() {\\n    $animate.setClass(element, PRISTINE_CLASS, DIRTY_CLASS + ' ' + SUBMITTED_CLASS);\\n    form.$dirty = false;\\n    form.$pristine = true;\\n    form.$submitted = false;\\n    forEach(controls, function(control) {\\n      control.$setPristine();\\n    });\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$setUntouched\\n   *\\n   * @description\\n   * Sets the form to its untouched state.\\n   *\\n   * This method can be called to remove the 'ng-touched' class and set the form controls to their\\n   * untouched state (ng-untouched class).\\n   *\\n   * Setting a form controls back to their untouched state is often useful when setting the form\\n   * back to its pristine state.\\n   */\\n  form.$setUntouched = function() {\\n    forEach(controls, function(control) {\\n      control.$setUntouched();\\n    });\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name form.FormController#$setSubmitted\\n   *\\n   * @description\\n   * Sets the form to its submitted state.\\n   */\\n  form.$setSubmitted = function() {\\n    $animate.addClass(element, SUBMITTED_CLASS);\\n    form.$submitted = true;\\n    parentForm.$setSubmitted();\\n  };\\n}\\n\\n/**\\n * @ngdoc directive\\n * @name ngForm\\n * @restrict EAC\\n *\\n * @description\\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\\n * sub-group of controls needs to be determined.\\n *\\n * Note: the purpose of `ngForm` is to group controls,\\n * but not to be a replacement for the `<form>` tag with all of its capabilities\\n * (e.g. posting to the server, ...).\\n *\\n * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into\\n *                       related scope, under this name.\\n *\\n */\\n\\n /**\\n * @ngdoc directive\\n * @name form\\n * @restrict E\\n *\\n * @description\\n * Directive that instantiates\\n * {@link form.FormController FormController}.\\n *\\n * If the `name` attribute is specified, the form controller is published onto the current scope under\\n * this name.\\n *\\n * # Alias: {@link ng.directive:ngForm `ngForm`}\\n *\\n * In Angular forms can be nested. This means that the outer form is valid when all of the child\\n * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\\n * Angular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to\\n * `<form>` but can be nested.  This allows you to have nested forms, which is very useful when\\n * using Angular validation directives in forms that are dynamically generated using the\\n * {@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`\\n * attribute of input elements using interpolation, you have to wrap each set of repeated inputs in an\\n * `ngForm` directive and nest these in an outer `form` element.\\n *\\n *\\n * # CSS classes\\n *  - `ng-valid` is set if the form is valid.\\n *  - `ng-invalid` is set if the form is invalid.\\n *  - `ng-pristine` is set if the form is pristine.\\n *  - `ng-dirty` is set if the form is dirty.\\n *  - `ng-submitted` is set if the form was submitted.\\n *\\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\\n *\\n *\\n * # Submitting a form and preventing the default action\\n *\\n * Since the role of forms in client-side Angular applications is different than in classical\\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\\n * to handle the form submission in an application-specific way.\\n *\\n * For this reason, Angular prevents the default action (form submission to the server) unless the\\n * `<form>` element has an `action` attribute specified.\\n *\\n * You can use one of the following two ways to specify what javascript method should be called when\\n * a form is submitted:\\n *\\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\\n * - {@link ng.directive:ngClick ngClick} directive on the first\\n  *  button or input field of type submit (input[type=submit])\\n *\\n * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\\n * or {@link ng.directive:ngClick ngClick} directives.\\n * This is because of the following form submission rules in the HTML specification:\\n *\\n * - If a form has only one input field then hitting enter in this field triggers form submit\\n * (`ngSubmit`)\\n * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\\n * doesn't trigger submit\\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\\n *\\n * Any pending `ngModelOptions` changes will take place immediately when an enclosing form is\\n * submitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\\n * to have access to the updated model.\\n *\\n * ## Animation Hooks\\n *\\n * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.\\n * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\\n * other validations that are performed within the form. Animations in ngForm are similar to how\\n * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\\n * as JS animations.\\n *\\n * The following example shows a simple way to utilize CSS transitions to style a form element\\n * that has been rendered as invalid after it has been validated:\\n *\\n * <pre>\\n * //be sure to include ngAnimate as a module to hook into more\\n * //advanced animations\\n * .my-form {\\n *   transition:0.5s linear all;\\n *   background: white;\\n * }\\n * .my-form.ng-invalid {\\n *   background: red;\\n *   color:white;\\n * }\\n * </pre>\\n *\\n * @example\\n    <example deps=\\\"angular-animate.js\\\" animations=\\\"true\\\" fixBase=\\\"true\\\" module=\\\"formExample\\\">\\n      <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('formExample', [])\\n           .controller('FormController', ['$scope', function($scope) {\\n             $scope.userType = 'guest';\\n           }]);\\n       </script>\\n       <style>\\n        .my-form {\\n          -webkit-transition:all linear 0.5s;\\n          transition:all linear 0.5s;\\n          background: transparent;\\n        }\\n        .my-form.ng-invalid {\\n          background: red;\\n        }\\n       </style>\\n       <form name=\\\"myForm\\\" ng-controller=\\\"FormController\\\" class=\\\"my-form\\\">\\n         userType: <input name=\\\"input\\\" ng-model=\\\"userType\\\" required>\\n         <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">Required!</span><br>\\n         <tt>userType = {{userType}}</tt><br>\\n         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\\n         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\\n        </form>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should initialize to model', function() {\\n          var userType = element(by.binding('userType'));\\n          var valid = element(by.binding('myForm.input.$valid'));\\n\\n          expect(userType.getText()).toContain('guest');\\n          expect(valid.getText()).toContain('true');\\n        });\\n\\n        it('should be invalid if empty', function() {\\n          var userType = element(by.binding('userType'));\\n          var valid = element(by.binding('myForm.input.$valid'));\\n          var userInput = element(by.model('userType'));\\n\\n          userInput.clear();\\n          userInput.sendKeys('');\\n\\n          expect(userType.getText()).toEqual('userType =');\\n          expect(valid.getText()).toContain('false');\\n        });\\n      </file>\\n    </example>\\n *\\n * @param {string=} name Name of the form. If specified, the form controller will be published into\\n *                       related scope, under this name.\\n */\\nvar formDirectiveFactory = function(isNgForm) {\\n  return ['$timeout', function($timeout) {\\n    var formDirective = {\\n      name: 'form',\\n      restrict: isNgForm ? 'EAC' : 'E',\\n      controller: FormController,\\n      compile: function ngFormCompile(formElement) {\\n        // Setup initial state of the control\\n        formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);\\n\\n        return {\\n          pre: function ngFormPreLink(scope, formElement, attr, controller) {\\n            // if `action` attr is not present on the form, prevent the default action (submission)\\n            if (!('action' in attr)) {\\n              // we can't use jq events because if a form is destroyed during submission the default\\n              // action is not prevented. see #1238\\n              //\\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\\n              // page reload if the form was destroyed by submission of the form via a click handler\\n              // on a button in the form. Looks like an IE9 specific bug.\\n              var handleFormSubmission = function(event) {\\n                scope.$apply(function() {\\n                  controller.$commitViewValue();\\n                  controller.$setSubmitted();\\n                });\\n\\n                event.preventDefault();\\n              };\\n\\n              addEventListenerFn(formElement[0], 'submit', handleFormSubmission);\\n\\n              // unregister the preventDefault listener so that we don't not leak memory but in a\\n              // way that will achieve the prevention of the default action.\\n              formElement.on('$destroy', function() {\\n                $timeout(function() {\\n                  removeEventListenerFn(formElement[0], 'submit', handleFormSubmission);\\n                }, 0, false);\\n              });\\n            }\\n\\n            var parentFormCtrl = controller.$$parentForm,\\n                alias = controller.$name;\\n\\n            if (alias) {\\n              setter(scope, null, alias, controller, alias);\\n              attr.$observe(attr.name ? 'name' : 'ngForm', function(newValue) {\\n                if (alias === newValue) return;\\n                setter(scope, null, alias, undefined, alias);\\n                alias = newValue;\\n                setter(scope, null, alias, controller, alias);\\n                parentFormCtrl.$$renameControl(controller, alias);\\n              });\\n            }\\n            formElement.on('$destroy', function() {\\n              parentFormCtrl.$removeControl(controller);\\n              if (alias) {\\n                setter(scope, null, alias, undefined, alias);\\n              }\\n              extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\\n            });\\n          }\\n        };\\n      }\\n    };\\n\\n    return formDirective;\\n  }];\\n};\\n\\nvar formDirective = formDirectiveFactory();\\nvar ngFormDirective = formDirectiveFactory(true);\\n\\n/* global VALID_CLASS: false,\\n  INVALID_CLASS: false,\\n  PRISTINE_CLASS: false,\\n  DIRTY_CLASS: false,\\n  UNTOUCHED_CLASS: false,\\n  TOUCHED_CLASS: false,\\n  $ngModelMinErr: false,\\n*/\\n\\n// Regex code is obtained from SO: https://stackoverflow.com/questions/3143070/javascript-regex-iso-datetime#answer-3143231\\nvar ISO_DATE_REGEXP = /\\\\d{4}-[01]\\\\d-[0-3]\\\\dT[0-2]\\\\d:[0-5]\\\\d:[0-5]\\\\d\\\\.\\\\d+([+-][0-2]\\\\d:[0-5]\\\\d|Z)/;\\nvar URL_REGEXP = /^(ftp|http|https):\\\\/\\\\/(\\\\w+:{0,1}\\\\w*@)?(\\\\S+)(:[0-9]+)?(\\\\/|\\\\/([\\\\w#!:.?+=&%@!\\\\-\\\\/]))?$/;\\nvar EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\\nvar NUMBER_REGEXP = /^\\\\s*(\\\\-|\\\\+)?(\\\\d+|(\\\\d*(\\\\.\\\\d*)))\\\\s*$/;\\nvar DATE_REGEXP = /^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})$/;\\nvar DATETIMELOCAL_REGEXP = /^(\\\\d{4})-(\\\\d\\\\d)-(\\\\d\\\\d)T(\\\\d\\\\d):(\\\\d\\\\d)(?::(\\\\d\\\\d)(\\\\.\\\\d{1,3})?)?$/;\\nvar WEEK_REGEXP = /^(\\\\d{4})-W(\\\\d\\\\d)$/;\\nvar MONTH_REGEXP = /^(\\\\d{4})-(\\\\d\\\\d)$/;\\nvar TIME_REGEXP = /^(\\\\d\\\\d):(\\\\d\\\\d)(?::(\\\\d\\\\d)(\\\\.\\\\d{1,3})?)?$/;\\n\\nvar inputType = {\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[text]\\n   *\\n   * @description\\n   * Standard HTML text input with angular data binding, inherited by most of the `input` elements.\\n   *\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n   *    `required` when you want to data-bind to the `required` attribute.\\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\\n   *    minlength.\\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\\n   *    any length.\\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\\n   *    that contains the regular expression body that will be converted to a regular expression\\n   *    as in the ngPattern directive.\\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\\n   *    If the expression evaluates to a RegExp object then this is used directly.\\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\\n   *    characters. For instance, `\\\"abc\\\"` will be converted to `new RegExp('^abc$')`.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\\n   *    This parameter is ignored for input[type=password] controls, which will never trim the\\n   *    input.\\n   *\\n   * @example\\n      <example name=\\\"text-input-directive\\\" module=\\\"textInputExample\\\">\\n        <file name=\\\"index.html\\\">\\n         <script>\\n           angular.module('textInputExample', [])\\n             .controller('ExampleController', ['$scope', function($scope) {\\n               $scope.example = {\\n                 text: 'guest',\\n                 word: /^\\\\s*\\\\w*\\\\s*$/\\n               };\\n             }]);\\n         </script>\\n         <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n           Single word: <input type=\\\"text\\\" name=\\\"input\\\" ng-model=\\\"example.text\\\"\\n                               ng-pattern=\\\"example.word\\\" required ng-trim=\\\"false\\\">\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n             Required!</span>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.pattern\\\">\\n             Single word only!</span>\\n\\n           <tt>text = {{example.text}}</tt><br/>\\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n          </form>\\n        </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          var text = element(by.binding('example.text'));\\n          var valid = element(by.binding('myForm.input.$valid'));\\n          var input = element(by.model('example.text'));\\n\\n          it('should initialize to model', function() {\\n            expect(text.getText()).toContain('guest');\\n            expect(valid.getText()).toContain('true');\\n          });\\n\\n          it('should be invalid if empty', function() {\\n            input.clear();\\n            input.sendKeys('');\\n\\n            expect(text.getText()).toEqual('text =');\\n            expect(valid.getText()).toContain('false');\\n          });\\n\\n          it('should be invalid if multi word', function() {\\n            input.clear();\\n            input.sendKeys('hello world');\\n\\n            expect(valid.getText()).toContain('false');\\n          });\\n        </file>\\n      </example>\\n   */\\n  'text': textInputType,\\n\\n    /**\\n     * @ngdoc input\\n     * @name input[date]\\n     *\\n     * @description\\n     * Input with date validation and transformation. In browsers that do not yet support\\n     * the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\\n     * date format (yyyy-MM-dd), for example: `2009-01-06`. Since many\\n     * modern browsers do not yet support this input type, it is important to provide cues to users on the\\n     * expected input format via a placeholder or label.\\n     *\\n     * The model must always be a Date object, otherwise Angular will throw an error.\\n     * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\\n     *\\n     * The timezone to be used to read/write the `Date` instance in the model can be defined using\\n     * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\\n     *\\n     * @param {string} ngModel Assignable angular expression to data-bind to.\\n     * @param {string=} name Property name of the form under which the control is published.\\n     * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\\n     * valid ISO date string (yyyy-MM-dd).\\n     * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\\n     * a valid ISO date string (yyyy-MM-dd).\\n     * @param {string=} required Sets `required` validation error key if the value is not entered.\\n     * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n     *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n     *    `required` when you want to data-bind to the `required` attribute.\\n     * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n     *    interaction with the input element.\\n     *\\n     * @example\\n     <example name=\\\"date-input-directive\\\" module=\\\"dateInputExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n          angular.module('dateInputExample', [])\\n            .controller('DateController', ['$scope', function($scope) {\\n              $scope.example = {\\n                value: new Date(2013, 9, 22)\\n              };\\n            }]);\\n       </script>\\n       <form name=\\\"myForm\\\" ng-controller=\\\"DateController as dateCtrl\\\">\\n          Pick a date in 2013:\\n          <input type=\\\"date\\\" id=\\\"exampleInput\\\" name=\\\"input\\\" ng-model=\\\"example.value\\\"\\n              placeholder=\\\"yyyy-MM-dd\\\" min=\\\"2013-01-01\\\" max=\\\"2013-12-31\\\" required />\\n          <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n              Required!</span>\\n          <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.date\\\">\\n              Not a valid date!</span>\\n           <tt>value = {{example.value | date: \\\"yyyy-MM-dd\\\"}}</tt><br/>\\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n       </form>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        var value = element(by.binding('example.value | date: \\\"yyyy-MM-dd\\\"'));\\n        var valid = element(by.binding('myForm.input.$valid'));\\n        var input = element(by.model('example.value'));\\n\\n        // currently protractor/webdriver does not support\\n        // sending keys to all known HTML5 input controls\\n        // for various browsers (see https://github.com/angular/protractor/issues/562).\\n        function setInput(val) {\\n          // set the value of the element and force validation.\\n          var scr = \\\"var ipt = document.getElementById('exampleInput'); \\\" +\\n          \\\"ipt.value = '\\\" + val + \\\"';\\\" +\\n          \\\"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\\\" + val + \\\"'); });\\\";\\n          browser.executeScript(scr);\\n        }\\n\\n        it('should initialize to model', function() {\\n          expect(value.getText()).toContain('2013-10-22');\\n          expect(valid.getText()).toContain('myForm.input.$valid = true');\\n        });\\n\\n        it('should be invalid if empty', function() {\\n          setInput('');\\n          expect(value.getText()).toEqual('value =');\\n          expect(valid.getText()).toContain('myForm.input.$valid = false');\\n        });\\n\\n        it('should be invalid if over max', function() {\\n          setInput('2015-01-01');\\n          expect(value.getText()).toContain('');\\n          expect(valid.getText()).toContain('myForm.input.$valid = false');\\n        });\\n     </file>\\n     </example>\\n     */\\n  'date': createDateInputType('date', DATE_REGEXP,\\n         createDateParser(DATE_REGEXP, ['yyyy', 'MM', 'dd']),\\n         'yyyy-MM-dd'),\\n\\n   /**\\n    * @ngdoc input\\n    * @name input[datetime-local]\\n    *\\n    * @description\\n    * Input with datetime validation and transformation. In browsers that do not yet support\\n    * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\\n    * local datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\\n    *\\n    * The model must always be a Date object, otherwise Angular will throw an error.\\n    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\\n    *\\n    * The timezone to be used to read/write the `Date` instance in the model can be defined using\\n    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\\n    *\\n    * @param {string} ngModel Assignable angular expression to data-bind to.\\n    * @param {string=} name Property name of the form under which the control is published.\\n    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\\n    * valid ISO datetime format (yyyy-MM-ddTHH:mm:ss).\\n    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\\n    * a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss).\\n    * @param {string=} required Sets `required` validation error key if the value is not entered.\\n    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n    *    `required` when you want to data-bind to the `required` attribute.\\n    * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n    *    interaction with the input element.\\n    *\\n    * @example\\n    <example name=\\\"datetimelocal-input-directive\\\" module=\\\"dateExample\\\">\\n    <file name=\\\"index.html\\\">\\n      <script>\\n        angular.module('dateExample', [])\\n          .controller('DateController', ['$scope', function($scope) {\\n            $scope.example = {\\n              value: new Date(2010, 11, 28, 14, 57)\\n            };\\n          }]);\\n      </script>\\n      <form name=\\\"myForm\\\" ng-controller=\\\"DateController as dateCtrl\\\">\\n        Pick a date between in 2013:\\n        <input type=\\\"datetime-local\\\" id=\\\"exampleInput\\\" name=\\\"input\\\" ng-model=\\\"example.value\\\"\\n            placeholder=\\\"yyyy-MM-ddTHH:mm:ss\\\" min=\\\"2001-01-01T00:00:00\\\" max=\\\"2013-12-31T00:00:00\\\" required />\\n        <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n            Required!</span>\\n        <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.datetimelocal\\\">\\n            Not a valid date!</span>\\n        <tt>value = {{example.value | date: \\\"yyyy-MM-ddTHH:mm:ss\\\"}}</tt><br/>\\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n      </form>\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var value = element(by.binding('example.value | date: \\\"yyyy-MM-ddTHH:mm:ss\\\"'));\\n      var valid = element(by.binding('myForm.input.$valid'));\\n      var input = element(by.model('example.value'));\\n\\n      // currently protractor/webdriver does not support\\n      // sending keys to all known HTML5 input controls\\n      // for various browsers (https://github.com/angular/protractor/issues/562).\\n      function setInput(val) {\\n        // set the value of the element and force validation.\\n        var scr = \\\"var ipt = document.getElementById('exampleInput'); \\\" +\\n        \\\"ipt.value = '\\\" + val + \\\"';\\\" +\\n        \\\"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\\\" + val + \\\"'); });\\\";\\n        browser.executeScript(scr);\\n      }\\n\\n      it('should initialize to model', function() {\\n        expect(value.getText()).toContain('2010-12-28T14:57:00');\\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\\n      });\\n\\n      it('should be invalid if empty', function() {\\n        setInput('');\\n        expect(value.getText()).toEqual('value =');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n\\n      it('should be invalid if over max', function() {\\n        setInput('2015-01-01T23:59:00');\\n        expect(value.getText()).toContain('');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n    </file>\\n    </example>\\n    */\\n  'datetime-local': createDateInputType('datetimelocal', DATETIMELOCAL_REGEXP,\\n      createDateParser(DATETIMELOCAL_REGEXP, ['yyyy', 'MM', 'dd', 'HH', 'mm', 'ss', 'sss']),\\n      'yyyy-MM-ddTHH:mm:ss.sss'),\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[time]\\n   *\\n   * @description\\n   * Input with time validation and transformation. In browsers that do not yet support\\n   * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\\n   * local time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\\n   * Date object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\\n   *\\n   * The model must always be a Date object, otherwise Angular will throw an error.\\n   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\\n   *\\n   * The timezone to be used to read/write the `Date` instance in the model can be defined using\\n   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\\n   * valid ISO time format (HH:mm:ss).\\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be a\\n   * valid ISO time format (HH:mm:ss).\\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n   *    `required` when you want to data-bind to the `required` attribute.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   *\\n   * @example\\n   <example name=\\\"time-input-directive\\\" module=\\\"timeExample\\\">\\n   <file name=\\\"index.html\\\">\\n     <script>\\n      angular.module('timeExample', [])\\n        .controller('DateController', ['$scope', function($scope) {\\n          $scope.example = {\\n            value: new Date(1970, 0, 1, 14, 57, 0)\\n          };\\n        }]);\\n     </script>\\n     <form name=\\\"myForm\\\" ng-controller=\\\"DateController as dateCtrl\\\">\\n        Pick a between 8am and 5pm:\\n        <input type=\\\"time\\\" id=\\\"exampleInput\\\" name=\\\"input\\\" ng-model=\\\"example.value\\\"\\n            placeholder=\\\"HH:mm:ss\\\" min=\\\"08:00:00\\\" max=\\\"17:00:00\\\" required />\\n        <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n            Required!</span>\\n        <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.time\\\">\\n            Not a valid date!</span>\\n        <tt>value = {{example.value | date: \\\"HH:mm:ss\\\"}}</tt><br/>\\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n     </form>\\n   </file>\\n   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var value = element(by.binding('example.value | date: \\\"HH:mm:ss\\\"'));\\n      var valid = element(by.binding('myForm.input.$valid'));\\n      var input = element(by.model('example.value'));\\n\\n      // currently protractor/webdriver does not support\\n      // sending keys to all known HTML5 input controls\\n      // for various browsers (https://github.com/angular/protractor/issues/562).\\n      function setInput(val) {\\n        // set the value of the element and force validation.\\n        var scr = \\\"var ipt = document.getElementById('exampleInput'); \\\" +\\n        \\\"ipt.value = '\\\" + val + \\\"';\\\" +\\n        \\\"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\\\" + val + \\\"'); });\\\";\\n        browser.executeScript(scr);\\n      }\\n\\n      it('should initialize to model', function() {\\n        expect(value.getText()).toContain('14:57:00');\\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\\n      });\\n\\n      it('should be invalid if empty', function() {\\n        setInput('');\\n        expect(value.getText()).toEqual('value =');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n\\n      it('should be invalid if over max', function() {\\n        setInput('23:59:00');\\n        expect(value.getText()).toContain('');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n   </file>\\n   </example>\\n   */\\n  'time': createDateInputType('time', TIME_REGEXP,\\n      createDateParser(TIME_REGEXP, ['HH', 'mm', 'ss', 'sss']),\\n     'HH:mm:ss.sss'),\\n\\n   /**\\n    * @ngdoc input\\n    * @name input[week]\\n    *\\n    * @description\\n    * Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support\\n    * the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\\n    * week format (yyyy-W##), for example: `2013-W02`.\\n    *\\n    * The model must always be a Date object, otherwise Angular will throw an error.\\n    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\\n    *\\n    * The timezone to be used to read/write the `Date` instance in the model can be defined using\\n    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\\n    *\\n    * @param {string} ngModel Assignable angular expression to data-bind to.\\n    * @param {string=} name Property name of the form under which the control is published.\\n    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\\n    * valid ISO week format (yyyy-W##).\\n    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\\n    * a valid ISO week format (yyyy-W##).\\n    * @param {string=} required Sets `required` validation error key if the value is not entered.\\n    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n    *    `required` when you want to data-bind to the `required` attribute.\\n    * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n    *    interaction with the input element.\\n    *\\n    * @example\\n    <example name=\\\"week-input-directive\\\" module=\\\"weekExample\\\">\\n    <file name=\\\"index.html\\\">\\n      <script>\\n      angular.module('weekExample', [])\\n        .controller('DateController', ['$scope', function($scope) {\\n          $scope.example = {\\n            value: new Date(2013, 0, 3)\\n          };\\n        }]);\\n      </script>\\n      <form name=\\\"myForm\\\" ng-controller=\\\"DateController as dateCtrl\\\">\\n        Pick a date between in 2013:\\n        <input id=\\\"exampleInput\\\" type=\\\"week\\\" name=\\\"input\\\" ng-model=\\\"example.value\\\"\\n            placeholder=\\\"YYYY-W##\\\" min=\\\"2012-W32\\\" max=\\\"2013-W52\\\" required />\\n        <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n            Required!</span>\\n        <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.week\\\">\\n            Not a valid date!</span>\\n        <tt>value = {{example.value | date: \\\"yyyy-Www\\\"}}</tt><br/>\\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n      </form>\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var value = element(by.binding('example.value | date: \\\"yyyy-Www\\\"'));\\n      var valid = element(by.binding('myForm.input.$valid'));\\n      var input = element(by.model('example.value'));\\n\\n      // currently protractor/webdriver does not support\\n      // sending keys to all known HTML5 input controls\\n      // for various browsers (https://github.com/angular/protractor/issues/562).\\n      function setInput(val) {\\n        // set the value of the element and force validation.\\n        var scr = \\\"var ipt = document.getElementById('exampleInput'); \\\" +\\n        \\\"ipt.value = '\\\" + val + \\\"';\\\" +\\n        \\\"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\\\" + val + \\\"'); });\\\";\\n        browser.executeScript(scr);\\n      }\\n\\n      it('should initialize to model', function() {\\n        expect(value.getText()).toContain('2013-W01');\\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\\n      });\\n\\n      it('should be invalid if empty', function() {\\n        setInput('');\\n        expect(value.getText()).toEqual('value =');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n\\n      it('should be invalid if over max', function() {\\n        setInput('2015-W01');\\n        expect(value.getText()).toContain('');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n    </file>\\n    </example>\\n    */\\n  'week': createDateInputType('week', WEEK_REGEXP, weekParser, 'yyyy-Www'),\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[month]\\n   *\\n   * @description\\n   * Input with month validation and transformation. In browsers that do not yet support\\n   * the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\\n   * month format (yyyy-MM), for example: `2009-01`.\\n   *\\n   * The model must always be a Date object, otherwise Angular will throw an error.\\n   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\\n   * If the model is not set to the first of the month, the next view to model update will set it\\n   * to the first of the month.\\n   *\\n   * The timezone to be used to read/write the `Date` instance in the model can be defined using\\n   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be\\n   * a valid ISO month format (yyyy-MM).\\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must\\n   * be a valid ISO month format (yyyy-MM).\\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n   *    `required` when you want to data-bind to the `required` attribute.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   *\\n   * @example\\n   <example name=\\\"month-input-directive\\\" module=\\\"monthExample\\\">\\n   <file name=\\\"index.html\\\">\\n     <script>\\n      angular.module('monthExample', [])\\n        .controller('DateController', ['$scope', function($scope) {\\n          $scope.example = {\\n            value: new Date(2013, 9, 1)\\n          };\\n        }]);\\n     </script>\\n     <form name=\\\"myForm\\\" ng-controller=\\\"DateController as dateCtrl\\\">\\n       Pick a month in 2013:\\n       <input id=\\\"exampleInput\\\" type=\\\"month\\\" name=\\\"input\\\" ng-model=\\\"example.value\\\"\\n          placeholder=\\\"yyyy-MM\\\" min=\\\"2013-01\\\" max=\\\"2013-12\\\" required />\\n       <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n          Required!</span>\\n       <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.month\\\">\\n          Not a valid month!</span>\\n       <tt>value = {{example.value | date: \\\"yyyy-MM\\\"}}</tt><br/>\\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n     </form>\\n   </file>\\n   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var value = element(by.binding('example.value | date: \\\"yyyy-MM\\\"'));\\n      var valid = element(by.binding('myForm.input.$valid'));\\n      var input = element(by.model('example.value'));\\n\\n      // currently protractor/webdriver does not support\\n      // sending keys to all known HTML5 input controls\\n      // for various browsers (https://github.com/angular/protractor/issues/562).\\n      function setInput(val) {\\n        // set the value of the element and force validation.\\n        var scr = \\\"var ipt = document.getElementById('exampleInput'); \\\" +\\n        \\\"ipt.value = '\\\" + val + \\\"';\\\" +\\n        \\\"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\\\" + val + \\\"'); });\\\";\\n        browser.executeScript(scr);\\n      }\\n\\n      it('should initialize to model', function() {\\n        expect(value.getText()).toContain('2013-10');\\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\\n      });\\n\\n      it('should be invalid if empty', function() {\\n        setInput('');\\n        expect(value.getText()).toEqual('value =');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n\\n      it('should be invalid if over max', function() {\\n        setInput('2015-01');\\n        expect(value.getText()).toContain('');\\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\\n      });\\n   </file>\\n   </example>\\n   */\\n  'month': createDateInputType('month', MONTH_REGEXP,\\n     createDateParser(MONTH_REGEXP, ['yyyy', 'MM']),\\n     'yyyy-MM'),\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[number]\\n   *\\n   * @description\\n   * Text input with number validation and transformation. Sets the `number` validation\\n   * error if not a valid number.\\n   *\\n   * The model must always be a number, otherwise Angular will throw an error.\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n   *    `required` when you want to data-bind to the `required` attribute.\\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\\n   *    minlength.\\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\\n   *    any length.\\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\\n   *    that contains the regular expression body that will be converted to a regular expression\\n   *    as in the ngPattern directive.\\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\\n   *    If the expression evaluates to a RegExp object then this is used directly.\\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\\n   *    characters. For instance, `\\\"abc\\\"` will be converted to `new RegExp('^abc$')`.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   *\\n   * @example\\n      <example name=\\\"number-input-directive\\\" module=\\\"numberExample\\\">\\n        <file name=\\\"index.html\\\">\\n         <script>\\n           angular.module('numberExample', [])\\n             .controller('ExampleController', ['$scope', function($scope) {\\n               $scope.example = {\\n                 value: 12\\n               };\\n             }]);\\n         </script>\\n         <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n           Number: <input type=\\\"number\\\" name=\\\"input\\\" ng-model=\\\"example.value\\\"\\n                          min=\\\"0\\\" max=\\\"99\\\" required>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n             Required!</span>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.number\\\">\\n             Not valid number!</span>\\n           <tt>value = {{example.value}}</tt><br/>\\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n          </form>\\n        </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          var value = element(by.binding('example.value'));\\n          var valid = element(by.binding('myForm.input.$valid'));\\n          var input = element(by.model('example.value'));\\n\\n          it('should initialize to model', function() {\\n            expect(value.getText()).toContain('12');\\n            expect(valid.getText()).toContain('true');\\n          });\\n\\n          it('should be invalid if empty', function() {\\n            input.clear();\\n            input.sendKeys('');\\n            expect(value.getText()).toEqual('value =');\\n            expect(valid.getText()).toContain('false');\\n          });\\n\\n          it('should be invalid if over max', function() {\\n            input.clear();\\n            input.sendKeys('123');\\n            expect(value.getText()).toEqual('value =');\\n            expect(valid.getText()).toContain('false');\\n          });\\n        </file>\\n      </example>\\n   */\\n  'number': numberInputType,\\n\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[url]\\n   *\\n   * @description\\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\\n   * valid URL.\\n   *\\n   * <div class=\\\"alert alert-warning\\\">\\n   * **Note:** `input[url]` uses a regex to validate urls that is derived from the regex\\n   * used in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\\n   * the built-in validators (see the {@link guide/forms Forms guide})\\n   * </div>\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n   *    `required` when you want to data-bind to the `required` attribute.\\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\\n   *    minlength.\\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\\n   *    any length.\\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\\n   *    that contains the regular expression body that will be converted to a regular expression\\n   *    as in the ngPattern directive.\\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\\n   *    If the expression evaluates to a RegExp object then this is used directly.\\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\\n   *    characters. For instance, `\\\"abc\\\"` will be converted to `new RegExp('^abc$')`.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   *\\n   * @example\\n      <example name=\\\"url-input-directive\\\" module=\\\"urlExample\\\">\\n        <file name=\\\"index.html\\\">\\n         <script>\\n           angular.module('urlExample', [])\\n             .controller('ExampleController', ['$scope', function($scope) {\\n               $scope.url = {\\n                 text: 'http://google.com'\\n               };\\n             }]);\\n         </script>\\n         <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n           URL: <input type=\\\"url\\\" name=\\\"input\\\" ng-model=\\\"url.text\\\" required>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n             Required!</span>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.url\\\">\\n             Not valid url!</span>\\n           <tt>text = {{url.text}}</tt><br/>\\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\\n          </form>\\n        </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          var text = element(by.binding('url.text'));\\n          var valid = element(by.binding('myForm.input.$valid'));\\n          var input = element(by.model('url.text'));\\n\\n          it('should initialize to model', function() {\\n            expect(text.getText()).toContain('http://google.com');\\n            expect(valid.getText()).toContain('true');\\n          });\\n\\n          it('should be invalid if empty', function() {\\n            input.clear();\\n            input.sendKeys('');\\n\\n            expect(text.getText()).toEqual('text =');\\n            expect(valid.getText()).toContain('false');\\n          });\\n\\n          it('should be invalid if not url', function() {\\n            input.clear();\\n            input.sendKeys('box');\\n\\n            expect(valid.getText()).toContain('false');\\n          });\\n        </file>\\n      </example>\\n   */\\n  'url': urlInputType,\\n\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[email]\\n   *\\n   * @description\\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\\n   * address.\\n   *\\n   * <div class=\\\"alert alert-warning\\\">\\n   * **Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\\n   * used in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\\n   * use `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\\n   * </div>\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n   *    `required` when you want to data-bind to the `required` attribute.\\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\\n   *    minlength.\\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\\n   *    any length.\\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\\n   *    that contains the regular expression body that will be converted to a regular expression\\n   *    as in the ngPattern directive.\\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\\n   *    If the expression evaluates to a RegExp object then this is used directly.\\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\\n   *    characters. For instance, `\\\"abc\\\"` will be converted to `new RegExp('^abc$')`.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   *\\n   * @example\\n      <example name=\\\"email-input-directive\\\" module=\\\"emailExample\\\">\\n        <file name=\\\"index.html\\\">\\n         <script>\\n           angular.module('emailExample', [])\\n             .controller('ExampleController', ['$scope', function($scope) {\\n               $scope.email = {\\n                 text: 'me@example.com'\\n               };\\n             }]);\\n         </script>\\n           <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n             Email: <input type=\\\"email\\\" name=\\\"input\\\" ng-model=\\\"email.text\\\" required>\\n             <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.required\\\">\\n               Required!</span>\\n             <span class=\\\"error\\\" ng-show=\\\"myForm.input.$error.email\\\">\\n               Not valid email!</span>\\n             <tt>text = {{email.text}}</tt><br/>\\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\\n           </form>\\n         </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          var text = element(by.binding('email.text'));\\n          var valid = element(by.binding('myForm.input.$valid'));\\n          var input = element(by.model('email.text'));\\n\\n          it('should initialize to model', function() {\\n            expect(text.getText()).toContain('me@example.com');\\n            expect(valid.getText()).toContain('true');\\n          });\\n\\n          it('should be invalid if empty', function() {\\n            input.clear();\\n            input.sendKeys('');\\n            expect(text.getText()).toEqual('text =');\\n            expect(valid.getText()).toContain('false');\\n          });\\n\\n          it('should be invalid if not email', function() {\\n            input.clear();\\n            input.sendKeys('xxx');\\n\\n            expect(valid.getText()).toContain('false');\\n          });\\n        </file>\\n      </example>\\n   */\\n  'email': emailInputType,\\n\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[radio]\\n   *\\n   * @description\\n   * HTML radio button.\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string} value The value to which the expression should be set when selected.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   * @param {string} ngValue Angular expression which sets the value to which the expression should\\n   *    be set when selected.\\n   *\\n   * @example\\n      <example name=\\\"radio-input-directive\\\" module=\\\"radioExample\\\">\\n        <file name=\\\"index.html\\\">\\n         <script>\\n           angular.module('radioExample', [])\\n             .controller('ExampleController', ['$scope', function($scope) {\\n               $scope.color = {\\n                 name: 'blue'\\n               };\\n               $scope.specialValue = {\\n                 \\\"id\\\": \\\"12345\\\",\\n                 \\\"value\\\": \\\"green\\\"\\n               };\\n             }]);\\n         </script>\\n         <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n           <input type=\\\"radio\\\" ng-model=\\\"color.name\\\" value=\\\"red\\\">  Red <br/>\\n           <input type=\\\"radio\\\" ng-model=\\\"color.name\\\" ng-value=\\\"specialValue\\\"> Green <br/>\\n           <input type=\\\"radio\\\" ng-model=\\\"color.name\\\" value=\\\"blue\\\"> Blue <br/>\\n           <tt>color = {{color.name | json}}</tt><br/>\\n          </form>\\n          Note that `ng-value=\\\"specialValue\\\"` sets radio item's value to be the value of `$scope.specialValue`.\\n        </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          it('should change state', function() {\\n            var color = element(by.binding('color.name'));\\n\\n            expect(color.getText()).toContain('blue');\\n\\n            element.all(by.model('color.name')).get(0).click();\\n\\n            expect(color.getText()).toContain('red');\\n          });\\n        </file>\\n      </example>\\n   */\\n  'radio': radioInputType,\\n\\n\\n  /**\\n   * @ngdoc input\\n   * @name input[checkbox]\\n   *\\n   * @description\\n   * HTML checkbox.\\n   *\\n   * @param {string} ngModel Assignable angular expression to data-bind to.\\n   * @param {string=} name Property name of the form under which the control is published.\\n   * @param {expression=} ngTrueValue The value to which the expression should be set when selected.\\n   * @param {expression=} ngFalseValue The value to which the expression should be set when not selected.\\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n   *    interaction with the input element.\\n   *\\n   * @example\\n      <example name=\\\"checkbox-input-directive\\\" module=\\\"checkboxExample\\\">\\n        <file name=\\\"index.html\\\">\\n         <script>\\n           angular.module('checkboxExample', [])\\n             .controller('ExampleController', ['$scope', function($scope) {\\n               $scope.checkboxModel = {\\n                value1 : true,\\n                value2 : 'YES'\\n              };\\n             }]);\\n         </script>\\n         <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n           Value1: <input type=\\\"checkbox\\\" ng-model=\\\"checkboxModel.value1\\\"> <br/>\\n           Value2: <input type=\\\"checkbox\\\" ng-model=\\\"checkboxModel.value2\\\"\\n                          ng-true-value=\\\"'YES'\\\" ng-false-value=\\\"'NO'\\\"> <br/>\\n           <tt>value1 = {{checkboxModel.value1}}</tt><br/>\\n           <tt>value2 = {{checkboxModel.value2}}</tt><br/>\\n          </form>\\n        </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          it('should change state', function() {\\n            var value1 = element(by.binding('checkboxModel.value1'));\\n            var value2 = element(by.binding('checkboxModel.value2'));\\n\\n            expect(value1.getText()).toContain('true');\\n            expect(value2.getText()).toContain('YES');\\n\\n            element(by.model('checkboxModel.value1')).click();\\n            element(by.model('checkboxModel.value2')).click();\\n\\n            expect(value1.getText()).toContain('false');\\n            expect(value2.getText()).toContain('NO');\\n          });\\n        </file>\\n      </example>\\n   */\\n  'checkbox': checkboxInputType,\\n\\n  'hidden': noop,\\n  'button': noop,\\n  'submit': noop,\\n  'reset': noop,\\n  'file': noop\\n};\\n\\nfunction stringBasedInputType(ctrl) {\\n  ctrl.$formatters.push(function(value) {\\n    return ctrl.$isEmpty(value) ? value : value.toString();\\n  });\\n}\\n\\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\\n  stringBasedInputType(ctrl);\\n}\\n\\nfunction baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {\\n  var type = lowercase(element[0].type);\\n\\n  // In composition mode, users are still inputing intermediate text buffer,\\n  // hold the listener until composition is done.\\n  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent\\n  if (!$sniffer.android) {\\n    var composing = false;\\n\\n    element.on('compositionstart', function(data) {\\n      composing = true;\\n    });\\n\\n    element.on('compositionend', function() {\\n      composing = false;\\n      listener();\\n    });\\n  }\\n\\n  var listener = function(ev) {\\n    if (timeout) {\\n      $browser.defer.cancel(timeout);\\n      timeout = null;\\n    }\\n    if (composing) return;\\n    var value = element.val(),\\n        event = ev && ev.type;\\n\\n    // By default we will trim the value\\n    // If the attribute ng-trim exists we will avoid trimming\\n    // If input type is 'password', the value is never trimmed\\n    if (type !== 'password' && (!attr.ngTrim || attr.ngTrim !== 'false')) {\\n      value = trim(value);\\n    }\\n\\n    // If a control is suffering from bad input (due to native validators), browsers discard its\\n    // value, so it may be necessary to revalidate (by calling $setViewValue again) even if the\\n    // control's value is the same empty value twice in a row.\\n    if (ctrl.$viewValue !== value || (value === '' && ctrl.$$hasNativeValidators)) {\\n      ctrl.$setViewValue(value, event);\\n    }\\n  };\\n\\n  // if the browser does support \\\"input\\\" event, we are fine - except on IE9 which doesn't fire the\\n  // input event on backspace, delete or cut\\n  if ($sniffer.hasEvent('input')) {\\n    element.on('input', listener);\\n  } else {\\n    var timeout;\\n\\n    var deferListener = function(ev, input, origValue) {\\n      if (!timeout) {\\n        timeout = $browser.defer(function() {\\n          timeout = null;\\n          if (!input || input.value !== origValue) {\\n            listener(ev);\\n          }\\n        });\\n      }\\n    };\\n\\n    element.on('keydown', function(event) {\\n      var key = event.keyCode;\\n\\n      // ignore\\n      //    command            modifiers                   arrows\\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\\n\\n      deferListener(event, this, this.value);\\n    });\\n\\n    // if user modifies input value using context menu in IE, we need \\\"paste\\\" and \\\"cut\\\" events to catch it\\n    if ($sniffer.hasEvent('paste')) {\\n      element.on('paste cut', deferListener);\\n    }\\n  }\\n\\n  // if user paste into input using mouse on older browser\\n  // or form autocomplete on newer browser, we need \\\"change\\\" event to catch it\\n  element.on('change', listener);\\n\\n  ctrl.$render = function() {\\n    element.val(ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\\n  };\\n}\\n\\nfunction weekParser(isoWeek, existingDate) {\\n  if (isDate(isoWeek)) {\\n    return isoWeek;\\n  }\\n\\n  if (isString(isoWeek)) {\\n    WEEK_REGEXP.lastIndex = 0;\\n    var parts = WEEK_REGEXP.exec(isoWeek);\\n    if (parts) {\\n      var year = +parts[1],\\n          week = +parts[2],\\n          hours = 0,\\n          minutes = 0,\\n          seconds = 0,\\n          milliseconds = 0,\\n          firstThurs = getFirstThursdayOfYear(year),\\n          addDays = (week - 1) * 7;\\n\\n      if (existingDate) {\\n        hours = existingDate.getHours();\\n        minutes = existingDate.getMinutes();\\n        seconds = existingDate.getSeconds();\\n        milliseconds = existingDate.getMilliseconds();\\n      }\\n\\n      return new Date(year, 0, firstThurs.getDate() + addDays, hours, minutes, seconds, milliseconds);\\n    }\\n  }\\n\\n  return NaN;\\n}\\n\\nfunction createDateParser(regexp, mapping) {\\n  return function(iso, date) {\\n    var parts, map;\\n\\n    if (isDate(iso)) {\\n      return iso;\\n    }\\n\\n    if (isString(iso)) {\\n      // When a date is JSON'ified to wraps itself inside of an extra\\n      // set of double quotes. This makes the date parsing code unable\\n      // to match the date string and parse it as a date.\\n      if (iso.charAt(0) == '\\\"' && iso.charAt(iso.length - 1) == '\\\"') {\\n        iso = iso.substring(1, iso.length - 1);\\n      }\\n      if (ISO_DATE_REGEXP.test(iso)) {\\n        return new Date(iso);\\n      }\\n      regexp.lastIndex = 0;\\n      parts = regexp.exec(iso);\\n\\n      if (parts) {\\n        parts.shift();\\n        if (date) {\\n          map = {\\n            yyyy: date.getFullYear(),\\n            MM: date.getMonth() + 1,\\n            dd: date.getDate(),\\n            HH: date.getHours(),\\n            mm: date.getMinutes(),\\n            ss: date.getSeconds(),\\n            sss: date.getMilliseconds() / 1000\\n          };\\n        } else {\\n          map = { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 };\\n        }\\n\\n        forEach(parts, function(part, index) {\\n          if (index < mapping.length) {\\n            map[mapping[index]] = +part;\\n          }\\n        });\\n        return new Date(map.yyyy, map.MM - 1, map.dd, map.HH, map.mm, map.ss || 0, map.sss * 1000 || 0);\\n      }\\n    }\\n\\n    return NaN;\\n  };\\n}\\n\\nfunction createDateInputType(type, regexp, parseDate, format) {\\n  return function dynamicDateInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter) {\\n    badInputChecker(scope, element, attr, ctrl);\\n    baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\\n    var timezone = ctrl && ctrl.$options && ctrl.$options.timezone;\\n    var previousDate;\\n\\n    ctrl.$$parserName = type;\\n    ctrl.$parsers.push(function(value) {\\n      if (ctrl.$isEmpty(value)) return null;\\n      if (regexp.test(value)) {\\n        // Note: We cannot read ctrl.$modelValue, as there might be a different\\n        // parser/formatter in the processing chain so that the model\\n        // contains some different data format!\\n        var parsedDate = parseDate(value, previousDate);\\n        if (timezone === 'UTC') {\\n          parsedDate.setMinutes(parsedDate.getMinutes() - parsedDate.getTimezoneOffset());\\n        }\\n        return parsedDate;\\n      }\\n      return undefined;\\n    });\\n\\n    ctrl.$formatters.push(function(value) {\\n      if (value && !isDate(value)) {\\n        throw $ngModelMinErr('datefmt', 'Expected `{0}` to be a date', value);\\n      }\\n      if (isValidDate(value)) {\\n        previousDate = value;\\n        if (previousDate && timezone === 'UTC') {\\n          var timezoneOffset = 60000 * previousDate.getTimezoneOffset();\\n          previousDate = new Date(previousDate.getTime() + timezoneOffset);\\n        }\\n        return $filter('date')(value, format, timezone);\\n      } else {\\n        previousDate = null;\\n        return '';\\n      }\\n    });\\n\\n    if (isDefined(attr.min) || attr.ngMin) {\\n      var minVal;\\n      ctrl.$validators.min = function(value) {\\n        return !isValidDate(value) || isUndefined(minVal) || parseDate(value) >= minVal;\\n      };\\n      attr.$observe('min', function(val) {\\n        minVal = parseObservedDateValue(val);\\n        ctrl.$validate();\\n      });\\n    }\\n\\n    if (isDefined(attr.max) || attr.ngMax) {\\n      var maxVal;\\n      ctrl.$validators.max = function(value) {\\n        return !isValidDate(value) || isUndefined(maxVal) || parseDate(value) <= maxVal;\\n      };\\n      attr.$observe('max', function(val) {\\n        maxVal = parseObservedDateValue(val);\\n        ctrl.$validate();\\n      });\\n    }\\n\\n    function isValidDate(value) {\\n      // Invalid Date: getTime() returns NaN\\n      return value && !(value.getTime && value.getTime() !== value.getTime());\\n    }\\n\\n    function parseObservedDateValue(val) {\\n      return isDefined(val) ? (isDate(val) ? val : parseDate(val)) : undefined;\\n    }\\n  };\\n}\\n\\nfunction badInputChecker(scope, element, attr, ctrl) {\\n  var node = element[0];\\n  var nativeValidation = ctrl.$$hasNativeValidators = isObject(node.validity);\\n  if (nativeValidation) {\\n    ctrl.$parsers.push(function(value) {\\n      var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};\\n      // Detect bug in FF35 for input[email] (https://bugzilla.mozilla.org/show_bug.cgi?id=1064430):\\n      // - also sets validity.badInput (should only be validity.typeMismatch).\\n      // - see http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#e-mail-state-(type=email)\\n      // - can ignore this case as we can still read out the erroneous email...\\n      return validity.badInput && !validity.typeMismatch ? undefined : value;\\n    });\\n  }\\n}\\n\\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\\n  badInputChecker(scope, element, attr, ctrl);\\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\\n\\n  ctrl.$$parserName = 'number';\\n  ctrl.$parsers.push(function(value) {\\n    if (ctrl.$isEmpty(value))      return null;\\n    if (NUMBER_REGEXP.test(value)) return parseFloat(value);\\n    return undefined;\\n  });\\n\\n  ctrl.$formatters.push(function(value) {\\n    if (!ctrl.$isEmpty(value)) {\\n      if (!isNumber(value)) {\\n        throw $ngModelMinErr('numfmt', 'Expected `{0}` to be a number', value);\\n      }\\n      value = value.toString();\\n    }\\n    return value;\\n  });\\n\\n  if (attr.min || attr.ngMin) {\\n    var minVal;\\n    ctrl.$validators.min = function(value) {\\n      return ctrl.$isEmpty(value) || isUndefined(minVal) || value >= minVal;\\n    };\\n\\n    attr.$observe('min', function(val) {\\n      if (isDefined(val) && !isNumber(val)) {\\n        val = parseFloat(val, 10);\\n      }\\n      minVal = isNumber(val) && !isNaN(val) ? val : undefined;\\n      // TODO(matsko): implement validateLater to reduce number of validations\\n      ctrl.$validate();\\n    });\\n  }\\n\\n  if (attr.max || attr.ngMax) {\\n    var maxVal;\\n    ctrl.$validators.max = function(value) {\\n      return ctrl.$isEmpty(value) || isUndefined(maxVal) || value <= maxVal;\\n    };\\n\\n    attr.$observe('max', function(val) {\\n      if (isDefined(val) && !isNumber(val)) {\\n        val = parseFloat(val, 10);\\n      }\\n      maxVal = isNumber(val) && !isNaN(val) ? val : undefined;\\n      // TODO(matsko): implement validateLater to reduce number of validations\\n      ctrl.$validate();\\n    });\\n  }\\n}\\n\\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\\n  // Note: no badInputChecker here by purpose as `url` is only a validation\\n  // in browsers, i.e. we can always read out input.value even if it is not valid!\\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\\n  stringBasedInputType(ctrl);\\n\\n  ctrl.$$parserName = 'url';\\n  ctrl.$validators.url = function(modelValue, viewValue) {\\n    var value = modelValue || viewValue;\\n    return ctrl.$isEmpty(value) || URL_REGEXP.test(value);\\n  };\\n}\\n\\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\\n  // Note: no badInputChecker here by purpose as `url` is only a validation\\n  // in browsers, i.e. we can always read out input.value even if it is not valid!\\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\\n  stringBasedInputType(ctrl);\\n\\n  ctrl.$$parserName = 'email';\\n  ctrl.$validators.email = function(modelValue, viewValue) {\\n    var value = modelValue || viewValue;\\n    return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value);\\n  };\\n}\\n\\nfunction radioInputType(scope, element, attr, ctrl) {\\n  // make the name unique, if not defined\\n  if (isUndefined(attr.name)) {\\n    element.attr('name', nextUid());\\n  }\\n\\n  var listener = function(ev) {\\n    if (element[0].checked) {\\n      ctrl.$setViewValue(attr.value, ev && ev.type);\\n    }\\n  };\\n\\n  element.on('click', listener);\\n\\n  ctrl.$render = function() {\\n    var value = attr.value;\\n    element[0].checked = (value == ctrl.$viewValue);\\n  };\\n\\n  attr.$observe('value', ctrl.$render);\\n}\\n\\nfunction parseConstantExpr($parse, context, name, expression, fallback) {\\n  var parseFn;\\n  if (isDefined(expression)) {\\n    parseFn = $parse(expression);\\n    if (!parseFn.constant) {\\n      throw minErr('ngModel')('constexpr', 'Expected constant expression for `{0}`, but saw ' +\\n                                   '`{1}`.', name, expression);\\n    }\\n    return parseFn(context);\\n  }\\n  return fallback;\\n}\\n\\nfunction checkboxInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {\\n  var trueValue = parseConstantExpr($parse, scope, 'ngTrueValue', attr.ngTrueValue, true);\\n  var falseValue = parseConstantExpr($parse, scope, 'ngFalseValue', attr.ngFalseValue, false);\\n\\n  var listener = function(ev) {\\n    ctrl.$setViewValue(element[0].checked, ev && ev.type);\\n  };\\n\\n  element.on('click', listener);\\n\\n  ctrl.$render = function() {\\n    element[0].checked = ctrl.$viewValue;\\n  };\\n\\n  // Override the standard `$isEmpty` because the $viewValue of an empty checkbox is always set to `false`\\n  // This is because of the parser below, which compares the `$modelValue` with `trueValue` to convert\\n  // it to a boolean.\\n  ctrl.$isEmpty = function(value) {\\n    return value === false;\\n  };\\n\\n  ctrl.$formatters.push(function(value) {\\n    return equals(value, trueValue);\\n  });\\n\\n  ctrl.$parsers.push(function(value) {\\n    return value ? trueValue : falseValue;\\n  });\\n}\\n\\n\\n/**\\n * @ngdoc directive\\n * @name textarea\\n * @restrict E\\n *\\n * @description\\n * HTML textarea element control with angular data-binding. The data-binding and validation\\n * properties of this element are exactly the same as those of the\\n * {@link ng.directive:input input element}.\\n *\\n * @param {string} ngModel Assignable angular expression to data-bind to.\\n * @param {string=} name Property name of the form under which the control is published.\\n * @param {string=} required Sets `required` validation error key if the value is not entered.\\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n *    `required` when you want to data-bind to the `required` attribute.\\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\\n *    minlength.\\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\\n *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\\n *    length.\\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\\n *    patterns defined as scope expressions.\\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n *    interaction with the input element.\\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name input\\n * @restrict E\\n *\\n * @description\\n * HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\\n * input state control, and validation.\\n * Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** Not every feature offered is available for all input types.\\n * Specifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\\n * </div>\\n *\\n * @param {string} ngModel Assignable angular expression to data-bind to.\\n * @param {string=} name Property name of the form under which the control is published.\\n * @param {string=} required Sets `required` validation error key if the value is not entered.\\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\\n *    minlength.\\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\\n *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\\n *    length.\\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\\n *    patterns defined as scope expressions.\\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\\n *    interaction with the input element.\\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\\n *    This parameter is ignored for input[type=password] controls, which will never trim the\\n *    input.\\n *\\n * @example\\n    <example name=\\\"input-directive\\\" module=\\\"inputExample\\\">\\n      <file name=\\\"index.html\\\">\\n       <script>\\n          angular.module('inputExample', [])\\n            .controller('ExampleController', ['$scope', function($scope) {\\n              $scope.user = {name: 'guest', last: 'visitor'};\\n            }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <form name=\\\"myForm\\\">\\n           User name: <input type=\\\"text\\\" name=\\\"userName\\\" ng-model=\\\"user.name\\\" required>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.userName.$error.required\\\">\\n             Required!</span><br>\\n           Last name: <input type=\\\"text\\\" name=\\\"lastName\\\" ng-model=\\\"user.last\\\"\\n             ng-minlength=\\\"3\\\" ng-maxlength=\\\"10\\\">\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.lastName.$error.minlength\\\">\\n             Too short!</span>\\n           <span class=\\\"error\\\" ng-show=\\\"myForm.lastName.$error.maxlength\\\">\\n             Too long!</span><br>\\n         </form>\\n         <hr>\\n         <tt>user = {{user}}</tt><br/>\\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\\n       </div>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        var user = element(by.exactBinding('user'));\\n        var userNameValid = element(by.binding('myForm.userName.$valid'));\\n        var lastNameValid = element(by.binding('myForm.lastName.$valid'));\\n        var lastNameError = element(by.binding('myForm.lastName.$error'));\\n        var formValid = element(by.binding('myForm.$valid'));\\n        var userNameInput = element(by.model('user.name'));\\n        var userLastInput = element(by.model('user.last'));\\n\\n        it('should initialize to model', function() {\\n          expect(user.getText()).toContain('{\\\"name\\\":\\\"guest\\\",\\\"last\\\":\\\"visitor\\\"}');\\n          expect(userNameValid.getText()).toContain('true');\\n          expect(formValid.getText()).toContain('true');\\n        });\\n\\n        it('should be invalid if empty when required', function() {\\n          userNameInput.clear();\\n          userNameInput.sendKeys('');\\n\\n          expect(user.getText()).toContain('{\\\"last\\\":\\\"visitor\\\"}');\\n          expect(userNameValid.getText()).toContain('false');\\n          expect(formValid.getText()).toContain('false');\\n        });\\n\\n        it('should be valid if empty when min length is set', function() {\\n          userLastInput.clear();\\n          userLastInput.sendKeys('');\\n\\n          expect(user.getText()).toContain('{\\\"name\\\":\\\"guest\\\",\\\"last\\\":\\\"\\\"}');\\n          expect(lastNameValid.getText()).toContain('true');\\n          expect(formValid.getText()).toContain('true');\\n        });\\n\\n        it('should be invalid if less than required min length', function() {\\n          userLastInput.clear();\\n          userLastInput.sendKeys('xx');\\n\\n          expect(user.getText()).toContain('{\\\"name\\\":\\\"guest\\\"}');\\n          expect(lastNameValid.getText()).toContain('false');\\n          expect(lastNameError.getText()).toContain('minlength');\\n          expect(formValid.getText()).toContain('false');\\n        });\\n\\n        it('should be invalid if longer than max length', function() {\\n          userLastInput.clear();\\n          userLastInput.sendKeys('some ridiculously long name');\\n\\n          expect(user.getText()).toContain('{\\\"name\\\":\\\"guest\\\"}');\\n          expect(lastNameValid.getText()).toContain('false');\\n          expect(lastNameError.getText()).toContain('maxlength');\\n          expect(formValid.getText()).toContain('false');\\n        });\\n      </file>\\n    </example>\\n */\\nvar inputDirective = ['$browser', '$sniffer', '$filter', '$parse',\\n    function($browser, $sniffer, $filter, $parse) {\\n  return {\\n    restrict: 'E',\\n    require: ['?ngModel'],\\n    link: {\\n      pre: function(scope, element, attr, ctrls) {\\n        if (ctrls[0]) {\\n          (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrls[0], $sniffer,\\n                                                              $browser, $filter, $parse);\\n        }\\n      }\\n    }\\n  };\\n}];\\n\\n\\n\\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\\\d+)$/;\\n/**\\n * @ngdoc directive\\n * @name ngValue\\n *\\n * @description\\n * Binds the given expression to the value of `<option>` or {@link input[radio] `input[radio]`},\\n * so that when the element is selected, the {@link ngModel `ngModel`} of that element is set to\\n * the bound value.\\n *\\n * `ngValue` is useful when dynamically generating lists of radio buttons using\\n * {@link ngRepeat `ngRepeat`}, as shown below.\\n *\\n * Likewise, `ngValue` can be used to generate `<option>` elements for\\n * the {@link select `select`} element. In that case however, only strings are supported\\n * for the `value `attribute, so the resulting `ngModel` will always be a string.\\n * Support for `select` models with non-string values is available via `ngOptions`.\\n *\\n * @element input\\n * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute\\n *   of the `input` element\\n *\\n * @example\\n    <example name=\\\"ngValue-directive\\\" module=\\\"valueExample\\\">\\n      <file name=\\\"index.html\\\">\\n       <script>\\n          angular.module('valueExample', [])\\n            .controller('ExampleController', ['$scope', function($scope) {\\n              $scope.names = ['pizza', 'unicorns', 'robots'];\\n              $scope.my = { favorite: 'unicorns' };\\n            }]);\\n       </script>\\n        <form ng-controller=\\\"ExampleController\\\">\\n          <h2>Which is your favorite?</h2>\\n            <label ng-repeat=\\\"name in names\\\" for=\\\"{{name}}\\\">\\n              {{name}}\\n              <input type=\\\"radio\\\"\\n                     ng-model=\\\"my.favorite\\\"\\n                     ng-value=\\\"name\\\"\\n                     id=\\\"{{name}}\\\"\\n                     name=\\\"favorite\\\">\\n            </label>\\n          <div>You chose {{my.favorite}}</div>\\n        </form>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        var favorite = element(by.binding('my.favorite'));\\n\\n        it('should initialize to model', function() {\\n          expect(favorite.getText()).toContain('unicorns');\\n        });\\n        it('should bind the values to the inputs', function() {\\n          element.all(by.model('my.favorite')).get(0).click();\\n          expect(favorite.getText()).toContain('pizza');\\n        });\\n      </file>\\n    </example>\\n */\\nvar ngValueDirective = function() {\\n  return {\\n    restrict: 'A',\\n    priority: 100,\\n    compile: function(tpl, tplAttr) {\\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\\n        return function ngValueConstantLink(scope, elm, attr) {\\n          attr.$set('value', scope.$eval(attr.ngValue));\\n        };\\n      } else {\\n        return function ngValueLink(scope, elm, attr) {\\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\\n            attr.$set('value', value);\\n          });\\n        };\\n      }\\n    }\\n  };\\n};\\n\\n/**\\n * @ngdoc directive\\n * @name ngBind\\n * @restrict AC\\n *\\n * @description\\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\\n * with the value of a given expression, and to update the text content when the value of that\\n * expression changes.\\n *\\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\\n * `{{ expression }}` which is similar but less verbose.\\n *\\n * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\\n * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\\n * element attribute, it makes the bindings invisible to the user while the page is loading.\\n *\\n * An alternative solution to this problem would be using the\\n * {@link ng.directive:ngCloak ngCloak} directive.\\n *\\n *\\n * @element ANY\\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\\n *\\n * @example\\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\\n   <example module=\\\"bindExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('bindExample', [])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.name = 'Whirled';\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         Enter name: <input type=\\\"text\\\" ng-model=\\\"name\\\"><br>\\n         Hello <span ng-bind=\\\"name\\\"></span>!\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-bind', function() {\\n         var nameInput = element(by.model('name'));\\n\\n         expect(element(by.binding('name')).getText()).toBe('Whirled');\\n         nameInput.clear();\\n         nameInput.sendKeys('world');\\n         expect(element(by.binding('name')).getText()).toBe('world');\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngBindDirective = ['$compile', function($compile) {\\n  return {\\n    restrict: 'AC',\\n    compile: function ngBindCompile(templateElement) {\\n      $compile.$$addBindingClass(templateElement);\\n      return function ngBindLink(scope, element, attr) {\\n        $compile.$$addBindingInfo(element, attr.ngBind);\\n        element = element[0];\\n        scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\\n          element.textContent = value === undefined ? '' : value;\\n        });\\n      };\\n    }\\n  };\\n}];\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngBindTemplate\\n *\\n * @description\\n * The `ngBindTemplate` directive specifies that the element\\n * text content should be replaced with the interpolation of the template\\n * in the `ngBindTemplate` attribute.\\n * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\\n * expressions. This directive is needed since some HTML elements\\n * (such as TITLE and OPTION) cannot contain SPAN elements.\\n *\\n * @element ANY\\n * @param {string} ngBindTemplate template of form\\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\\n *\\n * @example\\n * Try it here: enter text in text box and watch the greeting change.\\n   <example module=\\\"bindExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('bindExample', [])\\n           .controller('ExampleController', ['$scope', function($scope) {\\n             $scope.salutation = 'Hello';\\n             $scope.name = 'World';\\n           }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n        Salutation: <input type=\\\"text\\\" ng-model=\\\"salutation\\\"><br>\\n        Name: <input type=\\\"text\\\" ng-model=\\\"name\\\"><br>\\n        <pre ng-bind-template=\\\"{{salutation}} {{name}}!\\\"></pre>\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-bind', function() {\\n         var salutationElem = element(by.binding('salutation'));\\n         var salutationInput = element(by.model('salutation'));\\n         var nameInput = element(by.model('name'));\\n\\n         expect(salutationElem.getText()).toBe('Hello World!');\\n\\n         salutationInput.clear();\\n         salutationInput.sendKeys('Greetings');\\n         nameInput.clear();\\n         nameInput.sendKeys('user');\\n\\n         expect(salutationElem.getText()).toBe('Greetings user!');\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngBindTemplateDirective = ['$interpolate', '$compile', function($interpolate, $compile) {\\n  return {\\n    compile: function ngBindTemplateCompile(templateElement) {\\n      $compile.$$addBindingClass(templateElement);\\n      return function ngBindTemplateLink(scope, element, attr) {\\n        var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\\n        $compile.$$addBindingInfo(element, interpolateFn.expressions);\\n        element = element[0];\\n        attr.$observe('ngBindTemplate', function(value) {\\n          element.textContent = value === undefined ? '' : value;\\n        });\\n      };\\n    }\\n  };\\n}];\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngBindHtml\\n *\\n * @description\\n * Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,\\n * the resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.\\n * To utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link\\n * ngSanitize} in your module's dependencies (not in core Angular). In order to use {@link ngSanitize}\\n * in your module's dependencies, you need to include \\\"angular-sanitize.js\\\" in your application.\\n *\\n * You may also bypass sanitization for values you know are safe. To do so, bind to\\n * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\\n * under {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.\\n *\\n * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\\n * will have an exception (instead of an exploit.)\\n *\\n * @element ANY\\n * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\\n *\\n * @example\\n\\n   <example module=\\\"bindHtmlExample\\\" deps=\\\"angular-sanitize.js\\\">\\n     <file name=\\\"index.html\\\">\\n       <div ng-controller=\\\"ExampleController\\\">\\n        <p ng-bind-html=\\\"myHTML\\\"></p>\\n       </div>\\n     </file>\\n\\n     <file name=\\\"script.js\\\">\\n       angular.module('bindHtmlExample', ['ngSanitize'])\\n         .controller('ExampleController', ['$scope', function($scope) {\\n           $scope.myHTML =\\n              'I am an <code>HTML</code>string with ' +\\n              '<a href=\\\"#\\\">links!</a> and other <em>stuff</em>';\\n         }]);\\n     </file>\\n\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-bind-html', function() {\\n         expect(element(by.binding('myHTML')).getText()).toBe(\\n             'I am an HTMLstring with links! and other stuff');\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngBindHtmlDirective = ['$sce', '$parse', '$compile', function($sce, $parse, $compile) {\\n  return {\\n    restrict: 'A',\\n    compile: function ngBindHtmlCompile(tElement, tAttrs) {\\n      var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml);\\n      var ngBindHtmlWatch = $parse(tAttrs.ngBindHtml, function getStringValue(value) {\\n        return (value || '').toString();\\n      });\\n      $compile.$$addBindingClass(tElement);\\n\\n      return function ngBindHtmlLink(scope, element, attr) {\\n        $compile.$$addBindingInfo(element, attr.ngBindHtml);\\n\\n        scope.$watch(ngBindHtmlWatch, function ngBindHtmlWatchAction() {\\n          // we re-evaluate the expr because we want a TrustedValueHolderType\\n          // for $sce, not a string\\n          element.html($sce.getTrustedHtml(ngBindHtmlGetter(scope)) || '');\\n        });\\n      };\\n    }\\n  };\\n}];\\n\\n/**\\n * @ngdoc directive\\n * @name ngChange\\n *\\n * @description\\n * Evaluate the given expression when the user changes the input.\\n * The expression is evaluated immediately, unlike the JavaScript onchange event\\n * which only triggers at the end of a change (usually, when the user leaves the\\n * form element or presses the return key).\\n *\\n * The `ngChange` expression is only evaluated when a change in the input value causes\\n * a new value to be committed to the model.\\n *\\n * It will not be evaluated:\\n * * if the value returned from the `$parsers` transformation pipeline has not changed\\n * * if the input has continued to be invalid since the model will stay `null`\\n * * if the model is changed programmatically and not by a change to the input value\\n *\\n *\\n * Note, this directive requires `ngModel` to be present.\\n *\\n * @element input\\n * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change\\n * in input value.\\n *\\n * @example\\n * <example name=\\\"ngChange-directive\\\" module=\\\"changeExample\\\">\\n *   <file name=\\\"index.html\\\">\\n *     <script>\\n *       angular.module('changeExample', [])\\n *         .controller('ExampleController', ['$scope', function($scope) {\\n *           $scope.counter = 0;\\n *           $scope.change = function() {\\n *             $scope.counter++;\\n *           };\\n *         }]);\\n *     </script>\\n *     <div ng-controller=\\\"ExampleController\\\">\\n *       <input type=\\\"checkbox\\\" ng-model=\\\"confirmed\\\" ng-change=\\\"change()\\\" id=\\\"ng-change-example1\\\" />\\n *       <input type=\\\"checkbox\\\" ng-model=\\\"confirmed\\\" id=\\\"ng-change-example2\\\" />\\n *       <label for=\\\"ng-change-example2\\\">Confirmed</label><br />\\n *       <tt>debug = {{confirmed}}</tt><br/>\\n *       <tt>counter = {{counter}}</tt><br/>\\n *     </div>\\n *   </file>\\n *   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n *     var counter = element(by.binding('counter'));\\n *     var debug = element(by.binding('confirmed'));\\n *\\n *     it('should evaluate the expression if changing from view', function() {\\n *       expect(counter.getText()).toContain('0');\\n *\\n *       element(by.id('ng-change-example1')).click();\\n *\\n *       expect(counter.getText()).toContain('1');\\n *       expect(debug.getText()).toContain('true');\\n *     });\\n *\\n *     it('should not evaluate the expression if changing from model', function() {\\n *       element(by.id('ng-change-example2')).click();\\n\\n *       expect(counter.getText()).toContain('0');\\n *       expect(debug.getText()).toContain('true');\\n *     });\\n *   </file>\\n * </example>\\n */\\nvar ngChangeDirective = valueFn({\\n  restrict: 'A',\\n  require: 'ngModel',\\n  link: function(scope, element, attr, ctrl) {\\n    ctrl.$viewChangeListeners.push(function() {\\n      scope.$eval(attr.ngChange);\\n    });\\n  }\\n});\\n\\nfunction classDirective(name, selector) {\\n  name = 'ngClass' + name;\\n  return ['$animate', function($animate) {\\n    return {\\n      restrict: 'AC',\\n      link: function(scope, element, attr) {\\n        var oldVal;\\n\\n        scope.$watch(attr[name], ngClassWatchAction, true);\\n\\n        attr.$observe('class', function(value) {\\n          ngClassWatchAction(scope.$eval(attr[name]));\\n        });\\n\\n\\n        if (name !== 'ngClass') {\\n          scope.$watch('$index', function($index, old$index) {\\n            // jshint bitwise: false\\n            var mod = $index & 1;\\n            if (mod !== (old$index & 1)) {\\n              var classes = arrayClasses(scope.$eval(attr[name]));\\n              mod === selector ?\\n                addClasses(classes) :\\n                removeClasses(classes);\\n            }\\n          });\\n        }\\n\\n        function addClasses(classes) {\\n          var newClasses = digestClassCounts(classes, 1);\\n          attr.$addClass(newClasses);\\n        }\\n\\n        function removeClasses(classes) {\\n          var newClasses = digestClassCounts(classes, -1);\\n          attr.$removeClass(newClasses);\\n        }\\n\\n        function digestClassCounts(classes, count) {\\n          var classCounts = element.data('$classCounts') || {};\\n          var classesToUpdate = [];\\n          forEach(classes, function(className) {\\n            if (count > 0 || classCounts[className]) {\\n              classCounts[className] = (classCounts[className] || 0) + count;\\n              if (classCounts[className] === +(count > 0)) {\\n                classesToUpdate.push(className);\\n              }\\n            }\\n          });\\n          element.data('$classCounts', classCounts);\\n          return classesToUpdate.join(' ');\\n        }\\n\\n        function updateClasses(oldClasses, newClasses) {\\n          var toAdd = arrayDifference(newClasses, oldClasses);\\n          var toRemove = arrayDifference(oldClasses, newClasses);\\n          toAdd = digestClassCounts(toAdd, 1);\\n          toRemove = digestClassCounts(toRemove, -1);\\n          if (toAdd && toAdd.length) {\\n            $animate.addClass(element, toAdd);\\n          }\\n          if (toRemove && toRemove.length) {\\n            $animate.removeClass(element, toRemove);\\n          }\\n        }\\n\\n        function ngClassWatchAction(newVal) {\\n          if (selector === true || scope.$index % 2 === selector) {\\n            var newClasses = arrayClasses(newVal || []);\\n            if (!oldVal) {\\n              addClasses(newClasses);\\n            } else if (!equals(newVal,oldVal)) {\\n              var oldClasses = arrayClasses(oldVal);\\n              updateClasses(oldClasses, newClasses);\\n            }\\n          }\\n          oldVal = shallowCopy(newVal);\\n        }\\n      }\\n    };\\n\\n    function arrayDifference(tokens1, tokens2) {\\n      var values = [];\\n\\n      outer:\\n      for (var i = 0; i < tokens1.length; i++) {\\n        var token = tokens1[i];\\n        for (var j = 0; j < tokens2.length; j++) {\\n          if (token == tokens2[j]) continue outer;\\n        }\\n        values.push(token);\\n      }\\n      return values;\\n    }\\n\\n    function arrayClasses(classVal) {\\n      if (isArray(classVal)) {\\n        return classVal;\\n      } else if (isString(classVal)) {\\n        return classVal.split(' ');\\n      } else if (isObject(classVal)) {\\n        var classes = [];\\n        forEach(classVal, function(v, k) {\\n          if (v) {\\n            classes = classes.concat(k.split(' '));\\n          }\\n        });\\n        return classes;\\n      }\\n      return classVal;\\n    }\\n  }];\\n}\\n\\n/**\\n * @ngdoc directive\\n * @name ngClass\\n * @restrict AC\\n *\\n * @description\\n * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\\n * an expression that represents all classes to be added.\\n *\\n * The directive operates in three different ways, depending on which of three types the expression\\n * evaluates to:\\n *\\n * 1. If the expression evaluates to a string, the string should be one or more space-delimited class\\n * names.\\n *\\n * 2. If the expression evaluates to an array, each element of the array should be a string that is\\n * one or more space-delimited class names.\\n *\\n * 3. If the expression evaluates to an object, then for each key-value pair of the\\n * object with a truthy value the corresponding key is used as a class name.\\n *\\n * The directive won't add duplicate classes if a particular class was already set.\\n *\\n * When the expression changes, the previously added classes are removed and only then the\\n * new classes are added.\\n *\\n * @animations\\n * **add** - happens just before the class is applied to the elements\\n *\\n * **remove** - happens just before the class is removed from the element\\n *\\n * @element ANY\\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\\n *   of the evaluation can be a string representing space delimited class\\n *   names, an array, or a map of class names to boolean values. In the case of a map, the\\n *   names of the properties whose values are truthy will be added as css classes to the\\n *   element.\\n *\\n * @example Example that demonstrates basic bindings via ngClass directive.\\n   <example>\\n     <file name=\\\"index.html\\\">\\n       <p ng-class=\\\"{strike: deleted, bold: important, red: error}\\\">Map Syntax Example</p>\\n       <input type=\\\"checkbox\\\" ng-model=\\\"deleted\\\"> deleted (apply \\\"strike\\\" class)<br>\\n       <input type=\\\"checkbox\\\" ng-model=\\\"important\\\"> important (apply \\\"bold\\\" class)<br>\\n       <input type=\\\"checkbox\\\" ng-model=\\\"error\\\"> error (apply \\\"red\\\" class)\\n       <hr>\\n       <p ng-class=\\\"style\\\">Using String Syntax</p>\\n       <input type=\\\"text\\\" ng-model=\\\"style\\\" placeholder=\\\"Type: bold strike red\\\">\\n       <hr>\\n       <p ng-class=\\\"[style1, style2, style3]\\\">Using Array Syntax</p>\\n       <input ng-model=\\\"style1\\\" placeholder=\\\"Type: bold, strike or red\\\"><br>\\n       <input ng-model=\\\"style2\\\" placeholder=\\\"Type: bold, strike or red\\\"><br>\\n       <input ng-model=\\\"style3\\\" placeholder=\\\"Type: bold, strike or red\\\"><br>\\n     </file>\\n     <file name=\\\"style.css\\\">\\n       .strike {\\n         text-decoration: line-through;\\n       }\\n       .bold {\\n           font-weight: bold;\\n       }\\n       .red {\\n           color: red;\\n       }\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       var ps = element.all(by.css('p'));\\n\\n       it('should let you toggle the class', function() {\\n\\n         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);\\n         expect(ps.first().getAttribute('class')).not.toMatch(/red/);\\n\\n         element(by.model('important')).click();\\n         expect(ps.first().getAttribute('class')).toMatch(/bold/);\\n\\n         element(by.model('error')).click();\\n         expect(ps.first().getAttribute('class')).toMatch(/red/);\\n       });\\n\\n       it('should let you toggle string example', function() {\\n         expect(ps.get(1).getAttribute('class')).toBe('');\\n         element(by.model('style')).clear();\\n         element(by.model('style')).sendKeys('red');\\n         expect(ps.get(1).getAttribute('class')).toBe('red');\\n       });\\n\\n       it('array example should have 3 classes', function() {\\n         expect(ps.last().getAttribute('class')).toBe('');\\n         element(by.model('style1')).sendKeys('bold');\\n         element(by.model('style2')).sendKeys('strike');\\n         element(by.model('style3')).sendKeys('red');\\n         expect(ps.last().getAttribute('class')).toBe('bold strike red');\\n       });\\n     </file>\\n   </example>\\n\\n   ## Animations\\n\\n   The example below demonstrates how to perform animations using ngClass.\\n\\n   <example module=\\\"ngAnimate\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n     <file name=\\\"index.html\\\">\\n      <input id=\\\"setbtn\\\" type=\\\"button\\\" value=\\\"set\\\" ng-click=\\\"myVar='my-class'\\\">\\n      <input id=\\\"clearbtn\\\" type=\\\"button\\\" value=\\\"clear\\\" ng-click=\\\"myVar=''\\\">\\n      <br>\\n      <span class=\\\"base-class\\\" ng-class=\\\"myVar\\\">Sample Text</span>\\n     </file>\\n     <file name=\\\"style.css\\\">\\n       .base-class {\\n         -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n       }\\n\\n       .base-class.my-class {\\n         color: red;\\n         font-size:3em;\\n       }\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-class', function() {\\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\\n           toMatch(/my-class/);\\n\\n         element(by.id('setbtn')).click();\\n\\n         expect(element(by.css('.base-class')).getAttribute('class')).\\n           toMatch(/my-class/);\\n\\n         element(by.id('clearbtn')).click();\\n\\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\\n           toMatch(/my-class/);\\n       });\\n     </file>\\n   </example>\\n\\n\\n   ## ngClass and pre-existing CSS3 Transitions/Animations\\n   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.\\n   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder\\n   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure\\n   to view the step by step details of {@link ng.$animate#addClass $animate.addClass} and\\n   {@link ng.$animate#removeClass $animate.removeClass}.\\n */\\nvar ngClassDirective = classDirective('', true);\\n\\n/**\\n * @ngdoc directive\\n * @name ngClassOdd\\n * @restrict AC\\n *\\n * @description\\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\\n * {@link ng.directive:ngClass ngClass}, except they work in\\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\\n *\\n * This directive can be applied only within the scope of an\\n * {@link ng.directive:ngRepeat ngRepeat}.\\n *\\n * @element ANY\\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\\n *   of the evaluation can be a string representing space delimited class names or an array.\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n        <ol ng-init=\\\"names=['John', 'Mary', 'Cate', 'Suz']\\\">\\n          <li ng-repeat=\\\"name in names\\\">\\n           <span ng-class-odd=\\\"'odd'\\\" ng-class-even=\\\"'even'\\\">\\n             {{name}}\\n           </span>\\n          </li>\\n        </ol>\\n     </file>\\n     <file name=\\\"style.css\\\">\\n       .odd {\\n         color: red;\\n       }\\n       .even {\\n         color: blue;\\n       }\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-class-odd and ng-class-even', function() {\\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\\n           toMatch(/odd/);\\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\\n           toMatch(/even/);\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngClassOddDirective = classDirective('Odd', 0);\\n\\n/**\\n * @ngdoc directive\\n * @name ngClassEven\\n * @restrict AC\\n *\\n * @description\\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\\n * {@link ng.directive:ngClass ngClass}, except they work in\\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\\n *\\n * This directive can be applied only within the scope of an\\n * {@link ng.directive:ngRepeat ngRepeat}.\\n *\\n * @element ANY\\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\\n *   result of the evaluation can be a string representing space delimited class names or an array.\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n        <ol ng-init=\\\"names=['John', 'Mary', 'Cate', 'Suz']\\\">\\n          <li ng-repeat=\\\"name in names\\\">\\n           <span ng-class-odd=\\\"'odd'\\\" ng-class-even=\\\"'even'\\\">\\n             {{name}} &nbsp; &nbsp; &nbsp;\\n           </span>\\n          </li>\\n        </ol>\\n     </file>\\n     <file name=\\\"style.css\\\">\\n       .odd {\\n         color: red;\\n       }\\n       .even {\\n         color: blue;\\n       }\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-class-odd and ng-class-even', function() {\\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\\n           toMatch(/odd/);\\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\\n           toMatch(/even/);\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngClassEvenDirective = classDirective('Even', 1);\\n\\n/**\\n * @ngdoc directive\\n * @name ngCloak\\n * @restrict AC\\n *\\n * @description\\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\\n * directive to avoid the undesirable flicker effect caused by the html template display.\\n *\\n * The directive can be applied to the `<body>` element, but the preferred usage is to apply\\n * multiple `ngCloak` directives to small portions of the page to permit progressive rendering\\n * of the browser view.\\n *\\n * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\\n * `angular.min.js`.\\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\\n *\\n * ```css\\n * [ng\\\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\\n *   display: none !important;\\n * }\\n * ```\\n *\\n * When this css rule is loaded by the browser, all html elements (including their children) that\\n * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\\n * during the compilation of the template it deletes the `ngCloak` element attribute, making\\n * the compiled element visible.\\n *\\n * For the best result, the `angular.js` script must be loaded in the head section of the html\\n * document; alternatively, the css rule above must be included in the external stylesheet of the\\n * application.\\n *\\n * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\\n * cannot match the `[ng\\\\:cloak]` selector. To work around this limitation, you must add the css\\n * class `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.\\n *\\n * @element ANY\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n        <div id=\\\"template1\\\" ng-cloak>{{ 'hello' }}</div>\\n        <div id=\\\"template2\\\" ng-cloak class=\\\"ng-cloak\\\">{{ 'hello IE7' }}</div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should remove the template directive and css class', function() {\\n         expect($('#template1').getAttribute('ng-cloak')).\\n           toBeNull();\\n         expect($('#template2').getAttribute('ng-cloak')).\\n           toBeNull();\\n       });\\n     </file>\\n   </example>\\n *\\n */\\nvar ngCloakDirective = ngDirective({\\n  compile: function(element, attr) {\\n    attr.$set('ngCloak', undefined);\\n    element.removeClass('ng-cloak');\\n  }\\n});\\n\\n/**\\n * @ngdoc directive\\n * @name ngController\\n *\\n * @description\\n * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\\n * supports the principles behind the Model-View-Controller design pattern.\\n *\\n * MVC components in angular:\\n *\\n * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\\n *   are accessed through bindings.\\n * * View — The template (HTML with data bindings) that is rendered into the View.\\n * * Controller — The `ngController` directive specifies a Controller class; the class contains business\\n *   logic behind the application to decorate the scope with functions and values\\n *\\n * Note that you can also attach controllers to the DOM by declaring it in a route definition\\n * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\\n * again using `ng-controller` in the template itself.  This will cause the controller to be attached\\n * and executed twice.\\n *\\n * @element ANY\\n * @scope\\n * @priority 500\\n * @param {expression} ngController Name of a constructor function registered with the current\\n * {@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}\\n * that on the current scope evaluates to a constructor function.\\n *\\n * The controller instance can be published into a scope property by specifying\\n * `ng-controller=\\\"as propertyName\\\"`.\\n *\\n * If the current `$controllerProvider` is configured to use globals (via\\n * {@link ng.$controllerProvider#allowGlobals `$controllerProvider.allowGlobals()` }), this may\\n * also be the name of a globally accessible constructor function (not recommended).\\n *\\n * @example\\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\\n * greeting are methods declared on the controller (see source tab). These methods can\\n * easily be called from the angular markup. Any changes to the data are automatically reflected\\n * in the View without the need for a manual update.\\n *\\n * Two different declaration styles are included below:\\n *\\n * * one binds methods and properties directly onto the controller using `this`:\\n * `ng-controller=\\\"SettingsController1 as settings\\\"`\\n * * one injects `$scope` into the controller:\\n * `ng-controller=\\\"SettingsController2\\\"`\\n *\\n * The second option is more common in the Angular community, and is generally used in boilerplates\\n * and in this guide. However, there are advantages to binding properties directly to the controller\\n * and avoiding scope.\\n *\\n * * Using `controller as` makes it obvious which controller you are accessing in the template when\\n * multiple controllers apply to an element.\\n * * If you are writing your controllers as classes you have easier access to the properties and\\n * methods, which will appear on the scope, from inside the controller code.\\n * * Since there is always a `.` in the bindings, you don't have to worry about prototypal\\n * inheritance masking primitives.\\n *\\n * This example demonstrates the `controller as` syntax.\\n *\\n * <example name=\\\"ngControllerAs\\\" module=\\\"controllerAsExample\\\">\\n *   <file name=\\\"index.html\\\">\\n *    <div id=\\\"ctrl-as-exmpl\\\" ng-controller=\\\"SettingsController1 as settings\\\">\\n *      Name: <input type=\\\"text\\\" ng-model=\\\"settings.name\\\"/>\\n *      [ <a href=\\\"\\\" ng-click=\\\"settings.greet()\\\">greet</a> ]<br/>\\n *      Contact:\\n *      <ul>\\n *        <li ng-repeat=\\\"contact in settings.contacts\\\">\\n *          <select ng-model=\\\"contact.type\\\">\\n *             <option>phone</option>\\n *             <option>email</option>\\n *          </select>\\n *          <input type=\\\"text\\\" ng-model=\\\"contact.value\\\"/>\\n *          [ <a href=\\\"\\\" ng-click=\\\"settings.clearContact(contact)\\\">clear</a>\\n *          | <a href=\\\"\\\" ng-click=\\\"settings.removeContact(contact)\\\">X</a> ]\\n *        </li>\\n *        <li>[ <a href=\\\"\\\" ng-click=\\\"settings.addContact()\\\">add</a> ]</li>\\n *     </ul>\\n *    </div>\\n *   </file>\\n *   <file name=\\\"app.js\\\">\\n *    angular.module('controllerAsExample', [])\\n *      .controller('SettingsController1', SettingsController1);\\n *\\n *    function SettingsController1() {\\n *      this.name = \\\"John Smith\\\";\\n *      this.contacts = [\\n *        {type: 'phone', value: '408 555 1212'},\\n *        {type: 'email', value: 'john.smith@example.org'} ];\\n *    }\\n *\\n *    SettingsController1.prototype.greet = function() {\\n *      alert(this.name);\\n *    };\\n *\\n *    SettingsController1.prototype.addContact = function() {\\n *      this.contacts.push({type: 'email', value: 'yourname@example.org'});\\n *    };\\n *\\n *    SettingsController1.prototype.removeContact = function(contactToRemove) {\\n *     var index = this.contacts.indexOf(contactToRemove);\\n *      this.contacts.splice(index, 1);\\n *    };\\n *\\n *    SettingsController1.prototype.clearContact = function(contact) {\\n *      contact.type = 'phone';\\n *      contact.value = '';\\n *    };\\n *   </file>\\n *   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n *     it('should check controller as', function() {\\n *       var container = element(by.id('ctrl-as-exmpl'));\\n *         expect(container.element(by.model('settings.name'))\\n *           .getAttribute('value')).toBe('John Smith');\\n *\\n *       var firstRepeat =\\n *           container.element(by.repeater('contact in settings.contacts').row(0));\\n *       var secondRepeat =\\n *           container.element(by.repeater('contact in settings.contacts').row(1));\\n *\\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\\n *           .toBe('408 555 1212');\\n *\\n *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\\n *           .toBe('john.smith@example.org');\\n *\\n *       firstRepeat.element(by.linkText('clear')).click();\\n *\\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\\n *           .toBe('');\\n *\\n *       container.element(by.linkText('add')).click();\\n *\\n *       expect(container.element(by.repeater('contact in settings.contacts').row(2))\\n *           .element(by.model('contact.value'))\\n *           .getAttribute('value'))\\n *           .toBe('yourname@example.org');\\n *     });\\n *   </file>\\n * </example>\\n *\\n * This example demonstrates the \\\"attach to `$scope`\\\" style of controller.\\n *\\n * <example name=\\\"ngController\\\" module=\\\"controllerExample\\\">\\n *  <file name=\\\"index.html\\\">\\n *   <div id=\\\"ctrl-exmpl\\\" ng-controller=\\\"SettingsController2\\\">\\n *     Name: <input type=\\\"text\\\" ng-model=\\\"name\\\"/>\\n *     [ <a href=\\\"\\\" ng-click=\\\"greet()\\\">greet</a> ]<br/>\\n *     Contact:\\n *     <ul>\\n *       <li ng-repeat=\\\"contact in contacts\\\">\\n *         <select ng-model=\\\"contact.type\\\">\\n *            <option>phone</option>\\n *            <option>email</option>\\n *         </select>\\n *         <input type=\\\"text\\\" ng-model=\\\"contact.value\\\"/>\\n *         [ <a href=\\\"\\\" ng-click=\\\"clearContact(contact)\\\">clear</a>\\n *         | <a href=\\\"\\\" ng-click=\\\"removeContact(contact)\\\">X</a> ]\\n *       </li>\\n *       <li>[ <a href=\\\"\\\" ng-click=\\\"addContact()\\\">add</a> ]</li>\\n *    </ul>\\n *   </div>\\n *  </file>\\n *  <file name=\\\"app.js\\\">\\n *   angular.module('controllerExample', [])\\n *     .controller('SettingsController2', ['$scope', SettingsController2]);\\n *\\n *   function SettingsController2($scope) {\\n *     $scope.name = \\\"John Smith\\\";\\n *     $scope.contacts = [\\n *       {type:'phone', value:'408 555 1212'},\\n *       {type:'email', value:'john.smith@example.org'} ];\\n *\\n *     $scope.greet = function() {\\n *       alert($scope.name);\\n *     };\\n *\\n *     $scope.addContact = function() {\\n *       $scope.contacts.push({type:'email', value:'yourname@example.org'});\\n *     };\\n *\\n *     $scope.removeContact = function(contactToRemove) {\\n *       var index = $scope.contacts.indexOf(contactToRemove);\\n *       $scope.contacts.splice(index, 1);\\n *     };\\n *\\n *     $scope.clearContact = function(contact) {\\n *       contact.type = 'phone';\\n *       contact.value = '';\\n *     };\\n *   }\\n *  </file>\\n *  <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n *    it('should check controller', function() {\\n *      var container = element(by.id('ctrl-exmpl'));\\n *\\n *      expect(container.element(by.model('name'))\\n *          .getAttribute('value')).toBe('John Smith');\\n *\\n *      var firstRepeat =\\n *          container.element(by.repeater('contact in contacts').row(0));\\n *      var secondRepeat =\\n *          container.element(by.repeater('contact in contacts').row(1));\\n *\\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\\n *          .toBe('408 555 1212');\\n *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\\n *          .toBe('john.smith@example.org');\\n *\\n *      firstRepeat.element(by.linkText('clear')).click();\\n *\\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\\n *          .toBe('');\\n *\\n *      container.element(by.linkText('add')).click();\\n *\\n *      expect(container.element(by.repeater('contact in contacts').row(2))\\n *          .element(by.model('contact.value'))\\n *          .getAttribute('value'))\\n *          .toBe('yourname@example.org');\\n *    });\\n *  </file>\\n *</example>\\n\\n */\\nvar ngControllerDirective = [function() {\\n  return {\\n    restrict: 'A',\\n    scope: true,\\n    controller: '@',\\n    priority: 500\\n  };\\n}];\\n\\n/**\\n * @ngdoc directive\\n * @name ngCsp\\n *\\n * @element html\\n * @description\\n * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\\n *\\n * This is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.\\n *\\n * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\\n * For Angular to be CSP compatible there are only two things that we need to do differently:\\n *\\n * - don't use `Function` constructor to generate optimized value getters\\n * - don't inject custom stylesheet into the document\\n *\\n * AngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`\\n * directive will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will\\n * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\\n * be raised.\\n *\\n * CSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically\\n * includes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).\\n * To make those directives work in CSP mode, include the `angular-csp.css` manually.\\n *\\n * Angular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This\\n * autodetection however triggers a CSP error to be logged in the console:\\n *\\n * ```\\n * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\\n * script in the following Content Security Policy directive: \\\"default-src 'self'\\\". Note that\\n * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.\\n * ```\\n *\\n * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\\n * directive on the root element of the application or on the `angular.js` script tag, whichever\\n * appears first in the html document.\\n *\\n * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*\\n *\\n * @example\\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\\n   ```html\\n     <!doctype html>\\n     <html ng-app ng-csp>\\n     ...\\n     ...\\n     </html>\\n   ```\\n  * @example\\n      // Note: the suffix `.csp` in the example name triggers\\n      // csp mode in our http server!\\n      <example name=\\\"example.csp\\\" module=\\\"cspExample\\\" ng-csp=\\\"true\\\">\\n        <file name=\\\"index.html\\\">\\n          <div ng-controller=\\\"MainController as ctrl\\\">\\n            <div>\\n              <button ng-click=\\\"ctrl.inc()\\\" id=\\\"inc\\\">Increment</button>\\n              <span id=\\\"counter\\\">\\n                {{ctrl.counter}}\\n              </span>\\n            </div>\\n\\n            <div>\\n              <button ng-click=\\\"ctrl.evil()\\\" id=\\\"evil\\\">Evil</button>\\n              <span id=\\\"evilError\\\">\\n                {{ctrl.evilError}}\\n              </span>\\n            </div>\\n          </div>\\n        </file>\\n        <file name=\\\"script.js\\\">\\n           angular.module('cspExample', [])\\n             .controller('MainController', function() {\\n                this.counter = 0;\\n                this.inc = function() {\\n                  this.counter++;\\n                };\\n                this.evil = function() {\\n                  // jshint evil:true\\n                  try {\\n                    eval('1+2');\\n                  } catch (e) {\\n                    this.evilError = e.message;\\n                  }\\n                };\\n              });\\n        </file>\\n        <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n          var util, webdriver;\\n\\n          var incBtn = element(by.id('inc'));\\n          var counter = element(by.id('counter'));\\n          var evilBtn = element(by.id('evil'));\\n          var evilError = element(by.id('evilError'));\\n\\n          function getAndClearSevereErrors() {\\n            return browser.manage().logs().get('browser').then(function(browserLog) {\\n              return browserLog.filter(function(logEntry) {\\n                return logEntry.level.value > webdriver.logging.Level.WARNING.value;\\n              });\\n            });\\n          }\\n\\n          function clearErrors() {\\n            getAndClearSevereErrors();\\n          }\\n\\n          function expectNoErrors() {\\n            getAndClearSevereErrors().then(function(filteredLog) {\\n              expect(filteredLog.length).toEqual(0);\\n              if (filteredLog.length) {\\n                console.log('browser console errors: ' + util.inspect(filteredLog));\\n              }\\n            });\\n          }\\n\\n          function expectError(regex) {\\n            getAndClearSevereErrors().then(function(filteredLog) {\\n              var found = false;\\n              filteredLog.forEach(function(log) {\\n                if (log.message.match(regex)) {\\n                  found = true;\\n                }\\n              });\\n              if (!found) {\\n                throw new Error('expected an error that matches ' + regex);\\n              }\\n            });\\n          }\\n\\n          beforeEach(function() {\\n            util = require('util');\\n            webdriver = require('protractor/node_modules/selenium-webdriver');\\n          });\\n\\n          // For now, we only test on Chrome,\\n          // as Safari does not load the page with Protractor's injected scripts,\\n          // and Firefox webdriver always disables content security policy (#6358)\\n          if (browser.params.browser !== 'chrome') {\\n            return;\\n          }\\n\\n          it('should not report errors when the page is loaded', function() {\\n            // clear errors so we are not dependent on previous tests\\n            clearErrors();\\n            // Need to reload the page as the page is already loaded when\\n            // we come here\\n            browser.driver.getCurrentUrl().then(function(url) {\\n              browser.get(url);\\n            });\\n            expectNoErrors();\\n          });\\n\\n          it('should evaluate expressions', function() {\\n            expect(counter.getText()).toEqual('0');\\n            incBtn.click();\\n            expect(counter.getText()).toEqual('1');\\n            expectNoErrors();\\n          });\\n\\n          it('should throw and report an error when using \\\"eval\\\"', function() {\\n            evilBtn.click();\\n            expect(evilError.getText()).toMatch(/Content Security Policy/);\\n            expectError(/Content Security Policy/);\\n          });\\n        </file>\\n      </example>\\n  */\\n\\n// ngCsp is not implemented as a proper directive any more, because we need it be processed while we\\n// bootstrap the system (before $parse is instantiated), for this reason we just have\\n// the csp.isActive() fn that looks for ng-csp attribute anywhere in the current doc\\n\\n/**\\n * @ngdoc directive\\n * @name ngClick\\n *\\n * @description\\n * The ngClick directive allows you to specify custom behavior when\\n * an element is clicked.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\\n * click. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-click=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment\\n      </button>\\n      <span>\\n        count: {{count}}\\n      </span>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-click', function() {\\n         expect(element(by.binding('count')).getText()).toMatch('0');\\n         element(by.css('button')).click();\\n         expect(element(by.binding('count')).getText()).toMatch('1');\\n       });\\n     </file>\\n   </example>\\n */\\n/*\\n * A collection of directives that allows creation of custom event handlers that are defined as\\n * angular expressions and are compiled and executed within the current scope.\\n */\\nvar ngEventDirectives = {};\\n\\n// For events that might fire synchronously during DOM manipulation\\n// we need to execute their event handlers asynchronously using $evalAsync,\\n// so that they are not executed in an inconsistent state.\\nvar forceAsyncEvents = {\\n  'blur': true,\\n  'focus': true\\n};\\nforEach(\\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),\\n  function(eventName) {\\n    var directiveName = directiveNormalize('ng-' + eventName);\\n    ngEventDirectives[directiveName] = ['$parse', '$rootScope', function($parse, $rootScope) {\\n      return {\\n        restrict: 'A',\\n        compile: function($element, attr) {\\n          // We expose the powerful $event object on the scope that provides access to the Window,\\n          // etc. that isn't protected by the fast paths in $parse.  We explicitly request better\\n          // checks at the cost of speed since event handler expressions are not executed as\\n          // frequently as regular change detection.\\n          var fn = $parse(attr[directiveName], /* interceptorFn */ null, /* expensiveChecks */ true);\\n          return function ngEventHandler(scope, element) {\\n            element.on(eventName, function(event) {\\n              var callback = function() {\\n                fn(scope, {$event:event});\\n              };\\n              if (forceAsyncEvents[eventName] && $rootScope.$$phase) {\\n                scope.$evalAsync(callback);\\n              } else {\\n                scope.$apply(callback);\\n              }\\n            });\\n          };\\n        }\\n      };\\n    }];\\n  }\\n);\\n\\n/**\\n * @ngdoc directive\\n * @name ngDblclick\\n *\\n * @description\\n * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\\n * a dblclick. (The Event object is available as `$event`)\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-dblclick=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (on double click)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngMousedown\\n *\\n * @description\\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\\n * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-mousedown=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (on mouse down)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngMouseup\\n *\\n * @description\\n * Specify custom behavior on mouseup event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\\n * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-mouseup=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (on mouse up)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngMouseover\\n *\\n * @description\\n * Specify custom behavior on mouseover event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\\n * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-mouseover=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (when mouse is over)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngMouseenter\\n *\\n * @description\\n * Specify custom behavior on mouseenter event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\\n * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-mouseenter=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (when mouse enters)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngMouseleave\\n *\\n * @description\\n * Specify custom behavior on mouseleave event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\\n * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-mouseleave=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (when mouse leaves)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngMousemove\\n *\\n * @description\\n * Specify custom behavior on mousemove event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\\n * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <button ng-mousemove=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n        Increment (when mouse moves)\\n      </button>\\n      count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngKeydown\\n *\\n * @description\\n * Specify custom behavior on keydown event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\\n * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <input ng-keydown=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n      key down count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngKeyup\\n *\\n * @description\\n * Specify custom behavior on keyup event.\\n *\\n * @element ANY\\n * @priority 0\\n * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\\n * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n       <p>Typing in the input box below updates the key count</p>\\n       <input ng-keyup=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\"> key up count: {{count}}\\n\\n       <p>Typing in the input box below updates the keycode</p>\\n       <input ng-keyup=\\\"event=$event\\\">\\n       <p>event keyCode: {{ event.keyCode }}</p>\\n       <p>event altKey: {{ event.altKey }}</p>\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngKeypress\\n *\\n * @description\\n * Specify custom behavior on keypress event.\\n *\\n * @element ANY\\n * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\\n * keypress. ({@link guide/expression#-event- Event object is available as `$event`}\\n * and can be interrogated for keyCode, altKey, etc.)\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <input ng-keypress=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n      key press count: {{count}}\\n     </file>\\n   </example>\\n */\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngSubmit\\n *\\n * @description\\n * Enables binding angular expressions to onsubmit events.\\n *\\n * Additionally it prevents the default action (which for form means sending the request to the\\n * server and reloading the current page), but only if the form does not contain `action`,\\n * `data-action`, or `x-action` attributes.\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Warning:** Be careful not to cause \\\"double-submission\\\" by using both the `ngClick` and\\n * `ngSubmit` handlers together. See the\\n * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\\n * for a detailed discussion of when `ngSubmit` may be triggered.\\n * </div>\\n *\\n * @element form\\n * @priority 0\\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\\n * ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example module=\\\"submitExample\\\">\\n     <file name=\\\"index.html\\\">\\n      <script>\\n        angular.module('submitExample', [])\\n          .controller('ExampleController', ['$scope', function($scope) {\\n            $scope.list = [];\\n            $scope.text = 'hello';\\n            $scope.submit = function() {\\n              if ($scope.text) {\\n                $scope.list.push(this.text);\\n                $scope.text = '';\\n              }\\n            };\\n          }]);\\n      </script>\\n      <form ng-submit=\\\"submit()\\\" ng-controller=\\\"ExampleController\\\">\\n        Enter text and hit enter:\\n        <input type=\\\"text\\\" ng-model=\\\"text\\\" name=\\\"text\\\" />\\n        <input type=\\\"submit\\\" id=\\\"submit\\\" value=\\\"Submit\\\" />\\n        <pre>list={{list}}</pre>\\n      </form>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-submit', function() {\\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\\n         element(by.css('#submit')).click();\\n         expect(element(by.binding('list')).getText()).toContain('hello');\\n         expect(element(by.model('text')).getAttribute('value')).toBe('');\\n       });\\n       it('should ignore empty strings', function() {\\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\\n         element(by.css('#submit')).click();\\n         element(by.css('#submit')).click();\\n         expect(element(by.binding('list')).getText()).toContain('hello');\\n        });\\n     </file>\\n   </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngFocus\\n *\\n * @description\\n * Specify custom behavior on focus event.\\n *\\n * Note: As the `focus` event is executed synchronously when calling `input.focus()`\\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\\n * during an `$apply` to ensure a consistent state.\\n *\\n * @element window, input, select, textarea, a\\n * @priority 0\\n * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon\\n * focus. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n * See {@link ng.directive:ngClick ngClick}\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngBlur\\n *\\n * @description\\n * Specify custom behavior on blur event.\\n *\\n * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\\n * an element has lost focus.\\n *\\n * Note: As the `blur` event is executed synchronously also during DOM manipulations\\n * (e.g. removing a focussed input),\\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\\n * during an `$apply` to ensure a consistent state.\\n *\\n * @element window, input, select, textarea, a\\n * @priority 0\\n * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon\\n * blur. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n * See {@link ng.directive:ngClick ngClick}\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngCopy\\n *\\n * @description\\n * Specify custom behavior on copy event.\\n *\\n * @element window, input, select, textarea, a\\n * @priority 0\\n * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon\\n * copy. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <input ng-copy=\\\"copied=true\\\" ng-init=\\\"copied=false; value='copy me'\\\" ng-model=\\\"value\\\">\\n      copied: {{copied}}\\n     </file>\\n   </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngCut\\n *\\n * @description\\n * Specify custom behavior on cut event.\\n *\\n * @element window, input, select, textarea, a\\n * @priority 0\\n * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon\\n * cut. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <input ng-cut=\\\"cut=true\\\" ng-init=\\\"cut=false; value='cut me'\\\" ng-model=\\\"value\\\">\\n      cut: {{cut}}\\n     </file>\\n   </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngPaste\\n *\\n * @description\\n * Specify custom behavior on paste event.\\n *\\n * @element window, input, select, textarea, a\\n * @priority 0\\n * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon\\n * paste. ({@link guide/expression#-event- Event object is available as `$event`})\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n      <input ng-paste=\\\"paste=true\\\" ng-init=\\\"paste=false\\\" placeholder='paste here'>\\n      pasted: {{paste}}\\n     </file>\\n   </example>\\n */\\n\\n/**\\n * @ngdoc directive\\n * @name ngIf\\n * @restrict A\\n *\\n * @description\\n * The `ngIf` directive removes or recreates a portion of the DOM tree based on an\\n * {expression}. If the expression assigned to `ngIf` evaluates to a false\\n * value then the element is removed from the DOM, otherwise a clone of the\\n * element is reinserted into the DOM.\\n *\\n * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\\n * element in the DOM rather than changing its visibility via the `display` css property.  A common\\n * case when this difference is significant is when using css selectors that rely on an element's\\n * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\\n *\\n * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope\\n * is created when the element is restored.  The scope created within `ngIf` inherits from\\n * its parent scope using\\n * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\\n * An important implication of this is if `ngModel` is used within `ngIf` to bind to\\n * a javascript primitive defined in the parent scope. In this case any modifications made to the\\n * variable within the child scope will override (hide) the value in the parent scope.\\n *\\n * Also, `ngIf` recreates elements using their compiled state. An example of this behavior\\n * is if an element's class attribute is directly modified after it's compiled, using something like\\n * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\\n * the added class will be lost because the original compiled state is used to regenerate the element.\\n *\\n * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`\\n * and `leave` effects.\\n *\\n * @animations\\n * enter - happens just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container\\n * leave - happens just before the `ngIf` contents are removed from the DOM\\n *\\n * @element ANY\\n * @scope\\n * @priority 600\\n * @param {expression} ngIf If the {@link guide/expression expression} is falsy then\\n *     the element is removed from the DOM tree. If it is truthy a copy of the compiled\\n *     element is added to the DOM tree.\\n *\\n * @example\\n  <example module=\\\"ngAnimate\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n    <file name=\\\"index.html\\\">\\n      Click me: <input type=\\\"checkbox\\\" ng-model=\\\"checked\\\" ng-init=\\\"checked=true\\\" /><br/>\\n      Show when checked:\\n      <span ng-if=\\\"checked\\\" class=\\\"animate-if\\\">\\n        This is removed when the checkbox is unchecked.\\n      </span>\\n    </file>\\n    <file name=\\\"animations.css\\\">\\n      .animate-if {\\n        background:white;\\n        border:1px solid black;\\n        padding:10px;\\n      }\\n\\n      .animate-if.ng-enter, .animate-if.ng-leave {\\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n      }\\n\\n      .animate-if.ng-enter,\\n      .animate-if.ng-leave.ng-leave-active {\\n        opacity:0;\\n      }\\n\\n      .animate-if.ng-leave,\\n      .animate-if.ng-enter.ng-enter-active {\\n        opacity:1;\\n      }\\n    </file>\\n  </example>\\n */\\nvar ngIfDirective = ['$animate', function($animate) {\\n  return {\\n    multiElement: true,\\n    transclude: 'element',\\n    priority: 600,\\n    terminal: true,\\n    restrict: 'A',\\n    $$tlb: true,\\n    link: function($scope, $element, $attr, ctrl, $transclude) {\\n        var block, childScope, previousElements;\\n        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {\\n\\n          if (value) {\\n            if (!childScope) {\\n              $transclude(function(clone, newScope) {\\n                childScope = newScope;\\n                clone[clone.length++] = document.createComment(' end ngIf: ' + $attr.ngIf + ' ');\\n                // Note: We only need the first/last node of the cloned nodes.\\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\\n                // by a directive with templateUrl when its template arrives.\\n                block = {\\n                  clone: clone\\n                };\\n                $animate.enter(clone, $element.parent(), $element);\\n              });\\n            }\\n          } else {\\n            if (previousElements) {\\n              previousElements.remove();\\n              previousElements = null;\\n            }\\n            if (childScope) {\\n              childScope.$destroy();\\n              childScope = null;\\n            }\\n            if (block) {\\n              previousElements = getBlockNodes(block.clone);\\n              $animate.leave(previousElements).then(function() {\\n                previousElements = null;\\n              });\\n              block = null;\\n            }\\n          }\\n        });\\n    }\\n  };\\n}];\\n\\n/**\\n * @ngdoc directive\\n * @name ngInclude\\n * @restrict ECA\\n *\\n * @description\\n * Fetches, compiles and includes an external HTML fragment.\\n *\\n * By default, the template URL is restricted to the same domain and protocol as the\\n * application document. This is done by calling {@link $sce#getTrustedResourceUrl\\n * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\\n * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\\n * {@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\\n * ng.$sce Strict Contextual Escaping}.\\n *\\n * In addition, the browser's\\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\\n * policy may further restrict whether the template is successfully loaded.\\n * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\\n * access on some browsers.\\n *\\n * @animations\\n * enter - animation is used to bring new content into the browser.\\n * leave - animation is used to animate existing content away.\\n *\\n * The enter and leave animation occur concurrently.\\n *\\n * @scope\\n * @priority 400\\n *\\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\\n *                 make sure you wrap it in **single** quotes, e.g. `src=\\\"'myPartialTemplate.html'\\\"`.\\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\\n *\\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\\n *\\n *                  - If the attribute is not set, disable scrolling.\\n *                  - If the attribute is set without value, enable scrolling.\\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\\n *\\n * @example\\n  <example module=\\\"includeExample\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n    <file name=\\\"index.html\\\">\\n     <div ng-controller=\\\"ExampleController\\\">\\n       <select ng-model=\\\"template\\\" ng-options=\\\"t.name for t in templates\\\">\\n        <option value=\\\"\\\">(blank)</option>\\n       </select>\\n       url of the template: <code>{{template.url}}</code>\\n       <hr/>\\n       <div class=\\\"slide-animate-container\\\">\\n         <div class=\\\"slide-animate\\\" ng-include=\\\"template.url\\\"></div>\\n       </div>\\n     </div>\\n    </file>\\n    <file name=\\\"script.js\\\">\\n      angular.module('includeExample', ['ngAnimate'])\\n        .controller('ExampleController', ['$scope', function($scope) {\\n          $scope.templates =\\n            [ { name: 'template1.html', url: 'template1.html'},\\n              { name: 'template2.html', url: 'template2.html'} ];\\n          $scope.template = $scope.templates[0];\\n        }]);\\n     </file>\\n    <file name=\\\"template1.html\\\">\\n      Content of template1.html\\n    </file>\\n    <file name=\\\"template2.html\\\">\\n      Content of template2.html\\n    </file>\\n    <file name=\\\"animations.css\\\">\\n      .slide-animate-container {\\n        position:relative;\\n        background:white;\\n        border:1px solid black;\\n        height:40px;\\n        overflow:hidden;\\n      }\\n\\n      .slide-animate {\\n        padding:10px;\\n      }\\n\\n      .slide-animate.ng-enter, .slide-animate.ng-leave {\\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n\\n        position:absolute;\\n        top:0;\\n        left:0;\\n        right:0;\\n        bottom:0;\\n        display:block;\\n        padding:10px;\\n      }\\n\\n      .slide-animate.ng-enter {\\n        top:-50px;\\n      }\\n      .slide-animate.ng-enter.ng-enter-active {\\n        top:0;\\n      }\\n\\n      .slide-animate.ng-leave {\\n        top:0;\\n      }\\n      .slide-animate.ng-leave.ng-leave-active {\\n        top:50px;\\n      }\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var templateSelect = element(by.model('template'));\\n      var includeElem = element(by.css('[ng-include]'));\\n\\n      it('should load template1.html', function() {\\n        expect(includeElem.getText()).toMatch(/Content of template1.html/);\\n      });\\n\\n      it('should load template2.html', function() {\\n        if (browser.params.browser == 'firefox') {\\n          // Firefox can't handle using selects\\n          // See https://github.com/angular/protractor/issues/480\\n          return;\\n        }\\n        templateSelect.click();\\n        templateSelect.all(by.css('option')).get(2).click();\\n        expect(includeElem.getText()).toMatch(/Content of template2.html/);\\n      });\\n\\n      it('should change to blank', function() {\\n        if (browser.params.browser == 'firefox') {\\n          // Firefox can't handle using selects\\n          return;\\n        }\\n        templateSelect.click();\\n        templateSelect.all(by.css('option')).get(0).click();\\n        expect(includeElem.isPresent()).toBe(false);\\n      });\\n    </file>\\n  </example>\\n */\\n\\n\\n/**\\n * @ngdoc event\\n * @name ngInclude#$includeContentRequested\\n * @eventType emit on the scope ngInclude was declared in\\n * @description\\n * Emitted every time the ngInclude content is requested.\\n *\\n * @param {Object} angularEvent Synthetic event object.\\n * @param {String} src URL of content to load.\\n */\\n\\n\\n/**\\n * @ngdoc event\\n * @name ngInclude#$includeContentLoaded\\n * @eventType emit on the current ngInclude scope\\n * @description\\n * Emitted every time the ngInclude content is reloaded.\\n *\\n * @param {Object} angularEvent Synthetic event object.\\n * @param {String} src URL of content to load.\\n */\\n\\n\\n/**\\n * @ngdoc event\\n * @name ngInclude#$includeContentError\\n * @eventType emit on the scope ngInclude was declared in\\n * @description\\n * Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)\\n *\\n * @param {Object} angularEvent Synthetic event object.\\n * @param {String} src URL of content to load.\\n */\\nvar ngIncludeDirective = ['$templateRequest', '$anchorScroll', '$animate', '$sce',\\n                  function($templateRequest,   $anchorScroll,   $animate,   $sce) {\\n  return {\\n    restrict: 'ECA',\\n    priority: 400,\\n    terminal: true,\\n    transclude: 'element',\\n    controller: angular.noop,\\n    compile: function(element, attr) {\\n      var srcExp = attr.ngInclude || attr.src,\\n          onloadExp = attr.onload || '',\\n          autoScrollExp = attr.autoscroll;\\n\\n      return function(scope, $element, $attr, ctrl, $transclude) {\\n        var changeCounter = 0,\\n            currentScope,\\n            previousElement,\\n            currentElement;\\n\\n        var cleanupLastIncludeContent = function() {\\n          if (previousElement) {\\n            previousElement.remove();\\n            previousElement = null;\\n          }\\n          if (currentScope) {\\n            currentScope.$destroy();\\n            currentScope = null;\\n          }\\n          if (currentElement) {\\n            $animate.leave(currentElement).then(function() {\\n              previousElement = null;\\n            });\\n            previousElement = currentElement;\\n            currentElement = null;\\n          }\\n        };\\n\\n        scope.$watch($sce.parseAsResourceUrl(srcExp), function ngIncludeWatchAction(src) {\\n          var afterAnimation = function() {\\n            if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\\n              $anchorScroll();\\n            }\\n          };\\n          var thisChangeId = ++changeCounter;\\n\\n          if (src) {\\n            //set the 2nd param to true to ignore the template request error so that the inner\\n            //contents and scope can be cleaned up.\\n            $templateRequest(src, true).then(function(response) {\\n              if (thisChangeId !== changeCounter) return;\\n              var newScope = scope.$new();\\n              ctrl.template = response;\\n\\n              // Note: This will also link all children of ng-include that were contained in the original\\n              // html. If that content contains controllers, ... they could pollute/change the scope.\\n              // However, using ng-include on an element with additional content does not make sense...\\n              // Note: We can't remove them in the cloneAttchFn of $transclude as that\\n              // function is called before linking the content, which would apply child\\n              // directives to non existing elements.\\n              var clone = $transclude(newScope, function(clone) {\\n                cleanupLastIncludeContent();\\n                $animate.enter(clone, null, $element).then(afterAnimation);\\n              });\\n\\n              currentScope = newScope;\\n              currentElement = clone;\\n\\n              currentScope.$emit('$includeContentLoaded', src);\\n              scope.$eval(onloadExp);\\n            }, function() {\\n              if (thisChangeId === changeCounter) {\\n                cleanupLastIncludeContent();\\n                scope.$emit('$includeContentError', src);\\n              }\\n            });\\n            scope.$emit('$includeContentRequested', src);\\n          } else {\\n            cleanupLastIncludeContent();\\n            ctrl.template = null;\\n          }\\n        });\\n      };\\n    }\\n  };\\n}];\\n\\n// This directive is called during the $transclude call of the first `ngInclude` directive.\\n// It will replace and compile the content of the element with the loaded template.\\n// We need this directive so that the element content is already filled when\\n// the link function of another directive on the same element as ngInclude\\n// is called.\\nvar ngIncludeFillContentDirective = ['$compile',\\n  function($compile) {\\n    return {\\n      restrict: 'ECA',\\n      priority: -400,\\n      require: 'ngInclude',\\n      link: function(scope, $element, $attr, ctrl) {\\n        if (/SVG/.test($element[0].toString())) {\\n          // WebKit: https://bugs.webkit.org/show_bug.cgi?id=135698 --- SVG elements do not\\n          // support innerHTML, so detect this here and try to generate the contents\\n          // specially.\\n          $element.empty();\\n          $compile(jqLiteBuildFragment(ctrl.template, document).childNodes)(scope,\\n              function namespaceAdaptedClone(clone) {\\n            $element.append(clone);\\n          }, {futureParentElement: $element});\\n          return;\\n        }\\n\\n        $element.html(ctrl.template);\\n        $compile($element.contents())(scope);\\n      }\\n    };\\n  }];\\n\\n/**\\n * @ngdoc directive\\n * @name ngInit\\n * @restrict AC\\n *\\n * @description\\n * The `ngInit` directive allows you to evaluate an expression in the\\n * current scope.\\n *\\n * <div class=\\\"alert alert-error\\\">\\n * The only appropriate use of `ngInit` is for aliasing special properties of\\n * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you\\n * should use {@link guide/controller controllers} rather than `ngInit`\\n * to initialize values on a scope.\\n * </div>\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make\\n * sure you have parenthesis for correct precedence:\\n * <pre class=\\\"prettyprint\\\">\\n * `<div ng-init=\\\"test1 = (data | orderBy:'name')\\\"></div>`\\n * </pre>\\n * </div>\\n *\\n * @priority 450\\n *\\n * @element ANY\\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\\n *\\n * @example\\n   <example module=\\\"initExample\\\">\\n     <file name=\\\"index.html\\\">\\n   <script>\\n     angular.module('initExample', [])\\n       .controller('ExampleController', ['$scope', function($scope) {\\n         $scope.list = [['a', 'b'], ['c', 'd']];\\n       }]);\\n   </script>\\n   <div ng-controller=\\\"ExampleController\\\">\\n     <div ng-repeat=\\\"innerList in list\\\" ng-init=\\\"outerIndex = $index\\\">\\n       <div ng-repeat=\\\"value in innerList\\\" ng-init=\\\"innerIndex = $index\\\">\\n          <span class=\\\"example-init\\\">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\\n       </div>\\n     </div>\\n   </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should alias index positions', function() {\\n         var elements = element.all(by.css('.example-init'));\\n         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');\\n         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');\\n         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');\\n         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngInitDirective = ngDirective({\\n  priority: 450,\\n  compile: function() {\\n    return {\\n      pre: function(scope, element, attrs) {\\n        scope.$eval(attrs.ngInit);\\n      }\\n    };\\n  }\\n});\\n\\n/**\\n * @ngdoc directive\\n * @name ngList\\n *\\n * @description\\n * Text input that converts between a delimited string and an array of strings. The default\\n * delimiter is a comma followed by a space - equivalent to `ng-list=\\\", \\\"`. You can specify a custom\\n * delimiter as the value of the `ngList` attribute - for example, `ng-list=\\\" | \\\"`.\\n *\\n * The behaviour of the directive is affected by the use of the `ngTrim` attribute.\\n * * If `ngTrim` is set to `\\\"false\\\"` then whitespace around both the separator and each\\n *   list item is respected. This implies that the user of the directive is responsible for\\n *   dealing with whitespace but also allows you to use whitespace as a delimiter, such as a\\n *   tab or newline character.\\n * * Otherwise whitespace around the delimiter is ignored when splitting (although it is respected\\n *   when joining the list items back together) and whitespace around each list item is stripped\\n *   before it is added to the model.\\n *\\n * ### Example with Validation\\n *\\n * <example name=\\\"ngList-directive\\\" module=\\\"listExample\\\">\\n *   <file name=\\\"app.js\\\">\\n *      angular.module('listExample', [])\\n *        .controller('ExampleController', ['$scope', function($scope) {\\n *          $scope.names = ['morpheus', 'neo', 'trinity'];\\n *        }]);\\n *   </file>\\n *   <file name=\\\"index.html\\\">\\n *    <form name=\\\"myForm\\\" ng-controller=\\\"ExampleController\\\">\\n *      List: <input name=\\\"namesInput\\\" ng-model=\\\"names\\\" ng-list required>\\n *      <span class=\\\"error\\\" ng-show=\\\"myForm.namesInput.$error.required\\\">\\n *        Required!</span>\\n *      <br>\\n *      <tt>names = {{names}}</tt><br/>\\n *      <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\\n *      <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\\n *      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\\n *      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\\n *     </form>\\n *   </file>\\n *   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n *     var listInput = element(by.model('names'));\\n *     var names = element(by.exactBinding('names'));\\n *     var valid = element(by.binding('myForm.namesInput.$valid'));\\n *     var error = element(by.css('span.error'));\\n *\\n *     it('should initialize to model', function() {\\n *       expect(names.getText()).toContain('[\\\"morpheus\\\",\\\"neo\\\",\\\"trinity\\\"]');\\n *       expect(valid.getText()).toContain('true');\\n *       expect(error.getCssValue('display')).toBe('none');\\n *     });\\n *\\n *     it('should be invalid if empty', function() {\\n *       listInput.clear();\\n *       listInput.sendKeys('');\\n *\\n *       expect(names.getText()).toContain('');\\n *       expect(valid.getText()).toContain('false');\\n *       expect(error.getCssValue('display')).not.toBe('none');\\n *     });\\n *   </file>\\n * </example>\\n *\\n * ### Example - splitting on whitespace\\n * <example name=\\\"ngList-directive-newlines\\\">\\n *   <file name=\\\"index.html\\\">\\n *    <textarea ng-model=\\\"list\\\" ng-list=\\\"&#10;\\\" ng-trim=\\\"false\\\"></textarea>\\n *    <pre>{{ list | json }}</pre>\\n *   </file>\\n *   <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n *     it(\\\"should split the text by newlines\\\", function() {\\n *       var listInput = element(by.model('list'));\\n *       var output = element(by.binding('list | json'));\\n *       listInput.sendKeys('abc\\\\ndef\\\\nghi');\\n *       expect(output.getText()).toContain('[\\\\n  \\\"abc\\\",\\\\n  \\\"def\\\",\\\\n  \\\"ghi\\\"\\\\n]');\\n *     });\\n *   </file>\\n * </example>\\n *\\n * @element input\\n * @param {string=} ngList optional delimiter that should be used to split the value.\\n */\\nvar ngListDirective = function() {\\n  return {\\n    restrict: 'A',\\n    priority: 100,\\n    require: 'ngModel',\\n    link: function(scope, element, attr, ctrl) {\\n      // We want to control whitespace trimming so we use this convoluted approach\\n      // to access the ngList attribute, which doesn't pre-trim the attribute\\n      var ngList = element.attr(attr.$attr.ngList) || ', ';\\n      var trimValues = attr.ngTrim !== 'false';\\n      var separator = trimValues ? trim(ngList) : ngList;\\n\\n      var parse = function(viewValue) {\\n        // If the viewValue is invalid (say required but empty) it will be `undefined`\\n        if (isUndefined(viewValue)) return;\\n\\n        var list = [];\\n\\n        if (viewValue) {\\n          forEach(viewValue.split(separator), function(value) {\\n            if (value) list.push(trimValues ? trim(value) : value);\\n          });\\n        }\\n\\n        return list;\\n      };\\n\\n      ctrl.$parsers.push(parse);\\n      ctrl.$formatters.push(function(value) {\\n        if (isArray(value)) {\\n          return value.join(ngList);\\n        }\\n\\n        return undefined;\\n      });\\n\\n      // Override the standard $isEmpty because an empty array means the input is empty.\\n      ctrl.$isEmpty = function(value) {\\n        return !value || !value.length;\\n      };\\n    }\\n  };\\n};\\n\\n/* global VALID_CLASS: true,\\n  INVALID_CLASS: true,\\n  PRISTINE_CLASS: true,\\n  DIRTY_CLASS: true,\\n  UNTOUCHED_CLASS: true,\\n  TOUCHED_CLASS: true,\\n*/\\n\\nvar VALID_CLASS = 'ng-valid',\\n    INVALID_CLASS = 'ng-invalid',\\n    PRISTINE_CLASS = 'ng-pristine',\\n    DIRTY_CLASS = 'ng-dirty',\\n    UNTOUCHED_CLASS = 'ng-untouched',\\n    TOUCHED_CLASS = 'ng-touched',\\n    PENDING_CLASS = 'ng-pending';\\n\\n\\nvar $ngModelMinErr = new minErr('ngModel');\\n\\n/**\\n * @ngdoc type\\n * @name ngModel.NgModelController\\n *\\n * @property {string} $viewValue Actual string value in the view.\\n * @property {*} $modelValue The value in the model that the control is bound to.\\n * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever\\n       the control reads value from the DOM. The functions are called in array order, each passing\\n       its return value through to the next. The last return value is forwarded to the\\n       {@link ngModel.NgModelController#$validators `$validators`} collection.\\n\\nParsers are used to sanitize / convert the {@link ngModel.NgModelController#$viewValue\\n`$viewValue`}.\\n\\nReturning `undefined` from a parser means a parse error occurred. In that case,\\nno {@link ngModel.NgModelController#$validators `$validators`} will run and the `ngModel`\\nwill be set to `undefined` unless {@link ngModelOptions `ngModelOptions.allowInvalid`}\\nis set to `true`. The parse error is stored in `ngModel.$error.parse`.\\n\\n *\\n * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever\\n       the model value changes. The functions are called in reverse array order, each passing the value through to the\\n       next. The last return value is used as the actual DOM value.\\n       Used to format / convert values for display in the control.\\n * ```js\\n * function formatter(value) {\\n *   if (value) {\\n *     return value.toUpperCase();\\n *   }\\n * }\\n * ngModel.$formatters.push(formatter);\\n * ```\\n *\\n * @property {Object.<string, function>} $validators A collection of validators that are applied\\n *      whenever the model value changes. The key value within the object refers to the name of the\\n *      validator while the function refers to the validation operation. The validation operation is\\n *      provided with the model value as an argument and must return a true or false value depending\\n *      on the response of that validation.\\n *\\n * ```js\\n * ngModel.$validators.validCharacters = function(modelValue, viewValue) {\\n *   var value = modelValue || viewValue;\\n *   return /[0-9]+/.test(value) &&\\n *          /[a-z]+/.test(value) &&\\n *          /[A-Z]+/.test(value) &&\\n *          /\\\\W+/.test(value);\\n * };\\n * ```\\n *\\n * @property {Object.<string, function>} $asyncValidators A collection of validations that are expected to\\n *      perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided\\n *      is expected to return a promise when it is run during the model validation process. Once the promise\\n *      is delivered then the validation status will be set to true when fulfilled and false when rejected.\\n *      When the asynchronous validators are triggered, each of the validators will run in parallel and the model\\n *      value will only be updated once all validators have been fulfilled. As long as an asynchronous validator\\n *      is unfulfilled, its key will be added to the controllers `$pending` property. Also, all asynchronous validators\\n *      will only run once all synchronous validators have passed.\\n *\\n * Please note that if $http is used then it is important that the server returns a success HTTP response code\\n * in order to fulfill the validation and a status level of `4xx` in order to reject the validation.\\n *\\n * ```js\\n * ngModel.$asyncValidators.uniqueUsername = function(modelValue, viewValue) {\\n *   var value = modelValue || viewValue;\\n *\\n *   // Lookup user by username\\n *   return $http.get('/api/users/' + value).\\n *      then(function resolved() {\\n *        //username exists, this means validation fails\\n *        return $q.reject('exists');\\n *      }, function rejected() {\\n *        //username does not exist, therefore this validation passes\\n *        return true;\\n *      });\\n * };\\n * ```\\n *\\n * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the\\n *     view value has changed. It is called with no arguments, and its return value is ignored.\\n *     This can be used in place of additional $watches against the model value.\\n *\\n * @property {Object} $error An object hash with all failing validator ids as keys.\\n * @property {Object} $pending An object hash with all pending validator ids as keys.\\n *\\n * @property {boolean} $untouched True if control has not lost focus yet.\\n * @property {boolean} $touched True if control has lost focus.\\n * @property {boolean} $pristine True if user has not interacted with the control yet.\\n * @property {boolean} $dirty True if user has already interacted with the control.\\n * @property {boolean} $valid True if there is no error.\\n * @property {boolean} $invalid True if at least one error on the control.\\n * @property {string} $name The name attribute of the control.\\n *\\n * @description\\n *\\n * `NgModelController` provides API for the {@link ngModel `ngModel`} directive.\\n * The controller contains services for data-binding, validation, CSS updates, and value formatting\\n * and parsing. It purposefully does not contain any logic which deals with DOM rendering or\\n * listening to DOM events.\\n * Such DOM related logic should be provided by other directives which make use of\\n * `NgModelController` for data-binding to control elements.\\n * Angular provides this DOM logic for most {@link input `input`} elements.\\n * At the end of this page you can find a {@link ngModel.NgModelController#custom-control-example\\n * custom control example} that uses `ngModelController` to bind to `contenteditable` elements.\\n *\\n * @example\\n * ### Custom Control Example\\n * This example shows how to use `NgModelController` with a custom control to achieve\\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\\n * collaborate together to achieve the desired result.\\n *\\n * Note that `contenteditable` is an HTML5 attribute, which tells the browser to let the element\\n * contents be edited in place by the user.  This will not work on older browsers.\\n *\\n * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\\n * module to automatically remove \\\"bad\\\" content like inline event listener (e.g. `<span onclick=\\\"...\\\">`).\\n * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks\\n * that content using the `$sce` service.\\n *\\n * <example name=\\\"NgModelController\\\" module=\\\"customControl\\\" deps=\\\"angular-sanitize.js\\\">\\n    <file name=\\\"style.css\\\">\\n      [contenteditable] {\\n        border: 1px solid black;\\n        background-color: white;\\n        min-height: 20px;\\n      }\\n\\n      .ng-invalid {\\n        border: 1px solid red;\\n      }\\n\\n    </file>\\n    <file name=\\\"script.js\\\">\\n      angular.module('customControl', ['ngSanitize']).\\n        directive('contenteditable', ['$sce', function($sce) {\\n          return {\\n            restrict: 'A', // only activate on element attribute\\n            require: '?ngModel', // get a hold of NgModelController\\n            link: function(scope, element, attrs, ngModel) {\\n              if (!ngModel) return; // do nothing if no ng-model\\n\\n              // Specify how UI should be updated\\n              ngModel.$render = function() {\\n                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\\n              };\\n\\n              // Listen for change events to enable binding\\n              element.on('blur keyup change', function() {\\n                scope.$evalAsync(read);\\n              });\\n              read(); // initialize\\n\\n              // Write data to the model\\n              function read() {\\n                var html = element.html();\\n                // When we clear the content editable the browser leaves a <br> behind\\n                // If strip-br attribute is provided then we strip this out\\n                if ( attrs.stripBr && html == '<br>' ) {\\n                  html = '';\\n                }\\n                ngModel.$setViewValue(html);\\n              }\\n            }\\n          };\\n        }]);\\n    </file>\\n    <file name=\\\"index.html\\\">\\n      <form name=\\\"myForm\\\">\\n       <div contenteditable\\n            name=\\\"myWidget\\\" ng-model=\\\"userContent\\\"\\n            strip-br=\\\"true\\\"\\n            required>Change me!</div>\\n        <span ng-show=\\\"myForm.myWidget.$error.required\\\">Required!</span>\\n       <hr>\\n       <textarea ng-model=\\\"userContent\\\"></textarea>\\n      </form>\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n    it('should data-bind and become invalid', function() {\\n      if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {\\n        // SafariDriver can't handle contenteditable\\n        // and Firefox driver can't clear contenteditables very well\\n        return;\\n      }\\n      var contentEditable = element(by.css('[contenteditable]'));\\n      var content = 'Change me!';\\n\\n      expect(contentEditable.getText()).toEqual(content);\\n\\n      contentEditable.clear();\\n      contentEditable.sendKeys(protractor.Key.BACK_SPACE);\\n      expect(contentEditable.getText()).toEqual('');\\n      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\\n    });\\n    </file>\\n * </example>\\n *\\n *\\n */\\nvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate', '$timeout', '$rootScope', '$q', '$interpolate',\\n    function($scope, $exceptionHandler, $attr, $element, $parse, $animate, $timeout, $rootScope, $q, $interpolate) {\\n  this.$viewValue = Number.NaN;\\n  this.$modelValue = Number.NaN;\\n  this.$$rawModelValue = undefined; // stores the parsed modelValue / model set from scope regardless of validity.\\n  this.$validators = {};\\n  this.$asyncValidators = {};\\n  this.$parsers = [];\\n  this.$formatters = [];\\n  this.$viewChangeListeners = [];\\n  this.$untouched = true;\\n  this.$touched = false;\\n  this.$pristine = true;\\n  this.$dirty = false;\\n  this.$valid = true;\\n  this.$invalid = false;\\n  this.$error = {}; // keep invalid keys here\\n  this.$$success = {}; // keep valid keys here\\n  this.$pending = undefined; // keep pending keys here\\n  this.$name = $interpolate($attr.name || '', false)($scope);\\n\\n\\n  var parsedNgModel = $parse($attr.ngModel),\\n      parsedNgModelAssign = parsedNgModel.assign,\\n      ngModelGet = parsedNgModel,\\n      ngModelSet = parsedNgModelAssign,\\n      pendingDebounce = null,\\n      ctrl = this;\\n\\n  this.$$setOptions = function(options) {\\n    ctrl.$options = options;\\n    if (options && options.getterSetter) {\\n      var invokeModelGetter = $parse($attr.ngModel + '()'),\\n          invokeModelSetter = $parse($attr.ngModel + '($$$p)');\\n\\n      ngModelGet = function($scope) {\\n        var modelValue = parsedNgModel($scope);\\n        if (isFunction(modelValue)) {\\n          modelValue = invokeModelGetter($scope);\\n        }\\n        return modelValue;\\n      };\\n      ngModelSet = function($scope, newValue) {\\n        if (isFunction(parsedNgModel($scope))) {\\n          invokeModelSetter($scope, {$$$p: ctrl.$modelValue});\\n        } else {\\n          parsedNgModelAssign($scope, ctrl.$modelValue);\\n        }\\n      };\\n    } else if (!parsedNgModel.assign) {\\n      throw $ngModelMinErr('nonassign', \\\"Expression '{0}' is non-assignable. Element: {1}\\\",\\n          $attr.ngModel, startingTag($element));\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$render\\n   *\\n   * @description\\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\\n   * directive will implement this method.\\n   *\\n   * The `$render()` method is invoked in the following situations:\\n   *\\n   * * `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\\n   *   committed value then `$render()` is called to update the input control.\\n   * * The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\\n   *   the `$viewValue` are different to last time.\\n   *\\n   * Since `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\\n   * `$modelValue` and `$viewValue` are actually different to their previous value. If `$modelValue`\\n   * or `$viewValue` are objects (rather than a string or number) then `$render()` will not be\\n   * invoked if you only change a property on the objects.\\n   */\\n  this.$render = noop;\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$isEmpty\\n   *\\n   * @description\\n   * This is called when we need to determine if the value of an input is empty.\\n   *\\n   * For instance, the required directive does this to work out if the input has data or not.\\n   *\\n   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\\n   *\\n   * You can override this for input directives whose concept of being empty is different to the\\n   * default. The `checkboxInputType` directive does this because in its case a value of `false`\\n   * implies empty.\\n   *\\n   * @param {*} value The value of the input to check for emptiness.\\n   * @returns {boolean} True if `value` is \\\"empty\\\".\\n   */\\n  this.$isEmpty = function(value) {\\n    return isUndefined(value) || value === '' || value === null || value !== value;\\n  };\\n\\n  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\\n      currentValidationRunId = 0;\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$setValidity\\n   *\\n   * @description\\n   * Change the validity state, and notify the form.\\n   *\\n   * This method can be called within $parsers/$formatters or a custom validation implementation.\\n   * However, in most cases it should be sufficient to use the `ngModel.$validators` and\\n   * `ngModel.$asyncValidators` collections which will call `$setValidity` automatically.\\n   *\\n   * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be assigned\\n   *        to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`\\n   *        (for unfulfilled `$asyncValidators`), so that it is available for data-binding.\\n   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\\n   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\\n   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\\n   * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending (undefined),\\n   *                          or skipped (null). Pending is used for unfulfilled `$asyncValidators`.\\n   *                          Skipped is used by Angular when validators do not run because of parse errors and\\n   *                          when `$asyncValidators` do not run because any of the `$validators` failed.\\n   */\\n  addSetValidityMethod({\\n    ctrl: this,\\n    $element: $element,\\n    set: function(object, property) {\\n      object[property] = true;\\n    },\\n    unset: function(object, property) {\\n      delete object[property];\\n    },\\n    parentForm: parentForm,\\n    $animate: $animate\\n  });\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$setPristine\\n   *\\n   * @description\\n   * Sets the control to its pristine state.\\n   *\\n   * This method can be called to remove the `ng-dirty` class and set the control to its pristine\\n   * state (`ng-pristine` class). A model is considered to be pristine when the control\\n   * has not been changed from when first compiled.\\n   */\\n  this.$setPristine = function() {\\n    ctrl.$dirty = false;\\n    ctrl.$pristine = true;\\n    $animate.removeClass($element, DIRTY_CLASS);\\n    $animate.addClass($element, PRISTINE_CLASS);\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$setDirty\\n   *\\n   * @description\\n   * Sets the control to its dirty state.\\n   *\\n   * This method can be called to remove the `ng-pristine` class and set the control to its dirty\\n   * state (`ng-dirty` class). A model is considered to be dirty when the control has been changed\\n   * from when first compiled.\\n   */\\n  this.$setDirty = function() {\\n    ctrl.$dirty = true;\\n    ctrl.$pristine = false;\\n    $animate.removeClass($element, PRISTINE_CLASS);\\n    $animate.addClass($element, DIRTY_CLASS);\\n    parentForm.$setDirty();\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$setUntouched\\n   *\\n   * @description\\n   * Sets the control to its untouched state.\\n   *\\n   * This method can be called to remove the `ng-touched` class and set the control to its\\n   * untouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\\n   * by default, however this function can be used to restore that state if the model has\\n   * already been touched by the user.\\n   */\\n  this.$setUntouched = function() {\\n    ctrl.$touched = false;\\n    ctrl.$untouched = true;\\n    $animate.setClass($element, UNTOUCHED_CLASS, TOUCHED_CLASS);\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$setTouched\\n   *\\n   * @description\\n   * Sets the control to its touched state.\\n   *\\n   * This method can be called to remove the `ng-untouched` class and set the control to its\\n   * touched state (`ng-touched` class). A model is considered to be touched when the user has\\n   * first focused the control element and then shifted focus away from the control (blur event).\\n   */\\n  this.$setTouched = function() {\\n    ctrl.$touched = true;\\n    ctrl.$untouched = false;\\n    $animate.setClass($element, TOUCHED_CLASS, UNTOUCHED_CLASS);\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$rollbackViewValue\\n   *\\n   * @description\\n   * Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,\\n   * which may be caused by a pending debounced event or because the input is waiting for a some\\n   * future event.\\n   *\\n   * If you have an input that uses `ng-model-options` to set up debounced events or events such\\n   * as blur you can have a situation where there is a period when the `$viewValue`\\n   * is out of synch with the ngModel's `$modelValue`.\\n   *\\n   * In this case, you can run into difficulties if you try to update the ngModel's `$modelValue`\\n   * programmatically before these debounced/future events have resolved/occurred, because Angular's\\n   * dirty checking mechanism is not able to tell whether the model has actually changed or not.\\n   *\\n   * The `$rollbackViewValue()` method should be called before programmatically changing the model of an\\n   * input which may have such events pending. This is important in order to make sure that the\\n   * input field will be updated with the new model value and any pending operations are cancelled.\\n   *\\n   * <example name=\\\"ng-model-cancel-update\\\" module=\\\"cancel-update-example\\\">\\n   *   <file name=\\\"app.js\\\">\\n   *     angular.module('cancel-update-example', [])\\n   *\\n   *     .controller('CancelUpdateController', ['$scope', function($scope) {\\n   *       $scope.resetWithCancel = function(e) {\\n   *         if (e.keyCode == 27) {\\n   *           $scope.myForm.myInput1.$rollbackViewValue();\\n   *           $scope.myValue = '';\\n   *         }\\n   *       };\\n   *       $scope.resetWithoutCancel = function(e) {\\n   *         if (e.keyCode == 27) {\\n   *           $scope.myValue = '';\\n   *         }\\n   *       };\\n   *     }]);\\n   *   </file>\\n   *   <file name=\\\"index.html\\\">\\n   *     <div ng-controller=\\\"CancelUpdateController\\\">\\n   *       <p>Try typing something in each input.  See that the model only updates when you\\n   *          blur off the input.\\n   *        </p>\\n   *        <p>Now see what happens if you start typing then press the Escape key</p>\\n   *\\n   *       <form name=\\\"myForm\\\" ng-model-options=\\\"{ updateOn: 'blur' }\\\">\\n   *         <p>With $rollbackViewValue()</p>\\n   *         <input name=\\\"myInput1\\\" ng-model=\\\"myValue\\\" ng-keydown=\\\"resetWithCancel($event)\\\"><br/>\\n   *         myValue: \\\"{{ myValue }}\\\"\\n   *\\n   *         <p>Without $rollbackViewValue()</p>\\n   *         <input name=\\\"myInput2\\\" ng-model=\\\"myValue\\\" ng-keydown=\\\"resetWithoutCancel($event)\\\"><br/>\\n   *         myValue: \\\"{{ myValue }}\\\"\\n   *       </form>\\n   *     </div>\\n   *   </file>\\n   * </example>\\n   */\\n  this.$rollbackViewValue = function() {\\n    $timeout.cancel(pendingDebounce);\\n    ctrl.$viewValue = ctrl.$$lastCommittedViewValue;\\n    ctrl.$render();\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$validate\\n   *\\n   * @description\\n   * Runs each of the registered validators (first synchronous validators and then\\n   * asynchronous validators).\\n   * If the validity changes to invalid, the model will be set to `undefined`,\\n   * unless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\\n   * If the validity changes to valid, it will set the model to the last available valid\\n   * modelValue, i.e. either the last parsed value or the last value set from the scope.\\n   */\\n  this.$validate = function() {\\n    // ignore $validate before model is initialized\\n    if (isNumber(ctrl.$modelValue) && isNaN(ctrl.$modelValue)) {\\n      return;\\n    }\\n\\n    var viewValue = ctrl.$$lastCommittedViewValue;\\n    // Note: we use the $$rawModelValue as $modelValue might have been\\n    // set to undefined during a view -> model update that found validation\\n    // errors. We can't parse the view here, since that could change\\n    // the model although neither viewValue nor the model on the scope changed\\n    var modelValue = ctrl.$$rawModelValue;\\n\\n    // Check if the there's a parse error, so we don't unset it accidentially\\n    var parserName = ctrl.$$parserName || 'parse';\\n    var parserValid = ctrl.$error[parserName] ? false : undefined;\\n\\n    var prevValid = ctrl.$valid;\\n    var prevModelValue = ctrl.$modelValue;\\n\\n    var allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;\\n\\n    ctrl.$$runValidators(parserValid, modelValue, viewValue, function(allValid) {\\n      // If there was no change in validity, don't update the model\\n      // This prevents changing an invalid modelValue to undefined\\n      if (!allowInvalid && prevValid !== allValid) {\\n        // Note: Don't check ctrl.$valid here, as we could have\\n        // external validators (e.g. calculated on the server),\\n        // that just call $setValidity and need the model value\\n        // to calculate their validity.\\n        ctrl.$modelValue = allValid ? modelValue : undefined;\\n\\n        if (ctrl.$modelValue !== prevModelValue) {\\n          ctrl.$$writeModelToScope();\\n        }\\n      }\\n    });\\n\\n  };\\n\\n  this.$$runValidators = function(parseValid, modelValue, viewValue, doneCallback) {\\n    currentValidationRunId++;\\n    var localValidationRunId = currentValidationRunId;\\n\\n    // check parser error\\n    if (!processParseErrors(parseValid)) {\\n      validationDone(false);\\n      return;\\n    }\\n    if (!processSyncValidators()) {\\n      validationDone(false);\\n      return;\\n    }\\n    processAsyncValidators();\\n\\n    function processParseErrors(parseValid) {\\n      var errorKey = ctrl.$$parserName || 'parse';\\n      if (parseValid === undefined) {\\n        setValidity(errorKey, null);\\n      } else {\\n        setValidity(errorKey, parseValid);\\n        if (!parseValid) {\\n          forEach(ctrl.$validators, function(v, name) {\\n            setValidity(name, null);\\n          });\\n          forEach(ctrl.$asyncValidators, function(v, name) {\\n            setValidity(name, null);\\n          });\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n\\n    function processSyncValidators() {\\n      var syncValidatorsValid = true;\\n      forEach(ctrl.$validators, function(validator, name) {\\n        var result = validator(modelValue, viewValue);\\n        syncValidatorsValid = syncValidatorsValid && result;\\n        setValidity(name, result);\\n      });\\n      if (!syncValidatorsValid) {\\n        forEach(ctrl.$asyncValidators, function(v, name) {\\n          setValidity(name, null);\\n        });\\n        return false;\\n      }\\n      return true;\\n    }\\n\\n    function processAsyncValidators() {\\n      var validatorPromises = [];\\n      var allValid = true;\\n      forEach(ctrl.$asyncValidators, function(validator, name) {\\n        var promise = validator(modelValue, viewValue);\\n        if (!isPromiseLike(promise)) {\\n          throw $ngModelMinErr(\\\"$asyncValidators\\\",\\n            \\\"Expected asynchronous validator to return a promise but got '{0}' instead.\\\", promise);\\n        }\\n        setValidity(name, undefined);\\n        validatorPromises.push(promise.then(function() {\\n          setValidity(name, true);\\n        }, function(error) {\\n          allValid = false;\\n          setValidity(name, false);\\n        }));\\n      });\\n      if (!validatorPromises.length) {\\n        validationDone(true);\\n      } else {\\n        $q.all(validatorPromises).then(function() {\\n          validationDone(allValid);\\n        }, noop);\\n      }\\n    }\\n\\n    function setValidity(name, isValid) {\\n      if (localValidationRunId === currentValidationRunId) {\\n        ctrl.$setValidity(name, isValid);\\n      }\\n    }\\n\\n    function validationDone(allValid) {\\n      if (localValidationRunId === currentValidationRunId) {\\n\\n        doneCallback(allValid);\\n      }\\n    }\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$commitViewValue\\n   *\\n   * @description\\n   * Commit a pending update to the `$modelValue`.\\n   *\\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\\n   * event defined in `ng-model-options`. this method is rarely needed as `NgModelController`\\n   * usually handles calling this in response to input events.\\n   */\\n  this.$commitViewValue = function() {\\n    var viewValue = ctrl.$viewValue;\\n\\n    $timeout.cancel(pendingDebounce);\\n\\n    // If the view value has not changed then we should just exit, except in the case where there is\\n    // a native validator on the element. In this case the validation state may have changed even though\\n    // the viewValue has stayed empty.\\n    if (ctrl.$$lastCommittedViewValue === viewValue && (viewValue !== '' || !ctrl.$$hasNativeValidators)) {\\n      return;\\n    }\\n    ctrl.$$lastCommittedViewValue = viewValue;\\n\\n    // change to dirty\\n    if (ctrl.$pristine) {\\n      this.$setDirty();\\n    }\\n    this.$$parseAndValidate();\\n  };\\n\\n  this.$$parseAndValidate = function() {\\n    var viewValue = ctrl.$$lastCommittedViewValue;\\n    var modelValue = viewValue;\\n    var parserValid = isUndefined(modelValue) ? undefined : true;\\n\\n    if (parserValid) {\\n      for (var i = 0; i < ctrl.$parsers.length; i++) {\\n        modelValue = ctrl.$parsers[i](modelValue);\\n        if (isUndefined(modelValue)) {\\n          parserValid = false;\\n          break;\\n        }\\n      }\\n    }\\n    if (isNumber(ctrl.$modelValue) && isNaN(ctrl.$modelValue)) {\\n      // ctrl.$modelValue has not been touched yet...\\n      ctrl.$modelValue = ngModelGet($scope);\\n    }\\n    var prevModelValue = ctrl.$modelValue;\\n    var allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;\\n    ctrl.$$rawModelValue = modelValue;\\n\\n    if (allowInvalid) {\\n      ctrl.$modelValue = modelValue;\\n      writeToModelIfNeeded();\\n    }\\n\\n    // Pass the $$lastCommittedViewValue here, because the cached viewValue might be out of date.\\n    // This can happen if e.g. $setViewValue is called from inside a parser\\n    ctrl.$$runValidators(parserValid, modelValue, ctrl.$$lastCommittedViewValue, function(allValid) {\\n      if (!allowInvalid) {\\n        // Note: Don't check ctrl.$valid here, as we could have\\n        // external validators (e.g. calculated on the server),\\n        // that just call $setValidity and need the model value\\n        // to calculate their validity.\\n        ctrl.$modelValue = allValid ? modelValue : undefined;\\n        writeToModelIfNeeded();\\n      }\\n    });\\n\\n    function writeToModelIfNeeded() {\\n      if (ctrl.$modelValue !== prevModelValue) {\\n        ctrl.$$writeModelToScope();\\n      }\\n    }\\n  };\\n\\n  this.$$writeModelToScope = function() {\\n    ngModelSet($scope, ctrl.$modelValue);\\n    forEach(ctrl.$viewChangeListeners, function(listener) {\\n      try {\\n        listener();\\n      } catch (e) {\\n        $exceptionHandler(e);\\n      }\\n    });\\n  };\\n\\n  /**\\n   * @ngdoc method\\n   * @name ngModel.NgModelController#$setViewValue\\n   *\\n   * @description\\n   * Update the view value.\\n   *\\n   * This method should be called when an input directive want to change the view value; typically,\\n   * this is done from within a DOM event handler.\\n   *\\n   * For example {@link ng.directive:input input} calls it when the value of the input changes and\\n   * {@link ng.directive:select select} calls it when an option is selected.\\n   *\\n   * If the new `value` is an object (rather than a string or a number), we should make a copy of the\\n   * object before passing it to `$setViewValue`.  This is because `ngModel` does not perform a deep\\n   * watch of objects, it only looks for a change of identity. If you only change the property of\\n   * the object then ngModel will not realise that the object has changed and will not invoke the\\n   * `$parsers` and `$validators` pipelines.\\n   *\\n   * For this reason, you should not change properties of the copy once it has been passed to\\n   * `$setViewValue`. Otherwise you may cause the model value on the scope to change incorrectly.\\n   *\\n   * When this method is called, the new `value` will be staged for committing through the `$parsers`\\n   * and `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\\n   * value sent directly for processing, finally to be applied to `$modelValue` and then the\\n   * **expression** specified in the `ng-model` attribute.\\n   *\\n   * Lastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.\\n   *\\n   * In case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\\n   * and the `default` trigger is not listed, all those actions will remain pending until one of the\\n   * `updateOn` events is triggered on the DOM element.\\n   * All these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\\n   * directive is used with a custom debounce for this particular event.\\n   *\\n   * Note that calling this function does not trigger a `$digest`.\\n   *\\n   * @param {string} value Value from the view.\\n   * @param {string} trigger Event that triggered the update.\\n   */\\n  this.$setViewValue = function(value, trigger) {\\n    ctrl.$viewValue = value;\\n    if (!ctrl.$options || ctrl.$options.updateOnDefault) {\\n      ctrl.$$debounceViewValueCommit(trigger);\\n    }\\n  };\\n\\n  this.$$debounceViewValueCommit = function(trigger) {\\n    var debounceDelay = 0,\\n        options = ctrl.$options,\\n        debounce;\\n\\n    if (options && isDefined(options.debounce)) {\\n      debounce = options.debounce;\\n      if (isNumber(debounce)) {\\n        debounceDelay = debounce;\\n      } else if (isNumber(debounce[trigger])) {\\n        debounceDelay = debounce[trigger];\\n      } else if (isNumber(debounce['default'])) {\\n        debounceDelay = debounce['default'];\\n      }\\n    }\\n\\n    $timeout.cancel(pendingDebounce);\\n    if (debounceDelay) {\\n      pendingDebounce = $timeout(function() {\\n        ctrl.$commitViewValue();\\n      }, debounceDelay);\\n    } else if ($rootScope.$$phase) {\\n      ctrl.$commitViewValue();\\n    } else {\\n      $scope.$apply(function() {\\n        ctrl.$commitViewValue();\\n      });\\n    }\\n  };\\n\\n  // model -> value\\n  // Note: we cannot use a normal scope.$watch as we want to detect the following:\\n  // 1. scope value is 'a'\\n  // 2. user enters 'b'\\n  // 3. ng-change kicks in and reverts scope value to 'a'\\n  //    -> scope value did not change since the last digest as\\n  //       ng-change executes in apply phase\\n  // 4. view should be changed back to 'a'\\n  $scope.$watch(function ngModelWatch() {\\n    var modelValue = ngModelGet($scope);\\n\\n    // if scope model value and ngModel value are out of sync\\n    // TODO(perf): why not move this to the action fn?\\n    if (modelValue !== ctrl.$modelValue) {\\n      ctrl.$modelValue = ctrl.$$rawModelValue = modelValue;\\n\\n      var formatters = ctrl.$formatters,\\n          idx = formatters.length;\\n\\n      var viewValue = modelValue;\\n      while (idx--) {\\n        viewValue = formatters[idx](viewValue);\\n      }\\n      if (ctrl.$viewValue !== viewValue) {\\n        ctrl.$viewValue = ctrl.$$lastCommittedViewValue = viewValue;\\n        ctrl.$render();\\n\\n        ctrl.$$runValidators(undefined, modelValue, viewValue, noop);\\n      }\\n    }\\n\\n    return modelValue;\\n  });\\n}];\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngModel\\n *\\n * @element input\\n * @priority 1\\n *\\n * @description\\n * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\\n * property on the scope using {@link ngModel.NgModelController NgModelController},\\n * which is created and exposed by this directive.\\n *\\n * `ngModel` is responsible for:\\n *\\n * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`\\n *   require.\\n * - Providing validation behavior (i.e. required, number, email, url).\\n * - Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).\\n * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`, `ng-untouched`) including animations.\\n * - Registering the control with its parent {@link ng.directive:form form}.\\n *\\n * Note: `ngModel` will try to bind to the property given by evaluating the expression on the\\n * current scope. If the property doesn't already exist on this scope, it will be created\\n * implicitly and added to the scope.\\n *\\n * For best practices on using `ngModel`, see:\\n *\\n *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\\n *\\n * For basic examples, how to use `ngModel`, see:\\n *\\n *  - {@link ng.directive:input input}\\n *    - {@link input[text] text}\\n *    - {@link input[checkbox] checkbox}\\n *    - {@link input[radio] radio}\\n *    - {@link input[number] number}\\n *    - {@link input[email] email}\\n *    - {@link input[url] url}\\n *    - {@link input[date] date}\\n *    - {@link input[datetime-local] datetime-local}\\n *    - {@link input[time] time}\\n *    - {@link input[month] month}\\n *    - {@link input[week] week}\\n *  - {@link ng.directive:select select}\\n *  - {@link ng.directive:textarea textarea}\\n *\\n * # CSS classes\\n * The following CSS classes are added and removed on the associated input/select/textarea element\\n * depending on the validity of the model.\\n *\\n *  - `ng-valid`: the model is valid\\n *  - `ng-invalid`: the model is invalid\\n *  - `ng-valid-[key]`: for each valid key added by `$setValidity`\\n *  - `ng-invalid-[key]`: for each invalid key added by `$setValidity`\\n *  - `ng-pristine`: the control hasn't been interacted with yet\\n *  - `ng-dirty`: the control has been interacted with\\n *  - `ng-touched`: the control has been blurred\\n *  - `ng-untouched`: the control hasn't been blurred\\n *  - `ng-pending`: any `$asyncValidators` are unfulfilled\\n *\\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\\n *\\n * ## Animation Hooks\\n *\\n * Animations within models are triggered when any of the associated CSS classes are added and removed\\n * on the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,\\n * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\\n * The animations that are triggered within ngModel are similar to how they work in ngClass and\\n * animations can be hooked into using CSS transitions, keyframes as well as JS animations.\\n *\\n * The following example shows a simple way to utilize CSS transitions to style an input element\\n * that has been rendered as invalid after it has been validated:\\n *\\n * <pre>\\n * //be sure to include ngAnimate as a module to hook into more\\n * //advanced animations\\n * .my-input {\\n *   transition:0.5s linear all;\\n *   background: white;\\n * }\\n * .my-input.ng-invalid {\\n *   background: red;\\n *   color:white;\\n * }\\n * </pre>\\n *\\n * @example\\n * <example deps=\\\"angular-animate.js\\\" animations=\\\"true\\\" fixBase=\\\"true\\\" module=\\\"inputExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n        angular.module('inputExample', [])\\n          .controller('ExampleController', ['$scope', function($scope) {\\n            $scope.val = '1';\\n          }]);\\n       </script>\\n       <style>\\n         .my-input {\\n           -webkit-transition:all linear 0.5s;\\n           transition:all linear 0.5s;\\n           background: transparent;\\n         }\\n         .my-input.ng-invalid {\\n           color:white;\\n           background: red;\\n         }\\n       </style>\\n       Update input to see transitions when valid/invalid.\\n       Integer is a valid value.\\n       <form name=\\\"testForm\\\" ng-controller=\\\"ExampleController\\\">\\n         <input ng-model=\\\"val\\\" ng-pattern=\\\"/^\\\\d+$/\\\" name=\\\"anim\\\" class=\\\"my-input\\\" />\\n       </form>\\n     </file>\\n * </example>\\n *\\n * ## Binding to a getter/setter\\n *\\n * Sometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a\\n * function that returns a representation of the model when called with zero arguments, and sets\\n * the internal state of a model when called with an argument. It's sometimes useful to use this\\n * for models that have an internal representation that's different than what the model exposes\\n * to the view.\\n *\\n * <div class=\\\"alert alert-success\\\">\\n * **Best Practice:** It's best to keep getters fast because Angular is likely to call them more\\n * frequently than other parts of your code.\\n * </div>\\n *\\n * You use this behavior by adding `ng-model-options=\\\"{ getterSetter: true }\\\"` to an element that\\n * has `ng-model` attached to it. You can also add `ng-model-options=\\\"{ getterSetter: true }\\\"` to\\n * a `<form>`, which will enable this behavior for all `<input>`s within it. See\\n * {@link ng.directive:ngModelOptions `ngModelOptions`} for more.\\n *\\n * The following example shows how to use `ngModel` with a getter/setter:\\n *\\n * @example\\n * <example name=\\\"ngModel-getter-setter\\\" module=\\\"getterSetterExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <form name=\\\"userForm\\\">\\n           Name:\\n           <input type=\\\"text\\\" name=\\\"userName\\\"\\n                  ng-model=\\\"user.name\\\"\\n                  ng-model-options=\\\"{ getterSetter: true }\\\" />\\n         </form>\\n         <pre>user.name = <span ng-bind=\\\"user.name()\\\"></span></pre>\\n       </div>\\n     </file>\\n     <file name=\\\"app.js\\\">\\n       angular.module('getterSetterExample', [])\\n         .controller('ExampleController', ['$scope', function($scope) {\\n           var _name = 'Brian';\\n           $scope.user = {\\n             name: function(newName) {\\n               if (angular.isDefined(newName)) {\\n                 _name = newName;\\n               }\\n               return _name;\\n             }\\n           };\\n         }]);\\n     </file>\\n * </example>\\n */\\nvar ngModelDirective = ['$rootScope', function($rootScope) {\\n  return {\\n    restrict: 'A',\\n    require: ['ngModel', '^?form', '^?ngModelOptions'],\\n    controller: NgModelController,\\n    // Prelink needs to run before any input directive\\n    // so that we can set the NgModelOptions in NgModelController\\n    // before anyone else uses it.\\n    priority: 1,\\n    compile: function ngModelCompile(element) {\\n      // Setup initial state of the control\\n      element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);\\n\\n      return {\\n        pre: function ngModelPreLink(scope, element, attr, ctrls) {\\n          var modelCtrl = ctrls[0],\\n              formCtrl = ctrls[1] || nullFormCtrl;\\n\\n          modelCtrl.$$setOptions(ctrls[2] && ctrls[2].$options);\\n\\n          // notify others, especially parent forms\\n          formCtrl.$addControl(modelCtrl);\\n\\n          attr.$observe('name', function(newValue) {\\n            if (modelCtrl.$name !== newValue) {\\n              formCtrl.$$renameControl(modelCtrl, newValue);\\n            }\\n          });\\n\\n          scope.$on('$destroy', function() {\\n            formCtrl.$removeControl(modelCtrl);\\n          });\\n        },\\n        post: function ngModelPostLink(scope, element, attr, ctrls) {\\n          var modelCtrl = ctrls[0];\\n          if (modelCtrl.$options && modelCtrl.$options.updateOn) {\\n            element.on(modelCtrl.$options.updateOn, function(ev) {\\n              modelCtrl.$$debounceViewValueCommit(ev && ev.type);\\n            });\\n          }\\n\\n          element.on('blur', function(ev) {\\n            if (modelCtrl.$touched) return;\\n\\n            if ($rootScope.$$phase) {\\n              scope.$evalAsync(modelCtrl.$setTouched);\\n            } else {\\n              scope.$apply(modelCtrl.$setTouched);\\n            }\\n          });\\n        }\\n      };\\n    }\\n  };\\n}];\\n\\nvar DEFAULT_REGEXP = /(\\\\s+|^)default(\\\\s+|$)/;\\n\\n/**\\n * @ngdoc directive\\n * @name ngModelOptions\\n *\\n * @description\\n * Allows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of\\n * events that will trigger a model update and/or a debouncing delay so that the actual update only\\n * takes place when a timer expires; this timer will be reset after another change takes place.\\n *\\n * Given the nature of `ngModelOptions`, the value displayed inside input fields in the view might\\n * be different than the value in the actual model. This means that if you update the model you\\n * should also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in\\n * order to make sure it is synchronized with the model and that any debounced action is canceled.\\n *\\n * The easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}\\n * method is by making sure the input is placed inside a form that has a `name` attribute. This is\\n * important because `form` controllers are published to the related scope under the name in their\\n * `name` attribute.\\n *\\n * Any pending changes will take place immediately when an enclosing form is submitted via the\\n * `submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\\n * to have access to the updated model.\\n *\\n * `ngModelOptions` has an effect on the element it's declared on and its descendants.\\n *\\n * @param {Object} ngModelOptions options to apply to the current model. Valid keys are:\\n *   - `updateOn`: string specifying which event should the input be bound to. You can set several\\n *     events using an space delimited list. There is a special event called `default` that\\n *     matches the default events belonging of the control.\\n *   - `debounce`: integer value which contains the debounce model update value in milliseconds. A\\n *     value of 0 triggers an immediate update. If an object is supplied instead, you can specify a\\n *     custom value for each event. For example:\\n *     `ng-model-options=\\\"{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }\\\"`\\n *   - `allowInvalid`: boolean value which indicates that the model can be set with values that did\\n *     not validate correctly instead of the default behavior of setting the model to undefined.\\n *   - `getterSetter`: boolean value which determines whether or not to treat functions bound to\\n       `ngModel` as getters/setters.\\n *   - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for\\n *     `<input type=\\\"date\\\">`, `<input type=\\\"time\\\">`, ... . Right now, the only supported value is `'UTC'`,\\n *     otherwise the default timezone of the browser will be used.\\n *\\n * @example\\n\\n  The following example shows how to override immediate updates. Changes on the inputs within the\\n  form will update the model only when the control loses focus (blur event). If `escape` key is\\n  pressed while the input field is focused, the value is reset to the value in the current model.\\n\\n  <example name=\\\"ngModelOptions-directive-blur\\\" module=\\\"optionsExample\\\">\\n    <file name=\\\"index.html\\\">\\n      <div ng-controller=\\\"ExampleController\\\">\\n        <form name=\\\"userForm\\\">\\n          Name:\\n          <input type=\\\"text\\\" name=\\\"userName\\\"\\n                 ng-model=\\\"user.name\\\"\\n                 ng-model-options=\\\"{ updateOn: 'blur' }\\\"\\n                 ng-keyup=\\\"cancel($event)\\\" /><br />\\n\\n          Other data:\\n          <input type=\\\"text\\\" ng-model=\\\"user.data\\\" /><br />\\n        </form>\\n        <pre>user.name = <span ng-bind=\\\"user.name\\\"></span></pre>\\n      </div>\\n    </file>\\n    <file name=\\\"app.js\\\">\\n      angular.module('optionsExample', [])\\n        .controller('ExampleController', ['$scope', function($scope) {\\n          $scope.user = { name: 'say', data: '' };\\n\\n          $scope.cancel = function(e) {\\n            if (e.keyCode == 27) {\\n              $scope.userForm.userName.$rollbackViewValue();\\n            }\\n          };\\n        }]);\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var model = element(by.binding('user.name'));\\n      var input = element(by.model('user.name'));\\n      var other = element(by.model('user.data'));\\n\\n      it('should allow custom events', function() {\\n        input.sendKeys(' hello');\\n        input.click();\\n        expect(model.getText()).toEqual('say');\\n        other.click();\\n        expect(model.getText()).toEqual('say hello');\\n      });\\n\\n      it('should $rollbackViewValue when model changes', function() {\\n        input.sendKeys(' hello');\\n        expect(input.getAttribute('value')).toEqual('say hello');\\n        input.sendKeys(protractor.Key.ESCAPE);\\n        expect(input.getAttribute('value')).toEqual('say');\\n        other.click();\\n        expect(model.getText()).toEqual('say');\\n      });\\n    </file>\\n  </example>\\n\\n  This one shows how to debounce model changes. Model will be updated only 1 sec after last change.\\n  If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.\\n\\n  <example name=\\\"ngModelOptions-directive-debounce\\\" module=\\\"optionsExample\\\">\\n    <file name=\\\"index.html\\\">\\n      <div ng-controller=\\\"ExampleController\\\">\\n        <form name=\\\"userForm\\\">\\n          Name:\\n          <input type=\\\"text\\\" name=\\\"userName\\\"\\n                 ng-model=\\\"user.name\\\"\\n                 ng-model-options=\\\"{ debounce: 1000 }\\\" />\\n          <button ng-click=\\\"userForm.userName.$rollbackViewValue(); user.name=''\\\">Clear</button><br />\\n        </form>\\n        <pre>user.name = <span ng-bind=\\\"user.name\\\"></span></pre>\\n      </div>\\n    </file>\\n    <file name=\\\"app.js\\\">\\n      angular.module('optionsExample', [])\\n        .controller('ExampleController', ['$scope', function($scope) {\\n          $scope.user = { name: 'say' };\\n        }]);\\n    </file>\\n  </example>\\n\\n  This one shows how to bind to getter/setters:\\n\\n  <example name=\\\"ngModelOptions-directive-getter-setter\\\" module=\\\"getterSetterExample\\\">\\n    <file name=\\\"index.html\\\">\\n      <div ng-controller=\\\"ExampleController\\\">\\n        <form name=\\\"userForm\\\">\\n          Name:\\n          <input type=\\\"text\\\" name=\\\"userName\\\"\\n                 ng-model=\\\"user.name\\\"\\n                 ng-model-options=\\\"{ getterSetter: true }\\\" />\\n        </form>\\n        <pre>user.name = <span ng-bind=\\\"user.name()\\\"></span></pre>\\n      </div>\\n    </file>\\n    <file name=\\\"app.js\\\">\\n      angular.module('getterSetterExample', [])\\n        .controller('ExampleController', ['$scope', function($scope) {\\n          var _name = 'Brian';\\n          $scope.user = {\\n            name: function(newName) {\\n              return angular.isDefined(newName) ? (_name = newName) : _name;\\n            }\\n          };\\n        }]);\\n    </file>\\n  </example>\\n */\\nvar ngModelOptionsDirective = function() {\\n  return {\\n    restrict: 'A',\\n    controller: ['$scope', '$attrs', function($scope, $attrs) {\\n      var that = this;\\n      this.$options = $scope.$eval($attrs.ngModelOptions);\\n      // Allow adding/overriding bound events\\n      if (this.$options.updateOn !== undefined) {\\n        this.$options.updateOnDefault = false;\\n        // extract \\\"default\\\" pseudo-event from list of events that can trigger a model update\\n        this.$options.updateOn = trim(this.$options.updateOn.replace(DEFAULT_REGEXP, function() {\\n          that.$options.updateOnDefault = true;\\n          return ' ';\\n        }));\\n      } else {\\n        this.$options.updateOnDefault = true;\\n      }\\n    }]\\n  };\\n};\\n\\n\\n\\n// helper methods\\nfunction addSetValidityMethod(context) {\\n  var ctrl = context.ctrl,\\n      $element = context.$element,\\n      classCache = {},\\n      set = context.set,\\n      unset = context.unset,\\n      parentForm = context.parentForm,\\n      $animate = context.$animate;\\n\\n  classCache[INVALID_CLASS] = !(classCache[VALID_CLASS] = $element.hasClass(VALID_CLASS));\\n\\n  ctrl.$setValidity = setValidity;\\n\\n  function setValidity(validationErrorKey, state, controller) {\\n    if (state === undefined) {\\n      createAndSet('$pending', validationErrorKey, controller);\\n    } else {\\n      unsetAndCleanup('$pending', validationErrorKey, controller);\\n    }\\n    if (!isBoolean(state)) {\\n      unset(ctrl.$error, validationErrorKey, controller);\\n      unset(ctrl.$$success, validationErrorKey, controller);\\n    } else {\\n      if (state) {\\n        unset(ctrl.$error, validationErrorKey, controller);\\n        set(ctrl.$$success, validationErrorKey, controller);\\n      } else {\\n        set(ctrl.$error, validationErrorKey, controller);\\n        unset(ctrl.$$success, validationErrorKey, controller);\\n      }\\n    }\\n    if (ctrl.$pending) {\\n      cachedToggleClass(PENDING_CLASS, true);\\n      ctrl.$valid = ctrl.$invalid = undefined;\\n      toggleValidationCss('', null);\\n    } else {\\n      cachedToggleClass(PENDING_CLASS, false);\\n      ctrl.$valid = isObjectEmpty(ctrl.$error);\\n      ctrl.$invalid = !ctrl.$valid;\\n      toggleValidationCss('', ctrl.$valid);\\n    }\\n\\n    // re-read the state as the set/unset methods could have\\n    // combined state in ctrl.$error[validationError] (used for forms),\\n    // where setting/unsetting only increments/decrements the value,\\n    // and does not replace it.\\n    var combinedState;\\n    if (ctrl.$pending && ctrl.$pending[validationErrorKey]) {\\n      combinedState = undefined;\\n    } else if (ctrl.$error[validationErrorKey]) {\\n      combinedState = false;\\n    } else if (ctrl.$$success[validationErrorKey]) {\\n      combinedState = true;\\n    } else {\\n      combinedState = null;\\n    }\\n\\n    toggleValidationCss(validationErrorKey, combinedState);\\n    parentForm.$setValidity(validationErrorKey, combinedState, ctrl);\\n  }\\n\\n  function createAndSet(name, value, controller) {\\n    if (!ctrl[name]) {\\n      ctrl[name] = {};\\n    }\\n    set(ctrl[name], value, controller);\\n  }\\n\\n  function unsetAndCleanup(name, value, controller) {\\n    if (ctrl[name]) {\\n      unset(ctrl[name], value, controller);\\n    }\\n    if (isObjectEmpty(ctrl[name])) {\\n      ctrl[name] = undefined;\\n    }\\n  }\\n\\n  function cachedToggleClass(className, switchValue) {\\n    if (switchValue && !classCache[className]) {\\n      $animate.addClass($element, className);\\n      classCache[className] = true;\\n    } else if (!switchValue && classCache[className]) {\\n      $animate.removeClass($element, className);\\n      classCache[className] = false;\\n    }\\n  }\\n\\n  function toggleValidationCss(validationErrorKey, isValid) {\\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\\n\\n    cachedToggleClass(VALID_CLASS + validationErrorKey, isValid === true);\\n    cachedToggleClass(INVALID_CLASS + validationErrorKey, isValid === false);\\n  }\\n}\\n\\nfunction isObjectEmpty(obj) {\\n  if (obj) {\\n    for (var prop in obj) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n\\n/**\\n * @ngdoc directive\\n * @name ngNonBindable\\n * @restrict AC\\n * @priority 1000\\n *\\n * @description\\n * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\\n * DOM element. This is useful if the element contains what appears to be Angular directives and\\n * bindings but which should be ignored by Angular. This could be the case if you have a site that\\n * displays snippets of code, for instance.\\n *\\n * @element ANY\\n *\\n * @example\\n * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,\\n * but the one wrapped in `ngNonBindable` is left alone.\\n *\\n * @example\\n    <example>\\n      <file name=\\\"index.html\\\">\\n        <div>Normal: {{1 + 2}}</div>\\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       it('should check ng-non-bindable', function() {\\n         expect(element(by.binding('1 + 2')).getText()).toContain('3');\\n         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \\\\+ 2/);\\n       });\\n      </file>\\n    </example>\\n */\\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\\n\\n/**\\n * @ngdoc directive\\n * @name ngPluralize\\n * @restrict EA\\n *\\n * @description\\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\\n * These rules are bundled with angular.js, but can be overridden\\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\\n * by specifying the mappings between\\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\\n * and the strings to be displayed.\\n *\\n * # Plural categories and explicit number rules\\n * There are two\\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\\n * in Angular's default en-US locale: \\\"one\\\" and \\\"other\\\".\\n *\\n * While a plural category may match many numbers (for example, in en-US locale, \\\"other\\\" can match\\n * any number that is not 1), an explicit number rule can only match one number. For example, the\\n * explicit number rule for \\\"3\\\" matches the number 3. There are examples of plural categories\\n * and explicit number rules throughout the rest of this documentation.\\n *\\n * # Configuring ngPluralize\\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\\n * You can also provide an optional attribute, `offset`.\\n *\\n * The value of the `count` attribute can be either a string or an {@link guide/expression\\n * Angular expression}; these are evaluated on the current scope for its bound value.\\n *\\n * The `when` attribute specifies the mappings between plural categories and the actual\\n * string to be displayed. The value of the attribute should be a JSON object.\\n *\\n * The following example shows how to configure ngPluralize:\\n *\\n * ```html\\n * <ng-pluralize count=\\\"personCount\\\"\\n                 when=\\\"{'0': 'Nobody is viewing.',\\n *                      'one': '1 person is viewing.',\\n *                      'other': '{} people are viewing.'}\\\">\\n * </ng-pluralize>\\n *```\\n *\\n * In the example, `\\\"0: Nobody is viewing.\\\"` is an explicit number rule. If you did not\\n * specify this rule, 0 would be matched to the \\\"other\\\" category and \\\"0 people are viewing\\\"\\n * would be shown instead of \\\"Nobody is viewing\\\". You can specify an explicit number rule for\\n * other numbers, for example 12, so that instead of showing \\\"12 people are viewing\\\", you can\\n * show \\\"a dozen people are viewing\\\".\\n *\\n * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\\n * into pluralized strings. In the previous example, Angular will replace `{}` with\\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\\n * for <span ng-non-bindable>{{numberExpression}}</span>.\\n *\\n * # Configuring ngPluralize with offset\\n * The `offset` attribute allows further customization of pluralized text, which can result in\\n * a better user experience. For example, instead of the message \\\"4 people are viewing this document\\\",\\n * you might display \\\"John, Kate and 2 others are viewing this document\\\".\\n * The offset attribute allows you to offset a number by any desired value.\\n * Let's take a look at an example:\\n *\\n * ```html\\n * <ng-pluralize count=\\\"personCount\\\" offset=2\\n *               when=\\\"{'0': 'Nobody is viewing.',\\n *                      '1': '{{person1}} is viewing.',\\n *                      '2': '{{person1}} and {{person2}} are viewing.',\\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\\\">\\n * </ng-pluralize>\\n * ```\\n *\\n * Notice that we are still using two plural categories(one, other), but we added\\n * three explicit number rules 0, 1 and 2.\\n * When one person, perhaps John, views the document, \\\"John is viewing\\\" will be shown.\\n * When three people view the document, no explicit number rule is found, so\\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\\n * In this case, plural category 'one' is matched and \\\"John, Mary and one other person are viewing\\\"\\n * is shown.\\n *\\n * Note that when you specify offsets, you must provide explicit number rules for\\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\\n * plural categories \\\"one\\\" and \\\"other\\\".\\n *\\n * @param {string|expression} count The variable to be bound to.\\n * @param {string} when The mapping between plural category to its corresponding strings.\\n * @param {number=} offset Offset to deduct from the total number.\\n *\\n * @example\\n    <example module=\\\"pluralizeExample\\\">\\n      <file name=\\\"index.html\\\">\\n        <script>\\n          angular.module('pluralizeExample', [])\\n            .controller('ExampleController', ['$scope', function($scope) {\\n              $scope.person1 = 'Igor';\\n              $scope.person2 = 'Misko';\\n              $scope.personCount = 1;\\n            }]);\\n        </script>\\n        <div ng-controller=\\\"ExampleController\\\">\\n          Person 1:<input type=\\\"text\\\" ng-model=\\\"person1\\\" value=\\\"Igor\\\" /><br/>\\n          Person 2:<input type=\\\"text\\\" ng-model=\\\"person2\\\" value=\\\"Misko\\\" /><br/>\\n          Number of People:<input type=\\\"text\\\" ng-model=\\\"personCount\\\" value=\\\"1\\\" /><br/>\\n\\n          <!--- Example with simple pluralization rules for en locale --->\\n          Without Offset:\\n          <ng-pluralize count=\\\"personCount\\\"\\n                        when=\\\"{'0': 'Nobody is viewing.',\\n                               'one': '1 person is viewing.',\\n                               'other': '{} people are viewing.'}\\\">\\n          </ng-pluralize><br>\\n\\n          <!--- Example with offset --->\\n          With Offset(2):\\n          <ng-pluralize count=\\\"personCount\\\" offset=2\\n                        when=\\\"{'0': 'Nobody is viewing.',\\n                               '1': '{{person1}} is viewing.',\\n                               '2': '{{person1}} and {{person2}} are viewing.',\\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\\\">\\n          </ng-pluralize>\\n        </div>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should show correct pluralized string', function() {\\n          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\\n          var countInput = element(by.model('personCount'));\\n\\n          expect(withoutOffset.getText()).toEqual('1 person is viewing.');\\n          expect(withOffset.getText()).toEqual('Igor is viewing.');\\n\\n          countInput.clear();\\n          countInput.sendKeys('0');\\n\\n          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\\n          expect(withOffset.getText()).toEqual('Nobody is viewing.');\\n\\n          countInput.clear();\\n          countInput.sendKeys('2');\\n\\n          expect(withoutOffset.getText()).toEqual('2 people are viewing.');\\n          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\\n\\n          countInput.clear();\\n          countInput.sendKeys('3');\\n\\n          expect(withoutOffset.getText()).toEqual('3 people are viewing.');\\n          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\\n\\n          countInput.clear();\\n          countInput.sendKeys('4');\\n\\n          expect(withoutOffset.getText()).toEqual('4 people are viewing.');\\n          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\\n        });\\n        it('should show data-bound names', function() {\\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\\n          var personCount = element(by.model('personCount'));\\n          var person1 = element(by.model('person1'));\\n          var person2 = element(by.model('person2'));\\n          personCount.clear();\\n          personCount.sendKeys('4');\\n          person1.clear();\\n          person1.sendKeys('Di');\\n          person2.clear();\\n          person2.sendKeys('Vojta');\\n          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\\n        });\\n      </file>\\n    </example>\\n */\\nvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\\n  var BRACE = /{}/g,\\n      IS_WHEN = /^when(Minus)?(.+)$/;\\n\\n  return {\\n    restrict: 'EA',\\n    link: function(scope, element, attr) {\\n      var numberExp = attr.count,\\n          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs\\n          offset = attr.offset || 0,\\n          whens = scope.$eval(whenExp) || {},\\n          whensExpFns = {},\\n          startSymbol = $interpolate.startSymbol(),\\n          endSymbol = $interpolate.endSymbol(),\\n          braceReplacement = startSymbol + numberExp + '-' + offset + endSymbol,\\n          watchRemover = angular.noop,\\n          lastCount;\\n\\n      forEach(attr, function(expression, attributeName) {\\n        var tmpMatch = IS_WHEN.exec(attributeName);\\n        if (tmpMatch) {\\n          var whenKey = (tmpMatch[1] ? '-' : '') + lowercase(tmpMatch[2]);\\n          whens[whenKey] = element.attr(attr.$attr[attributeName]);\\n        }\\n      });\\n      forEach(whens, function(expression, key) {\\n        whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement));\\n\\n      });\\n\\n      scope.$watch(numberExp, function ngPluralizeWatchAction(newVal) {\\n        var count = parseFloat(newVal);\\n        var countIsNaN = isNaN(count);\\n\\n        if (!countIsNaN && !(count in whens)) {\\n          // If an explicit number rule such as 1, 2, 3... is defined, just use it.\\n          // Otherwise, check it against pluralization rules in $locale service.\\n          count = $locale.pluralCat(count - offset);\\n        }\\n\\n        // If both `count` and `lastCount` are NaN, we don't need to re-register a watch.\\n        // In JS `NaN !== NaN`, so we have to exlicitly check.\\n        if ((count !== lastCount) && !(countIsNaN && isNaN(lastCount))) {\\n          watchRemover();\\n          watchRemover = scope.$watch(whensExpFns[count], updateElementText);\\n          lastCount = count;\\n        }\\n      });\\n\\n      function updateElementText(newText) {\\n        element.text(newText || '');\\n      }\\n    }\\n  };\\n}];\\n\\n/**\\n * @ngdoc directive\\n * @name ngRepeat\\n *\\n * @description\\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\\n * instance gets its own scope, where the given loop variable is set to the current collection item,\\n * and `$index` is set to the item index or key.\\n *\\n * Special properties are exposed on the local scope of each template instance, including:\\n *\\n * | Variable  | Type            | Details                                                                     |\\n * |-----------|-----------------|-----------------------------------------------------------------------------|\\n * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\\n * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\\n * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\\n * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\\n * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\\n * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\\n *\\n * Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\\n * This may be useful when, for instance, nesting ngRepeats.\\n *\\n * # Iterating over object properties\\n *\\n * It is possible to get `ngRepeat` to iterate over the properties of an object using the following\\n * syntax:\\n *\\n * ```js\\n * <div ng-repeat=\\\"(key, value) in myObj\\\"> ... </div>\\n * ```\\n *\\n * You need to be aware that the JavaScript specification does not define what order\\n * it will return the keys for an object. In order to have a guaranteed deterministic order\\n * for the keys, Angular versions up to and including 1.3 **sort the keys alphabetically**.\\n *\\n * If this is not desired, the recommended workaround is to convert your object into an array\\n * that is sorted into the order that you prefer before providing it to `ngRepeat`.  You could\\n * do this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)\\n * or implement a `$watch` on the object yourself.\\n *\\n * In version 1.4 we will remove the sorting, since it seems that browsers generally follow the\\n * strategy of providing keys in the order in which they were defined, although there are exceptions\\n * when keys are deleted and reinstated.\\n *\\n *\\n * # Special repeat start and end points\\n * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\\n * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\\n * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\\n * up to and including the ending HTML tag where **ng-repeat-end** is placed.\\n *\\n * The example below makes use of this feature:\\n * ```html\\n *   <header ng-repeat-start=\\\"item in items\\\">\\n *     Header {{ item }}\\n *   </header>\\n *   <div class=\\\"body\\\">\\n *     Body {{ item }}\\n *   </div>\\n *   <footer ng-repeat-end>\\n *     Footer {{ item }}\\n *   </footer>\\n * ```\\n *\\n * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\\n * ```html\\n *   <header>\\n *     Header A\\n *   </header>\\n *   <div class=\\\"body\\\">\\n *     Body A\\n *   </div>\\n *   <footer>\\n *     Footer A\\n *   </footer>\\n *   <header>\\n *     Header B\\n *   </header>\\n *   <div class=\\\"body\\\">\\n *     Body B\\n *   </div>\\n *   <footer>\\n *     Footer B\\n *   </footer>\\n * ```\\n *\\n * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\\n * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).\\n *\\n * @animations\\n * **.enter** - when a new item is added to the list or when an item is revealed after a filter\\n *\\n * **.leave** - when an item is removed from the list or when an item is filtered out\\n *\\n * **.move** - when an adjacent item is filtered out causing a reorder or when the item contents are reordered\\n *\\n * @element ANY\\n * @scope\\n * @priority 1000\\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These\\n *   formats are currently supported:\\n *\\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\\n *     is a scope expression giving the collection to enumerate.\\n *\\n *     For example: `album in artist.albums`.\\n *\\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\\n *     and `expression` is the scope expression giving the collection to enumerate.\\n *\\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\\n *\\n *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking function\\n *     which can be used to associate the objects in the collection with the DOM elements. If no tracking function\\n *     is specified the ng-repeat associates elements by identity in the collection. It is an error to have\\n *     more than one tracking function to resolve to the same key. (This would mean that two distinct objects are\\n *     mapped to the same DOM element, which is not possible.)  Filters should be applied to the expression,\\n *     before specifying a tracking expression.\\n *\\n *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements\\n *     will be associated by item identity in the array.\\n *\\n *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\\n *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\\n *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM\\n *     element in the same way in the DOM.\\n *\\n *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this\\n *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`\\n *     property is same.\\n *\\n *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter\\n *     to items in conjunction with a tracking expression.\\n *\\n *   * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the\\n *     intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message\\n *     when a filter is active on the repeater, but the filtered result set is empty.\\n *\\n *     For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after\\n *     the items have been processed through the filter.\\n *\\n * @example\\n * This example initializes the scope to a list of names and\\n * then uses `ngRepeat` to display every person:\\n  <example module=\\\"ngAnimate\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n    <file name=\\\"index.html\\\">\\n      <div ng-init=\\\"friends = [\\n        {name:'John', age:25, gender:'boy'},\\n        {name:'Jessie', age:30, gender:'girl'},\\n        {name:'Johanna', age:28, gender:'girl'},\\n        {name:'Joy', age:15, gender:'girl'},\\n        {name:'Mary', age:28, gender:'girl'},\\n        {name:'Peter', age:95, gender:'boy'},\\n        {name:'Sebastian', age:50, gender:'boy'},\\n        {name:'Erika', age:27, gender:'girl'},\\n        {name:'Patrick', age:40, gender:'boy'},\\n        {name:'Samantha', age:60, gender:'girl'}\\n      ]\\\">\\n        I have {{friends.length}} friends. They are:\\n        <input type=\\\"search\\\" ng-model=\\\"q\\\" placeholder=\\\"filter friends...\\\" />\\n        <ul class=\\\"example-animate-container\\\">\\n          <li class=\\\"animate-repeat\\\" ng-repeat=\\\"friend in friends | filter:q as results\\\">\\n            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\\n          </li>\\n          <li class=\\\"animate-repeat\\\" ng-if=\\\"results.length == 0\\\">\\n            <strong>No results found...</strong>\\n          </li>\\n        </ul>\\n      </div>\\n    </file>\\n    <file name=\\\"animations.css\\\">\\n      .example-animate-container {\\n        background:white;\\n        border:1px solid black;\\n        list-style:none;\\n        margin:0;\\n        padding:0 10px;\\n      }\\n\\n      .animate-repeat {\\n        line-height:40px;\\n        list-style:none;\\n        box-sizing:border-box;\\n      }\\n\\n      .animate-repeat.ng-move,\\n      .animate-repeat.ng-enter,\\n      .animate-repeat.ng-leave {\\n        -webkit-transition:all linear 0.5s;\\n        transition:all linear 0.5s;\\n      }\\n\\n      .animate-repeat.ng-leave.ng-leave-active,\\n      .animate-repeat.ng-move,\\n      .animate-repeat.ng-enter {\\n        opacity:0;\\n        max-height:0;\\n      }\\n\\n      .animate-repeat.ng-leave,\\n      .animate-repeat.ng-move.ng-move-active,\\n      .animate-repeat.ng-enter.ng-enter-active {\\n        opacity:1;\\n        max-height:40px;\\n      }\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var friends = element.all(by.repeater('friend in friends'));\\n\\n      it('should render initial data set', function() {\\n        expect(friends.count()).toBe(10);\\n        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');\\n        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');\\n        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');\\n        expect(element(by.binding('friends.length')).getText())\\n            .toMatch(\\\"I have 10 friends. They are:\\\");\\n      });\\n\\n       it('should update repeater when filter predicate changes', function() {\\n         expect(friends.count()).toBe(10);\\n\\n         element(by.model('q')).sendKeys('ma');\\n\\n         expect(friends.count()).toBe(2);\\n         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');\\n         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');\\n       });\\n      </file>\\n    </example>\\n */\\nvar ngRepeatDirective = ['$parse', '$animate', function($parse, $animate) {\\n  var NG_REMOVED = '$$NG_REMOVED';\\n  var ngRepeatMinErr = minErr('ngRepeat');\\n\\n  var updateScope = function(scope, index, valueIdentifier, value, keyIdentifier, key, arrayLength) {\\n    // TODO(perf): generate setters to shave off ~40ms or 1-1.5%\\n    scope[valueIdentifier] = value;\\n    if (keyIdentifier) scope[keyIdentifier] = key;\\n    scope.$index = index;\\n    scope.$first = (index === 0);\\n    scope.$last = (index === (arrayLength - 1));\\n    scope.$middle = !(scope.$first || scope.$last);\\n    // jshint bitwise: false\\n    scope.$odd = !(scope.$even = (index&1) === 0);\\n    // jshint bitwise: true\\n  };\\n\\n  var getBlockStart = function(block) {\\n    return block.clone[0];\\n  };\\n\\n  var getBlockEnd = function(block) {\\n    return block.clone[block.clone.length - 1];\\n  };\\n\\n\\n  return {\\n    restrict: 'A',\\n    multiElement: true,\\n    transclude: 'element',\\n    priority: 1000,\\n    terminal: true,\\n    $$tlb: true,\\n    compile: function ngRepeatCompile($element, $attr) {\\n      var expression = $attr.ngRepeat;\\n      var ngRepeatEndComment = document.createComment(' end ngRepeat: ' + expression + ' ');\\n\\n      var match = expression.match(/^\\\\s*([\\\\s\\\\S]+?)\\\\s+in\\\\s+([\\\\s\\\\S]+?)(?:\\\\s+as\\\\s+([\\\\s\\\\S]+?))?(?:\\\\s+track\\\\s+by\\\\s+([\\\\s\\\\S]+?))?\\\\s*$/);\\n\\n      if (!match) {\\n        throw ngRepeatMinErr('iexp', \\\"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\\\",\\n            expression);\\n      }\\n\\n      var lhs = match[1];\\n      var rhs = match[2];\\n      var aliasAs = match[3];\\n      var trackByExp = match[4];\\n\\n      match = lhs.match(/^(?:(\\\\s*[\\\\$\\\\w]+)|\\\\(\\\\s*([\\\\$\\\\w]+)\\\\s*,\\\\s*([\\\\$\\\\w]+)\\\\s*\\\\))$/);\\n\\n      if (!match) {\\n        throw ngRepeatMinErr('iidexp', \\\"'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.\\\",\\n            lhs);\\n      }\\n      var valueIdentifier = match[3] || match[1];\\n      var keyIdentifier = match[2];\\n\\n      if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) ||\\n          /^(null|undefined|this|\\\\$index|\\\\$first|\\\\$middle|\\\\$last|\\\\$even|\\\\$odd|\\\\$parent|\\\\$root|\\\\$id)$/.test(aliasAs))) {\\n        throw ngRepeatMinErr('badident', \\\"alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.\\\",\\n          aliasAs);\\n      }\\n\\n      var trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn;\\n      var hashFnLocals = {$id: hashKey};\\n\\n      if (trackByExp) {\\n        trackByExpGetter = $parse(trackByExp);\\n      } else {\\n        trackByIdArrayFn = function(key, value) {\\n          return hashKey(value);\\n        };\\n        trackByIdObjFn = function(key) {\\n          return key;\\n        };\\n      }\\n\\n      return function ngRepeatLink($scope, $element, $attr, ctrl, $transclude) {\\n\\n        if (trackByExpGetter) {\\n          trackByIdExpFn = function(key, value, index) {\\n            // assign key, value, and $index to the locals so that they can be used in hash functions\\n            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;\\n            hashFnLocals[valueIdentifier] = value;\\n            hashFnLocals.$index = index;\\n            return trackByExpGetter($scope, hashFnLocals);\\n          };\\n        }\\n\\n        // Store a list of elements from previous run. This is a hash where key is the item from the\\n        // iterator, and the value is objects with following properties.\\n        //   - scope: bound scope\\n        //   - element: previous element.\\n        //   - index: position\\n        //\\n        // We are using no-proto object so that we don't need to guard against inherited props via\\n        // hasOwnProperty.\\n        var lastBlockMap = createMap();\\n\\n        //watch props\\n        $scope.$watchCollection(rhs, function ngRepeatAction(collection) {\\n          var index, length,\\n              previousNode = $element[0],     // node that cloned nodes should be inserted after\\n                                              // initialized to the comment node anchor\\n              nextNode,\\n              // Same as lastBlockMap but it has the current state. It will become the\\n              // lastBlockMap on the next iteration.\\n              nextBlockMap = createMap(),\\n              collectionLength,\\n              key, value, // key/value of iteration\\n              trackById,\\n              trackByIdFn,\\n              collectionKeys,\\n              block,       // last object information {scope, element, id}\\n              nextBlockOrder,\\n              elementsToRemove;\\n\\n          if (aliasAs) {\\n            $scope[aliasAs] = collection;\\n          }\\n\\n          if (isArrayLike(collection)) {\\n            collectionKeys = collection;\\n            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;\\n          } else {\\n            trackByIdFn = trackByIdExpFn || trackByIdObjFn;\\n            // if object, extract keys, sort them and use to determine order of iteration over obj props\\n            collectionKeys = [];\\n            for (var itemKey in collection) {\\n              if (collection.hasOwnProperty(itemKey) && itemKey.charAt(0) != '$') {\\n                collectionKeys.push(itemKey);\\n              }\\n            }\\n            collectionKeys.sort();\\n          }\\n\\n          collectionLength = collectionKeys.length;\\n          nextBlockOrder = new Array(collectionLength);\\n\\n          // locate existing items\\n          for (index = 0; index < collectionLength; index++) {\\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\\n            value = collection[key];\\n            trackById = trackByIdFn(key, value, index);\\n            if (lastBlockMap[trackById]) {\\n              // found previously seen block\\n              block = lastBlockMap[trackById];\\n              delete lastBlockMap[trackById];\\n              nextBlockMap[trackById] = block;\\n              nextBlockOrder[index] = block;\\n            } else if (nextBlockMap[trackById]) {\\n              // if collision detected. restore lastBlockMap and throw an error\\n              forEach(nextBlockOrder, function(block) {\\n                if (block && block.scope) lastBlockMap[block.id] = block;\\n              });\\n              throw ngRepeatMinErr('dupes',\\n                  \\\"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}\\\",\\n                  expression, trackById, value);\\n            } else {\\n              // new never before seen block\\n              nextBlockOrder[index] = {id: trackById, scope: undefined, clone: undefined};\\n              nextBlockMap[trackById] = true;\\n            }\\n          }\\n\\n          // remove leftover items\\n          for (var blockKey in lastBlockMap) {\\n            block = lastBlockMap[blockKey];\\n            elementsToRemove = getBlockNodes(block.clone);\\n            $animate.leave(elementsToRemove);\\n            if (elementsToRemove[0].parentNode) {\\n              // if the element was not removed yet because of pending animation, mark it as deleted\\n              // so that we can ignore it later\\n              for (index = 0, length = elementsToRemove.length; index < length; index++) {\\n                elementsToRemove[index][NG_REMOVED] = true;\\n              }\\n            }\\n            block.scope.$destroy();\\n          }\\n\\n          // we are not using forEach for perf reasons (trying to avoid #call)\\n          for (index = 0; index < collectionLength; index++) {\\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\\n            value = collection[key];\\n            block = nextBlockOrder[index];\\n\\n            if (block.scope) {\\n              // if we have already seen this object, then we need to reuse the\\n              // associated scope/element\\n\\n              nextNode = previousNode;\\n\\n              // skip nodes that are already pending removal via leave animation\\n              do {\\n                nextNode = nextNode.nextSibling;\\n              } while (nextNode && nextNode[NG_REMOVED]);\\n\\n              if (getBlockStart(block) != nextNode) {\\n                // existing item which got moved\\n                $animate.move(getBlockNodes(block.clone), null, jqLite(previousNode));\\n              }\\n              previousNode = getBlockEnd(block);\\n              updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);\\n            } else {\\n              // new item which we don't know about\\n              $transclude(function ngRepeatTransclude(clone, scope) {\\n                block.scope = scope;\\n                // http://jsperf.com/clone-vs-createcomment\\n                var endNode = ngRepeatEndComment.cloneNode(false);\\n                clone[clone.length++] = endNode;\\n\\n                // TODO(perf): support naked previousNode in `enter` to avoid creation of jqLite wrapper?\\n                $animate.enter(clone, null, jqLite(previousNode));\\n                previousNode = endNode;\\n                // Note: We only need the first/last node of the cloned nodes.\\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\\n                // by a directive with templateUrl when its template arrives.\\n                block.clone = clone;\\n                nextBlockMap[block.id] = block;\\n                updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);\\n              });\\n            }\\n          }\\n          lastBlockMap = nextBlockMap;\\n        });\\n      };\\n    }\\n  };\\n}];\\n\\nvar NG_HIDE_CLASS = 'ng-hide';\\nvar NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';\\n/**\\n * @ngdoc directive\\n * @name ngShow\\n *\\n * @description\\n * The `ngShow` directive shows or hides the given HTML element based on the expression\\n * provided to the `ngShow` attribute. The element is shown or hidden by removing or adding\\n * the `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\\n * in AngularJS and sets the display style to none (using an !important flag).\\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\\n *\\n * ```html\\n * <!-- when $scope.myValue is truthy (element is visible) -->\\n * <div ng-show=\\\"myValue\\\"></div>\\n *\\n * <!-- when $scope.myValue is falsy (element is hidden) -->\\n * <div ng-show=\\\"myValue\\\" class=\\\"ng-hide\\\"></div>\\n * ```\\n *\\n * When the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added to the class\\n * attribute on the element causing it to become hidden. When truthy, the `.ng-hide` CSS class is removed\\n * from the element causing the element not to appear hidden.\\n *\\n * ## Why is !important used?\\n *\\n * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\\n * can be easily overridden by heavier selectors. For example, something as simple\\n * as changing the display style on a HTML list item would make hidden elements appear visible.\\n * This also becomes a bigger issue when dealing with CSS frameworks.\\n *\\n * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\\n * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\\n * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\\n *\\n * ### Overriding `.ng-hide`\\n *\\n * By default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\\n * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\\n * class in CSS:\\n *\\n * ```css\\n * .ng-hide {\\n *   /&#42; this is just another form of hiding an element &#42;/\\n *   display: block!important;\\n *   position: absolute;\\n *   top: -9999px;\\n *   left: -9999px;\\n * }\\n * ```\\n *\\n * By default you don't need to override in CSS anything and the animations will work around the display style.\\n *\\n * ## A note about animations with `ngShow`\\n *\\n * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\\n * is true and false. This system works like the animation system present with ngClass except that\\n * you must also include the !important flag to override the display property\\n * so that you can perform an animation when the element is hidden during the time of the animation.\\n *\\n * ```css\\n * //\\n * //a working example can be found at the bottom of this page\\n * //\\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\\n *   /&#42; this is required as of 1.3x to properly\\n *      apply all styling in a show/hide animation &#42;/\\n *   transition: 0s linear all;\\n * }\\n *\\n * .my-element.ng-hide-add-active,\\n * .my-element.ng-hide-remove-active {\\n *   /&#42; the transition is defined in the active class &#42;/\\n *   transition: 1s linear all;\\n * }\\n *\\n * .my-element.ng-hide-add { ... }\\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\\n * .my-element.ng-hide-remove { ... }\\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\\n * ```\\n *\\n * Keep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\\n * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\\n *\\n * @animations\\n * addClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a truthy value and the just before contents are set to visible\\n * removeClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden\\n *\\n * @element ANY\\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy\\n *     then the element is shown or hidden respectively.\\n *\\n * @example\\n  <example module=\\\"ngAnimate\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n    <file name=\\\"index.html\\\">\\n      Click me: <input type=\\\"checkbox\\\" ng-model=\\\"checked\\\"><br/>\\n      <div>\\n        Show:\\n        <div class=\\\"check-element animate-show\\\" ng-show=\\\"checked\\\">\\n          <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span> I show up when your checkbox is checked.\\n        </div>\\n      </div>\\n      <div>\\n        Hide:\\n        <div class=\\\"check-element animate-show\\\" ng-hide=\\\"checked\\\">\\n          <span class=\\\"glyphicon glyphicon-thumbs-down\\\"></span> I hide when your checkbox is checked.\\n        </div>\\n      </div>\\n    </file>\\n    <file name=\\\"glyphicons.css\\\">\\n      @import url(../../components/bootstrap-3.1.1/css/bootstrap.css);\\n    </file>\\n    <file name=\\\"animations.css\\\">\\n      .animate-show {\\n        line-height: 20px;\\n        opacity: 1;\\n        padding: 10px;\\n        border: 1px solid black;\\n        background: white;\\n      }\\n\\n      .animate-show.ng-hide-add.ng-hide-add-active,\\n      .animate-show.ng-hide-remove.ng-hide-remove-active {\\n        -webkit-transition: all linear 0.5s;\\n        transition: all linear 0.5s;\\n      }\\n\\n      .animate-show.ng-hide {\\n        line-height: 0;\\n        opacity: 0;\\n        padding: 0 10px;\\n      }\\n\\n      .check-element {\\n        padding: 10px;\\n        border: 1px solid black;\\n        background: white;\\n      }\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\\n      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\\n\\n      it('should check ng-show / ng-hide', function() {\\n        expect(thumbsUp.isDisplayed()).toBeFalsy();\\n        expect(thumbsDown.isDisplayed()).toBeTruthy();\\n\\n        element(by.model('checked')).click();\\n\\n        expect(thumbsUp.isDisplayed()).toBeTruthy();\\n        expect(thumbsDown.isDisplayed()).toBeFalsy();\\n      });\\n    </file>\\n  </example>\\n */\\nvar ngShowDirective = ['$animate', function($animate) {\\n  return {\\n    restrict: 'A',\\n    multiElement: true,\\n    link: function(scope, element, attr) {\\n      scope.$watch(attr.ngShow, function ngShowWatchAction(value) {\\n        // we're adding a temporary, animation-specific class for ng-hide since this way\\n        // we can control when the element is actually displayed on screen without having\\n        // to have a global/greedy CSS selector that breaks when other animations are run.\\n        // Read: https://github.com/angular/angular.js/issues/9103#issuecomment-58335845\\n        $animate[value ? 'removeClass' : 'addClass'](element, NG_HIDE_CLASS, {\\n          tempClasses: NG_HIDE_IN_PROGRESS_CLASS\\n        });\\n      });\\n    }\\n  };\\n}];\\n\\n\\n/**\\n * @ngdoc directive\\n * @name ngHide\\n *\\n * @description\\n * The `ngHide` directive shows or hides the given HTML element based on the expression\\n * provided to the `ngHide` attribute. The element is shown or hidden by removing or adding\\n * the `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\\n * in AngularJS and sets the display style to none (using an !important flag).\\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\\n *\\n * ```html\\n * <!-- when $scope.myValue is truthy (element is hidden) -->\\n * <div ng-hide=\\\"myValue\\\" class=\\\"ng-hide\\\"></div>\\n *\\n * <!-- when $scope.myValue is falsy (element is visible) -->\\n * <div ng-hide=\\\"myValue\\\"></div>\\n * ```\\n *\\n * When the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added to the class\\n * attribute on the element causing it to become hidden. When falsy, the `.ng-hide` CSS class is removed\\n * from the element causing the element not to appear hidden.\\n *\\n * ## Why is !important used?\\n *\\n * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\\n * can be easily overridden by heavier selectors. For example, something as simple\\n * as changing the display style on a HTML list item would make hidden elements appear visible.\\n * This also becomes a bigger issue when dealing with CSS frameworks.\\n *\\n * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\\n * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\\n * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\\n *\\n * ### Overriding `.ng-hide`\\n *\\n * By default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\\n * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\\n * class in CSS:\\n *\\n * ```css\\n * .ng-hide {\\n *   /&#42; this is just another form of hiding an element &#42;/\\n *   display: block!important;\\n *   position: absolute;\\n *   top: -9999px;\\n *   left: -9999px;\\n * }\\n * ```\\n *\\n * By default you don't need to override in CSS anything and the animations will work around the display style.\\n *\\n * ## A note about animations with `ngHide`\\n *\\n * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\\n * is true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`\\n * CSS class is added and removed for you instead of your own CSS class.\\n *\\n * ```css\\n * //\\n * //a working example can be found at the bottom of this page\\n * //\\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\\n *   transition: 0.5s linear all;\\n * }\\n *\\n * .my-element.ng-hide-add { ... }\\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\\n * .my-element.ng-hide-remove { ... }\\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\\n * ```\\n *\\n * Keep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\\n * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\\n *\\n * @animations\\n * removeClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden\\n * addClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a non truthy value and just before the contents are set to visible\\n *\\n * @element ANY\\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\\n *     the element is shown or hidden respectively.\\n *\\n * @example\\n  <example module=\\\"ngAnimate\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n    <file name=\\\"index.html\\\">\\n      Click me: <input type=\\\"checkbox\\\" ng-model=\\\"checked\\\"><br/>\\n      <div>\\n        Show:\\n        <div class=\\\"check-element animate-hide\\\" ng-show=\\\"checked\\\">\\n          <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span> I show up when your checkbox is checked.\\n        </div>\\n      </div>\\n      <div>\\n        Hide:\\n        <div class=\\\"check-element animate-hide\\\" ng-hide=\\\"checked\\\">\\n          <span class=\\\"glyphicon glyphicon-thumbs-down\\\"></span> I hide when your checkbox is checked.\\n        </div>\\n      </div>\\n    </file>\\n    <file name=\\\"glyphicons.css\\\">\\n      @import url(../../components/bootstrap-3.1.1/css/bootstrap.css);\\n    </file>\\n    <file name=\\\"animations.css\\\">\\n      .animate-hide {\\n        -webkit-transition: all linear 0.5s;\\n        transition: all linear 0.5s;\\n        line-height: 20px;\\n        opacity: 1;\\n        padding: 10px;\\n        border: 1px solid black;\\n        background: white;\\n      }\\n\\n      .animate-hide.ng-hide {\\n        line-height: 0;\\n        opacity: 0;\\n        padding: 0 10px;\\n      }\\n\\n      .check-element {\\n        padding: 10px;\\n        border: 1px solid black;\\n        background: white;\\n      }\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\\n      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\\n\\n      it('should check ng-show / ng-hide', function() {\\n        expect(thumbsUp.isDisplayed()).toBeFalsy();\\n        expect(thumbsDown.isDisplayed()).toBeTruthy();\\n\\n        element(by.model('checked')).click();\\n\\n        expect(thumbsUp.isDisplayed()).toBeTruthy();\\n        expect(thumbsDown.isDisplayed()).toBeFalsy();\\n      });\\n    </file>\\n  </example>\\n */\\nvar ngHideDirective = ['$animate', function($animate) {\\n  return {\\n    restrict: 'A',\\n    multiElement: true,\\n    link: function(scope, element, attr) {\\n      scope.$watch(attr.ngHide, function ngHideWatchAction(value) {\\n        // The comment inside of the ngShowDirective explains why we add and\\n        // remove a temporary class for the show/hide animation\\n        $animate[value ? 'addClass' : 'removeClass'](element,NG_HIDE_CLASS, {\\n          tempClasses: NG_HIDE_IN_PROGRESS_CLASS\\n        });\\n      });\\n    }\\n  };\\n}];\\n\\n/**\\n * @ngdoc directive\\n * @name ngStyle\\n * @restrict AC\\n *\\n * @description\\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\\n *\\n * @element ANY\\n * @param {expression} ngStyle\\n *\\n * {@link guide/expression Expression} which evals to an\\n * object whose keys are CSS style names and values are corresponding values for those CSS\\n * keys.\\n *\\n * Since some CSS style names are not valid keys for an object, they must be quoted.\\n * See the 'background-color' style in the example below.\\n *\\n * @example\\n   <example>\\n     <file name=\\\"index.html\\\">\\n        <input type=\\\"button\\\" value=\\\"set color\\\" ng-click=\\\"myStyle={color:'red'}\\\">\\n        <input type=\\\"button\\\" value=\\\"set background\\\" ng-click=\\\"myStyle={'background-color':'blue'}\\\">\\n        <input type=\\\"button\\\" value=\\\"clear\\\" ng-click=\\\"myStyle={}\\\">\\n        <br/>\\n        <span ng-style=\\\"myStyle\\\">Sample Text</span>\\n        <pre>myStyle={{myStyle}}</pre>\\n     </file>\\n     <file name=\\\"style.css\\\">\\n       span {\\n         color: black;\\n       }\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n       var colorSpan = element(by.css('span'));\\n\\n       it('should check ng-style', function() {\\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\\n         element(by.css('input[value=\\\\'set color\\\\']')).click();\\n         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');\\n         element(by.css('input[value=clear]')).click();\\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\\n       });\\n     </file>\\n   </example>\\n */\\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\\n  scope.$watchCollection(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\\n    if (oldStyles && (newStyles !== oldStyles)) {\\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\\n    }\\n    if (newStyles) element.css(newStyles);\\n  });\\n});\\n\\n/**\\n * @ngdoc directive\\n * @name ngSwitch\\n * @restrict EA\\n *\\n * @description\\n * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\\n * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\\n * as specified in the template.\\n *\\n * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\\n * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\\n * matches the value obtained from the evaluated expression. In other words, you define a container element\\n * (where you place the directive), place an expression on the **`on=\\\"...\\\"` attribute**\\n * (or the **`ng-switch=\\\"...\\\"` attribute**), define any inner elements inside of the directive and place\\n * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\\n * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default\\n * attribute is displayed.\\n *\\n * <div class=\\\"alert alert-info\\\">\\n * Be aware that the attribute values to match against cannot be expressions. They are interpreted\\n * as literal string values to match against.\\n * For example, **`ng-switch-when=\\\"someVal\\\"`** will match against the string `\\\"someVal\\\"` not against the\\n * value of the expression `$scope.someVal`.\\n * </div>\\n\\n * @animations\\n * enter - happens after the ngSwitch contents change and the matched child element is placed inside the container\\n * leave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM\\n *\\n * @usage\\n *\\n * ```\\n * <ANY ng-switch=\\\"expression\\\">\\n *   <ANY ng-switch-when=\\\"matchValue1\\\">...</ANY>\\n *   <ANY ng-switch-when=\\\"matchValue2\\\">...</ANY>\\n *   <ANY ng-switch-default>...</ANY>\\n * </ANY>\\n * ```\\n *\\n *\\n * @scope\\n * @priority 1200\\n * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\\n * On child elements add:\\n *\\n * * `ngSwitchWhen`: the case statement to match against. If match then this\\n *   case will be displayed. If the same match appears multiple times, all the\\n *   elements will be displayed.\\n * * `ngSwitchDefault`: the default case when no other case match. If there\\n *   are multiple default cases, all of them will be displayed when no other\\n *   case match.\\n *\\n *\\n * @example\\n  <example module=\\\"switchExample\\\" deps=\\\"angular-animate.js\\\" animations=\\\"true\\\">\\n    <file name=\\\"index.html\\\">\\n      <div ng-controller=\\\"ExampleController\\\">\\n        <select ng-model=\\\"selection\\\" ng-options=\\\"item for item in items\\\">\\n        </select>\\n        <tt>selection={{selection}}</tt>\\n        <hr/>\\n        <div class=\\\"animate-switch-container\\\"\\n          ng-switch on=\\\"selection\\\">\\n            <div class=\\\"animate-switch\\\" ng-switch-when=\\\"settings\\\">Settings Div</div>\\n            <div class=\\\"animate-switch\\\" ng-switch-when=\\\"home\\\">Home Span</div>\\n            <div class=\\\"animate-switch\\\" ng-switch-default>default</div>\\n        </div>\\n      </div>\\n    </file>\\n    <file name=\\\"script.js\\\">\\n      angular.module('switchExample', ['ngAnimate'])\\n        .controller('ExampleController', ['$scope', function($scope) {\\n          $scope.items = ['settings', 'home', 'other'];\\n          $scope.selection = $scope.items[0];\\n        }]);\\n    </file>\\n    <file name=\\\"animations.css\\\">\\n      .animate-switch-container {\\n        position:relative;\\n        background:white;\\n        border:1px solid black;\\n        height:40px;\\n        overflow:hidden;\\n      }\\n\\n      .animate-switch {\\n        padding:10px;\\n      }\\n\\n      .animate-switch.ng-animate {\\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\\n\\n        position:absolute;\\n        top:0;\\n        left:0;\\n        right:0;\\n        bottom:0;\\n      }\\n\\n      .animate-switch.ng-leave.ng-leave-active,\\n      .animate-switch.ng-enter {\\n        top:-50px;\\n      }\\n      .animate-switch.ng-leave,\\n      .animate-switch.ng-enter.ng-enter-active {\\n        top:0;\\n      }\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      var switchElem = element(by.css('[ng-switch]'));\\n      var select = element(by.model('selection'));\\n\\n      it('should start in settings', function() {\\n        expect(switchElem.getText()).toMatch(/Settings Div/);\\n      });\\n      it('should change to home', function() {\\n        select.all(by.css('option')).get(1).click();\\n        expect(switchElem.getText()).toMatch(/Home Span/);\\n      });\\n      it('should select default', function() {\\n        select.all(by.css('option')).get(2).click();\\n        expect(switchElem.getText()).toMatch(/default/);\\n      });\\n    </file>\\n  </example>\\n */\\nvar ngSwitchDirective = ['$animate', function($animate) {\\n  return {\\n    restrict: 'EA',\\n    require: 'ngSwitch',\\n\\n    // asks for $scope to fool the BC controller module\\n    controller: ['$scope', function ngSwitchController() {\\n     this.cases = {};\\n    }],\\n    link: function(scope, element, attr, ngSwitchController) {\\n      var watchExpr = attr.ngSwitch || attr.on,\\n          selectedTranscludes = [],\\n          selectedElements = [],\\n          previousLeaveAnimations = [],\\n          selectedScopes = [];\\n\\n      var spliceFactory = function(array, index) {\\n          return function() { array.splice(index, 1); };\\n      };\\n\\n      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\\n        var i, ii;\\n        for (i = 0, ii = previousLeaveAnimations.length; i < ii; ++i) {\\n          $animate.cancel(previousLeaveAnimations[i]);\\n        }\\n        previousLeaveAnimations.length = 0;\\n\\n        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {\\n          var selected = getBlockNodes(selectedElements[i].clone);\\n          selectedScopes[i].$destroy();\\n          var promise = previousLeaveAnimations[i] = $animate.leave(selected);\\n          promise.then(spliceFactory(previousLeaveAnimations, i));\\n        }\\n\\n        selectedElements.length = 0;\\n        selectedScopes.length = 0;\\n\\n        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {\\n          forEach(selectedTranscludes, function(selectedTransclude) {\\n            selectedTransclude.transclude(function(caseElement, selectedScope) {\\n              selectedScopes.push(selectedScope);\\n              var anchor = selectedTransclude.element;\\n              caseElement[caseElement.length++] = document.createComment(' end ngSwitchWhen: ');\\n              var block = { clone: caseElement };\\n\\n              selectedElements.push(block);\\n              $animate.enter(caseElement, anchor.parent(), anchor);\\n            });\\n          });\\n        }\\n      });\\n    }\\n  };\\n}];\\n\\nvar ngSwitchWhenDirective = ngDirective({\\n  transclude: 'element',\\n  priority: 1200,\\n  require: '^ngSwitch',\\n  multiElement: true,\\n  link: function(scope, element, attrs, ctrl, $transclude) {\\n    ctrl.cases['!' + attrs.ngSwitchWhen] = (ctrl.cases['!' + attrs.ngSwitchWhen] || []);\\n    ctrl.cases['!' + attrs.ngSwitchWhen].push({ transclude: $transclude, element: element });\\n  }\\n});\\n\\nvar ngSwitchDefaultDirective = ngDirective({\\n  transclude: 'element',\\n  priority: 1200,\\n  require: '^ngSwitch',\\n  multiElement: true,\\n  link: function(scope, element, attr, ctrl, $transclude) {\\n    ctrl.cases['?'] = (ctrl.cases['?'] || []);\\n    ctrl.cases['?'].push({ transclude: $transclude, element: element });\\n   }\\n});\\n\\n/**\\n * @ngdoc directive\\n * @name ngTransclude\\n * @restrict EAC\\n *\\n * @description\\n * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\\n *\\n * Any existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.\\n *\\n * @element ANY\\n *\\n * @example\\n   <example module=\\\"transcludeExample\\\">\\n     <file name=\\\"index.html\\\">\\n       <script>\\n         angular.module('transcludeExample', [])\\n          .directive('pane', function(){\\n             return {\\n               restrict: 'E',\\n               transclude: true,\\n               scope: { title:'@' },\\n               template: '<div style=\\\"border: 1px solid black;\\\">' +\\n                           '<div style=\\\"background-color: gray\\\">{{title}}</div>' +\\n                           '<ng-transclude></ng-transclude>' +\\n                         '</div>'\\n             };\\n         })\\n         .controller('ExampleController', ['$scope', function($scope) {\\n           $scope.title = 'Lorem Ipsum';\\n           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\\n         }]);\\n       </script>\\n       <div ng-controller=\\\"ExampleController\\\">\\n         <input ng-model=\\\"title\\\"> <br/>\\n         <textarea ng-model=\\\"text\\\"></textarea> <br/>\\n         <pane title=\\\"{{title}}\\\">{{text}}</pane>\\n       </div>\\n     </file>\\n     <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n        it('should have transcluded', function() {\\n          var titleElement = element(by.model('title'));\\n          titleElement.clear();\\n          titleElement.sendKeys('TITLE');\\n          var textElement = element(by.model('text'));\\n          textElement.clear();\\n          textElement.sendKeys('TEXT');\\n          expect(element(by.binding('title')).getText()).toEqual('TITLE');\\n          expect(element(by.binding('text')).getText()).toEqual('TEXT');\\n        });\\n     </file>\\n   </example>\\n *\\n */\\nvar ngTranscludeDirective = ngDirective({\\n  restrict: 'EAC',\\n  link: function($scope, $element, $attrs, controller, $transclude) {\\n    if (!$transclude) {\\n      throw minErr('ngTransclude')('orphan',\\n       'Illegal use of ngTransclude directive in the template! ' +\\n       'No parent directive that requires a transclusion found. ' +\\n       'Element: {0}',\\n       startingTag($element));\\n    }\\n\\n    $transclude(function(clone) {\\n      $element.empty();\\n      $element.append(clone);\\n    });\\n  }\\n});\\n\\n/**\\n * @ngdoc directive\\n * @name script\\n * @restrict E\\n *\\n * @description\\n * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\\n * template can be used by {@link ng.directive:ngInclude `ngInclude`},\\n * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\\n * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\\n * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.\\n *\\n * @param {string} type Must be set to `'text/ng-template'`.\\n * @param {string} id Cache name of the template.\\n *\\n * @example\\n  <example>\\n    <file name=\\\"index.html\\\">\\n      <script type=\\\"text/ng-template\\\" id=\\\"/tpl.html\\\">\\n        Content of the template.\\n      </script>\\n\\n      <a ng-click=\\\"currentTpl='/tpl.html'\\\" id=\\\"tpl-link\\\">Load inlined template</a>\\n      <div id=\\\"tpl-content\\\" ng-include src=\\\"currentTpl\\\"></div>\\n    </file>\\n    <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n      it('should load template defined inside script tag', function() {\\n        element(by.css('#tpl-link')).click();\\n        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\\n      });\\n    </file>\\n  </example>\\n */\\nvar scriptDirective = ['$templateCache', function($templateCache) {\\n  return {\\n    restrict: 'E',\\n    terminal: true,\\n    compile: function(element, attr) {\\n      if (attr.type == 'text/ng-template') {\\n        var templateUrl = attr.id,\\n            text = element[0].text;\\n\\n        $templateCache.put(templateUrl, text);\\n      }\\n    }\\n  };\\n}];\\n\\nvar ngOptionsMinErr = minErr('ngOptions');\\n/**\\n * @ngdoc directive\\n * @name select\\n * @restrict E\\n *\\n * @description\\n * HTML `SELECT` element with angular data-binding.\\n *\\n * # `ngOptions`\\n *\\n * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`\\n * elements for the `<select>` element using the array or object obtained by evaluating the\\n * `ngOptions` comprehension expression.\\n *\\n * In many cases, `ngRepeat` can be used on `<option>` elements instead of `ngOptions` to achieve a\\n * similar result. However, `ngOptions` provides some benefits such as reducing memory and\\n * increasing speed by not creating a new scope for each repeated instance, as well as providing\\n * more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\\n * comprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound\\n *  to a non-string value. This is because an option element can only be bound to string values at\\n * present.\\n *\\n * When an item in the `<select>` menu is selected, the array element or object property\\n * represented by the selected option will be bound to the model identified by the `ngModel`\\n * directive.\\n *\\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\\n * be nested into the `<select>` element. This element will then represent the `null` or \\\"not selected\\\"\\n * option. See example below for demonstration.\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * **Note:** `ngModel` compares by reference, not value. This is important when binding to an\\n * array of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).\\n * </div>\\n *\\n * ## `select` **`as`**\\n *\\n * Using `select` **`as`** will bind the result of the `select` expression to the model, but\\n * the value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\\n * or property name (for object data sources) of the value within the collection. If a **`track by`** expression\\n * is used, the result of that expression will be set as the value of the `option` and `select` elements.\\n *\\n *\\n * ### `select` **`as`** and **`track by`**\\n *\\n * <div class=\\\"alert alert-warning\\\">\\n * Do not use `select` **`as`** and **`track by`** in the same expression. They are not designed to work together.\\n * </div>\\n *\\n * Consider the following example:\\n *\\n * ```html\\n * <select ng-options=\\\"item.subItem as item.label for item in values track by item.id\\\" ng-model=\\\"selected\\\">\\n * ```\\n *\\n * ```js\\n * $scope.values = [{\\n *   id: 1,\\n *   label: 'aLabel',\\n *   subItem: { name: 'aSubItem' }\\n * }, {\\n *   id: 2,\\n *   label: 'bLabel',\\n *   subItem: { name: 'bSubItem' }\\n * }];\\n *\\n * $scope.selected = { name: 'aSubItem' };\\n * ```\\n *\\n * With the purpose of preserving the selection, the **`track by`** expression is always applied to the element\\n * of the data source (to `item` in this example). To calculate whether an element is selected, we do the\\n * following:\\n *\\n * 1. Apply **`track by`** to the elements in the array. In the example: `[1, 2]`\\n * 2. Apply **`track by`** to the already selected value in `ngModel`.\\n *    In the example: this is not possible as **`track by`** refers to `item.id`, but the selected\\n *    value from `ngModel` is `{name: 'aSubItem'}`, so the **`track by`** expression is applied to\\n *    a wrong object, the selected element can't be found, `<select>` is always reset to the \\\"not\\n *    selected\\\" option.\\n *\\n *\\n * @param {string} ngModel Assignable angular expression to data-bind to.\\n * @param {string=} name Property name of the form under which the control is published.\\n * @param {string=} required The control is considered valid only if value is entered.\\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\\n *    `required` when you want to data-bind to the `required` attribute.\\n * @param {comprehension_expression=} ngOptions in one of the following forms:\\n *\\n *   * for array data sources:\\n *     * `label` **`for`** `value` **`in`** `array`\\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\\n *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array`\\n *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\\n *     * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`\\n *        (for including a filter with `track by`)\\n *   * for object data sources:\\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\\n *     * `select` **`as`** `label` **`group by`** `group`\\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\\n *\\n * Where:\\n *\\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\\n *   * `value`: local variable which will refer to each item in the `array` or each property value\\n *      of `object` during iteration.\\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\\n *   * `label`: The result of this expression will be the label for `<option>` element. The\\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\\n *      element. If not specified, `select` expression will default to `value`.\\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\\n *      DOM element.\\n *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be\\n *      used to identify the objects in the array. The `trackexpr` will most likely refer to the\\n *     `value` variable (e.g. `value.propertyName`). With this the selection is preserved\\n *      even when the options are recreated (e.g. reloaded from the server).\\n *\\n * @example\\n    <example module=\\\"selectExample\\\">\\n      <file name=\\\"index.html\\\">\\n        <script>\\n        angular.module('selectExample', [])\\n          .controller('ExampleController', ['$scope', function($scope) {\\n            $scope.colors = [\\n              {name:'black', shade:'dark'},\\n              {name:'white', shade:'light'},\\n              {name:'red', shade:'dark'},\\n              {name:'blue', shade:'dark'},\\n              {name:'yellow', shade:'light'}\\n            ];\\n            $scope.myColor = $scope.colors[2]; // red\\n          }]);\\n        </script>\\n        <div ng-controller=\\\"ExampleController\\\">\\n          <ul>\\n            <li ng-repeat=\\\"color in colors\\\">\\n              Name: <input ng-model=\\\"color.name\\\">\\n              [<a href ng-click=\\\"colors.splice($index, 1)\\\">X</a>]\\n            </li>\\n            <li>\\n              [<a href ng-click=\\\"colors.push({})\\\">add</a>]\\n            </li>\\n          </ul>\\n          <hr/>\\n          Color (null not allowed):\\n          <select ng-model=\\\"myColor\\\" ng-options=\\\"color.name for color in colors\\\"></select><br>\\n\\n          Color (null allowed):\\n          <span  class=\\\"nullable\\\">\\n            <select ng-model=\\\"myColor\\\" ng-options=\\\"color.name for color in colors\\\">\\n              <option value=\\\"\\\">-- choose color --</option>\\n            </select>\\n          </span><br/>\\n\\n          Color grouped by shade:\\n          <select ng-model=\\\"myColor\\\" ng-options=\\\"color.name group by color.shade for color in colors\\\">\\n          </select><br/>\\n\\n\\n          Select <a href ng-click=\\\"myColor = { name:'not in list', shade: 'other' }\\\">bogus</a>.<br>\\n          <hr/>\\n          Currently selected: {{ {selected_color:myColor} }}\\n          <div style=\\\"border:solid 1px black; height:20px\\\"\\n               ng-style=\\\"{'background-color':myColor.name}\\\">\\n          </div>\\n        </div>\\n      </file>\\n      <file name=\\\"protractor.js\\\" type=\\\"protractor\\\">\\n         it('should check ng-options', function() {\\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\\n           element.all(by.model('myColor')).first().click();\\n           element.all(by.css('select[ng-model=\\\"myColor\\\"] option')).first().click();\\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\\n           element(by.css('.nullable select[ng-model=\\\"myColor\\\"]')).click();\\n           element.all(by.css('.nullable select[ng-model=\\\"myColor\\\"] option')).first().click();\\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\\n         });\\n      </file>\\n    </example>\\n */\\n\\nvar ngOptionsDirective = valueFn({\\n  restrict: 'A',\\n  terminal: true\\n});\\n\\n// jshint maxlen: false\\nvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\\n                         //000011111111110000000000022222222220000000000000000000003333333333000000000000004444444444444440000000005555555555555550000000666666666666666000000000000000777777777700000000000000000008888888888\\n  var NG_OPTIONS_REGEXP = /^\\\\s*([\\\\s\\\\S]+?)(?:\\\\s+as\\\\s+([\\\\s\\\\S]+?))?(?:\\\\s+group\\\\s+by\\\\s+([\\\\s\\\\S]+?))?\\\\s+for\\\\s+(?:([\\\\$\\\\w][\\\\$\\\\w]*)|(?:\\\\(\\\\s*([\\\\$\\\\w][\\\\$\\\\w]*)\\\\s*,\\\\s*([\\\\$\\\\w][\\\\$\\\\w]*)\\\\s*\\\\)))\\\\s+in\\\\s+([\\\\s\\\\S]+?)(?:\\\\s+track\\\\s+by\\\\s+([\\\\s\\\\S]+?))?$/,\\n      nullModelCtrl = {$setViewValue: noop};\\n// jshint maxlen: 100\\n\\n  return {\\n    restrict: 'E',\\n    require: ['select', '?ngModel'],\\n    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\\n      var self = this,\\n          optionsMap = {},\\n          ngModelCtrl = nullModelCtrl,\\n          nullOption,\\n          unknownOption;\\n\\n\\n      self.databound = $attrs.ngModel;\\n\\n\\n      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\\n        ngModelCtrl = ngModelCtrl_;\\n        nullOption = nullOption_;\\n        unknownOption = unknownOption_;\\n      };\\n\\n\\n      self.addOption = function(value, element) {\\n        assertNotHasOwnProperty(value, '\\\"option value\\\"');\\n        optionsMap[value] = true;\\n\\n        if (ngModelCtrl.$viewValue == value) {\\n          $element.val(value);\\n          if (unknownOption.parent()) unknownOption.remove();\\n        }\\n        // Workaround for https://code.google.com/p/chromium/issues/detail?id=381459\\n        // Adding an <option selected=\\\"selected\\\"> element to a <select required=\\\"required\\\"> should\\n        // automatically select the new element\\n        if (element && element[0].hasAttribute('selected')) {\\n          element[0].selected = true;\\n        }\\n      };\\n\\n\\n      self.removeOption = function(value) {\\n        if (this.hasOption(value)) {\\n          delete optionsMap[value];\\n          if (ngModelCtrl.$viewValue === value) {\\n            this.renderUnknownOption(value);\\n          }\\n        }\\n      };\\n\\n\\n      self.renderUnknownOption = function(val) {\\n        var unknownVal = '? ' + hashKey(val) + ' ?';\\n        unknownOption.val(unknownVal);\\n        $element.prepend(unknownOption);\\n        $element.val(unknownVal);\\n        unknownOption.prop('selected', true); // needed for IE\\n      };\\n\\n\\n      self.hasOption = function(value) {\\n        return optionsMap.hasOwnProperty(value);\\n      };\\n\\n      $scope.$on('$destroy', function() {\\n        // disable unknown option so that we don't do work when the whole select is being destroyed\\n        self.renderUnknownOption = noop;\\n      });\\n    }],\\n\\n    link: function(scope, element, attr, ctrls) {\\n      // if ngModel is not defined, we don't need to do anything\\n      if (!ctrls[1]) return;\\n\\n      var selectCtrl = ctrls[0],\\n          ngModelCtrl = ctrls[1],\\n          multiple = attr.multiple,\\n          optionsExp = attr.ngOptions,\\n          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\\n          emptyOption,\\n          renderScheduled = false,\\n          // we can't just jqLite('<option>') since jqLite is not smart enough\\n          // to create it in <select> and IE barfs otherwise.\\n          optionTemplate = jqLite(document.createElement('option')),\\n          optGroupTemplate =jqLite(document.createElement('optgroup')),\\n          unknownOption = optionTemplate.clone();\\n\\n      // find \\\"null\\\" option\\n      for (var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\\n        if (children[i].value === '') {\\n          emptyOption = nullOption = children.eq(i);\\n          break;\\n        }\\n      }\\n\\n      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\\n\\n      // required validator\\n      if (multiple) {\\n        ngModelCtrl.$isEmpty = function(value) {\\n          return !value || value.length === 0;\\n        };\\n      }\\n\\n      if (optionsExp) setupAsOptions(scope, element, ngModelCtrl);\\n      else if (multiple) setupAsMultiple(scope, element, ngModelCtrl);\\n      else setupAsSingle(scope, element, ngModelCtrl, selectCtrl);\\n\\n\\n      ////////////////////////////\\n\\n\\n\\n      function setupAsSingle(scope, selectElement, ngModelCtrl, selectCtrl) {\\n        ngModelCtrl.$render = function() {\\n          var viewValue = ngModelCtrl.$viewValue;\\n\\n          if (selectCtrl.hasOption(viewValue)) {\\n            if (unknownOption.parent()) unknownOption.remove();\\n            selectElement.val(viewValue);\\n            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\\n          } else {\\n            if (isUndefined(viewValue) && emptyOption) {\\n              selectElement.val('');\\n            } else {\\n              selectCtrl.renderUnknownOption(viewValue);\\n            }\\n          }\\n        };\\n\\n        selectElement.on('change', function() {\\n          scope.$apply(function() {\\n            if (unknownOption.parent()) unknownOption.remove();\\n            ngModelCtrl.$setViewValue(selectElement.val());\\n          });\\n        });\\n      }\\n\\n      function setupAsMultiple(scope, selectElement, ctrl) {\\n        var lastView;\\n        ctrl.$render = function() {\\n          var items = new HashMap(ctrl.$viewValue);\\n          forEach(selectElement.find('option'), function(option) {\\n            option.selected = isDefined(items.get(option.value));\\n          });\\n        };\\n\\n        // we have to do it on each watch since ngModel watches reference, but\\n        // we need to work of an array, so we need to see if anything was inserted/removed\\n        scope.$watch(function selectMultipleWatch() {\\n          if (!equals(lastView, ctrl.$viewValue)) {\\n            lastView = shallowCopy(ctrl.$viewValue);\\n            ctrl.$render();\\n          }\\n        });\\n\\n        selectElement.on('change', function() {\\n          scope.$apply(function() {\\n            var array = [];\\n            forEach(selectElement.find('option'), function(option) {\\n              if (option.selected) {\\n                array.push(option.value);\\n              }\\n            });\\n            ctrl.$setViewValue(array);\\n          });\\n        });\\n      }\\n\\n      function setupAsOptions(scope, selectElement, ctrl) {\\n        var match;\\n\\n        if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) {\\n          throw ngOptionsMinErr('iexp',\\n            \\\"Expected expression in form of \\\" +\\n            \\\"'_select_ (as _label_)? for (_key_,)?_value_ in _collection_'\\\" +\\n            \\\" but got '{0}'. Element: {1}\\\",\\n            optionsExp, startingTag(selectElement));\\n        }\\n\\n        var displayFn = $parse(match[2] || match[1]),\\n            valueName = match[4] || match[6],\\n            selectAs = / as /.test(match[0]) && match[1],\\n            selectAsFn = selectAs ? $parse(selectAs) : null,\\n            keyName = match[5],\\n            groupByFn = $parse(match[3] || ''),\\n            valueFn = $parse(match[2] ? match[1] : valueName),\\n            valuesFn = $parse(match[7]),\\n            track = match[8],\\n            trackFn = track ? $parse(match[8]) : null,\\n            trackKeysCache = {},\\n            // This is an array of array of existing option groups in DOM.\\n            // We try to reuse these if possible\\n            // - optionGroupsCache[0] is the options with no option group\\n            // - optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\\n            optionGroupsCache = [[{element: selectElement, label:''}]],\\n            //re-usable object to represent option's locals\\n            locals = {};\\n\\n        if (nullOption) {\\n          // compile the element since there might be bindings in it\\n          $compile(nullOption)(scope);\\n\\n          // remove the class, which is added automatically because we recompile the element and it\\n          // becomes the compilation root\\n          nullOption.removeClass('ng-scope');\\n\\n          // we need to remove it before calling selectElement.empty() because otherwise IE will\\n          // remove the label from the element. wtf?\\n          nullOption.remove();\\n        }\\n\\n        // clear contents, we'll add what's needed based on the model\\n        selectElement.empty();\\n\\n        selectElement.on('change', selectionChanged);\\n\\n        ctrl.$render = render;\\n\\n        scope.$watchCollection(valuesFn, scheduleRendering);\\n        scope.$watchCollection(getLabels, scheduleRendering);\\n\\n        if (multiple) {\\n          scope.$watchCollection(function() { return ctrl.$modelValue; }, scheduleRendering);\\n        }\\n\\n        // ------------------------------------------------------------------ //\\n\\n        function callExpression(exprFn, key, value) {\\n          locals[valueName] = value;\\n          if (keyName) locals[keyName] = key;\\n          return exprFn(scope, locals);\\n        }\\n\\n        function selectionChanged() {\\n          scope.$apply(function() {\\n            var collection = valuesFn(scope) || [];\\n            var viewValue;\\n            if (multiple) {\\n              viewValue = [];\\n              forEach(selectElement.val(), function(selectedKey) {\\n                  selectedKey = trackFn ? trackKeysCache[selectedKey] : selectedKey;\\n                viewValue.push(getViewValue(selectedKey, collection[selectedKey]));\\n              });\\n            } else {\\n              var selectedKey = trackFn ? trackKeysCache[selectElement.val()] : selectElement.val();\\n              viewValue = getViewValue(selectedKey, collection[selectedKey]);\\n            }\\n            ctrl.$setViewValue(viewValue);\\n            render();\\n          });\\n        }\\n\\n        function getViewValue(key, value) {\\n          if (key === '?') {\\n            return undefined;\\n          } else if (key === '') {\\n            return null;\\n          } else {\\n            var viewValueFn = selectAsFn ? selectAsFn : valueFn;\\n            return callExpression(viewValueFn, key, value);\\n          }\\n        }\\n\\n        function getLabels() {\\n          var values = valuesFn(scope);\\n          var toDisplay;\\n          if (values && isArray(values)) {\\n            toDisplay = new Array(values.length);\\n            for (var i = 0, ii = values.length; i < ii; i++) {\\n              toDisplay[i] = callExpression(displayFn, i, values[i]);\\n            }\\n            return toDisplay;\\n          } else if (values) {\\n            // TODO: Add a test for this case\\n            toDisplay = {};\\n            for (var prop in values) {\\n              if (values.hasOwnProperty(prop)) {\\n                toDisplay[prop] = callExpression(displayFn, prop, values[prop]);\\n              }\\n            }\\n          }\\n          return toDisplay;\\n        }\\n\\n        function createIsSelectedFn(viewValue) {\\n          var selectedSet;\\n          if (multiple) {\\n            if (trackFn && isArray(viewValue)) {\\n\\n              selectedSet = new HashMap([]);\\n              for (var trackIndex = 0; trackIndex < viewValue.length; trackIndex++) {\\n                // tracking by key\\n                selectedSet.put(callExpression(trackFn, null, viewValue[trackIndex]), true);\\n              }\\n            } else {\\n              selectedSet = new HashMap(viewValue);\\n            }\\n          } else if (trackFn) {\\n            viewValue = callExpression(trackFn, null, viewValue);\\n          }\\n\\n          return function isSelected(key, value) {\\n            var compareValueFn;\\n            if (trackFn) {\\n              compareValueFn = trackFn;\\n            } else if (selectAsFn) {\\n              compareValueFn = selectAsFn;\\n            } else {\\n              compareValueFn = valueFn;\\n            }\\n\\n            if (multiple) {\\n              return isDefined(selectedSet.remove(callExpression(compareValueFn, key, value)));\\n            } else {\\n              return viewValue === callExpression(compareValueFn, key, value);\\n            }\\n          };\\n        }\\n\\n        function scheduleRendering() {\\n          if (!renderScheduled) {\\n            scope.$$postDigest(render);\\n            renderScheduled = true;\\n          }\\n        }\\n\\n        /**\\n         * A new labelMap is created with each render.\\n         * This function is called for each existing option with added=false,\\n         * and each new option with added=true.\\n         * - Labels that are passed to this method twice,\\n         * (once with added=true and once with added=false) will end up with a value of 0, and\\n         * will cause no change to happen to the corresponding option.\\n         * - Labels that are passed to this method only once with added=false will end up with a\\n         * value of -1 and will eventually be passed to selectCtrl.removeOption()\\n         * - Labels that are passed to this method only once with added=true will end up with a\\n         * value of 1 and will eventually be passed to selectCtrl.addOption()\\n        */\\n        function updateLabelMap(labelMap, label, added) {\\n          labelMap[label] = labelMap[label] || 0;\\n          labelMap[label] += (added ? 1 : -1);\\n        }\\n\\n        function render() {\\n          renderScheduled = false;\\n\\n          // Temporary location for the option groups before we render them\\n          var optionGroups = {'':[]},\\n              optionGroupNames = [''],\\n              optionGroupName,\\n              optionGroup,\\n              option,\\n              existingParent, existingOptions, existingOption,\\n              viewValue = ctrl.$viewValue,\\n              values = valuesFn(scope) || [],\\n              keys = keyName ? sortedKeys(values) : values,\\n              key,\\n              value,\\n              groupLength, length,\\n              groupIndex, index,\\n              labelMap = {},\\n              selected,\\n              isSelected = createIsSelectedFn(viewValue),\\n              anySelected = false,\\n              lastElement,\\n              element,\\n              label,\\n              optionId;\\n\\n          trackKeysCache = {};\\n\\n          // We now build up the list of options we need (we merge later)\\n          for (index = 0; length = keys.length, index < length; index++) {\\n            key = index;\\n            if (keyName) {\\n              key = keys[index];\\n              if (key.charAt(0) === '$') continue;\\n            }\\n            value = values[key];\\n\\n            optionGroupName = callExpression(groupByFn, key, value) || '';\\n            if (!(optionGroup = optionGroups[optionGroupName])) {\\n              optionGroup = optionGroups[optionGroupName] = [];\\n              optionGroupNames.push(optionGroupName);\\n            }\\n\\n            selected = isSelected(key, value);\\n            anySelected = anySelected || selected;\\n\\n            label = callExpression(displayFn, key, value); // what will be seen by the user\\n\\n            // doing displayFn(scope, locals) || '' overwrites zero values\\n            label = isDefined(label) ? label : '';\\n            optionId = trackFn ? trackFn(scope, locals) : (keyName ? keys[index] : index);\\n            if (trackFn) {\\n              trackKeysCache[optionId] = key;\\n            }\\n\\n            optionGroup.push({\\n              // either the index into array or key from object\\n              id: optionId,\\n              label: label,\\n              selected: selected                   // determine if we should be selected\\n            });\\n          }\\n          if (!multiple) {\\n            if (nullOption || viewValue === null) {\\n              // insert null option if we have a placeholder, or the model is null\\n              optionGroups[''].unshift({id:'', label:'', selected:!anySelected});\\n            } else if (!anySelected) {\\n              // option could not be found, we have to insert the undefined item\\n              optionGroups[''].unshift({id:'?', label:'', selected:true});\\n            }\\n          }\\n\\n          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\\n          for (groupIndex = 0, groupLength = optionGroupNames.length;\\n               groupIndex < groupLength;\\n               groupIndex++) {\\n            // current option group name or '' if no group\\n            optionGroupName = optionGroupNames[groupIndex];\\n\\n            // list of options for that group. (first item has the parent)\\n            optionGroup = optionGroups[optionGroupName];\\n\\n            if (optionGroupsCache.length <= groupIndex) {\\n              // we need to grow the optionGroups\\n              existingParent = {\\n                element: optGroupTemplate.clone().attr('label', optionGroupName),\\n                label: optionGroup.label\\n              };\\n              existingOptions = [existingParent];\\n              optionGroupsCache.push(existingOptions);\\n              selectElement.append(existingParent.element);\\n            } else {\\n              existingOptions = optionGroupsCache[groupIndex];\\n              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\\n\\n              // update the OPTGROUP label if not the same.\\n              if (existingParent.label != optionGroupName) {\\n                existingParent.element.attr('label', existingParent.label = optionGroupName);\\n              }\\n            }\\n\\n            lastElement = null;  // start at the beginning\\n            for (index = 0, length = optionGroup.length; index < length; index++) {\\n              option = optionGroup[index];\\n              if ((existingOption = existingOptions[index + 1])) {\\n                // reuse elements\\n                lastElement = existingOption.element;\\n                if (existingOption.label !== option.label) {\\n                  updateLabelMap(labelMap, existingOption.label, false);\\n                  updateLabelMap(labelMap, option.label, true);\\n                  lastElement.text(existingOption.label = option.label);\\n                  lastElement.prop('label', existingOption.label);\\n                }\\n                if (existingOption.id !== option.id) {\\n                  lastElement.val(existingOption.id = option.id);\\n                }\\n                // lastElement.prop('selected') provided by jQuery has side-effects\\n                if (lastElement[0].selected !== option.selected) {\\n                  lastElement.prop('selected', (existingOption.selected = option.selected));\\n                  if (msie) {\\n                    // See #7692\\n                    // The selected item wouldn't visually update on IE without this.\\n                    // Tested on Win7: IE9, IE10 and IE11. Future IEs should be tested as well\\n                    lastElement.prop('selected', existingOption.selected);\\n                  }\\n                }\\n              } else {\\n                // grow elements\\n\\n                // if it's a null option\\n                if (option.id === '' && nullOption) {\\n                  // put back the pre-compiled element\\n                  element = nullOption;\\n                } else {\\n                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\\n                  // in this version of jQuery on some browser the .text() returns a string\\n                  // rather then the element.\\n                  (element = optionTemplate.clone())\\n                      .val(option.id)\\n                      .prop('selected', option.selected)\\n                      .attr('selected', option.selected)\\n                      .prop('label', option.label)\\n                      .text(option.label);\\n                }\\n\\n                existingOptions.push(existingOption = {\\n                    element: element,\\n                    label: option.label,\\n                    id: option.id,\\n                    selected: option.selected\\n                });\\n                updateLabelMap(labelMap, option.label, true);\\n                if (lastElement) {\\n                  lastElement.after(element);\\n                } else {\\n                  existingParent.element.append(element);\\n                }\\n                lastElement = element;\\n              }\\n            }\\n            // remove any excessive OPTIONs in a group\\n            index++; // increment since the existingOptions[0] is parent element not OPTION\\n            while (existingOptions.length > index) {\\n              option = existingOptions.pop();\\n              updateLabelMap(labelMap, option.label, false);\\n              option.element.remove();\\n            }\\n          }\\n          // remove any excessive OPTGROUPs from select\\n          while (optionGroupsCache.length > groupIndex) {\\n            // remove all the labels in the option group\\n            optionGroup = optionGroupsCache.pop();\\n            for (index = 1; index < optionGroup.length; ++index) {\\n              updateLabelMap(labelMap, optionGroup[index].label, false);\\n            }\\n            optionGroup[0].element.remove();\\n          }\\n          forEach(labelMap, function(count, label) {\\n            if (count > 0) {\\n              selectCtrl.addOption(label);\\n            } else if (count < 0) {\\n              selectCtrl.removeOption(label);\\n            }\\n          });\\n        }\\n      }\\n    }\\n  };\\n}];\\n\\nvar optionDirective = ['$interpolate', function($interpolate) {\\n  var nullSelectCtrl = {\\n    addOption: noop,\\n    removeOption: noop\\n  };\\n\\n  return {\\n    restrict: 'E',\\n    priority: 100,\\n    compile: function(element, attr) {\\n      if (isUndefined(attr.value)) {\\n        var interpolateFn = $interpolate(element.text(), true);\\n        if (!interpolateFn) {\\n          attr.$set('value', element.text());\\n        }\\n      }\\n\\n      return function(scope, element, attr) {\\n        var selectCtrlName = '$selectController',\\n            parent = element.parent(),\\n            selectCtrl = parent.data(selectCtrlName) ||\\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\\n\\n        if (!selectCtrl || !selectCtrl.databound) {\\n          selectCtrl = nullSelectCtrl;\\n        }\\n\\n        if (interpolateFn) {\\n          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\\n            attr.$set('value', newVal);\\n            if (oldVal !== newVal) {\\n              selectCtrl.removeOption(oldVal);\\n            }\\n            selectCtrl.addOption(newVal, element);\\n          });\\n        } else {\\n          selectCtrl.addOption(attr.value, element);\\n        }\\n\\n        element.on('$destroy', function() {\\n          selectCtrl.removeOption(attr.value);\\n        });\\n      };\\n    }\\n  };\\n}];\\n\\nvar styleDirective = valueFn({\\n  restrict: 'E',\\n  terminal: false\\n});\\n\\nvar requiredDirective = function() {\\n  return {\\n    restrict: 'A',\\n    require: '?ngModel',\\n    link: function(scope, elm, attr, ctrl) {\\n      if (!ctrl) return;\\n      attr.required = true; // force truthy in case we are on non input element\\n\\n      ctrl.$validators.required = function(modelValue, viewValue) {\\n        return !attr.required || !ctrl.$isEmpty(viewValue);\\n      };\\n\\n      attr.$observe('required', function() {\\n        ctrl.$validate();\\n      });\\n    }\\n  };\\n};\\n\\n\\nvar patternDirective = function() {\\n  return {\\n    restrict: 'A',\\n    require: '?ngModel',\\n    link: function(scope, elm, attr, ctrl) {\\n      if (!ctrl) return;\\n\\n      var regexp, patternExp = attr.ngPattern || attr.pattern;\\n      attr.$observe('pattern', function(regex) {\\n        if (isString(regex) && regex.length > 0) {\\n          regex = new RegExp('^' + regex + '$');\\n        }\\n\\n        if (regex && !regex.test) {\\n          throw minErr('ngPattern')('noregexp',\\n            'Expected {0} to be a RegExp but was {1}. Element: {2}', patternExp,\\n            regex, startingTag(elm));\\n        }\\n\\n        regexp = regex || undefined;\\n        ctrl.$validate();\\n      });\\n\\n      ctrl.$validators.pattern = function(value) {\\n        return ctrl.$isEmpty(value) || isUndefined(regexp) || regexp.test(value);\\n      };\\n    }\\n  };\\n};\\n\\n\\nvar maxlengthDirective = function() {\\n  return {\\n    restrict: 'A',\\n    require: '?ngModel',\\n    link: function(scope, elm, attr, ctrl) {\\n      if (!ctrl) return;\\n\\n      var maxlength = -1;\\n      attr.$observe('maxlength', function(value) {\\n        var intVal = int(value);\\n        maxlength = isNaN(intVal) ? -1 : intVal;\\n        ctrl.$validate();\\n      });\\n      ctrl.$validators.maxlength = function(modelValue, viewValue) {\\n        return (maxlength < 0) || ctrl.$isEmpty(modelValue) || (viewValue.length <= maxlength);\\n      };\\n    }\\n  };\\n};\\n\\nvar minlengthDirective = function() {\\n  return {\\n    restrict: 'A',\\n    require: '?ngModel',\\n    link: function(scope, elm, attr, ctrl) {\\n      if (!ctrl) return;\\n\\n      var minlength = 0;\\n      attr.$observe('minlength', function(value) {\\n        minlength = int(value) || 0;\\n        ctrl.$validate();\\n      });\\n      ctrl.$validators.minlength = function(modelValue, viewValue) {\\n        return ctrl.$isEmpty(viewValue) || viewValue.length >= minlength;\\n      };\\n    }\\n  };\\n};\\n\\n  if (window.angular.bootstrap) {\\n    //AngularJS is already loaded, so we can return here...\\n    console.log('WARNING: Tried to load angular more than once.');\\n    return;\\n  }\\n\\n  //try to bind to jquery now so that one can write jqLite(document).ready()\\n  //but we will rebind on bootstrap again.\\n  bindJQuery();\\n\\n  publishExternalAPI(angular);\\n\\n  jqLite(document).ready(function() {\\n    angularInit(document, bootstrap);\\n  });\\n\\n})(window, document);\\n\\n!window.angular.$$csp() && window.angular.element(document).find('head').prepend('<style type=\\\"text/css\\\">@charset \\\"UTF-8\\\";[ng\\\\\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\\\\\:form{display:block;}</style>');\",\n   42      \"(function (root, factory){\\n  'use strict';\\n\\n  /*istanbul ignore next:cant test*/\\n  if (typeof module === 'object' && typeof module.exports === 'object') {\\n    module.exports = factory();\\n  } else if (typeof define === 'function' && define.amd) {\\n    // AMD. Register as an anonymous module.\\n    define([], factory);\\n  } else {\\n    // Browser globals\\n    root.objectPath = factory();\\n  }\\n})(this, function(){\\n  'use strict';\\n\\n  var\\n    toStr = Object.prototype.toString,\\n    _hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n  function isEmpty(value){\\n    if (!value) {\\n      return true;\\n    }\\n    if (isArray(value) && value.length === 0) {\\n        return true;\\n    } else if (!isString(value)) {\\n        for (var i in value) {\\n            if (_hasOwnProperty.call(value, i)) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n    return false;\\n  }\\n\\n  function toString(type){\\n    return toStr.call(type);\\n  }\\n\\n  function isNumber(value){\\n    return typeof value === 'number' || toString(value) === \\\"[object Number]\\\";\\n  }\\n\\n  function isString(obj){\\n    return typeof obj === 'string' || toString(obj) === \\\"[object String]\\\";\\n  }\\n\\n  function isObject(obj){\\n    return typeof obj === 'object' && toString(obj) === \\\"[object Object]\\\";\\n  }\\n\\n  function isArray(obj){\\n    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\\n  }\\n\\n  function isBoolean(obj){\\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\\n  }\\n\\n  function getKey(key){\\n    var intKey = parseInt(key);\\n    if (intKey.toString() === key) {\\n      return intKey;\\n    }\\n    return key;\\n  }\\n\\n  function set(obj, path, value, doNotReplace){\\n    if (isNumber(path)) {\\n      path = [path];\\n    }\\n    if (isEmpty(path)) {\\n      return obj;\\n    }\\n    if (isString(path)) {\\n      return set(obj, path.split('.').map(getKey), value, doNotReplace);\\n    }\\n    var currentPath = path[0];\\n\\n    if (path.length === 1) {\\n      var oldVal = obj[currentPath];\\n      if (oldVal === void 0 || !doNotReplace) {\\n        obj[currentPath] = value;\\n      }\\n      return oldVal;\\n    }\\n\\n    if (obj[currentPath] === void 0) {\\n      //check if we assume an array\\n      if(isNumber(path[1])) {\\n        obj[currentPath] = [];\\n      } else {\\n        obj[currentPath] = {};\\n      }\\n    }\\n\\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\\n  }\\n\\n  function del(obj, path) {\\n    if (isNumber(path)) {\\n      path = [path];\\n    }\\n\\n    if (isEmpty(obj)) {\\n      return void 0;\\n    }\\n\\n    if (isEmpty(path)) {\\n      return obj;\\n    }\\n    if(isString(path)) {\\n      return del(obj, path.split('.'));\\n    }\\n\\n    var currentPath = getKey(path[0]);\\n    var oldVal = obj[currentPath];\\n\\n    if(path.length === 1) {\\n      if (oldVal !== void 0) {\\n        if (isArray(obj)) {\\n          obj.splice(currentPath, 1);\\n        } else {\\n          delete obj[currentPath];\\n        }\\n      }\\n    } else {\\n      if (obj[currentPath] !== void 0) {\\n        return del(obj[currentPath], path.slice(1));\\n      }\\n    }\\n\\n    return obj;\\n  }\\n\\n  var objectPath = function(obj) {\\n    return Object.keys(objectPath).reduce(function(proxy, prop) {\\n      if (typeof objectPath[prop] === 'function') {\\n        proxy[prop] = objectPath[prop].bind(objectPath, obj);\\n      }\\n\\n      return proxy;\\n    }, {});\\n  };\\n\\n  objectPath.has = function (obj, path) {\\n    if (isEmpty(obj)) {\\n      return false;\\n    }\\n\\n    if (isNumber(path)) {\\n      path = [path];\\n    } else if (isString(path)) {\\n      path = path.split('.');\\n    }\\n\\n    if (isEmpty(path) || path.length === 0) {\\n      return false;\\n    }\\n\\n    for (var i = 0; i < path.length; i++) {\\n      var j = path[i];\\n      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {\\n        obj = obj[j];\\n      } else {\\n        return false;\\n      }\\n    }\\n\\n    return true;\\n  };\\n\\n  objectPath.ensureExists = function (obj, path, value){\\n    return set(obj, path, value, true);\\n  };\\n\\n  objectPath.set = function (obj, path, value, doNotReplace){\\n    return set(obj, path, value, doNotReplace);\\n  };\\n\\n  objectPath.insert = function (obj, path, value, at){\\n    var arr = objectPath.get(obj, path);\\n    at = ~~at;\\n    if (!isArray(arr)) {\\n      arr = [];\\n      objectPath.set(obj, path, arr);\\n    }\\n    arr.splice(at, 0, value);\\n  };\\n\\n  objectPath.empty = function(obj, path) {\\n    if (isEmpty(path)) {\\n      return obj;\\n    }\\n    if (isEmpty(obj)) {\\n      return void 0;\\n    }\\n\\n    var value, i;\\n    if (!(value = objectPath.get(obj, path))) {\\n      return obj;\\n    }\\n\\n    if (isString(value)) {\\n      return objectPath.set(obj, path, '');\\n    } else if (isBoolean(value)) {\\n      return objectPath.set(obj, path, false);\\n    } else if (isNumber(value)) {\\n      return objectPath.set(obj, path, 0);\\n    } else if (isArray(value)) {\\n      value.length = 0;\\n    } else if (isObject(value)) {\\n      for (i in value) {\\n        if (_hasOwnProperty.call(value, i)) {\\n          delete value[i];\\n        }\\n      }\\n    } else {\\n      return objectPath.set(obj, path, null);\\n    }\\n  };\\n\\n  objectPath.push = function (obj, path /*, values */){\\n    var arr = objectPath.get(obj, path);\\n    if (!isArray(arr)) {\\n      arr = [];\\n      objectPath.set(obj, path, arr);\\n    }\\n\\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\\n  };\\n\\n  objectPath.coalesce = function (obj, paths, defaultValue) {\\n    var value;\\n\\n    for (var i = 0, len = paths.length; i < len; i++) {\\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\\n        return value;\\n      }\\n    }\\n\\n    return defaultValue;\\n  };\\n\\n  objectPath.get = function (obj, path, defaultValue){\\n    if (isNumber(path)) {\\n      path = [path];\\n    }\\n    if (isEmpty(path)) {\\n      return obj;\\n    }\\n    if (isEmpty(obj)) {\\n      return defaultValue;\\n    }\\n    if (isString(path)) {\\n      return objectPath.get(obj, path.split('.'), defaultValue);\\n    }\\n\\n    var currentPath = getKey(path[0]);\\n\\n    if (path.length === 1) {\\n      if (obj[currentPath] === void 0) {\\n        return defaultValue;\\n      }\\n      return obj[currentPath];\\n    }\\n\\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\\n  };\\n\\n  objectPath.del = function(obj, path) {\\n    return del(obj, path);\\n  };\\n\\n  return objectPath;\\n});\\n\",\n   43:     \";(function(win){\\n\\tvar store = {},\\n\\t\\tdoc = win.document,\\n\\t\\tlocalStorageName = 'localStorage',\\n\\t\\tscriptTag = 'script',\\n\\t\\tstorage\\n\\n\\tstore.disabled = false\\n\\tstore.version = '1.3.17'\\n\\tstore.set = function(key, value) {}\\n\\tstore.get = function(key, defaultVal) {}\\n\\tstore.has = function(key) { return store.get(key) !== undefined }\\n\\tstore.remove = function(key) {}\\n\\tstore.clear = function() {}\\n\\tstore.transact = function(key, defaultVal, transactionFn) {\\n\\t\\tif (transactionFn == null) {\\n\\t\\t\\ttransactionFn = defaultVal\\n\\t\\t\\tdefaultVal = null\\n\\t\\t}\\n\\t\\tif (defaultVal == null) {\\n\\t\\t\\tdefaultVal = {}\\n\\t\\t}\\n\\t\\tvar val = store.get(key, defaultVal)\\n\\t\\ttransactionFn(val)\\n\\t\\tstore.set(key, val)\\n\\t}\\n\\tstore.getAll = function() {}\\n\\tstore.forEach = function() {}\\n\\n\\tstore.serialize = function(value) {\\n\\t\\treturn JSON.stringify(value)\\n\\t}\\n\\tstore.deserialize = function(value) {\\n\\t\\tif (typeof value != 'string') { return undefined }\\n\\t\\ttry { return JSON.parse(value) }\\n\\t\\tcatch(e) { return value || undefined }\\n\\t}\\n\\n\\t// Functions to encapsulate questionable FireFox 3.6.13 behavior\\n\\t// when about.config::dom.storage.enabled === false\\n\\t// See https://github.com/marcuswestin/store.js/issues#issue/13\\n\\tfunction isLocalStorageNameSupported() {\\n\\t\\ttry { return (localStorageName in win && win[localStorageName]) }\\n\\t\\tcatch(err) { return false }\\n\\t}\\n\\n\\tif (isLocalStorageNameSupported()) {\\n\\t\\tstorage = win[localStorageName]\\n\\t\\tstore.set = function(key, val) {\\n\\t\\t\\tif (val === undefined) { return store.remove(key) }\\n\\t\\t\\tstorage.setItem(key, store.serialize(val))\\n\\t\\t\\treturn val\\n\\t\\t}\\n\\t\\tstore.get = function(key, defaultVal) {\\n\\t\\t\\tvar val = store.deserialize(storage.getItem(key))\\n\\t\\t\\treturn (val === undefined ? defaultVal : val)\\n\\t\\t}\\n\\t\\tstore.remove = function(key) { storage.removeItem(key) }\\n\\t\\tstore.clear = function() { storage.clear() }\\n\\t\\tstore.getAll = function() {\\n\\t\\t\\tvar ret = {}\\n\\t\\t\\tstore.forEach(function(key, val) {\\n\\t\\t\\t\\tret[key] = val\\n\\t\\t\\t})\\n\\t\\t\\treturn ret\\n\\t\\t}\\n\\t\\tstore.forEach = function(callback) {\\n\\t\\t\\tfor (var i=0; i<storage.length; i++) {\\n\\t\\t\\t\\tvar key = storage.key(i)\\n\\t\\t\\t\\tcallback(key, store.get(key))\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else if (doc.documentElement.addBehavior) {\\n\\t\\tvar storageOwner,\\n\\t\\t\\tstorageContainer\\n\\t\\t// Since #userData storage applies only to specific paths, we need to\\n\\t\\t// somehow link our data to a specific path.  We choose /favicon.ico\\n\\t\\t// as a pretty safe option, since all browsers already make a request to\\n\\t\\t// this URL anyway and being a 404 will not hurt us here.  We wrap an\\n\\t\\t// iframe pointing to the favicon in an ActiveXObject(htmlfile) object\\n\\t\\t// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\\n\\t\\t// since the iframe access rules appear to allow direct access and\\n\\t\\t// manipulation of the document element, even for a 404 page.  This\\n\\t\\t// document can be used instead of the current document (which would\\n\\t\\t// have been limited to the current path) to perform #userData storage.\\n\\t\\ttry {\\n\\t\\t\\tstorageContainer = new ActiveXObject('htmlfile')\\n\\t\\t\\tstorageContainer.open()\\n\\t\\t\\tstorageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src=\\\"/favicon.ico\\\"></iframe>')\\n\\t\\t\\tstorageContainer.close()\\n\\t\\t\\tstorageOwner = storageContainer.w.frames[0].document\\n\\t\\t\\tstorage = storageOwner.createElement('div')\\n\\t\\t} catch(e) {\\n\\t\\t\\t// somehow ActiveXObject instantiation failed (perhaps some special\\n\\t\\t\\t// security settings or otherwse), fall back to per-path storage\\n\\t\\t\\tstorage = doc.createElement('div')\\n\\t\\t\\tstorageOwner = doc.body\\n\\t\\t}\\n\\t\\tvar withIEStorage = function(storeFunction) {\\n\\t\\t\\treturn function() {\\n\\t\\t\\t\\tvar args = Array.prototype.slice.call(arguments, 0)\\n\\t\\t\\t\\targs.unshift(storage)\\n\\t\\t\\t\\t// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\\n\\t\\t\\t\\t// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\\n\\t\\t\\t\\tstorageOwner.appendChild(storage)\\n\\t\\t\\t\\tstorage.addBehavior('#default#userData')\\n\\t\\t\\t\\tstorage.load(localStorageName)\\n\\t\\t\\t\\tvar result = storeFunction.apply(store, args)\\n\\t\\t\\t\\tstorageOwner.removeChild(storage)\\n\\t\\t\\t\\treturn result\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// In IE7, keys cannot start with a digit or contain certain chars.\\n\\t\\t// See https://github.com/marcuswestin/store.js/issues/40\\n\\t\\t// See https://github.com/marcuswestin/store.js/issues/83\\n\\t\\tvar forbiddenCharsRegex = new RegExp(\\\"[!\\\\\\\"#$%&'()*+,/\\\\\\\\\\\\\\\\:;<=>?@[\\\\\\\\]^`{|}~]\\\", \\\"g\\\")\\n\\t\\tfunction ieKeyFix(key) {\\n\\t\\t\\treturn key.replace(/^d/, '___$&').replace(forbiddenCharsRegex, '___')\\n\\t\\t}\\n\\t\\tstore.set = withIEStorage(function(storage, key, val) {\\n\\t\\t\\tkey = ieKeyFix(key)\\n\\t\\t\\tif (val === undefined) { return store.remove(key) }\\n\\t\\t\\tstorage.setAttribute(key, store.serialize(val))\\n\\t\\t\\tstorage.save(localStorageName)\\n\\t\\t\\treturn val\\n\\t\\t})\\n\\t\\tstore.get = withIEStorage(function(storage, key, defaultVal) {\\n\\t\\t\\tkey = ieKeyFix(key)\\n\\t\\t\\tvar val = store.deserialize(storage.getAttribute(key))\\n\\t\\t\\treturn (val === undefined ? defaultVal : val)\\n\\t\\t})\\n\\t\\tstore.remove = withIEStorage(function(storage, key) {\\n\\t\\t\\tkey = ieKeyFix(key)\\n\\t\\t\\tstorage.removeAttribute(key)\\n\\t\\t\\tstorage.save(localStorageName)\\n\\t\\t})\\n\\t\\tstore.clear = withIEStorage(function(storage) {\\n\\t\\t\\tvar attributes = storage.XMLDocument.documentElement.attributes\\n\\t\\t\\tstorage.load(localStorageName)\\n\\t\\t\\tfor (var i=0, attr; attr=attributes[i]; i++) {\\n\\t\\t\\t\\tstorage.removeAttribute(attr.name)\\n\\t\\t\\t}\\n\\t\\t\\tstorage.save(localStorageName)\\n\\t\\t})\\n\\t\\tstore.getAll = function(storage) {\\n\\t\\t\\tvar ret = {}\\n\\t\\t\\tstore.forEach(function(key, val) {\\n\\t\\t\\t\\tret[key] = val\\n\\t\\t\\t})\\n\\t\\t\\treturn ret\\n\\t\\t}\\n\\t\\tstore.forEach = withIEStorage(function(storage, callback) {\\n\\t\\t\\tvar attributes = storage.XMLDocument.documentElement.attributes\\n\\t\\t\\tfor (var i=0, attr; attr=attributes[i]; ++i) {\\n\\t\\t\\t\\tcallback(attr.name, store.deserialize(storage.getAttribute(attr.name)))\\n\\t\\t\\t}\\n\\t\\t})\\n\\t}\\n\\n\\ttry {\\n\\t\\tvar testKey = '__storejs__'\\n\\t\\tstore.set(testKey, testKey)\\n\\t\\tif (store.get(testKey) != testKey) { store.disabled = true }\\n\\t\\tstore.remove(testKey)\\n\\t} catch(e) {\\n\\t\\tstore.disabled = true\\n\\t}\\n\\tstore.enabled = !store.disabled\\n\\n\\tif (typeof module != 'undefined' && module.exports && this.module !== module) { module.exports = store }\\n\\telse if (typeof define === 'function' && define.amd) { define(store) }\\n\\telse { win.store = store }\\n\\n})(Function('return this')());\\n\",\n   44      \"/**\\n * @type {angular}\\n */\\nmodule.exports = window.angular;\\n\",\n   45      \"var module = require(\\\"./module\\\"); //jshint ignore:line\\n\\nmodule.directive(\\\"icon\\\", require(\\\"./directives/icon\\\"));\\nmodule.directive(\\\"linkTo\\\", require(\\\"./directives/link-to\\\"));\\nmodule.directive(\\\"switch\\\", require(\\\"./directives/switch\\\"));\\nmodule.directive(\\\"newTab\\\", require(\\\"./directives/new-tab\\\"));\",\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browserslist\\cli.js:\n   74  \n   75    var browsers\n   76:   try {\n   77      browsers = browserslist(queries, opts)\n   78    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\browserslist\\index.js:\n  254    if (stats) {\n  255      if (typeof stats === 'string') {\n  256:       try {\n  257          stats = JSON.parse(fs.readFileSync(stats))\n  258        } catch (e) {\n  ...\n  396      var pkgBrowserslist\n  397      if (isFile(pkg)) {\n  398:       try {\n  399          pkgBrowserslist = parsePackage(pkg)\n  400        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\caniuse-api\\dist\\index.js:\n   40  function getSupport(query) {\n   41    var feature = void 0;\n   42:   try {\n   43      feature = features[query];\n   44    } catch (e) {\n   ..\n   52  function isSupported(feature, browsers) {\n   53    var data = void 0;\n   54:   try {\n   55      data = features[feature];\n   56    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\caniuse-api\\node_modules\\browserslist\\cli.js:\n   25  \n   26  function query(queries, opts) {\n   27:     try {\n   28          return browserslist(queries, opts);\n   29      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\caniuse-api\\node_modules\\browserslist\\index.js:\n  176      if ( stats ) {\n  177          if ( typeof stats === 'string' ) {\n  178:             try {\n  179                  stats = JSON.parse(fs.readFileSync(stats));\n  180              } catch (e) {\n  ...\n  338          var pkgBrowserslist;\n  339          if ( isFile(pkg) ) {\n  340:             try {\n  341                  pkgBrowserslist = parsePackage(pkg);\n  342              } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\chokidar\\lib\\fsevents-handler.js:\n    5  var readdirp = require('readdirp');\n    6  var fsevents;\n    7: try { fsevents = require('fsevents'); } catch (error) {}\n    8  \n    9  // fsevents instance helper functions\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\chokidar\\lib\\nodefs-handler.js:\n   34      }\n   35    };\n   36:   try {\n   37      return fs.watch(path, options, handleEvent);\n   38    } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\clap\\index.js:\n  140      throw new SyntaxError('Usage has no long name: ' + usage);\n  141  \n  142:   try {\n  143      params = parseParams(left);\n  144    } catch(e) {\n  ...\n  509    this.params = false;\n  510  \n  511:   try {\n  512      if (params)\n  513        this.params = parseParams(params);\n  ...\n  696        return processArgs(this, args, suggest);\n  697      else\n  698:       try {\n  699          return processArgs(this, args, suggest);\n  700        } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\classlist-polyfill\\src\\index.js:\n  171  \t\t, configurable: true\n  172  \t};\n  173: \ttry {\n  174  \t\tobjCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n  175  \t} catch (ex) { // IE 8 doesn't support enumerable:true\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\co\\index.js:\n   62      function onFulfilled(res) {\n   63        var ret;\n   64:       try {\n   65          ret = gen.next(res);\n   66        } catch (e) {\n   ..\n   78      function onRejected(err) {\n   79        var ret;\n   80:       try {\n   81          ret = gen.throw(err);\n   82        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\co\\Readme.md:\n   92  // errors can be try/catched\n   93  co(function *(){\n   94:   try {\n   95      yield Promise.reject(new Error('boom'));\n   96    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\coa\\coverage\\coa\\lib\\cmd.js.html:\n 1527  &nbsp;\n 1528  function tryCatch(fn, cb) {\n 1529:     try {\n 1530          return fn();\n 1531      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\coa\\lib\\cmd.js:\n  351              }\n  352            }\n  353:           try {\n  354              cmdDesc = require(pkg);\n  355            } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\colormin\\dist\\index.js:\n   44          var c = void 0;\n   45          // Pass through invalid rgb/hsl functions\n   46:         try {\n   47              c = (0, _color2.default)(colour);\n   48          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\colors\\lib\\colors.js:\n  135  colors.setTheme = function (theme) {\n  136    if (typeof theme === 'string') {\n  137:     try {\n  138        colors.themes[theme] = require(theme);\n  139        applyTheme(colors.themes[theme]);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\colors\\lib\\extendStringPrototype.js:\n   98    colors.setTheme = function (theme) {\n   99      if (typeof theme === 'string') {\n  100:       try {\n  101          colors.themes[theme] = require(theme);\n  102          applyTheme(colors.themes[theme]);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\commander\\index.js:\n 1148  // for versions before node v0.8 when there weren't `fs.existsSync`\n 1149  function exists(file) {\n 1150:   try {\n 1151      if (fs.statSync(file).isFile()) {\n 1152        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\connect\\index.js:\n  230    debug('%s %s : %s', handle.name || '<anonymous>', route, req.originalUrl);\n  231  \n  232:   try {\n  233      if (hasError && arity === 4) {\n  234        // error-handling middleware\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\connect\\node_modules\\debug\\browser.js:\n  121  \n  122  function save(namespaces) {\n  123:   try {\n  124      if (null == namespaces) {\n  125        exports.storage.removeItem('debug');\n  ...\n  139  function load() {\n  140    var r;\n  141:   try {\n  142      r = exports.storage.debug;\n  143    } catch(e) {}\n  ...\n  163  \n  164  function localstorage(){\n  165:   try {\n  166      return window.localStorage;\n  167    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\consolidate\\lib\\consolidate.js:\n  192    return promisify(fn, function (fn) {\n  193      var engine = requires.liquid || (requires.liquid = require('tinyliquid'));\n  194:     try {\n  195        var context = engine.newContext();\n  196        var k;\n  ...\n  294      var engine = requires.jade;\n  295      if (!engine) {\n  296:       try {\n  297          engine = requires.jade = require('jade');\n  298        } catch (err) {\n  299:         try {\n  300            engine = requires.jade = require('then-jade');\n  301          } catch (otherError) {\n  ...\n  305      }\n  306  \n  307:     try {\n  308        var tmpl = cache(options) || cache(options, engine.compileFile(path, options));\n  309        fn(null, tmpl(options));\n  ...\n  322      var engine = requires.jade;\n  323      if (!engine) {\n  324:       try {\n  325          engine = requires.jade = require('jade');\n  326        } catch (err) {\n  327:         try {\n  328            engine = requires.jade = require('then-jade');\n  329          } catch (otherError) {\n  ...\n  333      }\n  334  \n  335:     try {\n  336        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  337        fn(null, tmpl(options));\n  ...\n  356      var engine = requires.dust;\n  357      if (!engine) {\n  358:       try {\n  359          engine = requires.dust = require('dust');\n  360        } catch (err) {\n  361:         try {\n  362            engine = requires.dust = require('dustjs-helpers');\n  363          } catch (err) {\n  ...\n  383      };\n  384  \n  385:     try {\n  386        var tmpl = cache(options) || cache(options, engine.compileFn(str));\n  387        tmpl(options, fn);\n  ...\n  406      var engine = requires.swig || (requires.swig = require('swig'));\n  407  \n  408:     try {\n  409        if(options.cache === true) options.cache = 'memory';\n  410        engine.setDefaults({ cache: options.cache });\n  ...\n  430    return promisify(fn, function(fn) {\n  431      var engine = requires.atpl || (requires.atpl = require('atpl'));\n  432:     try {\n  433        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  434        fn(null, tmpl(options));\n  ...\n  452    return promisify(fn, function(fn) {\n  453      var engine = requires.liquor || (requires.liquor = require('liquor'));\n  454:     try {\n  455        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  456        fn(null, tmpl(options));\n  ...\n  477        data: str\n  478      };\n  479:     try {\n  480        var tmpl = cache(templateData) || cache(templateData, engine(templateData));\n  481        fn(null, tmpl.render(options));\n  ...\n  499    return promisify(fn, function (fn) {\n  500      var engine = requires.ejs || (requires.ejs = require('ejs'));\n  501:     try {\n  502        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  503        fn(null, tmpl(options));\n  ...\n  522    return promisify(fn, function(fn) {\n  523      var engine = requires.eco || (requires.eco = require('eco'));\n  524:     try {\n  525        fn(null, engine.render(str, options));\n  526      } catch (err) {\n  ...\n  543    return promisify(fn, function(fn) {\n  544      var engine = requires.jazz || (requires.jazz = require('jazz'));\n  545:     try {\n  546        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  547        tmpl.eval(options, function(str){\n  ...\n  567    return promisify(fn, function(fn) {\n  568      var engine = requires.jqtpl || (requires.jqtpl = require('jqtpl'));\n  569:     try {\n  570        engine.template(str, str);\n  571        fn(null, engine.tmpl(str, options));\n  ...\n  589    return promisify(fn, function(fn) {\n  590      var engine = requires.haml || (requires.haml = require('hamljs'));\n  591:     try {\n  592        options.locals = options;\n  593        fn(null, engine.render(str, options).trimLeft());\n  ...\n  611    return promisify(fn, function (fn) {\n  612      var engine = requires.hamlet || (requires.hamlet = require('hamlet'));\n  613:     try {\n  614        options.locals = options;\n  615        fn(null, engine.render(str, options).trimLeft());\n  ...\n  638    return promisify(fn, function(fn) {\n  639      var engine = requires.whiskers || (requires.whiskers = require('whiskers'));\n  640:     try {\n  641        fn(null, engine.render(str, options));\n  642      } catch (err) {\n  ...\n  659    return promisify(fn, function(fn) {\n  660      var engine = requires['haml-coffee'] || (requires['haml-coffee'] = require('haml-coffee'));\n  661:     try {\n  662        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  663        fn(null, tmpl(options));\n  ...\n  681    return promisify(fn, function (fn) {\n  682      var engine = requires.hogan || (requires.hogan = require('hogan.js'));\n  683:     try {\n  684        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  685        fn(null, tmpl.render(options, options.partials));\n  ...\n  703    return promisify(fn, function (fn) {\n  704      var engine = requires.templayed || (requires.templayed = require('templayed'));\n  705:     try {\n  706        var tmpl = cache(options) || cache(options, engine(str));\n  707        fn(null, tmpl(options));\n  ...\n  725    return promisify(fn, function(fn) {\n  726      var engine = requires.handlebars || (requires.handlebars = require('handlebars'));\n  727:     try {\n  728        for (var partial in options.partials) {\n  729          engine.registerPartial(partial, options.partials[partial]);\n  ...\n  753    return promisify(fn, function(fn) {\n  754      var engine = requires.underscore || (requires.underscore = require('underscore'));\n  755:     try {\n  756        var tmpl = cache(options) || cache(options, engine.template(str, null, options));\n  757        fn(null, tmpl(options).replace(/\\n$/, ''));\n  ...\n  776    return promisify(fn, function (fn) {\n  777      var engine = requires.lodash || (requires.lodash = require('lodash'));\n  778:     try {\n  779        var tmpl = cache(options) || cache(options, engine.template(str, options));\n  780        fn(null, tmpl(options).replace(/\\n$/, ''));\n  ...\n  794      var engine = requires.pug;\n  795      if (!engine) {\n  796:       try {\n  797          engine = requires.pug = require('pug');\n  798        } catch (err) {\n  799:         try {\n  800            engine = requires.pug = require('then-pug');\n  801          } catch (otherError) {\n  ...\n  805      }\n  806  \n  807:     try {\n  808        var tmpl = cache(options) || cache(options, engine.compileFile(path, options));\n  809        fn(null, tmpl(options));\n  ...\n  822      var engine = requires.pug;\n  823      if (!engine) {\n  824:       try {\n  825          engine = requires.pug = require('pug');\n  826        } catch (err) {\n  827:         try {\n  828            engine = requires.pug = require('then-pug');\n  829          } catch (otherError) {\n  ...\n  833      }\n  834  \n  835:     try {\n  836        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n  837        fn(null, tmpl(options));\n  ...\n  855  exports.qejs.render = function (str, options, fn) {\n  856    return promisify(fn, function (fn) {\n  857:     try {\n  858        var engine = requires.qejs || (requires.qejs = require('qejs'));\n  859        engine.render(str, options).then(function (result) {\n  ...\n  882    return promisify(fn, function (fn) {\n  883      var engine = requires.walrus || (requires.walrus = require('walrus'));\n  884:     try {\n  885        var tmpl = cache(options) || cache(options, engine.parse(str));\n  886        fn(null, tmpl.compile(options));\n  ...\n  904    return promisify(fn, function (fn) {\n  905      var engine = requires.mustache || (requires.mustache = require('mustache'));\n  906:     try {\n  907        fn(null, engine.to_html(str, options, options.partials));\n  908      } catch (err) {\n  ...\n  981    return promisify(fn, function (fn) {\n  982      var engine = requires.mote || (requires.mote = require('mote'));\n  983:     try {\n  984        var tmpl = cache(options) || cache(options, engine.compile(str));\n  985        fn(null, tmpl(options));\n  ...\n 1008    return promisify(fn, function (fn) {\n 1009      var engine = requires.toffee || (requires.toffee = require('toffee'));\n 1010:     try {\n 1011        engine.str_render(str, options,fn);\n 1012      } catch (err) {\n ....\n 1029    return promisify(fn, function (fn) {\n 1030      var engine = requires.dot || (requires.dot = require('dot'));\n 1031:     try {\n 1032        var tmpl = cache(options) || cache(options, engine.compile(str, options && options._def));\n 1033        fn(null, tmpl(options));\n ....\n 1051    return promisify(fn, function (fn) {\n 1052      var engine = requires.bracket || (requires.bracket = require('bracket-template'));\n 1053:     try {\n 1054        var tmpl = cache(options) || cache(options, engine.default.compile(str));\n 1055        fn(null, tmpl(options));\n ....\n 1093      }\n 1094  \n 1095:     try {\n 1096        fn(null, new engine(options).toHTML());\n 1097      } catch (err) {\n ....\n 1114    return promisify(fn, function (fn) {\n 1115  \n 1116:     try {\n 1117  \n 1118        var engine = options.nunjucksEnv || requires.nunjucks || (requires.nunjucks = require('nunjucks'));\n ....\n 1194    return promisify(fn, function (fn) {\n 1195      var engine = requires.htmling || (requires.htmling = require('htmling'));\n 1196:     try {\n 1197        var tmpl = cache(options) || cache(options, engine.string(str));\n 1198        fn(null, tmpl.render(options));\n ....\n 1302  \n 1303        // Start Conversion\n 1304:       try {\n 1305  \n 1306          var Code;\n ....\n 1372  \n 1373    return promisify(fn, function (fn) {\n 1374:     try {\n 1375        var engine = requires['arc-templates'];\n 1376        if (!engine) {\n ....\n 1401      var engine = requires.vash || (requires.vash = require('vash'));\n 1402  \n 1403:     try {\n 1404        // helper system : https://github.com/kirbysayshi/vash#helper-system\n 1405        if (options.helpers) {\n ....\n 1433      var engine = requires.slm || (requires.slm = require('slm'));\n 1434  \n 1435:     try {\n 1436        var tmpl = cache(options) || cache(options, engine.compile(str, options));\n 1437        fn(null, tmpl(options));\n ....\n 1451      options.writeToDisk = !!options.cache;\n 1452  \n 1453:     try {\n 1454        var tmpl = cache(options) || cache(options, engine.load(path, options));\n 1455        tmpl.render(options, fn)\n ....\n 1469      options.writeToDisk = !!options.cache;\n 1470  \n 1471:     try {\n 1472        var tmpl = cache(options) || cache(options, engine.load('string.marko', str, options));\n 1473        tmpl.render(options, fn)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\convert-source-map\\index.js:\n   34    var filepath = path.resolve(dir, filename);\n   35  \n   36:   try {\n   37      return fs.readFileSync(filepath, 'utf8');\n   38    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cookie\\index.js:\n  188  \n  189  function tryDecode(str, decode) {\n  190:   try {\n  191      return decode(str);\n  192    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\README.md:\n  771  \n  772  (async () => {\n  773:   try {\n  774      console.log('Run');                // => Run\n  775      console.log(await sleepRandom(5)); // => 936, after 5 sec.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\client\\core.js:\n  149  \n  150  module.exports = function (exec) {\n  151:   try {\n  152      return !!exec();\n  153    } catch (e) {\n  ...\n  196    P = toPrimitive(P, true);\n  197    anObject(Attributes);\n  198:   if (IE8_DOM_DEFINE) try {\n  199      return dP(O, P, Attributes);\n  200    } catch (e) { /* empty */ }\n  ...\n  336    O = toIObject(O);\n  337    P = toPrimitive(P, true);\n  338:   if (IE8_DOM_DEFINE) try {\n  339      return gOPD(O, P);\n  340    } catch (e) { /* empty */ }\n  ...\n 1332  // fallback for IE11 Script Access Denied error\n 1333  var tryGet = function (it, key) {\n 1334:   try {\n 1335      return it[key];\n 1336    } catch (e) { /* empty */ }\n ....\n 1668  var SAFE_CLOSING = false;\n 1669  \n 1670: try {\n 1671    var riter = [7][ITERATOR]();\n 1672    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 1678    if (!skipClosing && !SAFE_CLOSING) return false;\n 1679    var safe = false;\n 1680:   try {\n 1681      var arr = [7];\n 1682      var iter = arr[ITERATOR]();\n ....\n 2068    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 2069      function (test, buggy, set) {\n 2070:       try {\n 2071          set = __webpack_require__(19)(Function.call, __webpack_require__(15).f(Object.prototype, '__proto__').set, 2);\n 2072          set(test, []);\n ....\n 2219  module.exports = function (KEY) {\n 2220    var re = /./;\n 2221:   try {\n 2222      '/./'[KEY](re);\n 2223    } catch (e) {\n 2224:     try {\n 2225        re[MATCH] = false;\n 2226        return !'/./'[KEY](re);\n ....\n 2453        fn = head.fn;\n 2454        head = head.next;\n 2455:       try {\n 2456          fn();\n 2457        } catch (e) {\n ....\n 2916  \n 2917  var getWindowNames = function (it) {\n 2918:   try {\n 2919      return gOPN(it);\n 2920    } catch (e) {\n ....\n 3058  var anObject = __webpack_require__(1);\n 3059  module.exports = function (iterator, fn, value, entries) {\n 3060:   try {\n 3061      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 3062    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 3152  \n 3153  module.exports = function (exec) {\n 3154:   try {\n 3155      return { e: false, v: exec() };\n 3156    } catch (e) {\n ....\n 4492    configurable: true,\n 4493    get: function () {\n 4494:     try {\n 4495        return ('' + this).match(nameRE)[1];\n 4496      } catch (e) {\n ....\n 6186  \n 6187  var USE_NATIVE = !!function () {\n 6188:   try {\n 6189      // correct subclassing with @@species support\n 6190      var promise = $Promise.resolve(1);\n ....\n 6216        var domain = reaction.domain;\n 6217        var result, then;\n 6218:       try {\n 6219          if (handler) {\n 6220            if (!ok) {\n ....\n 6301    promise._d = true;\n 6302    promise = promise._w || promise; // unwrap\n 6303:   try {\n 6304      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 6305      if (then = isThenable(value)) {\n 6306        microtask(function () {\n 6307          var wrapper = { _w: promise, _d: false }; // wrap\n 6308:         try {\n 6309            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 6310          } catch (e) {\n ....\n 6329      aFunction(executor);\n 6330      Internal.call(this);\n 6331:     try {\n 6332        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 6333      } catch (err) {\n ....\n 6557      propertyKey = toPrimitive(propertyKey, true);\n 6558      anObject(attributes);\n 6559:     try {\n 6560        dP.f(target, propertyKey, attributes);\n 6561        return true;\n ....\n 6729    preventExtensions: function preventExtensions(target) {\n 6730      anObject(target);\n 6731:     try {\n 6732        if ($preventExtensions) $preventExtensions(target);\n 6733        return true;\n ....\n 6787    setPrototypeOf: function setPrototypeOf(target, proto) {\n 6788      setProto.check(target, proto);\n 6789:     try {\n 6790        setProto.set(target, proto);\n 6791        return true;\n ....\n 8017    this._o = observer;\n 8018    observer = new SubscriptionObserver(this);\n 8019:   try {\n 8020      var cleanup = subscriber(observer);\n 8021      var subscription = cleanup;\n ....\n 8044      if (!subscriptionClosed(subscription)) {\n 8045        var observer = subscription._o;\n 8046:       try {\n 8047          var m = getMethod(observer.next);\n 8048          if (m) return m.call(observer, value);\n 8049        } catch (e) {\n 8050:         try {\n 8051            closeSubscription(subscription);\n 8052          } finally {\n ....\n 8061      var observer = subscription._o;\n 8062      subscription._o = undefined;\n 8063:     try {\n 8064        var m = getMethod(observer.error);\n 8065        if (!m) throw value;\n 8066        value = m.call(observer, value);\n 8067      } catch (e) {\n 8068:       try {\n 8069          cleanupSubscription(subscription);\n 8070        } finally {\n ....\n 8079        var observer = subscription._o;\n 8080        subscription._o = undefined;\n 8081:       try {\n 8082          var m = getMethod(observer.complete);\n 8083          value = m ? m.call(observer, value) : undefined;\n 8084        } catch (e) {\n 8085:         try {\n 8086            cleanupSubscription(subscription);\n 8087          } finally {\n ....\n 8108        var subscription = that.subscribe({\n 8109          next: function (value) {\n 8110:           try {\n 8111              return fn(value);\n 8112            } catch (e) {\n ....\n 8136        microtask(function () {\n 8137          if (!done) {\n 8138:           try {\n 8139              if (forOf(x, false, function (it) {\n 8140                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\client\\library.js:\n  176  \n  177  module.exports = function (exec) {\n  178:   try {\n  179      return !!exec();\n  180    } catch (e) {\n  ...\n  226    P = toPrimitive(P, true);\n  227    anObject(Attributes);\n  228:   if (IE8_DOM_DEFINE) try {\n  229      return dP(O, P, Attributes);\n  230    } catch (e) { /* empty */ }\n  ...\n  395    O = toIObject(O);\n  396    P = toPrimitive(P, true);\n  397:   if (IE8_DOM_DEFINE) try {\n  398      return gOPD(O, P);\n  399    } catch (e) { /* empty */ }\n  ...\n 1290  // fallback for IE11 Script Access Denied error\n 1291  var tryGet = function (it, key) {\n 1292:   try {\n 1293      return it[key];\n 1294    } catch (e) { /* empty */ }\n ....\n 2035  module.exports = function (KEY) {\n 2036    var re = /./;\n 2037:   try {\n 2038      '/./'[KEY](re);\n 2039    } catch (e) {\n 2040:     try {\n 2041        re[MATCH] = false;\n 2042        return !'/./'[KEY](re);\n ....\n 2082  var SAFE_CLOSING = false;\n 2083  \n 2084: try {\n 2085    var riter = [7][ITERATOR]();\n 2086    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 2092    if (!skipClosing && !SAFE_CLOSING) return false;\n 2093    var safe = false;\n 2094:   try {\n 2095      var arr = [7];\n 2096      var iter = arr[ITERATOR]();\n ....\n 2297        fn = head.fn;\n 2298        head = head.next;\n 2299:       try {\n 2300          fn();\n 2301        } catch (e) {\n ....\n 2760  \n 2761  var getWindowNames = function (it) {\n 2762:   try {\n 2763      return gOPN(it);\n 2764    } catch (e) {\n ....\n 2787    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 2788      function (test, buggy, set) {\n 2789:       try {\n 2790          set = __webpack_require__(16)(Function.call, __webpack_require__(18).f(Object.prototype, '__proto__').set, 2);\n 2791          set(test, []);\n ....\n 2947  var anObject = __webpack_require__(1);\n 2948  module.exports = function (iterator, fn, value, entries) {\n 2949:   try {\n 2950      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 2951    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 3030  \n 3031  module.exports = function (exec) {\n 3032:   try {\n 3033      return { e: false, v: exec() };\n 3034    } catch (e) {\n ....\n 5762  \n 5763  var USE_NATIVE = !!function () {\n 5764:   try {\n 5765      // correct subclassing with @@species support\n 5766      var promise = $Promise.resolve(1);\n ....\n 5792        var domain = reaction.domain;\n 5793        var result, then;\n 5794:       try {\n 5795          if (handler) {\n 5796            if (!ok) {\n ....\n 5877    promise._d = true;\n 5878    promise = promise._w || promise; // unwrap\n 5879:   try {\n 5880      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 5881      if (then = isThenable(value)) {\n 5882        microtask(function () {\n 5883          var wrapper = { _w: promise, _d: false }; // wrap\n 5884:         try {\n 5885            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 5886          } catch (e) {\n ....\n 5905      aFunction(executor);\n 5906      Internal.call(this);\n 5907:     try {\n 5908        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 5909      } catch (err) {\n ....\n 6133      propertyKey = toPrimitive(propertyKey, true);\n 6134      anObject(attributes);\n 6135:     try {\n 6136        dP.f(target, propertyKey, attributes);\n 6137        return true;\n ....\n 6305    preventExtensions: function preventExtensions(target) {\n 6306      anObject(target);\n 6307:     try {\n 6308        if ($preventExtensions) $preventExtensions(target);\n 6309        return true;\n ....\n 6363    setPrototypeOf: function setPrototypeOf(target, proto) {\n 6364      setProto.check(target, proto);\n 6365:     try {\n 6366        setProto.set(target, proto);\n 6367        return true;\n ....\n 7539    this._o = observer;\n 7540    observer = new SubscriptionObserver(this);\n 7541:   try {\n 7542      var cleanup = subscriber(observer);\n 7543      var subscription = cleanup;\n ....\n 7566      if (!subscriptionClosed(subscription)) {\n 7567        var observer = subscription._o;\n 7568:       try {\n 7569          var m = getMethod(observer.next);\n 7570          if (m) return m.call(observer, value);\n 7571        } catch (e) {\n 7572:         try {\n 7573            closeSubscription(subscription);\n 7574          } finally {\n ....\n 7583      var observer = subscription._o;\n 7584      subscription._o = undefined;\n 7585:     try {\n 7586        var m = getMethod(observer.error);\n 7587        if (!m) throw value;\n 7588        value = m.call(observer, value);\n 7589      } catch (e) {\n 7590:       try {\n 7591          cleanupSubscription(subscription);\n 7592        } finally {\n ....\n 7601        var observer = subscription._o;\n 7602        subscription._o = undefined;\n 7603:       try {\n 7604          var m = getMethod(observer.complete);\n 7605          value = m ? m.call(observer, value) : undefined;\n 7606        } catch (e) {\n 7607:         try {\n 7608            cleanupSubscription(subscription);\n 7609          } finally {\n ....\n 7630        var subscription = that.subscribe({\n 7631          next: function (value) {\n 7632:           try {\n 7633              return fn(value);\n 7634            } catch (e) {\n ....\n 7658        microtask(function () {\n 7659          if (!done) {\n 7660:           try {\n 7661              if (forOf(x, false, function (it) {\n 7662                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\client\\shim.js:\n  149  \n  150  module.exports = function (exec) {\n  151:   try {\n  152      return !!exec();\n  153    } catch (e) {\n  ...\n  206    P = toPrimitive(P, true);\n  207    anObject(Attributes);\n  208:   if (IE8_DOM_DEFINE) try {\n  209      return dP(O, P, Attributes);\n  210    } catch (e) { /* empty */ }\n  ...\n  361    O = toIObject(O);\n  362    P = toPrimitive(P, true);\n  363:   if (IE8_DOM_DEFINE) try {\n  364      return gOPD(O, P);\n  365    } catch (e) { /* empty */ }\n  ...\n 1460  // fallback for IE11 Script Access Denied error\n 1461  var tryGet = function (it, key) {\n 1462:   try {\n 1463      return it[key];\n 1464    } catch (e) { /* empty */ }\n ....\n 1557  var SAFE_CLOSING = false;\n 1558  \n 1559: try {\n 1560    var riter = [7][ITERATOR]();\n 1561    riter['return'] = function () { SAFE_CLOSING = true; };\n ....\n 1567    if (!skipClosing && !SAFE_CLOSING) return false;\n 1568    var safe = false;\n 1569:   try {\n 1570      var arr = [7];\n 1571      var iter = arr[ITERATOR]();\n ....\n 1916    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n 1917      function (test, buggy, set) {\n 1918:       try {\n 1919          set = __webpack_require__(18)(Function.call, __webpack_require__(16).f(Object.prototype, '__proto__').set, 2);\n 1920          set(test, []);\n ....\n 2045  module.exports = function (KEY) {\n 2046    var re = /./;\n 2047:   try {\n 2048      '/./'[KEY](re);\n 2049    } catch (e) {\n 2050:     try {\n 2051        re[MATCH] = false;\n 2052        return !'/./'[KEY](re);\n ....\n 2381        fn = head.fn;\n 2382        head = head.next;\n 2383:       try {\n 2384          fn();\n 2385        } catch (e) {\n ....\n 2814  \n 2815  var getWindowNames = function (it) {\n 2816:   try {\n 2817      return gOPN(it);\n 2818    } catch (e) {\n ....\n 3019  var anObject = __webpack_require__(1);\n 3020  module.exports = function (iterator, fn, value, entries) {\n 3021:   try {\n 3022      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n 3023    // 7.4.6 IteratorClose(iterator, completion)\n ....\n 3122  \n 3123  module.exports = function (exec) {\n 3124:   try {\n 3125      return { e: false, v: exec() };\n 3126    } catch (e) {\n ....\n 4390    configurable: true,\n 4391    get: function () {\n 4392:     try {\n 4393        return ('' + this).match(nameRE)[1];\n 4394      } catch (e) {\n ....\n 6084  \n 6085  var USE_NATIVE = !!function () {\n 6086:   try {\n 6087      // correct subclassing with @@species support\n 6088      var promise = $Promise.resolve(1);\n ....\n 6114        var domain = reaction.domain;\n 6115        var result, then;\n 6116:       try {\n 6117          if (handler) {\n 6118            if (!ok) {\n ....\n 6199    promise._d = true;\n 6200    promise = promise._w || promise; // unwrap\n 6201:   try {\n 6202      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n 6203      if (then = isThenable(value)) {\n 6204        microtask(function () {\n 6205          var wrapper = { _w: promise, _d: false }; // wrap\n 6206:         try {\n 6207            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n 6208          } catch (e) {\n ....\n 6227      aFunction(executor);\n 6228      Internal.call(this);\n 6229:     try {\n 6230        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n 6231      } catch (err) {\n ....\n 6455      propertyKey = toPrimitive(propertyKey, true);\n 6456      anObject(attributes);\n 6457:     try {\n 6458        dP.f(target, propertyKey, attributes);\n 6459        return true;\n ....\n 6627    preventExtensions: function preventExtensions(target) {\n 6628      anObject(target);\n 6629:     try {\n 6630        if ($preventExtensions) $preventExtensions(target);\n 6631        return true;\n ....\n 6685    setPrototypeOf: function setPrototypeOf(target, proto) {\n 6686      setProto.check(target, proto);\n 6687:     try {\n 6688        setProto.set(target, proto);\n 6689        return true;\n ....\n 7915    this._o = observer;\n 7916    observer = new SubscriptionObserver(this);\n 7917:   try {\n 7918      var cleanup = subscriber(observer);\n 7919      var subscription = cleanup;\n ....\n 7942      if (!subscriptionClosed(subscription)) {\n 7943        var observer = subscription._o;\n 7944:       try {\n 7945          var m = getMethod(observer.next);\n 7946          if (m) return m.call(observer, value);\n 7947        } catch (e) {\n 7948:         try {\n 7949            closeSubscription(subscription);\n 7950          } finally {\n ....\n 7959      var observer = subscription._o;\n 7960      subscription._o = undefined;\n 7961:     try {\n 7962        var m = getMethod(observer.error);\n 7963        if (!m) throw value;\n 7964        value = m.call(observer, value);\n 7965      } catch (e) {\n 7966:       try {\n 7967          cleanupSubscription(subscription);\n 7968        } finally {\n ....\n 7977        var observer = subscription._o;\n 7978        subscription._o = undefined;\n 7979:       try {\n 7980          var m = getMethod(observer.complete);\n 7981          value = m ? m.call(observer, value) : undefined;\n 7982        } catch (e) {\n 7983:         try {\n 7984            cleanupSubscription(subscription);\n 7985          } finally {\n ....\n 8006        var subscription = that.subscribe({\n 8007          next: function (value) {\n 8008:           try {\n 8009              return fn(value);\n 8010            } catch (e) {\n ....\n 8034        microtask(function () {\n 8035          if (!done) {\n 8036:           try {\n 8037              if (forOf(x, false, function (it) {\n 8038                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_classof.js:\n    7  // fallback for IE11 Script Access Denied error\n    8  var tryGet = function (it, key) {\n    9:   try {\n   10      return it[key];\n   11    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_fails-is-regexp.js:\n    2  module.exports = function (KEY) {\n    3    var re = /./;\n    4:   try {\n    5      '/./'[KEY](re);\n    6    } catch (e) {\n    7:     try {\n    8        re[MATCH] = false;\n    9        return !'/./'[KEY](re);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_fails.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return !!exec();\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_iter-call.js:\n    2  var anObject = require('./_an-object');\n    3  module.exports = function (iterator, fn, value, entries) {\n    4:   try {\n    5      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n    6    // 7.4.6 IteratorClose(iterator, completion)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_iter-detect.js:\n    2  var SAFE_CLOSING = false;\n    3  \n    4: try {\n    5    var riter = [7][ITERATOR]();\n    6    riter['return'] = function () { SAFE_CLOSING = true; };\n    .\n   12    if (!skipClosing && !SAFE_CLOSING) return false;\n   13    var safe = false;\n   14:   try {\n   15      var arr = [7];\n   16      var iter = arr[ITERATOR]();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_microtask.js:\n   15        fn = head.fn;\n   16        head = head.next;\n   17:       try {\n   18          fn();\n   19        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_object-dp.js:\n    8    P = toPrimitive(P, true);\n    9    anObject(Attributes);\n   10:   if (IE8_DOM_DEFINE) try {\n   11      return dP(O, P, Attributes);\n   12    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_object-gopd.js:\n   10    O = toIObject(O);\n   11    P = toPrimitive(P, true);\n   12:   if (IE8_DOM_DEFINE) try {\n   13      return gOPD(O, P);\n   14    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_object-gopn-ext.js:\n    8  \n    9  var getWindowNames = function (it) {\n   10:   try {\n   11      return gOPN(it);\n   12    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_perform.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return { e: false, v: exec() };\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\_set-proto.js:\n   10    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n   11      function (test, buggy, set) {\n   12:       try {\n   13          set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n   14          set(test, []);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\es6.promise.js:\n   25  \n   26  var USE_NATIVE = !!function () {\n   27:   try {\n   28      // correct subclassing with @@species support\n   29      var promise = $Promise.resolve(1);\n   ..\n   55        var domain = reaction.domain;\n   56        var result, then;\n   57:       try {\n   58          if (handler) {\n   59            if (!ok) {\n   ..\n  140    promise._d = true;\n  141    promise = promise._w || promise; // unwrap\n  142:   try {\n  143      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n  144      if (then = isThenable(value)) {\n  145        microtask(function () {\n  146          var wrapper = { _w: promise, _d: false }; // wrap\n  147:         try {\n  148            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n  149          } catch (e) {\n  ...\n  168      aFunction(executor);\n  169      Internal.call(this);\n  170:     try {\n  171        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n  172      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\es6.reflect.define-property.js:\n   14      propertyKey = toPrimitive(propertyKey, true);\n   15      anObject(attributes);\n   16:     try {\n   17        dP.f(target, propertyKey, attributes);\n   18        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\es6.reflect.prevent-extensions.js:\n    7    preventExtensions: function preventExtensions(target) {\n    8      anObject(target);\n    9:     try {\n   10        if ($preventExtensions) $preventExtensions(target);\n   11        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\es6.reflect.set-prototype-of.js:\n    6    setPrototypeOf: function setPrototypeOf(target, proto) {\n    7      setProto.check(target, proto);\n    8:     try {\n    9        setProto.set(target, proto);\n   10        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\library\\modules\\es7.observable.js:\n   42    this._o = observer;\n   43    observer = new SubscriptionObserver(this);\n   44:   try {\n   45      var cleanup = subscriber(observer);\n   46      var subscription = cleanup;\n   ..\n   69      if (!subscriptionClosed(subscription)) {\n   70        var observer = subscription._o;\n   71:       try {\n   72          var m = getMethod(observer.next);\n   73          if (m) return m.call(observer, value);\n   74        } catch (e) {\n   75:         try {\n   76            closeSubscription(subscription);\n   77          } finally {\n   ..\n   86      var observer = subscription._o;\n   87      subscription._o = undefined;\n   88:     try {\n   89        var m = getMethod(observer.error);\n   90        if (!m) throw value;\n   91        value = m.call(observer, value);\n   92      } catch (e) {\n   93:       try {\n   94          cleanupSubscription(subscription);\n   95        } finally {\n   ..\n  104        var observer = subscription._o;\n  105        subscription._o = undefined;\n  106:       try {\n  107          var m = getMethod(observer.complete);\n  108          value = m ? m.call(observer, value) : undefined;\n  109        } catch (e) {\n  110:         try {\n  111            cleanupSubscription(subscription);\n  112          } finally {\n  ...\n  133        var subscription = that.subscribe({\n  134          next: function (value) {\n  135:           try {\n  136              return fn(value);\n  137            } catch (e) {\n  ...\n  161        microtask(function () {\n  162          if (!done) {\n  163:           try {\n  164              if (forOf(x, false, function (it) {\n  165                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_classof.js:\n    7  // fallback for IE11 Script Access Denied error\n    8  var tryGet = function (it, key) {\n    9:   try {\n   10      return it[key];\n   11    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_fails-is-regexp.js:\n    2  module.exports = function (KEY) {\n    3    var re = /./;\n    4:   try {\n    5      '/./'[KEY](re);\n    6    } catch (e) {\n    7:     try {\n    8        re[MATCH] = false;\n    9        return !'/./'[KEY](re);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_fails.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return !!exec();\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_iter-call.js:\n    2  var anObject = require('./_an-object');\n    3  module.exports = function (iterator, fn, value, entries) {\n    4:   try {\n    5      return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n    6    // 7.4.6 IteratorClose(iterator, completion)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_iter-detect.js:\n    2  var SAFE_CLOSING = false;\n    3  \n    4: try {\n    5    var riter = [7][ITERATOR]();\n    6    riter['return'] = function () { SAFE_CLOSING = true; };\n    .\n   12    if (!skipClosing && !SAFE_CLOSING) return false;\n   13    var safe = false;\n   14:   try {\n   15      var arr = [7];\n   16      var iter = arr[ITERATOR]();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_microtask.js:\n   15        fn = head.fn;\n   16        head = head.next;\n   17:       try {\n   18          fn();\n   19        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_object-dp.js:\n    8    P = toPrimitive(P, true);\n    9    anObject(Attributes);\n   10:   if (IE8_DOM_DEFINE) try {\n   11      return dP(O, P, Attributes);\n   12    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_object-gopd.js:\n   10    O = toIObject(O);\n   11    P = toPrimitive(P, true);\n   12:   if (IE8_DOM_DEFINE) try {\n   13      return gOPD(O, P);\n   14    } catch (e) { /* empty */ }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_object-gopn-ext.js:\n    8  \n    9  var getWindowNames = function (it) {\n   10:   try {\n   11      return gOPN(it);\n   12    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_perform.js:\n    1  module.exports = function (exec) {\n    2:   try {\n    3      return { e: false, v: exec() };\n    4    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\_set-proto.js:\n   10    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n   11      function (test, buggy, set) {\n   12:       try {\n   13          set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n   14          set(test, []);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\es6.function.name.js:\n    8    configurable: true,\n    9    get: function () {\n   10:     try {\n   11        return ('' + this).match(nameRE)[1];\n   12      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\es6.promise.js:\n   25  \n   26  var USE_NATIVE = !!function () {\n   27:   try {\n   28      // correct subclassing with @@species support\n   29      var promise = $Promise.resolve(1);\n   ..\n   55        var domain = reaction.domain;\n   56        var result, then;\n   57:       try {\n   58          if (handler) {\n   59            if (!ok) {\n   ..\n  140    promise._d = true;\n  141    promise = promise._w || promise; // unwrap\n  142:   try {\n  143      if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n  144      if (then = isThenable(value)) {\n  145        microtask(function () {\n  146          var wrapper = { _w: promise, _d: false }; // wrap\n  147:         try {\n  148            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n  149          } catch (e) {\n  ...\n  168      aFunction(executor);\n  169      Internal.call(this);\n  170:     try {\n  171        executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n  172      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\es6.reflect.define-property.js:\n   14      propertyKey = toPrimitive(propertyKey, true);\n   15      anObject(attributes);\n   16:     try {\n   17        dP.f(target, propertyKey, attributes);\n   18        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\es6.reflect.prevent-extensions.js:\n    7    preventExtensions: function preventExtensions(target) {\n    8      anObject(target);\n    9:     try {\n   10        if ($preventExtensions) $preventExtensions(target);\n   11        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\es6.reflect.set-prototype-of.js:\n    6    setPrototypeOf: function setPrototypeOf(target, proto) {\n    7      setProto.check(target, proto);\n    8:     try {\n    9        setProto.set(target, proto);\n   10        return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-js\\modules\\es7.observable.js:\n   42    this._o = observer;\n   43    observer = new SubscriptionObserver(this);\n   44:   try {\n   45      var cleanup = subscriber(observer);\n   46      var subscription = cleanup;\n   ..\n   69      if (!subscriptionClosed(subscription)) {\n   70        var observer = subscription._o;\n   71:       try {\n   72          var m = getMethod(observer.next);\n   73          if (m) return m.call(observer, value);\n   74        } catch (e) {\n   75:         try {\n   76            closeSubscription(subscription);\n   77          } finally {\n   ..\n   86      var observer = subscription._o;\n   87      subscription._o = undefined;\n   88:     try {\n   89        var m = getMethod(observer.error);\n   90        if (!m) throw value;\n   91        value = m.call(observer, value);\n   92      } catch (e) {\n   93:       try {\n   94          cleanupSubscription(subscription);\n   95        } finally {\n   ..\n  104        var observer = subscription._o;\n  105        subscription._o = undefined;\n  106:       try {\n  107          var m = getMethod(observer.complete);\n  108          value = m ? m.call(observer, value) : undefined;\n  109        } catch (e) {\n  110:         try {\n  111            cleanupSubscription(subscription);\n  112          } finally {\n  ...\n  133        var subscription = that.subscribe({\n  134          next: function (value) {\n  135:           try {\n  136              return fn(value);\n  137            } catch (e) {\n  ...\n  161        microtask(function () {\n  162          if (!done) {\n  163:           try {\n  164              if (forOf(x, false, function (it) {\n  165                observer.next(it);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\core-util-is\\float.patch:\n   27  -      case '%d': return Number(args[i++]);\n   28  -      case '%j':\n   29: -        try {\n   30  -          return JSON.stringify(args[i++]);\n   31  -        } catch (_) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cosmiconfig\\lib\\loadDefinedFile.js:\n   45  \n   46  function tryYaml(content, filepath, cb) {\n   47:   try {\n   48      var result = yaml.safeLoad(content, {\n   49        filename: filepath,\n   ..\n   59  \n   60  function tryRequire(content, filepath, cb) {\n   61:   try {\n   62      return requireFromString(content, filepath);\n   63    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cosmiconfig\\lib\\parseJson.js:\n    4  \n    5  module.exports = function (json, filepath) {\n    6:   try {\n    7      return parseJson(json);\n    8    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cross-spawn\\index.js:\n   29  \n   30      if (!cpSpawnSync) {\n   31:         try {\n   32              cpSpawnSync = require('spawn-sync');  // eslint-disable-line global-require\n   33          } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cross-spawn\\lib\\parse.js:\n   22      buffer = new Buffer(150);\n   23  \n   24:     try {\n   25          fd = fs.openSync(command, 'r');\n   26          fs.readSync(fd, buffer, 0, 150, 0);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cross-spawn\\lib\\resolveCommand.js:\n   18      }\n   19  \n   20:     try {\n   21          resolved = !noExtension ?\n   22              which.sync(command) :\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cryptiles\\lib\\index.js:\n   33  \n   34      var bytes = Math.ceil(bits / 8);\n   35:     try {\n   36          return Crypto.randomBytes(bytes);\n   37      }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\css\\node_modules\\source-map\\Makefile.dryice.js:\n  151  function ensureDir(name) {\n  152    var dirExists = false;\n  153:   try {\n  154      dirExists = fs.statSync(name).isDirectory();\n  155    } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\css\\node_modules\\source-map\\build\\assert-shim.js:\n   16  \n   17    exports.doesNotThrow = function (fn) {\n   18:     try {\n   19        fn();\n   20      }\n   ..\n   46  \n   47    exports.throws = function (fn) {\n   48:     try {\n   49        fn();\n   50        do_throw('Expected an error to be thrown, but it wasn\\'t.');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\css\\node_modules\\source-map\\test\\run-tests.js:\n   19        if (/^test/.test(k)) {\n   20          total++;\n   21:         try {\n   22            tests[i].testCase[k](assert, util);\n   23            passed++;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\css\\node_modules\\source-map\\test\\source-map\\test-api.js:\n   11  \n   12    var sourceMap;\n   13:   try {\n   14      sourceMap = require('../../lib/source-map');\n   15    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cssnano\\node_modules\\browserslist\\cli.js:\n   25  \n   26  function query(queries, opts) {\n   27:     try {\n   28          return browserslist(queries, opts);\n   29      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cssnano\\node_modules\\browserslist\\index.js:\n  176      if ( stats ) {\n  177          if ( typeof stats === 'string' ) {\n  178:             try {\n  179                  stats = JSON.parse(fs.readFileSync(stats));\n  180              } catch (e) {\n  ...\n  338          var pkgBrowserslist;\n  339          if ( isFile(pkg) ) {\n  340:             try {\n  341                  pkgBrowserslist = parsePackage(pkg);\n  342              } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cssnano\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cssnano\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\cssnano\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\csso\\bin\\csso:\n    3  var cli = require('../lib/cli.js');\n    4  \n    5: try {\n    6      cli.run();\n    7  } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\csso\\lib\\cli.js:\n  236              usageData = fs.readFileSync(usageFile, 'utf-8');\n  237  \n  238:             try {\n  239                  usageData = JSON.parse(usageData);\n  240              } catch (e) {\n  ...\n  252  \n  253              // main action\n  254:             try {\n  255                  result = csso.minify(source, {\n  256                      filename: inputFile,\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\dashdash\\README.md:\n   72  \n   73  var parser = dashdash.createParser({options: options});\n   74: try {\n   75      var opts = parser.parse(process.argv);\n   76  } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\debug\\src\\browser.js:\n   62  \n   63  exports.formatters.j = function(v) {\n   64:   try {\n   65      return JSON.stringify(v);\n   66    } catch (err) {\n   ..\n  132  \n  133  function save(namespaces) {\n  134:   try {\n  135      if (null == namespaces) {\n  136        exports.storage.removeItem('debug');\n  ...\n  150  function load() {\n  151    var r;\n  152:   try {\n  153      r = exports.storage.debug;\n  154    } catch(e) {}\n  ...\n  180  \n  181  function localstorage() {\n  182:   try {\n  183      return window.localStorage;\n  184    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\debug-fabulous\\node_modules\\debug\\src\\browser.js:\n   72  \n   73  exports.formatters.j = function(v) {\n   74:   try {\n   75      return JSON.stringify(v);\n   76    } catch (err) {\n   ..\n  142  \n  143  function save(namespaces) {\n  144:   try {\n  145      if (null == namespaces) {\n  146        exports.storage.removeItem('debug');\n  ...\n  160  function load() {\n  161    var r;\n  162:   try {\n  163      r = exports.storage.debug;\n  164    } catch(e) {}\n  ...\n  190  \n  191  function localstorage() {\n  192:   try {\n  193      return window.localStorage;\n  194    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\debug-fabulous\\node_modules\\debug\\src\\node.js:\n   26  exports.colors = [ 6, 2, 3, 4, 5, 1 ];\n   27  \n   28: try {\n   29    var supportsColor = require('supports-color');\n   30    if (supportsColor && supportsColor.level >= 2) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\detect-file\\index.js:\n   98  function tryReaddir(filepath) {\n   99    var ctx = { path: filepath, files: [] };\n  100:   try {\n  101      ctx.files = fs.readdirSync(filepath);\n  102      return ctx;\n  103    } catch (err) {}\n  104:   try {\n  105      ctx.path = path.dirname(filepath);\n  106      ctx.files = fs.readdirSync(ctx.path);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\duplexer2\\node_modules\\readable-stream\\float.patch:\n   59  +if (util.debuglog)\n   60  +  debug = util.debuglog('stream');\n   61: +else try {\n   62  +  debug = require('debuglog')('stream');\n   63  +} catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\easy-extender\\node_modules\\lodash\\index.js:\n 11079       */\n 11080      var attempt = restParam(function(func, args) {\n 11081:       try {\n 11082          return func.apply(undefined, args);\n 11083        } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\easy-extender\\node_modules\\lodash\\utility\\attempt.js:\n   23   */\n   24  var attempt = restParam(function(func, args) {\n   25:   try {\n   26      return func.apply(undefined, args);\n   27    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\eazy-logger\\lodash.custom.js:\n  323      var result = false;\n  324      if (value != null && typeof value.toString != 'function') {\n  325:       try {\n  326          result = !!(value + '');\n  327        } catch (e) {}\n  ...\n 1806    function toSource(func) {\n 1807      if (func != null) {\n 1808:       try {\n 1809          return funcToString.call(func);\n 1810        } catch (e) {}\n 1811:       try {\n 1812          return (func + '');\n 1813        } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io\\lib\\server.js:\n  275    debug('handshaking client \"%s\"', id);\n  276  \n  277:   try {\n  278      var transport = new transports[transportName](req);\n  279      if ('polling' === transportName) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io\\node_modules\\debug\\browser.js:\n   54  \n   55  exports.formatters.j = function(v) {\n   56:   try {\n   57      return JSON.stringify(v);\n   58    } catch (err) {\n   ..\n  126  \n  127  function save(namespaces) {\n  128:   try {\n  129      if (null == namespaces) {\n  130        exports.storage.removeItem('debug');\n  ...\n  144  function load() {\n  145    var r;\n  146:   try {\n  147      return exports.storage.debug;\n  148    } catch(e) {}\n  ...\n  172  \n  173  function localstorage(){\n  174:   try {\n  175      return window.localStorage;\n  176    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\engine.io.js:\n  303  \n  304  \t  // Retry with the next transport if the transport is disabled (jsonp: false)\n  305: \t  try {\n  306  \t    transport = this.createTransport(transport);\n  307  \t  } catch (e) {\n  ...\n  888  \n  889  \t  // XMLHttpRequest can be disabled on IE\n  890: \t  try {\n  891  \t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n  892  \t      return new XMLHttpRequest();\n  ...\n  897  \t  // because loading bar keeps flashing when using jsonp-polling\n  898  \t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  899: \t  try {\n  900  \t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n  901  \t      return new XDomainRequest();\n  ...\n  904  \n  905  \t  if (!xdomain) {\n  906: \t    try {\n  907  \t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n  908  \t    } catch (e) {}\n  ...\n  924  \t */\n  925  \n  926: \ttry {\n  927  \t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n  928  \t    'withCredentials' in new XMLHttpRequest();\n  ...\n 1131  \t  var self = this;\n 1132  \n 1133: \t  try {\n 1134  \t    debug('xhr open %s: %s', this.method, this.uri);\n 1135  \t    xhr.open(this.method, this.uri, this.async);\n 1136: \t    try {\n 1137  \t      if (this.extraHeaders) {\n 1138  \t        xhr.setDisableHeaderCheck(true);\n ....\n 1151  \n 1152  \t    if ('POST' === this.method) {\n 1153: \t      try {\n 1154  \t        if (this.isBinary) {\n 1155  \t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n ....\n 1160  \t    }\n 1161  \n 1162: \t    try {\n 1163  \t      xhr.setRequestHeader('Accept', '*/*');\n 1164  \t    } catch (e) {}\n ....\n 1260  \n 1261  \t  if (fromError) {\n 1262: \t    try {\n 1263  \t      this.xhr.abort();\n 1264  \t    } catch (e) {}\n ....\n 1280  \tRequest.prototype.onLoad = function () {\n 1281  \t  var data;\n 1282: \t  try {\n 1283  \t    var contentType;\n 1284: \t    try {\n 1285  \t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n 1286  \t    } catch (e) {}\n ....\n 1291  \t        data = this.xhr.responseText;\n 1292  \t      } else {\n 1293: \t        try {\n 1294  \t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n 1295  \t        } catch (e) {\n ....\n 1976  \n 1977  \t  var b64data;\n 1978: \t  try {\n 1979  \t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n 1980  \t  } catch (e) {\n ....\n 2034  \n 2035  \tfunction tryDecode(data) {\n 2036: \t  try {\n 2037  \t    data = utf8.decode(data);\n 2038  \t  } catch (e) {\n ....\n 2360  \t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n 2361  \t    if (isString) {\n 2362: \t      try {\n 2363  \t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n 2364  \t      } catch (e) {\n ....\n 2898  \n 2899  \tvar blobSupported = (function() {\n 2900: \t  try {\n 2901  \t    var a = new Blob(['hi']);\n 2902  \t    return a.size === 2;\n ....\n 2912  \n 2913  \tvar blobSupportsArrayBufferView = blobSupported && (function() {\n 2914: \t  try {\n 2915  \t    var b = new Blob([new Uint8Array([1,2])]);\n 2916  \t    return b.size === 2;\n ....\n 3408  \n 3409  \tfunction save(namespaces) {\n 3410: \t  try {\n 3411  \t    if (null == namespaces) {\n 3412  \t      exports.storage.removeItem('debug');\n ....\n 3426  \tfunction load() {\n 3427  \t  var r;\n 3428: \t  try {\n 3429  \t    r = exports.storage.debug;\n 3430  \t  } catch(e) {}\n ....\n 3450  \n 3451  \tfunction localstorage(){\n 3452: \t  try {\n 3453  \t    return window.localStorage;\n 3454  \t  } catch (e) {}\n ....\n 3982  \t  function initIframe() {\n 3983  \t    if (self.iframe) {\n 3984: \t      try {\n 3985  \t        self.form.removeChild(self.iframe);\n 3986  \t      } catch (e) {\n ....\n 3989  \t    }\n 3990  \n 3991: \t    try {\n 3992  \t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n 3993  \t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n ....\n 4012  \t  this.area.value = data.replace(rNewline, '\\\\n');\n 4013  \n 4014: \t  try {\n 4015  \t    this.form.submit();\n 4016  \t  } catch (e) {}\n ....\n 4054  \tvar WebSocket = BrowserWebSocket;\n 4055  \tif (!WebSocket && typeof window === 'undefined') {\n 4056: \t  try {\n 4057  \t    WebSocket = __webpack_require__(28);\n 4058  \t  } catch (e) {}\n ....\n 4132  \t  }\n 4133  \n 4134: \t  try {\n 4135  \t    this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n 4136  \t  } catch (err) {\n ....\n 4210  \t        // have a chance of informing us about it yet, in that case send will\n 4211  \t        // throw an error\n 4212: \t        try {\n 4213  \t          if (BrowserWebSocket) {\n 4214  \t            // TypeError is thrown when passing the second argument on Safari\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\lib\\socket.js:\n  230  \n  231    // Retry with the next transport if the transport is disabled (jsonp: false)\n  232:   try {\n  233      transport = this.createTransport(transport);\n  234    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\lib\\xmlhttprequest.js:\n   15  \n   16    // XMLHttpRequest can be disabled on IE\n   17:   try {\n   18      if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n   19        return new XMLHttpRequest();\n   ..\n   24    // because loading bar keeps flashing when using jsonp-polling\n   25    // https://github.com/yujiosaka/socke.io-ie8-loading-example\n   26:   try {\n   27      if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n   28        return new XDomainRequest();\n   ..\n   31  \n   32    if (!xdomain) {\n   33:     try {\n   34        return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n   35      } catch (e) { }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\lib\\transports\\polling-jsonp.js:\n  186    function initIframe () {\n  187      if (self.iframe) {\n  188:       try {\n  189          self.form.removeChild(self.iframe);\n  190        } catch (e) {\n  ...\n  193      }\n  194  \n  195:     try {\n  196        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n  197        var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n  ...\n  216    this.area.value = data.replace(rNewline, '\\\\n');\n  217  \n  218:   try {\n  219      this.form.submit();\n  220    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\lib\\transports\\polling-xhr.js:\n  194    var self = this;\n  195  \n  196:   try {\n  197      debug('xhr open %s: %s', this.method, this.uri);\n  198      xhr.open(this.method, this.uri, this.async);\n  199:     try {\n  200        if (this.extraHeaders) {\n  201          xhr.setDisableHeaderCheck(true);\n  ...\n  214  \n  215      if ('POST' === this.method) {\n  216:       try {\n  217          if (this.isBinary) {\n  218            xhr.setRequestHeader('Content-type', 'application/octet-stream');\n  ...\n  223      }\n  224  \n  225:     try {\n  226        xhr.setRequestHeader('Accept', '*/*');\n  227      } catch (e) {}\n  ...\n  327  \n  328    if (fromError) {\n  329:     try {\n  330        this.xhr.abort();\n  331      } catch (e) {}\n  ...\n  347  Request.prototype.onLoad = function () {\n  348    var data;\n  349:   try {\n  350      var contentType;\n  351:     try {\n  352        contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n  353      } catch (e) {}\n  ...\n  358          data = this.xhr.responseText;\n  359        } else {\n  360:         try {\n  361            data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n  362          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\lib\\transports\\websocket.js:\n   12  var NodeWebSocket;\n   13  if (typeof window === 'undefined') {\n   14:   try {\n   15      NodeWebSocket = require('ws');\n   16    } catch (e) { }\n   ..\n  108    }\n  109  \n  110:   try {\n  111      this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n  112    } catch (err) {\n  ...\n  186          // have a chance of informing us about it yet, in that case send will\n  187          // throw an error\n  188:         try {\n  189            if (self.usingBrowserWebSocket) {\n  190              // TypeError is thrown when passing the second argument on Safari\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-client\\node_modules\\debug\\browser.js:\n   54  \n   55  exports.formatters.j = function(v) {\n   56:   try {\n   57      return JSON.stringify(v);\n   58    } catch (err) {\n   ..\n  126  \n  127  function save(namespaces) {\n  128:   try {\n  129      if (null == namespaces) {\n  130        exports.storage.removeItem('debug');\n  ...\n  144  function load() {\n  145    var r;\n  146:   try {\n  147      return exports.storage.debug;\n  148    } catch(e) {}\n  ...\n  172  \n  173  function localstorage(){\n  174:   try {\n  175      return window.localStorage;\n  176    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-parser\\lib\\browser.js:\n  200  \n  201    var b64data;\n  202:   try {\n  203      b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  204    } catch (e) {\n  ...\n  261  \n  262  function tryDecode(data) {\n  263:   try {\n  264      data = utf8.decode(data);\n  265    } catch (e) {\n  ...\n  587      var msg = sliceBuffer(bufferTail, 0, msgLength);\n  588      if (isString) {\n  589:       try {\n  590          msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n  591        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\engine.io-parser\\lib\\index.js:\n  164  \n  165  function tryDecode(data) {\n  166:   try {\n  167      data = utf8.decode(data);\n  168    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\safe-to-string.js:\n    4  \n    5  module.exports = function (value) {\n    6: \ttry {\n    7  \t\tif (value && isCallable(value.toString)) return value.toString();\n    8  \t\treturn String(value);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\date\\is-time-value.js:\n    2  \n    3  module.exports = function (value) {\n    4: \ttry {\n    5  \t\tvalue = Number(value);\n    6  \t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\function\\_define-length.js:\n    9  var desc, defineProperty, generate, mixin;\n   10  \n   11: try {\n   12  \tObject.defineProperty(test, \"length\", {\n   13  \t\tconfigurable: true,\n   ..\n   49  \t\tif (src.length === length) return src;\n   50  \t\ttarget = generate(length)(src);\n   51: \t\ttry {\n   52  \t\t\tmixin(target, src);\n   53  \t\t} catch (ignore) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\function\\#\\copy.js:\n   17  \t\t\t\") { return fn.apply(this, arguments); };\"\n   18  \t)(this);\n   19: \ttry {\n   20  \t\tmixin(fn, this);\n   21  \t} catch (ignore) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\json\\safe-stringify.js:\n    9  module.exports = function self(value /*, replacer, space*/) {\n   10  \tvar replacer = arguments[1], space = arguments[2];\n   11: \ttry {\n   12  \t\treturn stringify(value, replacer, space);\n   13  \t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\clear.js:\n    6  \tvar error;\n    7  \tkeys(obj).forEach(function (key) {\n    8: \t\ttry {\n    9  \t\t\tdelete this[key];\n   10  \t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\is-number-value.js:\n    5  module.exports = function (value) {\n    6  \tif (!isValue(value)) return false;\n    7: \ttry {\n    8  \t\treturn !isNaN(value);\n    9  \t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\mixin-prototypes.js:\n   15  \tend = getPrototypeOf(target);\n   16  \tif (source === end) return target;\n   17: \ttry {\n   18  \t\tmixin(target, source);\n   19  \t} catch (e) {\n   ..\n   23  \tdefine = function (name) {\n   24  \t\tif (objHasOwnProperty.call(target, name)) return;\n   25: \t\ttry {\n   26  \t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n   27  \t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\mixin.js:\n   12  \ttarget = Object(value(target));\n   13  \tgetOwnPropertyNames(sourceObject).forEach(function (name) {\n   14: \t\ttry {\n   15  \t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n   16  \t\t} catch (e) {\n   ..\n   20  \tif (typeof getOwnPropertySymbols === \"function\") {\n   21  \t\tgetOwnPropertySymbols(sourceObject).forEach(function (symbol) {\n   22: \t\t\ttry {\n   23  \t\t\t\tdefineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));\n   24  \t\t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\validate-stringifiable.js:\n    4  \n    5  module.exports = function (stringifiable) {\n    6: \ttry {\n    7  \t\tif (stringifiable && isCallable(stringifiable.toString)) return stringifiable.toString();\n    8  \t\treturn String(stringifiable);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\assign\\shim.js:\n    9  \tdest = Object(value(dest));\n   10  \tassign = function (key) {\n   11: \t\ttry {\n   12  \t\t\tdest[key] = src[key];\n   13  \t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\keys\\is-implemented.js:\n    2  \n    3  module.exports = function () {\n    4: \ttry {\n    5  \t\tObject.keys(\"primitive\");\n    6  \t\treturn true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\object\\set-prototype-of\\shim.js:\n   66  \n   67  \t\tif (desc) {\n   68: \t\t\ttry {\n   69  \t\t\t\tset = desc.set; // Opera crashes at this point\n   70  \t\t\t\tset.call(tmpObj1, tmpObj2);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\error\\#\\throw.js:\n    3  module.exports = function (t, a) {\n    4  \tvar e = new Error();\n    5: \ttry {\n    6  \t\tt.call(e);\n    7  \t} catch (e2) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\function\\#\\to-string-tokens.js:\n   20  \t);\n   21  \n   22: \ttry {\n   23  \t\teval(\"(() => {})\");\n   24  \t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\object\\is-plain-function.js:\n   16  \t}\n   17  \tvar arrowfn;\n   18: \ttry {\n   19  \t\tarrowfn = eval(\"(() => {})\");\n   20  \t} catch (e) {}\n   ..\n   24  \n   25  \tvar classFn;\n   26: \ttry {\n   27  \t\tclassFn = eval(\"(class {})\");\n   28  \t} catch (e) {}\n   ..\n   32  \n   33  \tvar commentedClassFn;\n   34: \ttry {\n   35  \t\t// Follows issue reported to ljhard/is-callable project:\n   36  \t\t// https://github.com/ljharb/is-callable/issues/4\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\object\\mixin-prototypes.js:\n   12  \to2.other = \"other\";\n   13  \n   14: \ttry {\n   15   t(o2, o1);\n   16  } catch (ignore) {}\n   ..\n   29  \tx = {};\n   30  \tt(x, o2);\n   31: \ttry {\n   32   t(x, o1);\n   33  } catch (ignore) {}\n   ..\n   67  \t\t{ configurable: false, writable: true, enumerable: false, value: \"bar\" });\n   68  \n   69: \ttry {\n   70   t(x, { foo: \"lorem\" });\n   71  } catch (ignore) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\object\\mixin.js:\n   12  \to2.other = \"other\";\n   13  \n   14: \ttry {\n   15   t(o2, o1);\n   16  } catch (ignore) {}\n   ..\n   30  \tx = {};\n   31  \tt(x, o2);\n   32: \ttry {\n   33   t(x, o1);\n   34  } catch (ignore) {}\n   ..\n   69  \t\t{ configurable: false, writable: true, enumerable: false, value: \"bar\" });\n   70  \n   71: \ttry {\n   72   t(x, { foo: \"lorem\" });\n   73  } catch (ignore) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\reg-exp\\#\\is-sticky.js:\n    5  \ta(t.call(/raz/), false, \"Normal\");\n    6  \ta(t.call(/raz/g), false, \"Global\");\n    7: \ttry {\n    8  \t\t// eslint-disable-next-line no-invalid-regexp\n    9  \t\tre = new RegExp(\"raz\", \"y\");\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es5-ext\\test\\reg-exp\\#\\is-unicode.js:\n    5  \ta(t.call(/raz/), false, \"Normal\");\n    6  \ta(t.call(/raz/g), false, \"Global\");\n    7: \ttry {\n    8  \t\t// eslint-disable-next-line no-invalid-regexp\n    9  \t\tre = new RegExp(\"raz\", \"u\");\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es6-symbol\\is-implemented.js:\n    7  \tif (typeof Symbol !== 'function') return false;\n    8  \tsymbol = Symbol('test symbol');\n    9: \ttry { String(symbol); } catch (e) { return false; }\n   10  \n   11  \t// Return 'true' also for polyfills\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es6-symbol\\polyfill.js:\n   13  if (typeof Symbol === 'function') {\n   14  \tNativeSymbol = Symbol;\n   15: \ttry {\n   16  \t\tString(NativeSymbol());\n   17  \t\tisNativeSafe = true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\es6-weak-map\\is-implemented.js:\n    4  \tvar weakMap, x;\n    5  \tif (typeof WeakMap !== 'function') return false;\n    6: \ttry {\n    7  \t\t// WebKit doesn't support arguments and crashes\n    8  \t\tweakMap = new WeakMap([[x = {}, 'one'], [{}, 'two'], [{}, 'three']]);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\esprima\\esprima.js:\n 1314  \n 1315          // First, detect invalid regular expressions.\n 1316:         try {\n 1317              RegExp(tmp);\n 1318          } catch (e) {\n ....\n 1323          // `null` in case the current environment doesn't support the flags it\n 1324          // uses.\n 1325:         try {\n 1326              return new RegExp(pattern, flags);\n 1327          } catch (exception) {\n ....\n 2406      function constructError(msg, column) {\n 2407          var error = new Error(msg);\n 2408:         try {\n 2409              throw error;\n 2410          } catch (base) {\n ....\n 5590          }\n 5591  \n 5592:         try {\n 5593              peek();\n 5594              if (lookahead.type === Token.EOF) {\n ....\n 5598              lex();\n 5599              while (lookahead.type !== Token.EOF) {\n 5600:                 try {\n 5601                      lex();\n 5602                  } catch (lexError) {\n ....\n 5687          }\n 5688  \n 5689:         try {\n 5690              program = parseProgram();\n 5691              if (typeof extra.comments !== 'undefined') {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\esprima\\bin\\esparse.js:\n   32      esprima = require('esprima');\n   33  } else if (typeof load === 'function') {\n   34:     try {\n   35          load('esprima.js');\n   36      } catch (e) {\n   ..\n  117  }\n  118  \n  119: try {\n  120      content = fs.readFileSync(fname, 'utf-8');\n  121      syntax = esprima.parse(content, options);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\esprima\\bin\\esvalidate.js:\n   39          esprima = require('esprima');\n   40      } else if (typeof load === 'function') {\n   41:         try {\n   42              load('esprima.js');\n   43          } catch (e) {\n   ..\n  123  fnames.forEach(function (fname) {\n  124      var content, timestamp, syntax, name;\n  125:     try {\n  126          content = fs.readFileSync(fname, 'utf-8');\n  127  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\expand-brackets\\index.js:\n  135  \n  136  brackets.makeRe = function(pattern) {\n  137:   try {\n  138      return new RegExp(brackets(pattern));\n  139    } catch (err) {}\n  ...\n  141  \n  142  brackets.isMatch = function(str, pattern) {\n  143:   try {\n  144      return brackets.makeRe(pattern).test(str);\n  145    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\lib\\view.js:\n  273  \n  274    // render the partial\n  275:   try {\n  276      var str = renderPartial(this, view, options, null, parent);\n  277    } catch (err) {\n  ...\n  315    }\n  316  \n  317:   try {\n  318      return this._render(view, opts, fn, parent, sub);\n  319    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\lib\\router\\index.js:\n  232        paramCallbacks = key && params[key.name];\n  233  \n  234:       try {\n  235          if ('route' == err) {\n  236            nextRoute();\n  ...\n  263      function callbacks(err) {\n  264        var fn = route.callbacks[i++];\n  265:       try {\n  266          if ('route' == err) {\n  267            nextRoute();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\lib\\view\\view.js:\n   65  \n   66  View.prototype.__defineGetter__('exists', function(){\n   67:   try {\n   68      stat(this.path);\n   69      return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\connect\\lib\\http.js:\n  176      }\n  177  \n  178:     try {\n  179        path = parse(req.url).pathname;\n  180        if (undefined == path) path = '/';\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\connect\\lib\\utils.js:\n  143      if (undefined == obj[key]) {\n  144        val = val.replace(/\\+/g, ' ');\n  145:       try {\n  146          obj[key] = decodeURIComponent(val);\n  147        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\bodyParser.js:\n  111    req.on('data', function(chunk){ buf += chunk });\n  112    req.on('end', function(){\n  113:     try {\n  114        req.body = buf.length\n  115          ? qs.parse(buf)\n  ...\n  131    req.on('data', function(chunk){ buf += chunk });\n  132    req.on('end', function(){\n  133:     try {\n  134        req.body = buf.length\n  135          ? JSON.parse(buf)\n  ...\n  184    form.on('end', function(){\n  185      if (done) return;\n  186:     try {\n  187        req.body = qs.parse(data);\n  188        req.files = qs.parse(files);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\compiler.js:\n  130      compile: function(str, fn){\n  131        var sass = cache.sass || (cache.sass = require('sass'));\n  132:       try {\n  133          fn(null, sass.render(str));\n  134        } catch (err) {\n  ...\n  142      compile: function(str, fn){\n  143        var less = cache.less || (cache.less = require('less'));\n  144:       try {\n  145          less.render(str, fn);\n  146        } catch (err) {\n  ...\n  154      compile: function(str, fn){\n  155        var coffee = cache.coffee || (cache.coffee = require('coffee-script'));\n  156:       try {\n  157          fn(null, coffee.compile(str));\n  158        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\cookieParser.js:\n   36      req.cookies = {};\n   37      if (cookie) {\n   38:       try {\n   39          req.cookies = utils.parseCookie(cookie);\n   40        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\router.js:\n  140          // Param preconditions\n  141          (function param(err) {\n  142:           try {\n  143              var key = keys[i++]\n  144                , val = req.params[key]\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\mkdirp\\index.js:\n   48      p = path.resolve(p);\n   49      \n   50:     try {\n   51          fs.mkdirSync(p, mode)\n   52      }\n   ..\n   61              case 'EEXIST' :\n   62                  var stat;\n   63:                 try {\n   64                      stat = fs.statSync(p);\n   65                  }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\mkdirp\\examples\\pow.js.rej:\n   11   });\n   12  +\n   13: +try {\n   14  +  mkdirpSync('/tmp/bar/foo/baz', 0755);\n   15  +  console.log('double pow!');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\express\\node_modules\\qs\\test\\stringify.js:\n   58  function err(fn, msg){\n   59    var err;\n   60:   try {\n   61      fn();\n   62    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\finalhandler\\node_modules\\debug\\browser.js:\n  121  \n  122  function save(namespaces) {\n  123:   try {\n  124      if (null == namespaces) {\n  125        exports.storage.removeItem('debug');\n  ...\n  139  function load() {\n  140    var r;\n  141:   try {\n  142      r = exports.storage.debug;\n  143    } catch(e) {}\n  ...\n  163  \n  164  function localstorage(){\n  165:   try {\n  166      return window.localStorage;\n  167    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\findup-sync\\index.js:\n   79  \n   80  function tryReaddirSync(fp) {\n   81:   try {\n   82      return fs.readdirSync(fp);\n   83    } catch(err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fined\\index.js:\n   94    for (var i = 0, n = extArr.length; i < n; i++) {\n   95      var filepath = noExtPath + extArr[i];\n   96:     try {\n   97        fs.statSync(filepath);\n   98        return { path: filepath, extension: extArr[i] };\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\formidable\\lib\\incoming_form.js:\n   49  IncomingForm.prototype.parse = function(req, cb) {\n   50    this.pause = function() {\n   51:     try {\n   52        req.pause();\n   53      } catch (err) {\n   ..\n   63  \n   64    this.resume = function() {\n   65:     try {\n   66        req.resume();\n   67      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\formidable\\lib\\json_parser.js:\n   24  \n   25  JSONParser.prototype.end = function() {\n   26:   try {\n   27      var fields = JSON.parse(this.data.toString('utf8'));\n   28      for (var field in fields) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-exists-sync\\index.js:\n   11  \n   12  module.exports = function(filepath) {\n   13:   try {\n   14      (fs.accessSync || fs.statSync)(filepath);\n   15      return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\README.md:\n   82  \n   83  // Sync:\n   84: try {\n   85    fs.copySync('/tmp/myfile', '/tmp/mynewfile')\n   86    console.log('success!')\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\empty\\index.js:\n   29  function emptyDirSync (dir) {\n   30    let items\n   31:   try {\n   32      items = fs.readdirSync(dir)\n   33    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\ensure\\link.js:\n   41    if (destinationExists) return undefined\n   42  \n   43:   try {\n   44      fs.lstatSync(srcpath)\n   45    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\ensure\\symlink-type.js:\n   18  \n   19    if (type) return type\n   20:   try {\n   21      stats = fs.lstatSync(srcpath)\n   22    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\mkdirs\\mkdirs-sync.js:\n   28    p = path.resolve(p)\n   29  \n   30:   try {\n   31      xfs.mkdirSync(p, mode)\n   32      made = made || p\n   ..\n   44        default:\n   45          let stat\n   46:         try {\n   47            stat = xfs.statSync(p)\n   48          } catch (err1) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\move-sync\\index.js:\n   24    function tryRenameSync () {\n   25      if (overwrite) {\n   26:       try {\n   27          return fs.renameSync(src, dest)\n   28        } catch (err) {\n   ..\n   37        }\n   38      } else {\n   39:       try {\n   40          fs.linkSync(src, dest)\n   41          return fs.unlinkSync(src)\n   ..\n  104  // extract dest base dir and check if that is the same as src basename\n  105  function isSrcSubdir (src, dest) {\n  106:   try {\n  107      return fs.statSync(src).isDirectory() &&\n  108             src !== dest &&\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\remove\\rimraf.js:\n  144    }\n  145  \n  146:   try {\n  147      options.chmodSync(p, 666)\n  148    } catch (er2) {\n  ...\n  154    }\n  155  \n  156:   try {\n  157      stats = options.statSync(p)\n  158    } catch (er3) {\n  ...\n  234    assert.equal(typeof options, 'object', 'rimraf: options should be object')\n  235  \n  236:   try {\n  237      st = options.lstatSync(p)\n  238    } catch (er) {\n  ...\n  247    }\n  248  \n  249:   try {\n  250      // sunos lets the root user unlink directories, which is... weird.\n  251      if (st && st.isDirectory()) {\n  ...\n  273    }\n  274  \n  275:   try {\n  276      options.rmdirSync(p)\n  277    } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs-extra\\lib\\util\\buffer.js:\n    2  module.exports = function (size) {\n    3    if (typeof Buffer.allocUnsafe === 'function') {\n    4:     try {\n    5        return Buffer.allocUnsafe(size)\n    6      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\fs.realpath\\index.js:\n   45    }\n   46  \n   47:   try {\n   48      return origRealpathSync(p, cache)\n   49    } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\function-bind\\test\\index.js:\n   15      t.plan(nonFunctions.length);\n   16      for (var i = 0; i < nonFunctions.length; ++i) {\n   17:         try { functionBind.call(nonFunctions[i]); } catch (ex) {\n   18              t.ok(ex instanceof TypeError, 'throws when given ' + String(nonFunctions[i]));\n   19          }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gauge\\set-immediate.js:\n    1  'use strict'\n    2  var process = require('./process')\n    3: try {\n    4    module.exports = setImmediate\n    5  } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gaze\\lib\\gaze.js:\n  286    var self = this;\n  287    var timeoutId;\n  288:   try {\n  289      this._watchers[dir] = fs.watch(dir, function(event) {\n  290        // race condition. Let's give the fs a little time to settle down. so we\n  ...\n  326        done(null, file);\n  327      };\n  328:     try {\n  329        fs.watchFile(file, opts, this._pollers[file]);\n  330      } catch (err) {\n  ...\n  364          if (!current) { return; }\n  365  \n  366:         try {\n  367            // append path.sep to directories so they match previous.\n  368            current = current.map(function(curPath) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\generate-function\\test.js:\n   22    var good = fn.toFunction({number:10})\n   23  \n   24:   try {\n   25      notGood(10)\n   26      t.ok(false, 'function should not work')\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\geometry-interfaces\\global.js.map:\n    1: {\"version\":3,\"sources\":[\"webpack:///webpack/universalModuleDefinition\",\"webpack:///webpack/bootstrap 438e56baf50ade2b0864\",\"webpack:///./src/DOMMatrix.js\",\"webpack:///./src/DOMMatrixReadOnly.js\",\"webpack:///./src/utilities.js\",\"webpack:///./src/index.js\",\"webpack:///(webpack)/buildin/global.js\",\"webpack:///./src/DOMPoint.js\"],\"names\":[],\"mappings\":\"AAAA,cACA,2BACA,uCACA,sCACA,IACA,aACA,oDAEA,yBACA,GAAC,mBACD,kBCTA,cAMA,IACA,iBAGA,mBACA,CACA,IACA,KAIA,2CAGA,aAGA,OACA,OAIA,IAzBA,eA4BA,MAGA,uBACA,GACA,kCACA,CACA,gBACA,cAGA,OAGA,iBACA,YACA,qBAA2B,UAA0B,UACrD,YAAiC,CAAe,QAChD,EAEA,aADA,QAIA,mBAAsD,wCAA+D,SAGrH,MAGA,0DCzDoB,GAEpB,OAAuB,OAGvB,GAAyC,eACtB,aAAE,CACb,KAAa,GAAY,UAAO,OAChC,GAAmB,CAAR,KACF,OACR,wBACI,IAAmB,CAAR,KAaZ,KAAM,IAAS,OAClB,2DAbG,IAA4B,QAAd,WACV,KAAM,IAAS,OAGd,kDAA8B,gBAC1B,OAAC,KAAG,EAER,UAAO,YAAwB,eAAO,YAAwB,eAAO,YAAmB,SACpF,OAGR,OAGR,oPAGD,aAAa,aAAM,WAAE,CACjB,GAAK,EACD,qBAAM,IAAS,OAAiE,iEAOpF,MAJA,QAAgB,KAAY,OAExB,MAAM,EAAO,OAAI,KAAc,UAExB,IACd,EAED,YAAgB,gBAAM,WAAE,CACpB,GAAK,EACD,qBAAM,IAAS,OAAiE,iEAOpF,MAJA,QAAsB,OAAM,KAExB,MAAM,EAAO,OAAI,KAAc,UAExB,IACd,EAED,YAAc,cAAe,eAAE,CAG3B,gBAHqB,EAAO,GAIxB,CADS,aAAO,YACV,IAAS,OAA8G,8GAGjI,KAAuB,GAAgB,MAAC,CAEnC,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EACC,QACV,IAQF,MANI,MAEJ,gBAAa,CAAP,MACE,KACP,UAEU,IACd,EAED,YAAU,UAAgC,eAAE,CAWxC,oBAXqB,EAAa,kBAAO,GACrC,KAAgC,mBAEhC,KAAa,aAAc,MAEjB,GAAQ,EACI,IAChB,EACP,KAEC,KAAc,cAAS,GAAW,IAC3B,IACd,EAED,YAAY,YAA6C,iBAAE,CAYvD,oBAZuB,EAAa,kBAAa,kBAAO,GACpD,KAAyC,qBAEzC,KAAa,aAAc,MAEtB,GAAG,EAAO,EAAO,EACV,IAAG,EAAO,EACrB,EAAkB,IAAG,EACrB,EAAO,EAAO,EAChB,KAEC,KAAc,cAAS,GAAU,GAAW,IACrC,IACd,EAED,YAAoB,oBAAsE,qBAAE,CAexF,oBAf+B,EAAY,kBAAa,kBAAa,kBAAa,kBAAO,GACrF,KAAyC,qBAEzC,KAAa,aAAc,MAErB,GAAG,EAAQ,EAAQ,EACX,IAAG,EAAQ,EACxB,EAAqB,IAAG,EACxB,EAAQ,EAAQ,EAClB,KAEC,KAAc,cAAS,GAAU,GAErC,KAAgB,CAAN,MAAyB,CAAR,QAAY,KAAc,UAE1C,IACd,EAED,YAAW,WAAgC,eAAE,cAAnB,EAAa,kBAAO,GACtC,KAAgC,mBAGvB,GAAU,WAAf,IAAC,GAAC,IAAC,GAAC,IAAW,GAKvB,MAHI,MAAoC,6BAEpC,KAAc,cAAS,GAAW,IAC3B,IACd,EAGD,YAAqB,qBAAK,UAAE,CACxB,KAAM,IAAS,OAAgD,+CAClE,EAED,YAAoB,oBAAe,iBAAE,CACjC,KAAoB,GAAgB,MAAC,OAAkC,eAEvE,MADI,MAA6B,gBACtB,IACd,EAED,YAAU,UAAG,UAAE,CACX,KAAM,IAAS,OAAqC,oCACvD,EAED,YAAU,UAAG,UAAE,CACX,KAAM,IAAS,OAAqC,oCACvD,EAED,YAAW,qBAAG,CACV,KAAM,IAAS,OAAsC,qCACxD,EAED,YAAc,eAA4B,UAAE,CACxC,KAAM,IAAS,OAA0C,yCAC5D,EAED,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAE3B,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAK,MAAM,WAAE,CAAM,KAAY,KAAE,EACjC,EAAK,MAAM,WAAE,CAAM,KAAY,KAAE,EACjC,EAAK,MAAM,WAAE,CAAM,KAAY,KAAE,EACjC,EAAK,MAAM,WAAE,CAAM,KAAY,KAAE,EACjC,EAAK,MAAM,WAAE,CAAM,KAAY,KAAE,EACjC,EAAK,MAAM,WAAE,CAAM,KAAY,KAAE,EAEjC,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,KAAE,EAE3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,KAAE,EAE3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,KAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,KAAE,EAE3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,IAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,KAAE,EAC3C,EAAO,QAAM,WAAE,CAAM,KAAQ,QAAY,KAC5C,qFC5M6B,YACG,KAET,aAWe,aAAE,CAC7B,gBAD8B,MACzB,EAAK,eACN,WAAM,IAAa,WAA4E,6EAE5F,GAAM,KAAkB,OAE/B,GAA6B,YAAa,CAAN,MAChC,EADgD,UAC1C,IAAa,WAA+F,+FAElH,KAAQ,QAAG,GAA0B,iBACrC,KAAmB,eACnB,KAAM,MAA8B,CAArB,KAEnB,OAA0C,OAAO,KACpD,mLAID,aAAU,UAAe,eAAE,CACvB,oBADiB,EAAO,GACjB,GAAa,KAAM,MAA0B,oBACvD,EAED,YAAM,MAAgC,eAAE,CACpC,oBADiB,EAAa,kBAAO,GAC9B,GAAa,KAAM,MAAmC,gBAChE,EAED,YAAQ,QAA6C,iBAAE,CACnD,oBADmB,EAAa,kBAAa,kBAAO,GAC7C,GAAa,KAAM,MAA8C,oBAC3E,EAED,YAAgB,gBAAsE,qBAAE,CACpF,oBAD2B,EAAY,kBAAa,kBAAa,kBAAa,kBAAO,GAC9E,GAAa,KAAM,MAAuE,gCACpG,EAED,YAAO,OAAgC,eAAE,CACrC,oBADkB,EAAa,kBAAO,GAC/B,GAAa,KAAM,MAAoC,iBACjE,EAGD,YAAiB,iBAAK,UAAE,CACpB,KAAM,IAAS,OAA4C,2CAC9D,EAED,YAAgB,gBAAe,iBAAE,CAC7B,MAAO,IAAa,KAAM,MAAoC,4BACjE,EAED,YAAM,MAAG,UAAE,CACP,KAAM,IAAS,OAAiC,gCACnD,EACD,YAAM,MAAG,UAAE,CACP,KAAM,IAAS,OAAiC,gCACnD,EAED,YAAS,SAAM,WAAE,CACb,MAAO,IAAa,KAAM,MAAoB,eACjD,EAED,YAAM,gBAAG,CACL,KAAM,IAAS,OAAiC,gCACnD,EACD,YAAM,gBAAG,CACL,KAAM,IAAS,OAAiC,gCACnD,EACD,YAAQ,kBAAG,CACP,KAAM,IAAS,OAAmC,kCACrD,EAED,YAAc,eAAgC,UAAE,CAC5C,KAAM,IAAS,OAA0C,yCAC5D,EAED,YAAc,yBAAG,CACb,MAAmB,cAAK,KAAK,KAAS,QACzC,EACD,YAAc,yBAAG,CACb,MAAmB,cAAK,KAAK,KAAS,QACzC,EAID,EAAQ,mBAAG,CACP,MAAW,MAAM,KACpB,EAQD,EAAc,yBAAI,CACd,IAAK,MADS,KACJ,EAAI,EAAK,EAAO,KAAQ,QAAO,OAAS,IAAG,GAAK,EACtD,GAAQ,EAAW,YACf,KAAO,MAAK,GACnB,eAEM,MAAK,MAAoB,cACnC,EAED,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAC3B,EAAK,gBAAG,CAAE,MAAW,MAAI,GAAE,EAE3B,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EAErC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAG,EAAG,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GAAE,EACrC,EAAO,kBAAG,CAAE,MAAW,MAAQ,QAAI,GACtC,8CACJ,sDA5JsD,GAKvD,KAKC,qCAED,GAAqB,GAAO,KAqJS,gCC3Ha,eAAE,CAChD,KAAY,GAAQ,EAEpB,OAAkB,CAAR,MACA,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAEjB,IAAmB,EAAT,OACL,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAG,GACf,EAAI,IAAQ,EAAI,IAChB,EAAI,IAAQ,EAAI,IAChB,EAAI,IAAQ,EAAI,IAChB,EAAI,IAAQ,EAAI,IAChB,EAAI,IAAQ,EAAI,IAChB,EAAI,IAAQ,EACrB,IACJ,CAuBgC,aAAE,CAC/B,MAAW,MAAG,GAAc,KAC/B,KAlFqC,eAAE,CAI7B,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAI,IAAK,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAE5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAI,IAAK,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAE5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAI,IAAK,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAI,IAAK,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAE5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAG,GAAM,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAI,IAAK,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAC5E,EAAI,IAAK,EAAI,IAAI,EAAQ,GAAlB,CAAoB,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAQ,IAAE,EAAI,IAAI,EAAK,IAEvC,MAC/C,EApCD,UAuE4C,iBAAE,CACnC,GAAG,QAAE,IAAG,OAAE,IAAG,OAAQ,IAE5B,KAAe,GAAmB,EAAM,EAAG,GAS3C,MAAO,CACF,EAAG,GAAI,IAAO,KAAI,EAAe,KAAI,GAA8B,GAAI,IAAI,EAAe,KAAI,GAAI,EAAe,KAAgB,MAAI,GAAI,IAAI,EAAe,KAAI,GAAI,EAAe,KAAgB,MAAG,EACrM,GAAI,IAAI,EAAe,KAAI,GAAI,EAAe,KAAgB,MAAG,EAAG,GAAI,IAAO,KAAI,EAAe,KAAI,GAA8B,GAAI,IAAI,EAAe,KAAI,GAAI,EAAe,KAAgB,MAAG,EACrM,GAAI,IAAI,EAAe,KAAI,GAAI,EAAe,KAAgB,MAAI,GAAI,IAAI,EAAe,KAAI,GAAI,EAAe,KAAgB,MAAG,EAAG,GAAI,IAAO,KAAI,EAAe,KAAI,GAA6B,EACtM,EAAkE,EAAkE,EACxI,EACJ,EAtFD,KAKC,4WCNoD,GAErD,GAAW,GAGX,KAAkC,WAA9B,QAAa,QAGsB,WAAjB,aAIT,KANF,EAEN,WAKM,EAAU,UAAY,IACtB,EAAkB,kBAAoB,IACtC,EAAS,SAAW,IACpB,EAAiB,iBAQ3B,gCC1BD,GAGA,aACA,OACA,KAAC,IAED,GAEA,0CACA,OAAC,SAED,CACA,4BACA,OAI4C,CAE5C,0CCsDyB,aACrB,SAEA,QAFY,aAGA,SACA,SACA,SAIA,OACf,8BArFD,sCAAe,GACf,KAAO,GAAI,WAAI,CACX,GAAgB,GAAE,CACH,EAAG,GAAW,SACzB,GAAiB,MAEF,MADJ,GAAiB,UAG3B,CACD,GAAY,GAAc,EAE1B,OAMH,MAN+B,cACX,KACF,EACd,WAIR,EAGD,GAAsB,GACC,iBAAE,CACjB,GAA0B,CAAb,aAAO,OAAQ,CACxB,GAAI,CACA,UAAM,IAAa,WAAqD,qDAE3E,EAAM,MAAE,EAAI,EAAE,EACd,EAAM,MAAE,EAAI,EAAE,EACd,EAAM,MAAE,EAAI,EAAE,EACd,EAAM,MAAE,EAAI,EACjB,CACA,KAAK,IAA6B,CAAhB,aAAO,OACpB,EAAM,MAAE,EAAI,GAAK,EACjB,EAAM,MAAE,EAAI,GAAK,EACjB,EAAM,MAAE,EAAI,GAAK,EACjB,EAAM,MAAE,EAAI,GAEZ,MACD,MAAM,IAAa,WAE3B,4BAAC,0BAED,EAAK,gBAAG,CAAE,MAAQ,GAAM,MAAE,CAAE,EAC5B,EAAK,gBAAG,CAAE,MAAQ,GAAM,MAAE,CAAE,EAC5B,EAAK,gBAAG,CAAE,MAAQ,GAAM,MAAE,CAAE,EAC5B,EAAK,gBAAG,CAAE,MAAQ,GAAM,MAAE,CAAE,EAE5B,YAAe,gBAAO,UAAE,CACpB,GAAU,GAAG,GAAQ,MAAY,YAKjC,MAGJ,QAAC,EAED,EAAgB,UAAM,WAAE,CACpB,MAAO,IACX,QACH,yCAGD,GAAuC,eAAC,8JACpC,GAAK,MAAM,WAAE,CAAG,EAAM,MAAU,GAAE,EAClC,EAAK,MAAM,WAAE,CAAG,EAAM,MAAU,GAAE,EAClC,EAAK,MAAM,WAAE,CAAG,EAAM,MAAU,GAAE,EAClC,EAAK,MAAM,WAAE,CAAG,EAAM,MAAU,GACnC,0CAEsB\",\"file\":\"global.js\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine([], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"GeometryInterfaces\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"GeometryInterfaces\\\"] = factory();\\n})(this, function() {\\nreturn \\n\\n\\n// WEBPACK FOOTER //\\n// webpack/universalModuleDefinition\",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 3);\\n\\n\\n\\n// WEBPACK FOOTER //\\n// webpack/bootstrap 438e56baf50ade2b0864\",\"import DOMMatrixReadOnly, {initDOMMatrixReadOnly} from './DOMMatrixReadOnly'\\nimport {\\n    multiplyAndApply,\\n    rotateAxisAngleArray,\\n} from './utilities'\\n\\ninitDOMMatrixReadOnly()\\n\\nexport default\\nclass DOMMatrix extends DOMMatrixReadOnly {\\n    constructor(arg) {\\n        const numArgs = arguments.length\\n        if (numArgs === 0) {\\n            super([1, 0, 0, 1, 0, 0])\\n        }\\n        else if (numArgs === 1) {\\n            if (typeof arg == 'string') {\\n                throw new Error('CSS transformList arg not yet implemented.')\\n                // TODO validate that syntax of transformList matches transform-list (http://www.w3.org/TR/css-transforms-1/#typedef-transform-list).\\n            }\\n            else if (arg instanceof DOMMatrix) {\\n                super(arg._matrix)\\n            }\\n            else if (arg instanceof Float32Array || arg instanceof Float64Array || arg instanceof Array) {\\n                super(arg)\\n            }\\n        }\\n        else {\\n            throw new Error('Wrong number of arguments to DOMMatrix constructor.')\\n        }\\n    }\\n\\n    // Mutable transform methods\\n    multiplySelf (other) {\\n        if (!(other instanceof DOMMatrix))\\n            throw new Error('The argument to multiplySelf must be an instance of DOMMatrix')\\n\\n        // TODO: avoid creating a new array, just apply values directly.\\n        multiplyAndApply(this, other, this)\\n\\n        if (!other.is2D) this._is2D = false\\n\\n        return this\\n    }\\n\\n    preMultiplySelf (other) {\\n        if (!(other instanceof DOMMatrix))\\n            throw new Error('The argument to multiplySelf must be an instance of DOMMatrix')\\n\\n        // TODO: avoid creating a new array, just apply values directly.\\n        multiplyAndApply(other, this, this)\\n\\n        if (!other.is2D) this._is2D = false\\n\\n        return this\\n    }\\n\\n    translateSelf (tx, ty, tz = 0) {\\n        // TODO: check args are numbers\\n\\n        if (arguments.length === 1)\\n            throw new Error('The first two arguments (X and Y translation values) are required (the third, Z translation, is optional).')\\n\\n        // http://www.w3.org/TR/2012/WD-css3-transforms-20120911/#Translate3dDefined\\n        const translationMatrix = new DOMMatrix([\\n            // column-major:\\n            1, 0, 0, 0,\\n            0, 1, 0, 0,\\n            0, 0, 1, 0,\\n            tx,ty,tz,1,\\n        ])\\n\\n        this.multiplySelf(translationMatrix)\\n\\n        if (tz != 0) {\\n            this._is2D = false\\n        }\\n\\n        return this\\n    }\\n\\n    scaleSelf (scale, originX = 0, originY = 0) {\\n        this.translateSelf(originX, originY)\\n\\n        this.multiplySelf(new DOMMatrix([\\n            // 2D:\\n            /*a*/scale, /*b*/0,\\n            /*c*/0,     /*d*/scale,\\n            /*e*/0,     /*f*/0,\\n        ]))\\n\\n        this.translateSelf(-originX, -originY)\\n        return this\\n    }\\n\\n    scale3dSelf (scale, originX = 0, originY = 0, originZ = 0) {\\n        this.translateSelf(originX, originY, originZ)\\n\\n        this.multiplySelf(new DOMMatrix([\\n            // 3D\\n            scale, 0,     0,     0,\\n            0,     scale, 0,     0,\\n            0,     0,     scale, 0,\\n            0,     0,     0,     1,\\n        ]))\\n\\n        this.translateSelf(-originX, -originY, -originZ)\\n        return this\\n    }\\n\\n    scaleNonUniformSelf (scaleX, scaleY = 1, scaleZ = 1, originX = 0, originY = 0, originZ = 0) {\\n        this.translateSelf(originX, originY, originZ)\\n\\n        this.multiplySelf(new DOMMatrix([\\n            // 3D\\n            scaleX, 0,      0,      0,\\n            0,      scaleY, 0,      0,\\n            0,      0,      scaleZ, 0,\\n            0,      0,      0,      1,\\n        ]))\\n\\n        this.translateSelf(-originX, -originY, -originZ)\\n\\n        if (scaleZ !== 1 || originZ !== 0) this._is2D = false\\n\\n        return this\\n    }\\n\\n    rotateSelf (angle, originX = 0, originY = 0) {\\n        this.translateSelf(originX, originY)\\n\\n        // axis of rotation\\n        const [x,y,z] = [0,0,1] // We're rotating around the Z axis.\\n\\n        this.rotateAxisAngleSelf(x, y, z, angle)\\n\\n        this.translateSelf(-originX, -originY)\\n        return this\\n    }\\n\\n    // TODO\\n    rotateFromVectorSelf (x, y) {\\n        throw new Error('rotateFromVectorSelf is not implemented yet.')\\n    }\\n\\n    rotateAxisAngleSelf (x, y, z, angle) {\\n        const rotationMatrix = new DOMMatrix(rotateAxisAngleArray(x,y,z,angle))\\n        this.multiplySelf(rotationMatrix)\\n        return this\\n    }\\n\\n    skewXSelf (sx) {\\n        throw new Error('skewXSelf is not implemented yet.')\\n    }\\n\\n    skewYSelf (sy) {\\n        throw new Error('skewYSelf is not implemented yet.')\\n    }\\n\\n    invertSelf () {\\n        throw new Error('invertSelf is not implemented yet.')\\n    }\\n\\n    setMatrixValue(/*DOMString*/ transformList) {\\n        throw new Error('setMatrixValue is not implemented yet.')\\n    }\\n\\n    get a() { return this.m11 }\\n    get b() { return this.m12 }\\n    get c() { return this.m21 }\\n    get d() { return this.m22 }\\n    get e() { return this.m41 }\\n    get f() { return this.m42 }\\n\\n    get m11() { return this._matrix[0]  }\\n    get m12() { return this._matrix[4]  }\\n    get m13() { return this._matrix[8]  }\\n    get m14() { return this._matrix[12] }\\n\\n    get m21() { return this._matrix[1]  }\\n    get m22() { return this._matrix[5]  }\\n    get m23() { return this._matrix[9]  }\\n    get m24() { return this._matrix[13] }\\n\\n    get m31() { return this._matrix[2]  }\\n    get m32() { return this._matrix[6]  }\\n    get m33() { return this._matrix[10] }\\n    get m34() { return this._matrix[14] }\\n\\n    get m41() { return this._matrix[3]  }\\n    get m42() { return this._matrix[7]  }\\n    get m43() { return this._matrix[11] }\\n    get m44() { return this._matrix[15] }\\n\\n    set a(value) { this.m11 = value }\\n    set b(value) { this.m12 = value }\\n    set c(value) { this.m21 = value }\\n    set d(value) { this.m22 = value }\\n    set e(value) { this.m41 = value }\\n    set f(value) { this.m42 = value }\\n\\n    set m11(value) { this._matrix[0]  = value }\\n    set m12(value) { this._matrix[4]  = value }\\n    set m13(value) { this._matrix[8]  = value }\\n    set m14(value) { this._matrix[12] = value }\\n\\n    set m21(value) { this._matrix[1]  = value }\\n    set m22(value) { this._matrix[5]  = value }\\n    set m23(value) { this._matrix[9]  = value }\\n    set m24(value) { this._matrix[13] = value }\\n\\n    set m31(value) { this._matrix[2]  = value }\\n    set m32(value) { this._matrix[6]  = value }\\n    set m33(value) { this._matrix[10] = value }\\n    set m34(value) { this._matrix[14] = value }\\n\\n    set m41(value) { this._matrix[3]  = value }\\n    set m42(value) { this._matrix[7]  = value }\\n    set m43(value) { this._matrix[11] = value }\\n    set m44(value) { this._matrix[15] = value }\\n}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// ./src/DOMMatrix.js\",\"import DOMMatrix from './DOMMatrix'\\nimport {applyArrayValuesToDOMMatrix} from './utilities'\\n\\n// This matrix is represented internally in row-major format so that it is easy\\n// to look at visually. In a pair of coordinates (as in \\\"m23\\\") the first number\\n// is the column and the second is the row (so \\\"m23\\\" means column 2 row 3).\\nconst identity = [\\n    /*m11*/1, /*m21*/0, /*m31*/0, /*m41*/0,\\n    /*m12*/0, /*m22*/1, /*m32*/0, /*m42*/0,\\n    /*m13*/0, /*m23*/0, /*m33*/1, /*m43*/0,\\n    /*m14*/0, /*m24*/0, /*m34*/0, /*m44*/1,\\n]\\n\\nvar DOMMatrixReadOnly = null\\n\\nexport\\nfunction initDOMMatrixReadOnly() {\\n    if (DOMMatrixReadOnly) return\\n\\n    DOMMatrixReadOnly = class DOMMatrixReadOnly {\\n\\n        /**\\n         * @param {Array.number} numberSequence An array of numbers. If the array\\n         * has 6 items, then those items set the values of m11, m12, m21, m22, m41,\\n         * m42 in that order (or the values a, b, c, d, e, f if you're using those\\n         * aliases) and this.is2D is true. If the array has 16 items (in\\n         * column-major order), then they set all the values of the underlying\\n         * matrix (m11 to m44) and this.is2D is set false. Arrays of other lengths\\n         * throw an error.\\n         */\\n        constructor(numberSequence = []) {\\n            if (!(this instanceof DOMMatrix))\\n                throw new TypeError(`DOMMatrixReadOnly can't be instantiated directly. Use DOMMatrix instead.`)\\n\\n            const {length} = numberSequence\\n\\n            if (length === undefined || !(length === 6 || length === 16))\\n                throw new TypeError('DOMMatrix constructor argument \\\"numberSequence\\\" must be an array-like with 6 or 16 numbers.')\\n\\n            this._matrix = new Float64Array(identity)\\n            this._isIdentity = true\\n            this._is2D = length === 6 ? true : false\\n\\n            applyArrayValuesToDOMMatrix(numberSequence, this)\\n        }\\n\\n        // Immutable transform methods -------------------------------------------\\n\\n        translate (tx, ty, tz = 0) {\\n            return new DOMMatrix(this).translateSelf(tx, ty, tz)\\n        }\\n\\n        scale (scale, originX = 0, originY = 0) {\\n            return new DOMMatrix(this).scaleSelf(scale, originX, originY)\\n        }\\n\\n        scale3d (scale, originX = 0, originY = 0, originZ = 0) {\\n            return new DOMMatrix(this).scale3dSelf(scale, originX, originY, originZ)\\n        }\\n\\n        scaleNonUniform (scaleX, scaleY = 1, scaleZ = 1, originX = 0, originY = 0, originZ = 0) {\\n            return new DOMMatrix(this).scaleNonUniformSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)\\n        }\\n\\n        rotate (angle, originX = 0, originY = 0) {\\n            return new DOMMatrix(this).rotateSelf(angle, originX, originY)\\n        }\\n\\n        // TODO\\n        rotateFromVector (x, y) {\\n            throw new Error('rotateFromVector is not implemented yet.')\\n        }\\n\\n        rotateAxisAngle (x, y, z, angle) {\\n            return new DOMMatrix(this).rotateAxisAngleSelf(x, y, z, angle)\\n        }\\n\\n        skewX (sx) {\\n            throw new Error('skewX is not implemented yet.')\\n        }\\n        skewY (sy) {\\n            throw new Error('skewY is not implemented yet.')\\n        }\\n\\n        multiply (other) {\\n            return new DOMMatrix(this).multiplySelf(other)\\n        }\\n\\n        flipX () {\\n            throw new Error('flipX is not implemented yet.')\\n        }\\n        flipY () {\\n            throw new Error('flipY is not implemented yet.')\\n        }\\n        inverse () {\\n            throw new Error('inverse is not implemented yet.')\\n        }\\n\\n        transformPoint(/*optional DOMPointInit*/ point) {\\n            throw new Error('transformPoint is not implemented yet.')\\n        }\\n\\n        toFloat32Array() {\\n            return Float32Array.from(this._matrix)\\n        }\\n        toFloat64Array() {\\n            return Float64Array.from(this._matrix)\\n        }\\n\\n        //stringifier() {} // What's this?\\n\\n        get is2D() {\\n            return this._is2D\\n        }\\n\\n        /*\\n         * TODO: make sure this matches the spec.\\n         * TODO: Instead of calculating here, perhaps calculate and set\\n         * this._isIdentity in other operations, and simply return the internal one\\n         * here.\\n         */\\n        get isIdentity() {\\n            for (var i = 0, len = this._matrix.length; i < len; i+=1) {\\n                if (this._matrix[i] != identity[i])\\n                    return (this._isIdentity = false)\\n            }\\n\\n            return (this._isIdentity = true)\\n        }\\n\\n        get a() { return this.m11 }\\n        get b() { return this.m12 }\\n        get c() { return this.m21 }\\n        get d() { return this.m22 }\\n        get e() { return this.m41 }\\n        get f() { return this.m42 }\\n\\n        get m11() { return this._matrix[0]  }\\n        get m12() { return this._matrix[4]  }\\n        get m13() { return this._matrix[8]  }\\n        get m14() { return this._matrix[12] }\\n\\n        get m21() { return this._matrix[1]  }\\n        get m22() { return this._matrix[5]  }\\n        get m23() { return this._matrix[9]  }\\n        get m24() { return this._matrix[13] }\\n\\n        get m31() { return this._matrix[2]  }\\n        get m32() { return this._matrix[6]  }\\n        get m33() { return this._matrix[10] }\\n        get m34() { return this._matrix[14] }\\n\\n        get m41() { return this._matrix[3]  }\\n        get m42() { return this._matrix[7]  }\\n        get m43() { return this._matrix[11] }\\n        get m44() { return this._matrix[15] }\\n    }\\n}\\n\\ninitDOMMatrixReadOnly()\\n\\n// export default as a \\\"live binding\\\", not a static default.\\nexport {DOMMatrixReadOnly as default}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// ./src/DOMMatrixReadOnly.js\",\"\\n// A reusable array, to avoid allocating new arrays during multiplication.\\n// in column-major order:\\nconst scratch = [\\n    /*m11*/0, /*m12*/0, /*m13*/0, /*m14*/0,\\n    /*m21*/0, /*m22*/0, /*m23*/0, /*m24*/0,\\n    /*m31*/0, /*m32*/0, /*m33*/0, /*m34*/0,\\n    /*m41*/0, /*m42*/0, /*m43*/0, /*m44*/0,\\n]\\n\\nexport\\nfunction multiplyAndApply(A, B, target) {\\n\\n    //XXX: Are the following calculations faster hard coded (current), or as a loop?\\n\\n    scratch[0]  = (A.m11 * B.m11) + (A.m21 * B.m12) + (A.m31 * B.m13) + (A.m41 * B.m14)\\n    scratch[4]  = (A.m11 * B.m21) + (A.m21 * B.m22) + (A.m31 * B.m23) + (A.m41 * B.m24)\\n    scratch[8]  = (A.m11 * B.m31) + (A.m21 * B.m32) + (A.m31 * B.m33) + (A.m41 * B.m34)\\n    scratch[12] = (A.m11 * B.m41) + (A.m21 * B.m42) + (A.m31 * B.m43) + (A.m41 * B.m44)\\n\\n    scratch[1]  = (A.m12 * B.m11) + (A.m22 * B.m12) + (A.m32 * B.m13) + (A.m42 * B.m14)\\n    scratch[5]  = (A.m12 * B.m21) + (A.m22 * B.m22) + (A.m32 * B.m23) + (A.m42 * B.m24)\\n    scratch[9]  = (A.m12 * B.m31) + (A.m22 * B.m32) + (A.m32 * B.m33) + (A.m42 * B.m34)\\n    scratch[13] = (A.m12 * B.m41) + (A.m22 * B.m42) + (A.m32 * B.m43) + (A.m42 * B.m44)\\n\\n    scratch[2]  = (A.m13 * B.m11) + (A.m23 * B.m12) + (A.m33 * B.m13) + (A.m43 * B.m14)\\n    scratch[6]  = (A.m13 * B.m21) + (A.m23 * B.m22) + (A.m33 * B.m23) + (A.m43 * B.m24)\\n    scratch[10] = (A.m13 * B.m31) + (A.m23 * B.m32) + (A.m33 * B.m33) + (A.m43 * B.m34)\\n    scratch[14] = (A.m13 * B.m41) + (A.m23 * B.m42) + (A.m33 * B.m43) + (A.m43 * B.m44)\\n\\n    scratch[3]  = (A.m14 * B.m11) + (A.m24 * B.m12) + (A.m34 * B.m13) + (A.m44 * B.m14)\\n    scratch[7]  = (A.m14 * B.m21) + (A.m24 * B.m22) + (A.m34 * B.m23) + (A.m44 * B.m24)\\n    scratch[11] = (A.m14 * B.m31) + (A.m24 * B.m32) + (A.m34 * B.m33) + (A.m44 * B.m34)\\n    scratch[15] = (A.m14 * B.m41) + (A.m24 * B.m42) + (A.m34 * B.m43) + (A.m44 * B.m44)\\n\\n    applyArrayValuesToDOMMatrix(scratch, target)\\n}\\n\\nexport\\nfunction applyArrayValuesToDOMMatrix(array, matrix) {\\n    const length = array.length\\n\\n    if (length === 6) {\\n        matrix.m11 = array[0]\\n        matrix.m12 = array[1]\\n        matrix.m21 = array[2]\\n        matrix.m22 = array[3]\\n        matrix.m41 = array[4]\\n        matrix.m42 = array[5]\\n    }\\n    else if (length === 16) {\\n        matrix.m11 = array[0]\\n        matrix.m12 = array[1]\\n        matrix.m13 = array[2]\\n        matrix.m14 = array[3]\\n        matrix.m21 = array[4]\\n        matrix.m22 = array[5]\\n        matrix.m23 = array[6]\\n        matrix.m24 = array[7]\\n        matrix.m31 = array[8]\\n        matrix.m32 = array[9]\\n        matrix.m33 = array[10]\\n        matrix.m34 = array[11]\\n        matrix.m41 = array[12]\\n        matrix.m42 = array[13]\\n        matrix.m43 = array[14]\\n        matrix.m44 = array[15]\\n    }\\n}\\n\\nexport\\nfunction rotateAxisAngleArray(x, y, z, angle) {\\n    const {sin, cos, pow} = Math\\n\\n    const halfAngle = degreesToRadians(angle/2)\\n\\n    // TODO: should we provide a 6-item array here to signify 2D when the\\n    // rotation is about the Z axis (for example when calling rotateSelf)?\\n    // TODO: Performance can be improved by first detecting when x, y, or z of\\n    // the axis are zero or 1, and using a pre-simplified version of the\\n    // folowing math based on that condition.\\n    // TODO: Performance can be improved by using different equations (use trig\\n    // identities to find alternate formulas).\\n    return [\\n        1-2*(y*y + z*z)*pow(sin(halfAngle), 2),                           2*(x*y*pow(sin(halfAngle), 2) + z*sin(halfAngle)*cos(halfAngle)), 2*(x*z*pow(sin(halfAngle), 2) - y*sin(halfAngle)*cos(halfAngle)), 0,\\n        2*(x*y*pow(sin(halfAngle), 2) - z*sin(halfAngle)*cos(halfAngle)), 1-2*(x*x + z*z)*pow(sin(halfAngle), 2),                           2*(y*z*pow(sin(halfAngle), 2) + x*sin(halfAngle)*cos(halfAngle)), 0,\\n        2*(x*z*pow(sin(halfAngle), 2) + y*sin(halfAngle)*cos(halfAngle)), 2*(y*z*pow(sin(halfAngle), 2) - x*sin(halfAngle)*cos(halfAngle)), 1-2*(x*x + y*y)*pow(sin(halfAngle), 2),                           0,\\n        0,                                                                0,                                                                0,                                                                1,\\n    ]\\n}\\n\\nfunction degreesToRadians(degrees) {\\n    return Math.PI/180 * degrees\\n}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// ./src/utilities.js\",\"import DOMMatrix from './DOMMatrix'\\nimport DOMMatrixReadOnly from './DOMMatrixReadOnly'\\nimport {DOMPoint, DOMPointReadOnly} from './DOMPoint'\\n\\nlet _global = null\\n\\n// browser\\nif (typeof window != 'undefined') {\\n    _global = window\\n}\\nelse if (typeof global != 'undefined') {\\n    _global = global\\n}\\n\\nif (_global) {\\n    _global.DOMMatrix = DOMMatrix\\n    _global.DOMMatrixReadOnly = DOMMatrixReadOnly\\n    _global.DOMPoint = DOMPoint\\n    _global.DOMPointReadOnly = DOMPointReadOnly\\n}\\n\\nexport {\\n    DOMMatrix,\\n    DOMMatrixReadOnly,\\n    DOMPoint,\\n    DOMPointReadOnly,\\n}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// ./src/index.js\",\"var g;\\r\\n\\r\\n// This works in non-strict mode\\r\\ng = (function() {\\r\\n\\treturn this;\\r\\n})();\\r\\n\\r\\ntry {\\r\\n\\t// This works if eval is allowed (see CSP)\\r\\n\\tg = g || Function(\\\"return this\\\")() || (1,eval)(\\\"this\\\");\\r\\n} catch(e) {\\r\\n\\t// This works if the window reference is available\\r\\n\\tif(typeof window === \\\"object\\\")\\r\\n\\t\\tg = window;\\r\\n}\\r\\n\\r\\n// g can still be undefined, but nothing to do about it...\\r\\n// We return undefined, instead of nothing here, so it's\\r\\n// easier to handle this case. if(!global) { ...}\\r\\n\\r\\nmodule.exports = g;\\r\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// (webpack)/buildin/global.js\\n// module id = 5\\n// module chunks = 0\",\"let privatesMap\\nconst _ = o => {\\n    if (!privatesMap) {\\n        privatesMap = new WeakMap\\n        let privates = {}\\n        privatesMap.set(o, privates)\\n        return privates\\n    }\\n    else {\\n        let privates = privatesMap.get(o)\\n\\n        if (privates === undefined) {\\n            privates = {}\\n            privatesMap.set(o, privates)\\n        }\\n\\n        return privates\\n    }\\n}\\n\\nexport\\nclass DOMPointReadOnly {\\n    constructor(x,y,z,w) {\\n        if (arguments.length === 1) {\\n            if (!isDOMPointInit(x))\\n                throw new TypeError('Expected an object with x, y, z, and w properties')\\n\\n            _(this).x = x.x\\n            _(this).y = x.y\\n            _(this).z = x.z\\n            _(this).w = x.w\\n        }\\n        else if (arguments.length === 4)  {\\n            _(this).x = x || 0\\n            _(this).y = y || 0\\n            _(this).z = z || 0\\n            _(this).w = w || 0\\n        }\\n        else {\\n            throw new TypeError('Expected 1 or 4 arguments')\\n        }\\n    }\\n\\n    get x() { return _(this).x }\\n    get y() { return _(this).y }\\n    get z() { return _(this).z }\\n    get w() { return _(this).w }\\n\\n    matrixTransform(matrix) {\\n        let result = new this.constructor(this)\\n        // TODO\\n        //const x\\n        //const y\\n        //const z\\n        //const w\\n\\n        return result\\n    }\\n\\n    static fromPoint(other) {\\n        return new this(other)\\n    }\\n}\\n\\nexport\\nclass DOMPoint extends DOMPointReadOnly {\\n    set x(value) { _(this).x = value }\\n    set y(value) { _(this).y = value }\\n    set z(value) { _(this).z = value }\\n    set w(value) { _(this).w = value }\\n}\\n\\nexport default DOMPoint\\n\\nfunction isDOMPointInit(o) {\\n    if (typeof o != 'object') return false\\n\\n    if (\\n        'x' in o &&\\n        'y' in o &&\\n        'z' in o &&\\n        'w' in o\\n    ) return true\\n\\n    return false\\n}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// ./src/DOMPoint.js\"],\"sourceRoot\":\"\"}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\glob\\sync.js:\n   58        var set = self.matches[index] = Object.create(null)\n   59        for (var p in matchset) {\n   60:         try {\n   61            p = self._makeAbs(p)\n   62            var real = rp.realpathSync(p, self.realpathCache)\n   ..\n  248    var lstat\n  249    var stat\n  250:   try {\n  251      lstat = fs.lstatSync(abs)\n  252    } catch (er) {\n  ...\n  285    }\n  286  \n  287:   try {\n  288      return this._readdirEntries(abs, fs.readdirSync(abs))\n  289    } catch (er) {\n  ...\n  444    if (!stat) {\n  445      var lstat\n  446:     try {\n  447        lstat = fs.lstatSync(abs)\n  448      } catch (er) {\n  ...\n  454  \n  455      if (lstat && lstat.isSymbolicLink()) {\n  456:       try {\n  457          stat = fs.statSync(abs)\n  458        } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\glob-stream\\node_modules\\glob\\sync.js:\n   56        var set = self.matches[index] = Object.create(null)\n   57        for (var p in matchset) {\n   58:         try {\n   59            p = self._makeAbs(p)\n   60            var real = fs.realpathSync(p, this.realpathCache)\n   ..\n  237    var lstat\n  238    var stat\n  239:   try {\n  240      lstat = fs.lstatSync(abs)\n  241    } catch (er) {\n  ...\n  272    }\n  273  \n  274:   try {\n  275      return this._readdirEntries(abs, fs.readdirSync(abs))\n  276    } catch (er) {\n  ...\n  421    if (!stat) {\n  422      var lstat\n  423:     try {\n  424        lstat = fs.lstatSync(abs)\n  425      } catch (er) {\n  ...\n  428  \n  429      if (lstat.isSymbolicLink()) {\n  430:       try {\n  431          stat = fs.statSync(abs)\n  432        } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\glob-stream\\node_modules\\minimatch\\browser.js:\n    4  \n    5  var path = { sep: '/' }\n    6: try {\n    7    path = require('path')\n    8  } catch (er) {}\n    .\n  463            // to do safely.  For now, this is safe and works.\n  464            var cs = pattern.substring(classStart + 1, i)\n  465:           try {\n  466              RegExp('[' + cs + ']')\n  467            } catch (er) {\n  ...\n  667    if (this.negate) re = '^(?!' + re + ').*$'\n  668  \n  669:   try {\n  670      this.regexp = new RegExp(re, flags)\n  671    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\glob-stream\\node_modules\\minimatch\\minimatch.js:\n    3  \n    4  var path = { sep: '/' }\n    5: try {\n    6    path = require('path')\n    7  } catch (er) {}\n    .\n  462            // to do safely.  For now, this is safe and works.\n  463            var cs = pattern.substring(classStart + 1, i)\n  464:           try {\n  465              RegExp('[' + cs + ']')\n  466            } catch (er) {\n  ...\n  666    if (this.negate) re = '^(?!' + re + ').*$'\n  667  \n  668:   try {\n  669      this.regexp = new RegExp(re, flags)\n  670    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\global-prefix\\index.js:\n   64  \n   65  function npmPath() {\n   66:   try {\n   67      return fs.realpathSync(require('which').sync('npm'));\n   68    } catch (ex) {\n   ..\n   72  \n   73  function readPrefix(configPath) {\n   74:   try {\n   75      var data = fs.readFileSync(configPath, 'utf-8');\n   76      var config = ini.parse(data);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globby\\index.js:\n   59  \tvar globTasks;\n   60  \n   61: \ttry {\n   62  \t\tglobTasks = generateGlobTasks(patterns, opts);\n   63  \t} catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\lib\\globule.js:\n   91          filepath = path.join(srcBase, filepath);\n   92        }\n   93:       try {\n   94          if (_.isFunction(options.filter)) {\n   95            return options.filter(filepath, options);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\glob\\glob.js:\n  497    if (this.sync) {\n  498      var er, stat\n  499:     try {\n  500        stat = fs.statSync(abs)\n  501      } catch (e) {\n  ...\n  574    if (this.sync) {\n  575      var er, entries\n  576:     try {\n  577        entries = fs.readdirSync(abs)\n  578      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\graceful-fs\\graceful-fs.js:\n  104  \n  105  fs.closeSync = function (fd) {\n  106:   try {\n  107      return fs._originalFs.closeSync.call(fs, fd)\n  108    } finally {\n  ...\n  262      // but still try to close, and report closing errors if they occur.\n  263      var err, err2\n  264:     try {\n  265        var ret = fs.fchmodSync(fd, mode)\n  266      } catch (er) {\n  267        err = er\n  268      }\n  269:     try {\n  270        fs.closeSync(fd)\n  271      } catch (er) {\n  ...\n  299          , ret\n  300  \n  301:       try {\n  302          var ret = fs.futimesSync(fd, at, mt)\n  303        } catch (er) {\n  304          err = er\n  305        }\n  306:       try {\n  307          fs.closeSync(fd)\n  308        } catch (er) {\n  ...\n  354    if (!orig) return orig\n  355    return function (target, uid, gid) {\n  356:     try {\n  357        return orig.call(fs, target, uid, gid)\n  358      } catch (er) {\n  ...\n  430    var eagCounter = 0\n  431    while (true) {\n  432:     try {\n  433        return readSync.call(fs, fd, buffer, offset, length, position)\n  434      } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\graceful-fs\\test\\open.js:\n   27    var start = fs._curOpen\n   28    var er\n   29:   try {\n   30      var fd = fs.openSync('this file does not exist', 'r')\n   31    } catch (x) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.compat.js:\n  191     * a string without a `toString` function.\n  192     */\n  193:   try {\n  194      var noNodeClass = toString.call(document) == objectClass && !({ 'toString': 0 } + '');\n  195    } catch(e) { }\n  ...\n 4752      var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n 4753  \n 4754:     try {\n 4755        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n 4756      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.js:\n 4602      var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n 4603  \n 4604:     try {\n 4605        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n 4606      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\lodash\\dist\\lodash.underscore.js:\n 3919        'return __p\\n}';\n 3920  \n 3921:     try {\n 3922        var result = Function('_', 'return ' + source)(lodash);\n 3923      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\globule\\node_modules\\minimatch\\minimatch.js:\n  806    if (this.negate) re = \"^(?!\" + re + \").*$\"\n  807  \n  808:   try {\n  809      return this.regexp = new RegExp(re, flags)\n  810    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\graceful-fs\\polyfills.js:\n   12    return cwd\n   13  }\n   14: try {\n   15    process.cwd()\n   16  } catch (er) {}\n   ..\n  135      var eagCounter = 0\n  136      while (true) {\n  137:       try {\n  138          return fs$readSync.call(fs, fd, buffer, offset, length, position)\n  139        } catch (er) {\n  ...\n  175      var threw = true\n  176      var ret\n  177:     try {\n  178        ret = fs.fchmodSync(fd, mode)\n  179        threw = false\n  180      } finally {\n  181        if (threw) {\n  182:         try {\n  183            fs.closeSync(fd)\n  184          } catch (er) {}\n  ...\n  211        var ret\n  212        var threw = true\n  213:       try {\n  214          ret = fs.futimesSync(fd, at, mt)\n  215          threw = false\n  216        } finally {\n  217          if (threw) {\n  218:           try {\n  219              fs.closeSync(fd)\n  220            } catch (er) {}\n  ...\n  245    if (!orig) return orig\n  246    return function (target, mode) {\n  247:     try {\n  248        return orig.call(fs, target, mode)\n  249      } catch (er) {\n  ...\n  267    if (!orig) return orig\n  268    return function (target, uid, gid) {\n  269:     try {\n  270        return orig.call(fs, target, uid, gid)\n  271      } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp\\lib\\completion.js:\n    9    }\n   10    var file = path.join(__dirname, '../completion', name);\n   11:   try {\n   12      console.log(fs.readFileSync(file, 'utf8'));\n   13      process.exit(0);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp\\node_modules\\semver\\semver.browser.js:\n  240      return null;\n  241  \n  242:   try {\n  243      return new SemVer(version, loose);\n  244    } catch (er) {\n  ...\n  484    }\n  485  \n  486:   try {\n  487      return new SemVer(version, loose).inc(release, identifier).version;\n  488    } catch (er) {\n  ...\n 1081  exports.satisfies = satisfies;\n 1082  function satisfies(version, range, loose) {\n 1083:   try {\n 1084      range = new Range(range, loose);\n 1085    } catch (er) {\n ....\n 1100  exports.validRange = validRange;\n 1101  function validRange(range, loose) {\n 1102:   try {\n 1103      // Return '*' instead of '' so that truthiness works.\n 1104      // This will throw if it's invalid anyway\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp\\node_modules\\semver\\semver.js:\n  250      return null;\n  251  \n  252:   try {\n  253      return new SemVer(version, loose);\n  254    } catch (er) {\n  ...\n  494    }\n  495  \n  496:   try {\n  497      return new SemVer(version, loose).inc(release, identifier).version;\n  498    } catch (er) {\n  ...\n 1091  exports.satisfies = satisfies;\n 1092  function satisfies(version, range, loose) {\n 1093:   try {\n 1094      range = new Range(range, loose);\n 1095    } catch (er) {\n ....\n 1110  exports.validRange = validRange;\n 1111  function validRange(range, loose) {\n 1112:   try {\n 1113      // Return '*' instead of '' so that truthiness works.\n 1114      // This will throw if it's invalid anyway\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-babel\\index.js:\n   25  \t\t}\n   26  \n   27: \t\ttry {\n   28  \t\t\tconst fileOpts = Object.assign({}, opts, {\n   29  \t\t\t\tfilename: file.path,\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-concat\\node_modules\\clone\\clone.js:\n    7  \n    8  var nativeMap;\n    9: try {\n   10    nativeMap = Map;\n   11  } catch(_) {\n   ..\n   16  \n   17  var nativeSet;\n   18: try {\n   19    nativeSet = Set;\n   20  } catch(_) {\n   ..\n   23  \n   24  var nativePromise;\n   25: try {\n   26    nativePromise = Promise;\n   27  } catch(_) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-file\\node_modules\\lodash.template\\index.js:\n  198      'return __p\\n}';\n  199  \n  200:   try {\n  201      var result = Function(importsKeys, 'return ' + source ).apply(undefined, importsValues);\n  202    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-file\\node_modules\\vinyl\\test\\File.js:\n  475        var val = \"test\";\n  476        var file = new File();\n  477:       try {\n  478          file.contents = val;\n  479        } catch (err) {\n  ...\n  487      it('should error on set', function(done) {\n  488        var file = new File();\n  489:       try {\n  490          file.relative = \"test\";\n  491        } catch (err) {\n  ...\n  499        var file = new File();\n  500        delete file.base;\n  501:       try {\n  502          a = file.relative;\n  503        } catch (err) {\n  ...\n  510        var a;\n  511        var file = new File();\n  512:       try {\n  513          a = file.relative;\n  514        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-sass\\index.js:\n  154        // Sync Sass render\n  155        //////////////////////////////\n  156:       try {\n  157          result = gulpSass.compiler.renderSync(opts);\n  158  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-sourcemaps\\src\\init\\index.internals.js:\n   58              sourceContent = sources.content;\n   59            } else { //attempt load content from file\n   60:             try {\n   61                debug(function() { return 'No source content for \"' + source + '\". Loading from file.'; });\n   62                sourceContent = stripBom(fs.readFileSync(absPath, 'utf8'));\n   ..\n  111      sources.path = path.dirname(mapFile);\n  112  \n  113:     try {\n  114        sources.map = JSON.parse(stripBom(fs.readFileSync(mapFile, 'utf8')));\n  115      } catch (e) {} //should we really swallow this error?\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-sourcemaps\\src\\write\\index.internals.js:\n   78          if (!sourceMap.sourcesContent[i]) {\n   79            var sourcePath = path.resolve(file.base, sourceMap.sources[i]);\n   80:           try {\n   81              debug('No source content for \"' + sourceMap.sources[i] + '\". Loading from file.');\n   82              sourceMap.sourcesContent[i] = stripBom(fs.readFileSync(sourcePath, 'utf8'));\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-spawn\\node_modules\\lodash.template\\index.js:\n  198      'return __p\\n}';\n  199  \n  200:   try {\n  201      var result = Function(importsKeys, 'return ' + source ).apply(undefined, importsValues);\n  202    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-spawn\\node_modules\\vinyl\\test\\File.js:\n  475        var val = \"test\";\n  476        var file = new File();\n  477:       try {\n  478          file.contents = val;\n  479        } catch (err) {\n  ...\n  487      it('should error on set', function(done) {\n  488        var file = new File();\n  489:       try {\n  490          file.relative = \"test\";\n  491        } catch (err) {\n  ...\n  499        var file = new File();\n  500        delete file.base;\n  501:       try {\n  502          a = file.relative;\n  503        } catch (err) {\n  ...\n  510        var a;\n  511        var file = new File();\n  512:       try {\n  513          a = file.relative;\n  514        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-svg2ttf\\src\\index.js:\n   21  \n   22      // Use the buffered content\n   23:     try {\n   24        buf = Buffer.from(svg2ttf(String(buf), {\n   25          ts: options.timestamp,\n   ..\n   84      // Buffers\n   85      if(file.isBuffer()) {\n   86:       try {\n   87          file.contents = Buffer.from(svg2ttf(String(file.contents), {\n   88            ts: options.timestamp,\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-ttf2eot\\src\\index.js:\n   20  \n   21      // Use the buffered content\n   22:     try {\n   23        buf = new Buffer(ttf2eot(new Uint8Array(buf)).buffer);\n   24        return cb(null, buf);\n   ..\n   73      // Buffers\n   74      if(file.isBuffer()) {\n   75:       try {\n   76          file.contents = new Buffer(ttf2eot(\n   77            new Uint8Array(file.contents)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-ttf2woff\\src\\index.js:\n   20  \n   21      // Use the buffered content\n   22:       try {\n   23          buf = new Buffer(ttf2woff(new Uint8Array(buf)).buffer);\n   24          cb(null, buf);\n   ..\n   71      // Buffers\n   72      if(file.isBuffer()) {\n   73:       try {\n   74          file.contents = new Buffer(ttf2woff(\n   75            new Uint8Array(file.contents)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-ttf2woff2\\src\\index.js:\n   20  \n   21      // Use the buffered content\n   22:     try {\n   23        buf = ttf2woff2(buf);\n   24        return cb(null, buf);\n   ..\n   73      // Buffers\n   74      if(file.isBuffer()) {\n   75:       try {\n   76          file.contents = ttf2woff2(file.contents);\n   77        } catch(err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-typescript\\node_modules\\glob\\sync.js:\n   56        var set = self.matches[index] = Object.create(null)\n   57        for (var p in matchset) {\n   58:         try {\n   59            p = self._makeAbs(p)\n   60            var real = fs.realpathSync(p, self.realpathCache)\n   ..\n  237    var lstat\n  238    var stat\n  239:   try {\n  240      lstat = fs.lstatSync(abs)\n  241    } catch (er) {\n  ...\n  272    }\n  273  \n  274:   try {\n  275      return this._readdirEntries(abs, fs.readdirSync(abs))\n  276    } catch (er) {\n  ...\n  424    if (!stat) {\n  425      var lstat\n  426:     try {\n  427        lstat = fs.lstatSync(abs)\n  428      } catch (er) {\n  ...\n  431  \n  432      if (lstat.isSymbolicLink()) {\n  433:       try {\n  434          stat = fs.statSync(abs)\n  435        } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-typescript\\node_modules\\gulp-sourcemaps\\index.js:\n   56          sourcePath = path.dirname(mapFile);\n   57  \n   58:         try {\n   59            sourceMap = JSON.parse(stripBom(fs.readFileSync(mapFile, 'utf8')));\n   60          } catch(e) {}\n   ..\n   88              // else load content from file\n   89              } else {\n   90:               try {\n   91                  if (options.debug)\n   92                    console.log(PLUGIN_NAME + '-init: No source content for \"' + source + '\". Loading from file.');\n   ..\n  178          if (!sourceMap.sourcesContent[i]) {\n  179            var sourcePath = path.resolve(sourceMap.sourceRoot || file.base, sourceMap.sources[i]);\n  180:           try {\n  181              if (options.debug)\n  182                console.log(PLUGIN_NAME + '-write: No source content for \"' + sourceMap.sources[i] + '\". Loading from file.');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-typescript\\release\\main.js:\n   35      if (typescript)\n   36          return typescript;\n   37:     try {\n   38          return require('typescript');\n   39      }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\gulp-uglify\\composer.js:\n    7      var minifier = minify(uglify, logger)(opts);\n    8      return through.obj(function(file, encoding, callback) {\n    9:       try {\n   10          var newFile = minifier(file);\n   11          callback(null, newFile);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\has-cors\\index.js:\n    8   */\n    9  \n   10: try {\n   11    module.exports = typeof XMLHttpRequest !== 'undefined' &&\n   12      'withCredentials' in new XMLHttpRequest();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\hawk\\lib\\browser.js:\n  480      setNtpOffset: function (offset) {\n  481  \n  482:         try {\n  483              hawk.utils.storage.setItem('hawk_ntp_offset', offset);\n  484          }\n  ...\n  619  // http://code.google.com/p/crypto-js/wiki/License\n  620  \n  621: var CryptoJS = CryptoJS || function (h, r) { var k = {}, l = k.lib = {}, n = function () { }, f = l.Base = { extend: function (a) { n.prototype = this; var b = new n; a && b.mixIn(a); b.hasOwnProperty(\"init\") || (b.init = function () { b.$super.init.apply(this, arguments) }); b.init.prototype = b; b.$super = this; return b }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var b in a) a.hasOwnProperty(b) && (this[b] = a[b]); a.hasOwnProperty(\"toString\") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } }, j = l.WordArray = f.extend({ init: function (a, b) { a = this.words = a || []; this.sigBytes = b != r ? b : 4 * a.length }, toString: function (a) { return (a || s).stringify(this) }, concat: function (a) { var b = this.words, d = a.words, c = this.sigBytes; a = a.sigBytes; this.clamp(); if (c % 4) for (var e = 0; e < a; e++) b[c + e >>> 2] |= (d[e >>> 2] >>> 24 - 8 * (e % 4) & 255) << 24 - 8 * ((c + e) % 4); else if (65535 < d.length) for (e = 0; e < a; e += 4) b[c + e >>> 2] = d[e >>> 2]; else b.push.apply(b, d); this.sigBytes += a; return this }, clamp: function () { var a = this.words, b = this.sigBytes; a[b >>> 2] &= 4294967295 << 32 - 8 * (b % 4); a.length = h.ceil(b / 4) }, clone: function () { var a = f.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var b = [], d = 0; d < a; d += 4) b.push(4294967296 * h.random() | 0); return new j.init(b, a) } }), m = k.enc = {}, s = m.Hex = { stringify: function (a) { var b = a.words; a = a.sigBytes; for (var d = [], c = 0; c < a; c++) { var e = b[c >>> 2] >>> 24 - 8 * (c % 4) & 255; d.push((e >>> 4).toString(16)); d.push((e & 15).toString(16)) } return d.join(\"\") }, parse: function (a) { for (var b = a.length, d = [], c = 0; c < b; c += 2) d[c >>> 3] |= parseInt(a.substr(c, 2), 16) << 24 - 4 * (c % 8); return new j.init(d, b / 2) } }, p = m.Latin1 = { stringify: function (a) { var b = a.words; a = a.sigBytes; for (var d = [], c = 0; c < a; c++) d.push(String.fromCharCode(b[c >>> 2] >>> 24 - 8 * (c % 4) & 255)); return d.join(\"\") }, parse: function (a) { for (var b = a.length, d = [], c = 0; c < b; c++) d[c >>> 2] |= (a.charCodeAt(c) & 255) << 24 - 8 * (c % 4); return new j.init(d, b) } }, t = m.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(p.stringify(a))) } catch (b) { throw Error(\"Malformed UTF-8 data\"); } }, parse: function (a) { return p.parse(unescape(encodeURIComponent(a))) } }, q = l.BufferedBlockAlgorithm = f.extend({ reset: function () { this._data = new j.init; this._nDataBytes = 0 }, _append: function (a) { \"string\" == typeof a && (a = t.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var b = this._data, d = b.words, c = b.sigBytes, e = this.blockSize, f = c / (4 * e), f = a ? h.ceil(f) : h.max((f | 0) - this._minBufferSize, 0); a = f * e; c = h.min(4 * a, c); if (a) { for (var g = 0; g < a; g += e) this._doProcessBlock(d, g); g = d.splice(0, a); b.sigBytes -= c } return new j.init(g, c) }, clone: function () { var a = f.clone.call(this); a._data = this._data.clone(); return a }, _minBufferSize: 0 }); l.Hasher = q.extend({ cfg: f.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, d) { return (new a.init(d)).finalize(b) } }, _createHmacHelper: function (a) { return function (b, d) { return (new u.HMAC.init(a, d)).finalize(b) } } }); var u = k.algo = {}; return k }(Math);\n  622  (function () { var k = CryptoJS, b = k.lib, m = b.WordArray, l = b.Hasher, d = [], b = k.algo.SHA1 = l.extend({ _doReset: function () { this._hash = new m.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]) }, _doProcessBlock: function (n, p) { for (var a = this._hash.words, e = a[0], f = a[1], h = a[2], j = a[3], b = a[4], c = 0; 80 > c; c++) { if (16 > c) d[c] = n[p + c] | 0; else { var g = d[c - 3] ^ d[c - 8] ^ d[c - 14] ^ d[c - 16]; d[c] = g << 1 | g >>> 31 } g = (e << 5 | e >>> 27) + b + d[c]; g = 20 > c ? g + ((f & h | ~f & j) + 1518500249) : 40 > c ? g + ((f ^ h ^ j) + 1859775393) : 60 > c ? g + ((f & h | f & j | h & j) - 1894007588) : g + ((f ^ h ^ j) - 899497514); b = j; j = h; h = f << 30 | f >>> 2; f = e; e = g } a[0] = a[0] + e | 0; a[1] = a[1] + f | 0; a[2] = a[2] + h | 0; a[3] = a[3] + j | 0; a[4] = a[4] + b | 0 }, _doFinalize: function () { var b = this._data, d = b.words, a = 8 * this._nDataBytes, e = 8 * b.sigBytes; d[e >>> 5] |= 128 << 24 - e % 32; d[(e + 64 >>> 9 << 4) + 14] = Math.floor(a / 4294967296); d[(e + 64 >>> 9 << 4) + 15] = a; b.sigBytes = 4 * d.length; this._process(); return this._hash }, clone: function () { var b = l.clone.call(this); b._hash = this._hash.clone(); return b } }); k.SHA1 = l._createHelper(b); k.HmacSHA1 = l._createHmacHelper(b) })();\n  623  (function (k) { for (var g = CryptoJS, h = g.lib, v = h.WordArray, j = h.Hasher, h = g.algo, s = [], t = [], u = function (q) { return 4294967296 * (q - (q | 0)) | 0 }, l = 2, b = 0; 64 > b;) { var d; a: { d = l; for (var w = k.sqrt(d), r = 2; r <= w; r++) if (!(d % r)) { d = !1; break a } d = !0 } d && (8 > b && (s[b] = u(k.pow(l, 0.5))), t[b] = u(k.pow(l, 1 / 3)), b++); l++ } var n = [], h = h.SHA256 = j.extend({ _doReset: function () { this._hash = new v.init(s.slice(0)) }, _doProcessBlock: function (q, h) { for (var a = this._hash.words, c = a[0], d = a[1], b = a[2], k = a[3], f = a[4], g = a[5], j = a[6], l = a[7], e = 0; 64 > e; e++) { if (16 > e) n[e] = q[h + e] | 0; else { var m = n[e - 15], p = n[e - 2]; n[e] = ((m << 25 | m >>> 7) ^ (m << 14 | m >>> 18) ^ m >>> 3) + n[e - 7] + ((p << 15 | p >>> 17) ^ (p << 13 | p >>> 19) ^ p >>> 10) + n[e - 16] } m = l + ((f << 26 | f >>> 6) ^ (f << 21 | f >>> 11) ^ (f << 7 | f >>> 25)) + (f & g ^ ~f & j) + t[e] + n[e]; p = ((c << 30 | c >>> 2) ^ (c << 19 | c >>> 13) ^ (c << 10 | c >>> 22)) + (c & d ^ c & b ^ d & b); l = j; j = g; g = f; f = k + m | 0; k = b; b = d; d = c; c = m + p | 0 } a[0] = a[0] + c | 0; a[1] = a[1] + d | 0; a[2] = a[2] + b | 0; a[3] = a[3] + k | 0; a[4] = a[4] + f | 0; a[5] = a[5] + g | 0; a[6] = a[6] + j | 0; a[7] = a[7] + l | 0 }, _doFinalize: function () { var d = this._data, b = d.words, a = 8 * this._nDataBytes, c = 8 * d.sigBytes; b[c >>> 5] |= 128 << 24 - c % 32; b[(c + 64 >>> 9 << 4) + 14] = k.floor(a / 4294967296); b[(c + 64 >>> 9 << 4) + 15] = a; d.sigBytes = 4 * b.length; this._process(); return this._hash }, clone: function () { var b = j.clone.call(this); b._hash = this._hash.clone(); return b } }); g.SHA256 = j._createHelper(h); g.HmacSHA256 = j._createHmacHelper(h) })(Math);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\hoek\\lib\\index.js:\n  806      }\n  807  \n  808:     try {\n  809          var buf = new Buffer(value, 'base64');\n  810          return (encoding === 'buffer' ? buf : buf.toString(encoding || 'binary'));\n  ...\n  972  exports.stringify = function () {\n  973  \n  974:     try {\n  975          return JSON.stringify.apply(null, arguments);\n  976      }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\hoek\\test\\index.js:\n 1871          };\n 1872  \n 1873:         try {\n 1874              fn();\n 1875          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\homedir-polyfill\\index.js:\n   72  \n   73  function tryReadFileSync(fp) {\n   74:   try {\n   75      return fs.readFileSync(fp, 'utf8');\n   76    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\hosted-git-info\\index.js:\n   44    var shortcutMatch = url.match(new RegExp('^([^:]+):(?:(?:[^@:]+(?:[^@]+)?@)?([^/]*))[/](.+?)(?:[.]git)?($|#)'))\n   45    var matches = Object.keys(gitHosts).map(function (gitHostName) {\n   46:     try {\n   47        var gitHostInfo = gitHosts[gitHostName]\n   48        var auth = null\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\http-signature\\lib\\parser.js:\n  238      // Check the algorithm against the official list\n  239      parsed.params.algorithm = parsed.params.algorithm.toLowerCase();\n  240:     try {\n  241        validateAlgorithm(parsed.params.algorithm);\n  242      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\http-signature\\lib\\signer.js:\n  183          return;\n  184        }\n  185:       try {\n  186          assert.object(sig, 'signature');\n  187          assert.string(sig.keyId, 'signature.keyId');\n  ...\n  203  \n  204    } else {\n  205:     try {\n  206        var sigObj = this.rs_signer.sign();\n  207      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ie8\\build\\ie8.max.js:\n   41        for(var key in descriptors) {\n   42          if (hasOwnProperty.call(descriptors, key)) {\n   43:           try {\n   44              defineProperty(object, key, descriptors[key]);\n   45            } catch(o_O) {\n   ..\n  404              if(possiblyNativeEvent.test(type)) {\n  405                // do this heavy thing\n  406:               try {\n  407                  // TODO:  should I consider tagName too so that\n  408                  //        INPUT[ontype] could be different ?\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\immutable\\contrib\\cursor\\index.js:\n  267  \n  268  function defineRecordProperties(cursor, value) {\n  269:   try {\n  270      value._keys.forEach(setProp.bind(undefined, cursor));\n  271    } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\immutable\\dist\\immutable.js:\n 1165    // True if Object.defineProperty works as expected. IE8 fails this test.\n 1166    var canDefineProperty = (function() {\n 1167:     try {\n 1168        Object.defineProperty({}, '@', {});\n 1169        return true;\n ....\n 3770  \n 3771    function setProps(prototype, names) {\n 3772:     try {\n 3773        names.forEach(setProp.bind(undefined, prototype));\n 3774      } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\impetus\\dist\\impetus.js:\n  466          var passiveSupported = false;\n  467  \n  468:         try {\n  469              var options = Object.defineProperty({}, \"passive\", {\n  470                  get: function get() {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\impetus\\src\\Impetus.js:\n  453      let passiveSupported = false;\n  454  \n  455:     try {\n  456          var options = Object.defineProperty({}, \"passive\", {\n  457              get: function() {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\in-publish\\index.js:\n    1  'use strict'\n    2  function inCommand (cmd) {\n    3:   try {\n    4      var npm_config_argv = JSON.parse(process.env['npm_config_argv'])\n    5    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\inflight\\inflight.js:\n   27      // choice is likely as surprising as the other.\n   28      // As it happens, we do go ahead and schedule it for later execution.\n   29:     try {\n   30        for (var i = 0; i < len; i++) {\n   31          cbs[i].apply(null, args)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\inherits\\inherits.js:\n    1: try {\n    2    var util = require('util');\n    3    if (typeof util.inherits !== 'function') throw '';\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ini\\ini.js:\n  164        val = val.substr(1, val.length - 2)\n  165      }\n  166:     try { val = JSON.parse(val) } catch (_) {}\n  167    } else {\n  168      // walk the val to find the first not-escaped ; character\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\is-directory\\index.js:\n   46    }\n   47  \n   48:   try {\n   49      var stat = fs.statSync(filepath);\n   50      return stat.isDirectory();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\is-my-json-valid\\index.js:\n   21    ptr = ptr.replace(/\\/$/, '')\n   22  \n   23:   try {\n   24      return jsonpointer.get(obj, decodeURI(ptr))\n   25    } catch (err) {\n   ..\n   35          other = additionalSchemas[ext]\n   36          var fragment = ptr.slice(end).replace(/^#/, '')\n   37:         try {\n   38            return jsonpointer.get(other, fragment)\n   39          } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\isexe\\index.js:\n   46  function sync (path, options) {\n   47    // my kingdom for a filtered catch\n   48:   try {\n   49      return core.sync(path, options || {})\n   50    } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-base64\\base64.js:\n   24      var buffer;\n   25      if (typeof module !== 'undefined' && module.exports) {\n   26:         try {\n   27              buffer = require('buffer').Buffer;\n   28          } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-base64\\base64.js.bak:\n   24      var buffer;\n   25      if (typeof module !== 'undefined' && module.exports) {\n   26:         try {\n   27              buffer = require('buffer').Buffer;\n   28          } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-base64\\base64_utf8:\n   15      var buffer;\n   16      if (typeof module !== 'undefined' && module.exports) {\n   17:         try {\n   18              buffer = require('buffer').Buffer;\n   19          } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-base64\\base64_utf8.bak:\n   15      var buffer;\n   16      if (typeof module !== 'undefined' && module.exports) {\n   17:         try {\n   18              buffer = require('buffer').Buffer;\n   19          } catch (err) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-yaml\\README.md:\n   85  \n   86  // Get document, or throw exception on error\n   87: try {\n   88    var doc = yaml.safeLoad(fs.readFileSync('/home/ixti/example.yml', 'utf8'));\n   89    console.log(doc);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-yaml\\bin\\js-yaml.js:\n   99    }\n  100  \n  101:   try {\n  102      output = JSON.parse(input);\n  103      isYaml = false;\n  104    } catch (err) {\n  105      if (err instanceof SyntaxError) {\n  106:       try {\n  107          output = [];\n  108          yaml.loadAll(input, function (doc) { output.push(doc); }, {});\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-yaml\\dist\\js-yaml.js:\n 2919  var NodeBuffer;\n 2920  \n 2921: try {\n 2922    // A trick for browserified version, to not include `Buffer` shim\n 2923    var _require = require;\n ....\n 3375  //    found too - then fail to parse.\n 3376  //\n 3377: try {\n 3378    // workaround to exclude package from browserify list.\n 3379    var _require = require;\n ....\n 3389    if (data === null) return false;\n 3390  \n 3391:   try {\n 3392      var source = '(' + data + ')',\n 3393          ast    = esprima.parse(source, { range: true });\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-yaml\\lib\\js-yaml\\type\\binary.js:\n    5  var NodeBuffer;\n    6  \n    7: try {\n    8    // A trick for browserified version, to not include `Buffer` shim\n    9    var _require = require;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\js-yaml\\lib\\js-yaml\\type\\js\\function.js:\n   10  //    found too - then fail to parse.\n   11  //\n   12: try {\n   13    // workaround to exclude package from browserify list.\n   14    var _require = require;\n   ..\n   24    if (data === null) return false;\n   25  \n   26:   try {\n   27      var source = '(' + data + ')',\n   28          ast    = esprima.parse(source, { range: true });\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\jsesc\\bin\\jsesc:\n   96  \t\t\t// Process string(s)\n   97  \t\t\tvar result;\n   98: \t\t\ttry {\n   99  \t\t\t\tif (isObject) {\n  100  \t\t\t\t\tstring = JSON.parse(string);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\json-stable-stringify\\test\\nested.js:\n   13      var two = { a: 2, one: one };\n   14      one.two = two;\n   15:     try {\n   16      \tstringify(one);\n   17      } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\json-stringify-safe\\test\\stringify_test.js:\n  204      var err\n  205      function identity(key, value) { return value }\n  206:     try { stringify(obj, null, 2, identity) } catch (ex) { err = ex }\n  207      err.must.be.an.instanceof(TypeError)\n  208    })\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\json3\\lib\\json3.js:\n   54      // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n   55      var isExtended = new Date(-3509827334573292);\n   56:     try {\n   57        // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n   58        // results for certain dates in Opera >= 10.53.\n   ..\n   90                return 1;\n   91              }).toJSON = value;\n   92:             try {\n   93                stringifySupported =\n   94                  // Firefox 3.1b1 and b2 serialize string, number, and boolean\n   ..\n  154            var parse = exports.parse;\n  155            if (typeof parse == \"function\") {\n  156:             try {\n  157                // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n  158                // Conforming implementations should also coerce the initial argument to\n  ...\n  163                  var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n  164                  if (parseSupported) {\n  165:                   try {\n  166                      // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n  167                      parseSupported = !parse('\"\\t\"');\n  168                    } catch (exception) {}\n  169                    if (parseSupported) {\n  170:                     try {\n  171                        // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n  172                        // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n  ...\n  176                    }\n  177                    if (parseSupported) {\n  178:                     try {\n  179                        // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n  180                        // points. These environments, along with FF 3.1b1 and 2,\n  ...\n  388          var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n  389            var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n  390:           try {\n  391              // Necessary for host object support.\n  392              value = object[property];\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\jsonfile\\index.js:\n    1  var _fs\n    2: try {\n    3    _fs = require('graceful-fs')\n    4  } catch (_) {\n    .\n   33  \n   34      var obj\n   35:     try {\n   36        obj = JSON.parse(data, options ? options.reviver : null)\n   37      } catch (err2) {\n   ..\n   64    }\n   65  \n   66:   try {\n   67      var content = fs.readFileSync(file, options)\n   68      content = stripBom(content)\n   ..\n   92  \n   93    var str = ''\n   94:   try {\n   95      str = JSON.stringify(obj, options ? options.replacer : null, spaces) + '\\n'\n   96    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\liftoff\\index.js:\n   27  \n   28  Liftoff.prototype.requireLocal = function (module, basedir) {\n   29:   try {\n   30      var result = require(resolve.sync(module, {basedir: basedir}));\n   31      this.emit('require', module, result);\n   ..\n   91    // locate local module and package next to config or explicitly provided cwd\n   92    var modulePath, modulePackage;\n   93:   try {\n   94      var delim = (process.platform === 'win32' ? ';' : ':'),\n   95          paths = (process.env.NODE_PATH ? process.env.NODE_PATH.split(delim) : []);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\liftoff\\lib\\silent_require.js:\n    1  module.exports = function (path) {\n    2:   try {\n    3      return require(path);\n    4    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\localtunnel\\node_modules\\debug\\src\\browser.js:\n   62  \n   63  exports.formatters.j = function(v) {\n   64:   try {\n   65      return JSON.stringify(v);\n   66    } catch (err) {\n   ..\n  132  \n  133  function save(namespaces) {\n  134:   try {\n  135      if (null == namespaces) {\n  136        exports.storage.removeItem('debug');\n  ...\n  150  function load() {\n  151    var r;\n  152:   try {\n  153      r = exports.storage.debug;\n  154    } catch(e) {}\n  ...\n  180  \n  181  function localstorage() {\n  182:   try {\n  183      return window.localStorage;\n  184    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\localtunnel\\node_modules\\yargs\\index.js:\n  446        var args = null\n  447  \n  448:       try {\n  449          args = parseArgs(processArgs)\n  450        } catch (err) {\n  ...\n  555      if (!detectLocale) return\n  556  \n  557:     try {\n  558        var osLocale = require('os-locale')\n  559        self.locale(osLocale.sync({ spawn: false }))\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\localtunnel\\node_modules\\yargs\\lib\\parser.js:\n  334        var configPath = argv[configKey] || configLookup[configKey]\n  335        if (configPath) {\n  336:         try {\n  337            var config = require(path.resolve(process.cwd(), configPath))\n  338  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\localtunnel\\node_modules\\yargs\\lib\\validation.js:\n  166    self.customChecks = function (argv, aliases) {\n  167      checks.forEach(function (f) {\n  168:       try {\n  169          var result = f(argv, aliases)\n  170          if (!result) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash\\_defineProperty.js:\n    2  \n    3  var defineProperty = (function() {\n    4:   try {\n    5      var func = getNative(Object, 'defineProperty');\n    6      func({}, '', {});\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash\\_getRawTag.js:\n   28        tag = value[symToStringTag];\n   29  \n   30:   try {\n   31      value[symToStringTag] = undefined;\n   32      var unmasked = true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash\\_nodeUtil.js:\n   15  /** Used to access faster Node.js helpers. */\n   16  var nodeUtil = (function() {\n   17:   try {\n   18      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n   19    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash\\_toSource.js:\n   14  function toSource(func) {\n   15    if (func != null) {\n   16:     try {\n   17        return funcToString.call(func);\n   18      } catch (e) {}\n   19:     try {\n   20        return (func + '');\n   21      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash\\attempt.js:\n   26   */\n   27  var attempt = baseRest(function(func, args) {\n   28:   try {\n   29      return apply(func, undefined, args);\n   30    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash\\lodash.js:\n  437    /** Used to access faster Node.js helpers. */\n  438    var nodeUtil = (function() {\n  439:     try {\n  440        return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  441      } catch (e) {}\n  ...\n 1495  \n 1496      var defineProperty = (function() {\n 1497:       try {\n 1498          var func = getNative(Object, 'defineProperty');\n 1499          func({}, '', {});\n ....\n 6025            tag = value[symToStringTag];\n 6026  \n 6027:       try {\n 6028          value[symToStringTag] = undefined;\n 6029          var unmasked = true;\n ....\n 6785      function toSource(func) {\n 6786        if (func != null) {\n 6787:         try {\n 6788            return funcToString.call(func);\n 6789          } catch (e) {}\n 6790:         try {\n 6791            return (func + '');\n 6792          } catch (e) {}\n ....\n 15224       */\n 15225      var attempt = baseRest(function(func, args) {\n 15226:       try {\n 15227          return apply(func, undefined, args);\n 15228        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.clonedeep\\index.js:\n  232    var result = false;\n  233    if (value != null && typeof value.toString != 'function') {\n  234:     try {\n  235        result = !!(value + '');\n  236      } catch (e) {}\n  ...\n 1368  function toSource(func) {\n 1369    if (func != null) {\n 1370:     try {\n 1371        return funcToString.call(func);\n 1372      } catch (e) {}\n 1373:     try {\n 1374        return (func + '');\n 1375      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.isequal\\index.js:\n  106  /** Used to access faster Node.js helpers. */\n  107  var nodeUtil = (function() {\n  108:   try {\n  109      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  110    } catch (e) {}\n  ...\n 1326        tag = value[symToStringTag];\n 1327  \n 1328:   try {\n 1329      value[symToStringTag] = undefined;\n 1330      var unmasked = true;\n ....\n 1466  function toSource(func) {\n 1467    if (func != null) {\n 1468:     try {\n 1469        return funcToString.call(func);\n 1470      } catch (e) {}\n 1471:     try {\n 1472        return (func + '');\n 1473      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.isplainobject\\index.js:\n   23    var result = false;\n   24    if (value != null && typeof value.toString != 'function') {\n   25:     try {\n   26        result = !!(value + '');\n   27      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.mapvalues\\index.js:\n  115  /** Used to access faster Node.js helpers. */\n  116  var nodeUtil = (function() {\n  117:   try {\n  118      return freeProcess && freeProcess.binding('util');\n  119    } catch (e) {}\n  ...\n  214    var result = false;\n  215    if (value != null && typeof value.toString != 'function') {\n  216:     try {\n  217        result = !!(value + '');\n  218      } catch (e) {}\n  ...\n 1703  function toSource(func) {\n 1704    if (func != null) {\n 1705:     try {\n 1706        return funcToString.call(func);\n 1707      } catch (e) {}\n 1708:     try {\n 1709        return (func + '');\n 1710      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.memoize\\index.js:\n   60    var result = false;\n   61    if (value != null && typeof value.toString != 'function') {\n   62:     try {\n   63        result = !!(value + '');\n   64      } catch (e) {}\n   ..\n  507  function toSource(func) {\n  508    if (func != null) {\n  509:     try {\n  510        return funcToString.call(func);\n  511      } catch (e) {}\n  512:     try {\n  513        return (func + '');\n  514      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.mergewith\\index.js:\n  117  /** Used to access faster Node.js helpers. */\n  118  var nodeUtil = (function() {\n  119:   try {\n  120      return freeProcess && freeProcess.binding('util');\n  121    } catch (e) {}\n  ...\n  294    var result = false;\n  295    if (value != null && typeof value.toString != 'function') {\n  296:     try {\n  297        result = !!(value + '');\n  298      } catch (e) {}\n  ...\n 1698  function toSource(func) {\n 1699    if (func != null) {\n 1700:     try {\n 1701        return funcToString.call(func);\n 1702      } catch (e) {}\n 1703:     try {\n 1704        return (func + '');\n 1705      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.template\\index.js:\n  380   */\n  381  var attempt = restParam(function(func, args) {\n  382:   try {\n  383      return func.apply(undefined, args);\n  384    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\lodash.uniq\\index.js:\n  168    var result = false;\n  169    if (value != null && typeof value.toString != 'function') {\n  170:     try {\n  171        result = !!(value + '');\n  172      } catch (e) {}\n  ...\n  755  function toSource(func) {\n  756    if (func != null) {\n  757:     try {\n  758        return funcToString.call(func);\n  759      } catch (e) {}\n  760:     try {\n  761        return (func + '');\n  762      } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\make-error\\index.js:\n   82      })\n   83    }\n   84:   try {\n   85      var f = function () {}\n   86      setFunctionName(f, 'foo')\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\make-error\\README.md:\n   63  //-----\n   64  \n   65: try {\n   66    throw new CustomError(42)\n   67  } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\memoizee\\ext\\async.js:\n   31  \t\treturn base.apply(currentContext = this, currentArgs = args);\n   32  \t}, base);\n   33: \ttry {\n   34  \t\tmixin(conf.memoized, base);\n   35  \t} catch (ignore) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\micromatch\\index.js:\n  342    var re;\n  343  \n  344:   try {\n  345      re = new RegExp(glob, flags);\n  346      return re;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\minimatch\\minimatch.js:\n    3  \n    4  var path = { sep: '/' }\n    5: try {\n    6    path = require('path')\n    7  } catch (er) {}\n    .\n  464            // to do safely.  For now, this is safe and works.\n  465            var cs = pattern.substring(classStart + 1, i)\n  466:           try {\n  467              RegExp('[' + cs + ']')\n  468            } catch (er) {\n  ...\n  619  \n  620    var flags = options.nocase ? 'i' : ''\n  621:   try {\n  622      var regExp = new RegExp('^' + re + '$', flags)\n  623    } catch (er) {\n  ...\n  677    if (this.negate) re = '^(?!' + re + ').*$'\n  678  \n  679:   try {\n  680      this.regexp = new RegExp(re, flags)\n  681    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\mkdirp\\index.js:\n   68      p = path.resolve(p);\n   69  \n   70:     try {\n   71          xfs.mkdirSync(p, mode);\n   72          made = made || p;\n   ..\n   84              default:\n   85                  var stat;\n   86:                 try {\n   87                      stat = xfs.statSync(p);\n   88                  }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\mkdirp\\test\\sync.js:\n   15      var file = '/tmp/' + [x,y,z].join('/');\n   16  \n   17:     try {\n   18          mkdirp.sync(file, _0755);\n   19      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\mkdirp\\test\\umask_sync.js:\n   15      var file = '/tmp/' + [x,y,z].join('/');\n   16  \n   17:     try {\n   18          mkdirp.sync(file);\n   19      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\natives\\index.js:\n    9  var runInThisContext, ContextifyScript, Script\n   10  /*istanbul ignore next*/\n   11: try {\n   12    ContextifyScript = process.binding('contextify').ContextifyScript;\n   13    runInThisContext = function runInThisContext(code, options) {\n   ..\n   91    cache[id] = nm\n   92    var fn\n   93:   try {\n   94      /* istanbul ignore else */\n   95      if (ContextifyScript) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\bin\\node-gyp.js:\n   59  if (dir) {\n   60    var fs = require('fs')\n   61:   try {\n   62      var stat = fs.statSync(dir)\n   63      if (stat.isDirectory()) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\lib\\configure.js:\n  351    for (var next = 0; next < candidates.length; next++) {\n  352       var candidate = path.resolve(dir, candidates[next])\n  353:      try {\n  354         var fd = fs.openSync(candidate, 'r')\n  355       } catch (e) {\n  ...\n  462        var range = semver.Range('>=2.5.0 <3.0.0')\n  463        var valid = false\n  464:       try {\n  465          valid = range.test(version)\n  466        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\lib\\find-vs2017.js:\n   22  \n   23      var vsSetup\n   24:     try {\n   25        vsSetup = JSON.parse(stdout)\n   26      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\lib\\install.js:\n  182        }\n  183  \n  184:       try {\n  185          var req = download(gyp, process.env, release.tarballUrl)\n  186        } catch (e) {\n  ...\n  278  \n  279          log.verbose('checksum url', release.shasumsUrl)\n  280:         try {\n  281            var req = download(gyp, process.env, release.shasumsUrl)\n  282          } catch (e) {\n  ...\n  329            log.verbose('streaming 32-bit ' + release.name + '.lib to:', libPath32)\n  330  \n  331:           try {\n  332              var req = download(gyp, process.env, release.libUrl32, cb)\n  333            } catch (e) {\n  ...\n  359            log.verbose('streaming 64-bit ' + release.name + '.lib to:', libPath64)\n  360  \n  361:           try {\n  362              var req = download(gyp, process.env, release.libUrl64, cb)\n  363            } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\node_modules\\semver\\semver.js:\n  248      return null;\n  249  \n  250:   try {\n  251      return new SemVer(version, loose);\n  252    } catch (er) {\n  ...\n  489    }\n  490  \n  491:   try {\n  492      return new SemVer(version, loose).inc(release, identifier).version;\n  493    } catch (er) {\n  ...\n 1078  exports.satisfies = satisfies;\n 1079  function satisfies(version, range, loose) {\n 1080:   try {\n 1081      range = new Range(range, loose);\n 1082    } catch (er) {\n ....\n 1106  exports.validRange = validRange;\n 1107  function validRange(range, loose) {\n 1108:   try {\n 1109      // Return '*' instead of '' so that truthiness works.\n 1110      // This will throw if it's invalid anyway\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\test\\test-addon.js:\n   17      t.strictEqual(err, null)\n   18      t.strictEqual(lastLine, 'gyp info ok', 'should end in ok')\n   19:     try {\n   20        var binding = require('hello_world')\n   21        t.strictEqual(binding.hello(), 'world')\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-gyp\\test\\test-download.js:\n   88      opts: { cafile: 'no.such.file' },\n   89    }\n   90:   try {\n   91      install.test.download(gyp, {}, 'http://bad/')\n   92    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\bin\\node-sass:\n  116  function isDirectory(filePath) {\n  117    var isDir = false;\n  118:   try {\n  119      var absolutePath = path.resolve(filePath);\n  120      isDir = fs.statSync(absolutePath).isDirectory();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\lib\\extensions.js:\n  278    }\n  279  \n  280:   try {\n  281      return trueCasePathSync(binaryPath) || binaryPath;\n  282    } catch (e) {\n  ...\n  317      cachePath = path.join(cachePathCandidates[i], pkg.name, pkg.version);\n  318  \n  319:     try {\n  320        mkdir.sync(cachePath);\n  321        return cachePath;\n  ...\n  395    }\n  396  \n  397:   try {\n  398      contents = fs.readFileSync(process.execPath);\n  399  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\lib\\index.js:\n  225  \n  226  function tryCallback(callback, args) {\n  227:   try {\n  228      return callback.apply(this, args);\n  229    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\gaze\\lib\\gaze.js:\n  138        var files;\n  139  \n  140:       try {\n  141          files = fs.readdirSync(filepath);\n  142        } catch (e) {\n  ...\n  301    var self = this;\n  302    var timeoutId;\n  303:   try {\n  304      this._watchers[dir] = fs.watch(dir, function (event) {\n  305        // race condition. Let's give the fs a little time to settle down. so we\n  ...\n  345        done(null, file);\n  346      };\n  347:     try {\n  348        fs.watchFile(file, opts, this._pollers[file]);\n  349      } catch (err) {\n  ...\n  383          if (!current) { return; }\n  384  \n  385:         try {\n  386            // append path.sep to directories so they match previous.\n  387            current = current.map(function (curPath) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\globule\\lib\\globule.js:\n  108          filepath = normalizePath(path.join(srcBase, filepath));\n  109        }\n  110:       try {\n  111          if (_.isFunction(options.filter)) {\n  112            return options.filter(filepath, options);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\qs\\dist\\qs.js:\n  484  \n  485  exports.decode = function (str) {\n  486:     try {\n  487          return decodeURIComponent(str.replace(/\\+/g, ' '));\n  488      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\qs\\lib\\utils.js:\n   79  \n   80  exports.decode = function (str) {\n   81:     try {\n   82          return decodeURIComponent(str.replace(/\\+/g, ' '));\n   83      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\request\\request.js:\n  741    delete reqOptions.timeout\n  742  \n  743:   try {\n  744      self.req = self.httpModule.request(reqOptions)\n  745    } catch (err) {\n  ...\n  897    var addCookie = function (cookie) {\n  898      //set the cookie if it's domain in the href's domain.\n  899:     try {\n  900        targetCookieJar.setCookie(cookie, self.uri.href, {ignoreError: true})\n  901      } catch (e) {\n  ...\n 1069  \n 1070      if (self._json) {\n 1071:       try {\n 1072          response.body = JSON.parse(response.body, self._jsonReviver)\n 1073        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\request\\lib\\har.js:\n   99  \n  100      if (data.postData.text) {\n  101:       try {\n  102          data.postData.jsonObj = JSON.parse(data.postData.text)\n  103        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\node_modules\\request\\lib\\helpers.js:\n   19  function safeStringify (obj, replacer) {\n   20    var ret\n   21:   try {\n   22      ret = JSON.stringify(obj, replacer)\n   23    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\scripts\\build.js:\n  135    console.log('Testing binary');\n  136  \n  137:   try {\n  138      require('../').renderSync({\n  139        data: 's { a: ss }'\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\scripts\\install.js:\n   51    console.log('Downloading binary from', url);\n   52  \n   53:   try {\n   54      request(url, downloadOptions(), function(err, response) {\n   55        if (err) {\n   ..\n  108    }\n  109  \n  110:   try {\n  111      mkdir.sync(path.dirname(binaryPath));\n  112    } catch (err) {\n  ...\n  134        console.log('Caching binary to', cachedBinary);\n  135  \n  136:       try {\n  137          mkdir.sync(path.dirname(cachedBinary));\n  138          fs.createReadStream(binaryPath)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\src\\ast.cpp:\n 1886      // maybe convert to other unit\n 1887      // easier implemented on its own\n 1888:     try { convert(prefered, strict); }\n 1889      catch (incompatibleUnits& err)\n 1890      { error(err.what(), pstate()); }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\src\\eval.cpp:\n  689  \n  690      // see if it's a relational expression\n  691:     try {\n  692        switch(op_type) {\n  693          case Sass_OP::EQ:  return SASS_MEMORY_NEW(Boolean, b->pstate(), eq(lhs, rhs));\n  ...\n  712      // ToDo: then catch and re-throw them\n  713      Expression_Obj rv = 0;\n  714:     try {\n  715        ParserState pstate(b->pstate());\n  716        if (l_type == Expression::NUMBER && r_type == Expression::NUMBER) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\src\\functions.cpp:\n   87      inline void handle_utf8_error (const ParserState& pstate, Backtrace* backtrace)\n   88      {\n   89:       try {\n   90         throw;\n   91        }\n   ..\n  917      {\n  918        size_t len = std::string::npos;\n  919:       try {\n  920          String_Constant_Ptr s = ARG(\"$string\", String_Constant);\n  921          len = UTF_8::code_point_count(s->value(), 0, s->value().size());\n  ...\n  933      {\n  934        std::string str;\n  935:       try {\n  936          String_Constant_Ptr s = ARG(\"$string\", String_Constant);\n  937          str = s->value();\n  ...\n  979      {\n  980        size_t index = std::string::npos;\n  981:       try {\n  982          String_Constant_Ptr s = ARG(\"$string\", String_Constant);\n  983          String_Constant_Ptr t = ARG(\"$substring\", String_Constant);\n  ...\n 1004      {\n 1005        std::string newstr;\n 1006:       try {\n 1007          String_Constant_Ptr s = ARG(\"$string\", String_Constant);\n 1008          double start_at = ARG(\"$start-at\", Number)->value();\n ....\n 1476        Map_Obj m = ARGM(\"$map\", Map, ctx);\n 1477        Expression_Obj v = ARG(\"$key\", Expression);\n 1478:       try {\n 1479          Expression_Obj val = m->at(v);\n 1480          return val ? val.detach() : SASS_MEMORY_NEW(Null, pstate);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\src\\json.cpp:\n  400    sb_init(&sb);\n  401  \n  402:   try {\n  403      emit_string(&sb, str);\n  404    }\n  ...\n  416    sb_init(&sb);\n  417  \n  418:   try {\n  419      if (space != NULL)\n  420        emit_value_indented(&sb, node, space, 0);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\src\\sass_context.cpp:\n   30  \n   31    static int handle_error(Sass_Context* c_ctx) {\n   32:     try {\n   33        throw;\n   34      }\n   ..\n  100        json_append_member(json_err, \"message\", json_mkstring(e.what()));\n  101        json_append_member(json_err, \"formatted\", json_mkstream(msg_stream));\n  102:       try { c_ctx->error_json = json_stringify(json_err, \"  \"); }\n  103        catch (...) {}\n  104        c_ctx->error_message = sass_copy_string(msg_stream.str());\n  ...\n  120        json_append_member(json_err, \"message\", json_mkstring(ba.what()));\n  121        json_append_member(json_err, \"formatted\", json_mkstream(msg_stream));\n  122:       try { c_ctx->error_json = json_stringify(json_err, \"  \"); }\n  123        catch (...) {}\n  124        c_ctx->error_message = sass_copy_string(msg_stream.str());\n  ...\n  136        json_append_member(json_err, \"message\", json_mkstring(e.what()));\n  137        json_append_member(json_err, \"formatted\", json_mkstream(msg_stream));\n  138:       try { c_ctx->error_json = json_stringify(json_err, \"  \"); }\n  139        catch (...) {}\n  140        c_ctx->error_message = sass_copy_string(msg_stream.str());\n  ...\n  152        json_append_member(json_err, \"message\", json_mkstring(e.c_str()));\n  153        json_append_member(json_err, \"formatted\", json_mkstream(msg_stream));\n  154:       try { c_ctx->error_json = json_stringify(json_err, \"  \"); }\n  155        catch (...) {}\n  156        c_ctx->error_message = sass_copy_string(msg_stream.str());\n  ...\n  168        json_append_member(json_err, \"message\", json_mkstring(e));\n  169        json_append_member(json_err, \"formatted\", json_mkstream(msg_stream));\n  170:       try { c_ctx->error_json = json_stringify(json_err, \"  \"); }\n  171        catch (...) {}\n  172        c_ctx->error_message = sass_copy_string(msg_stream.str());\n  ...\n  183        json_append_member(json_err, \"status\", json_mknumber(5));\n  184        json_append_member(json_err, \"message\", json_mkstring(\"unknown\"));\n  185:       try { c_ctx->error_json = json_stringify(json_err, \"  \"); }\n  186        catch (...) {}\n  187        c_ctx->error_message = sass_copy_string(msg_stream.str());\n  ...\n  198    // this can happen with invalid utf8 and json lib\n  199    static int handle_errors(Sass_Context* c_ctx) {\n  200:     try { return handle_error(c_ctx); }\n  201      catch (...) { return handle_error(c_ctx); }\n  202      return c_ctx->error_status;\n  ...\n  215      compiler->state = SASS_COMPILER_PARSED;\n  216  \n  217:     try {\n  218  \n  219        // get input/output path from options\n  ...\n  292    static Sass_Compiler* sass_prepare_context (Sass_Context* c_ctx, Context* cpp_ctx) throw()\n  293    {\n  294:     try {\n  295        // register our custom functions\n  296        if (c_ctx->c_functions) {\n  ...\n  359      Sass_Compiler* compiler = sass_prepare_context(c_ctx, cpp_ctx);\n  360  \n  361:     try {\n  362        // call each compiler step\n  363        sass_compiler_parse(compiler);\n  ...\n  394      ctx->type = SASS_CONTEXT_FILE;\n  395      init_options(ctx);\n  396:     try {\n  397        if (input_path == 0) { throw(std::runtime_error(\"File context created without an input path\")); }\n  398        if (*input_path == 0) { throw(std::runtime_error(\"File context created with empty input path\")); }\n  ...\n  410      ctx->type = SASS_CONTEXT_DATA;\n  411      init_options(ctx);\n  412:     try {\n  413        if (source_string == 0) { throw(std::runtime_error(\"Data context created without a source string\")); }\n  414        if (*source_string == 0) { throw(std::runtime_error(\"Data context created with empty source string\")); }\n  ...\n  439      if (data_ctx->error_status)\n  440        return data_ctx->error_status;\n  441:     try {\n  442        if (data_ctx->source_string == 0) { throw(std::runtime_error(\"Data context has no source string\")); }\n  443        // empty source string is a valid case, even if not really usefull (different than with file context)\n  ...\n  454      if (file_ctx->error_status)\n  455        return file_ctx->error_status;\n  456:     try {\n  457        if (file_ctx->input_path == 0) { throw(std::runtime_error(\"File context has no input path\")); }\n  458        if (*file_ctx->input_path == 0) { throw(std::runtime_error(\"File context has empty input path\")); }\n  ...\n  492      Block_Obj root = compiler->root;\n  493      // compile the parsed root block\n  494:     try { compiler->c_ctx->output_string = cpp_ctx->render(root); }\n  495      // pass catched errors to generic error handler\n  496      catch (...) { return handle_errors(compiler->c_ctx) | 1; }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\src\\sass_values.cpp:\n  290      Sass::Value_Ptr rv = 0;\n  291  \n  292:     try {\n  293  \n  294        Value_Obj lhs = sass_value_to_ast_node(a);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\node-sass\\src\\libsass\\test\\test_subset_map.cpp:\n  169    //assert_raises(ArgumentError) {@ssm[Set[]] = \"Fail\"}\n  170    std::vector<std::string> s1;\n  171:   try {\n  172      ssm.put(s1, \"Fail\");\n  173    }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\nouislider\\distribute\\nouislider.js:\n  167  \t\tvar supportsPassive = false;\n  168  \n  169: \t\ttry {\n  170  \n  171  \t\t\tvar opts = Object.defineProperty({}, 'passive', {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\nouislider\\src\\js\\constants.js:\n   27  \t\tvar supportsPassive = false;\n   28  \n   29: \t\ttry {\n   30  \n   31  \t\t\tvar opts = Object.defineProperty({}, 'passive', {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\object-assign\\index.js:\n   20  \n   21  function shouldUseNative() {\n   22: \ttry {\n   23  \t\tif (!Object.assign) {\n   24  \t\t\treturn false;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\orchestrator\\index.js:\n  112  \t\t}\n  113  \t\tseq = [];\n  114: \t\ttry {\n  115  \t\t\tthis.sequence(this.tasks, names, seq, []);\n  116  \t\t} catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\orchestrator\\lib\\runTask.js:\n   30  \t};\n   31  \n   32: \ttry {\n   33  \t\tstart = process.hrtime();\n   34  \t\tr = task(cb);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ordered-read-streams\\test\\main.js:\n   15      var writable = { readable: false };\n   16  \n   17:     try {\n   18        new OrderedStreams(writable);\n   19      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\os-locale\\index.js:\n   97  \t\tvar stdout;\n   98  \n   99: \t\ttry {\n  100  \t\t\tstdout = execFileSync('wmic', ['os', 'get', 'locale'], {encoding: 'utf8'});\n  101  \t\t} catch (err) {\n  ...\n  110  \tvar res;\n  111  \n  112: \ttry {\n  113  \t\tres = parseLocale(execFileSync('locale', {encoding: 'utf8'}));\n  114  \t} catch (err) {}\n  115  \n  116  \tif (!res && process.platform === 'darwin') {\n  117: \t\ttry {\n  118  \t\t\tcache = execFileSync('defaults', ['read', '-g', 'AppleLocale'], {encoding: 'utf8'}).trim() || fallback();\n  119  \t\t\treturn cache;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pako\\README.md:\n  101  var compressed = new Uint8Array();\n  102  //... fill data to uncompress here\n  103: try {\n  104    var result = pako.inflate(compressed);\n  105  } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pako\\dist\\pako.js:\n  772   *   , output;\n  773   *\n  774:  * try {\n  775   *   output = pako.inflate(input);\n  776   * } catch (err)\n  ...\n  944  var STR_APPLY_UIA_OK = true;\n  945  \n  946: try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\n  947: try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n  948  \n  949  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pako\\dist\\pako_deflate.js:\n  122  var STR_APPLY_UIA_OK = true;\n  123  \n  124: try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\n  125: try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n  126  \n  127  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pako\\dist\\pako_inflate.js:\n  122  var STR_APPLY_UIA_OK = true;\n  123  \n  124: try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\n  125: try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n  126  \n  127  \n  ...\n 3241   *   , output;\n 3242   *\n 3243:  * try {\n 3244   *   output = pako.inflate(input);\n 3245   * } catch (err)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pako\\lib\\inflate.js:\n  369   *   , output;\n  370   *\n  371:  * try {\n  372   *   output = pako.inflate(input);\n  373   * } catch (err)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pako\\lib\\utils\\strings.js:\n   14  var STR_APPLY_UIA_OK = true;\n   15  \n   16: try { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\n   17: try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n   18  \n   19  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\parse-json\\index.js:\n   13  \t}\n   14  \n   15: \ttry {\n   16: \t\ttry {\n   17  \t\t\treturn JSON.parse(x, reviver);\n   18  \t\t} catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\parse-json\\readme.md:\n   44  \n   45  // you can also add the filename at a later point\n   46: try {\n   47  \tparseJson(json);\n   48  } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\parse-json\\vendor\\parse.js:\n  722    }\n  723  \n  724:   try {\n  725      return parse(input, options)\n  726    } catch(err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\path-exists\\index.js:\n   16  \tvar fn = typeof fs.accessSync === 'function' ? fs.accessSync : fs.statSync;\n   17  \n   18: \ttry {\n   19  \t\tfn(fp);\n   20  \t\treturn true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\path-parse\\test.js:\n   56  function checkErrors(parse) {\n   57    errors.forEach(function(errorCase) {\n   58:     try {\n   59        parse(errorCase.input);\n   60      } catch(err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\pinkie\\index.js:\n   41  \t}\n   42  \n   43: \ttry {\n   44  \t\tresolver(resolvePromise, rejectPromise);\n   45  \t} catch (e) {\n   ..\n   57  \tif (typeof callback === 'function') {\n   58  \t\tsettled = FULFILLED;\n   59: \t\ttry {\n   60  \t\t\tvalue = callback(value);\n   61  \t\t} catch (e) {\n   ..\n   78  \tvar resolved;\n   79  \n   80: \ttry {\n   81  \t\tif (promise === value) {\n   82  \t\t\tthrow new TypeError('A promises callback cannot return that same promise.');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\portscanner\\node_modules\\async\\README.md:\n  330    fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n  331      if (err) return callback(err);\n  332:     try {\n  333        configs[key] = JSON.parse(data);\n  334      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\portscanner\\node_modules\\async\\dist\\async.js:\n 1230              var callback = args.pop();\n 1231              var result;\n 1232:             try {\n 1233                  result = func.apply(this, args);\n 1234              } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\portscanner\\node_modules\\async\\lib\\async.js:\n 1230              var callback = args.pop();\n 1231              var result;\n 1232:             try {\n 1233                  result = func.apply(this, args);\n 1234              } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   34   * @example\n   35   * // Catching and checking syntax error\n   36:  * try {\n   37   *   postcss.parse('a{')\n   38   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss\\lib\\lazy-result.js:\n   63              if (parser.parse) parser = parser.parse;\n   64  \n   65:             try {\n   66                  root = parser(css, opts);\n   67              } catch (error) {\n   ..\n  152  \n  153      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  154:         try {\n  155              this.error = error;\n  156              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  181          }\n  182  \n  183:         try {\n  184              var plugin = this.processor.plugins[this.plugin];\n  185              var promise = this.run(plugin);\n  ...\n  267          this.result.lastPlugin = plugin;\n  268  \n  269:         try {\n  270              return plugin(this.result.root, this.result);\n  271          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss\\lib\\parse.js:\n   21      var input = new _input2.default(css, opts);\n   22      var parser = new _parser2.default(input);\n   23:     try {\n   24          parser.parse();\n   25      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-calc\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-calc\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-calc\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-colormin\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-colormin\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-colormin\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-convert-values\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-convert-values\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-convert-values\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-comments\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-comments\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-comments\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-duplicates\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-duplicates\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-duplicates\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-empty\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-empty\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-empty\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-overridden\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-overridden\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-overridden\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-unused\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-unused\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-discard-unused\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-filter-plugins\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-filter-plugins\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-filter-plugins\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-load-plugins\\lib\\plugins.js:\n   41      var load = function (plugin, options) {\n   42        if (options === null || Object.keys(options).length === 0) {\n   43:         try {\n   44            return require(plugin)\n   45          } catch (err) {\n   ..\n   49          }\n   50        } else {\n   51:         try {\n   52            return require(plugin)(options)\n   53          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-idents\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-idents\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-idents\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-longhand\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-longhand\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-longhand\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-rules\\node_modules\\browserslist\\cli.js:\n   25  \n   26  function query(queries, opts) {\n   27:     try {\n   28          return browserslist(queries, opts);\n   29      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-rules\\node_modules\\browserslist\\index.js:\n  176      if ( stats ) {\n  177          if ( typeof stats === 'string' ) {\n  178:             try {\n  179                  stats = JSON.parse(fs.readFileSync(stats));\n  180              } catch (e) {\n  ...\n  338          var pkgBrowserslist;\n  339          if ( isFile(pkg) ) {\n  340:             try {\n  341                  pkgBrowserslist = parsePackage(pkg);\n  342              } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-rules\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-rules\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-merge-rules\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-message-helpers\\index.js:\n   50   */\n   51  function tryCatch(fn, source) {\n   52:   try {\n   53      return fn()\n   54    }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-font-values\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-font-values\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-font-values\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-gradients\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-gradients\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-gradients\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-params\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-params\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-params\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-selectors\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-selectors\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-minify-selectors\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-normalize-charset\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-normalize-charset\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-normalize-charset\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-normalize-url\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-normalize-url\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-normalize-url\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-ordered-values\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-ordered-values\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-ordered-values\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-idents\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-idents\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-idents\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-initial\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-initial\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-initial\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-transforms\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-transforms\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-reduce-transforms\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-svgo\\dist\\index.js:\n   40              isUriEncoded = void 0;\n   41  \n   42:         try {\n   43              decodedUri = (0, _url.decode)(value);\n   44              isUriEncoded = decodedUri !== value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-svgo\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-svgo\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-svgo\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-unique-selectors\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-unique-selectors\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-unique-selectors\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-zindex\\node_modules\\postcss\\lib\\css-syntax-error.js:\n   40   * @example\n   41   * // Catching and checking syntax error\n   42:  * try {\n   43   *   postcss.parse('a{')\n   44   * } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-zindex\\node_modules\\postcss\\lib\\lazy-result.js:\n   67              if (parser.parse) parser = parser.parse;\n   68  \n   69:             try {\n   70                  root = parser(css, opts);\n   71              } catch (error) {\n   ..\n  156  \n  157      LazyResult.prototype.handleError = function handleError(error, plugin) {\n  158:         try {\n  159              this.error = error;\n  160              if (error.name === 'CssSyntaxError' && !error.plugin) {\n  ...\n  185          }\n  186  \n  187:         try {\n  188              var plugin = this.processor.plugins[this.plugin];\n  189              var promise = this.run(plugin);\n  ...\n  271          this.result.lastPlugin = plugin;\n  272  \n  273:         try {\n  274              return plugin(this.result.root, this.result);\n  275          } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\postcss-zindex\\node_modules\\postcss\\lib\\parse.js:\n   22  \n   23      var parser = new _parser2.default(input);\n   24:     try {\n   25          parser.tokenize();\n   26          parser.loop();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\private\\private.js:\n    6  \n    7  function defProp(obj, name, value) {\n    8:   if (originalDefProp) try {\n    9      originalDefProp.call(originalObject, obj, name, { value: value });\n   10    } catch (definePropertyIsBrokenInIE8) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\q\\q.js:\n   81  \n   82  var hasStacks = false;\n   83: try {\n   84      throw new Error();\n   85  } catch (e) {\n   ..\n  134      // runs a single function in the async queue\n  135      function runSingle(task, domain) {\n  136:         try {\n  137              task();\n  138  \n  ...\n  461      }\n  462  \n  463:     try {\n  464          throw new Error();\n  465      } catch (e) {\n  ...\n  593  \n  594      if (Q.longStackSupport && hasStacks) {\n  595:         try {\n  596              throw new Error();\n  597          } catch (e) {\n  ...\n  699      }\n  700      var deferred = defer();\n  701:     try {\n  702          resolver(deferred.resolve, deferred.reject, deferred.notify);\n  703      } catch (reason) {\n  ...\n  804      promise.promiseDispatch = function (resolve, op, args) {\n  805          var result;\n  806:         try {\n  807              if (descriptor[op]) {\n  808                  result = descriptor[op].apply(promise, args);\n  ...\n  851  \n  852      function _fulfilled(value) {\n  853:         try {\n  854              return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n  855          } catch (exception) {\n  ...\n  861          if (typeof rejected === \"function\") {\n  862              makeStackTraceLong(exception, self);\n  863:             try {\n  864                  return rejected(exception);\n  865              } catch (newException) {\n  ...\n  896          var newValue;\n  897          var threw = false;\n  898:         try {\n  899              newValue = _progressed(value);\n  900          } catch (e) {\n  ...\n 1201      var deferred = defer();\n 1202      Q.nextTick(function () {\n 1203:         try {\n 1204              promise.then(deferred.resolve, deferred.reject, deferred.notify);\n 1205          } catch (exception) {\n ....\n 1295              if (typeof StopIteration === \"undefined\") {\n 1296                  // ES6 Generators\n 1297:                 try {\n 1298                      result = generator[verb](arg);\n 1299                  } catch (exception) {\n ....\n 1308                  // SpiderMonkey Generators\n 1309                  // FIXME: Remove this case when SM does ES6 generators.\n 1310:                 try {\n 1311                      result = generator[verb](arg);\n 1312                  } catch (exception) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\qs\\dist\\qs.js:\n  379  \n  380  exports.decode = function (str) {\n  381:     try {\n  382          return decodeURIComponent(str.replace(/\\+/g, ' '));\n  383      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\qs\\lib\\utils.js:\n   60  \n   61  exports.decode = function (str) {\n   62:     try {\n   63          return decodeURIComponent(str.replace(/\\+/g, ' '));\n   64      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\readable-stream\\lib\\_stream_writable.js:\n  209  \n  210  (function () {\n  211:   try {\n  212      Object.defineProperty(WritableState.prototype, 'buffer', {\n  213        get: internalUtil.deprecate(function () {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\readdirp\\readdirp.js:\n  268  \n  269    // Validate and normalize filters\n  270:   try {\n  271      opts.fileFilter = normalizeFilter(opts.fileFilter);\n  272      opts.directoryFilter = normalizeFilter(opts.directoryFilter);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rechoir\\lib\\register.js:\n    3  \n    4  module.exports = function (cwd, moduleName, register) {\n    5:   try {\n    6      var modulePath = resolve.sync(moduleName, {basedir: cwd});\n    7      var result = require(modulePath);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\reduce-css-calc\\index.js:\n   76      var result\n   77  \n   78:     try {\n   79        result = mexp.eval(toEvaluate)\n   80      }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\reduce-function-call\\README.md:\n   36  \n   37  reduceFunctionCall(\"math(math(2 + 2) * 4 + math(2 + 2)) and other things\", \"math\", function(body, functionIdentifier, call) {\n   38:   try {\n   39      return eval(body)\n   40    }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\regenerator-runtime\\runtime-module.js:\n   28  } else {\n   29    // Remove the global property added by runtime.js.\n   30:   try {\n   31      delete g.regeneratorRuntime;\n   32    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\regenerator-runtime\\runtime.js:\n   59    // has a stable shape and so hopefully should be cheap to allocate.\n   60    function tryCatch(fn, obj, arg) {\n   61:     try {\n   62        return { type: \"normal\", arg: fn.call(obj, arg) };\n   63      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\regenerator-transform\\lib\\leap.js:\n  146    _assert2.default.ok(entry instanceof Entry);\n  147    this.entryStack.push(entry);\n  148:   try {\n  149      callback.call(this.emitter);\n  150    } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\regenerator-transform\\src\\leap.js:\n  136    assert.ok(entry instanceof Entry);\n  137    this.entryStack.push(entry);\n  138:   try {\n  139      callback.call(this.emitter);\n  140    } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\regjsparser\\bin\\parser:\n   24      regexes.forEach(function(snippet) {\n   25        var result;\n   26:       try {\n   27          result = parse(snippet);\n   28          log(jsesc(result, {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\regjsparser\\node_modules\\jsesc\\bin\\jsesc:\n   86  \t\t\t// Process string(s)\n   87  \t\t\tvar result;\n   88: \t\t\ttry {\n   89  \t\t\t\tif (isObject) {\n   90  \t\t\t\t\tstring = JSON.parse(string);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\request\\request.js:\n  752    delete reqOptions.timeout\n  753  \n  754:   try {\n  755      self.req = self.httpModule.request(reqOptions)\n  756    } catch (err) {\n  ...\n  976    var addCookie = function (cookie) {\n  977      //set the cookie if it's domain in the href's domain.\n  978:     try {\n  979        targetCookieJar.setCookie(cookie, self.uri.href, {ignoreError: true})\n  980      } catch (e) {\n  ...\n 1159  \n 1160      if (self._json) {\n 1161:       try {\n 1162          response.body = JSON.parse(response.body, self._jsonReviver)\n 1163        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\request\\lib\\har.js:\n   99  \n  100      if (data.postData.text) {\n  101:       try {\n  102          data.postData.jsonObj = JSON.parse(data.postData.text)\n  103        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\request\\lib\\helpers.js:\n   20  function safeStringify (obj, replacer) {\n   21    var ret\n   22:   try {\n   23      ret = JSON.stringify(obj, replacer)\n   24    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\request\\node_modules\\qs\\dist\\qs.js:\n  491  \n  492  exports.decode = function (str) {\n  493:     try {\n  494          return decodeURIComponent(str.replace(/\\+/g, ' '));\n  495      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\request\\node_modules\\qs\\lib\\utils.js:\n   79  \n   80  exports.decode = function (str) {\n   81:     try {\n   82          return decodeURIComponent(str.replace(/\\+/g, ' '));\n   83      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\resolve\\readme.markdown:\n  136      readFileSync: fs.readFileSync,\n  137      isFile: function (file) {\n  138:         try { return fs.statSync(file).isFile() }\n  139          catch (e) { return false }\n  140      },\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\resolve\\lib\\async.js:\n  122              readFile(pkgfile, function (err, body) {\n  123                  if (err) cb(err);\n  124:                 try { var pkg = JSON.parse(body); } catch (jsonErr) {}\n  125  \n  126                  if (pkg && opts.packageFilter) {\n  ...\n  147              readFile(pkgfile, function (err, body) {\n  148                  if (err) return cb(err);\n  149:                 try {\n  150                      var pkg = JSON.parse(body);\n  151                  } catch (jsonErr) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\resolve\\lib\\node-modules-paths.js:\n   13  \n   14      if (opts && opts.preserveSymlinks === false) {\n   15:         try {\n   16              absoluteStart = fs.realpathSync(absoluteStart);\n   17          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\resolve\\lib\\sync.js:\n   11      var opts = options || {};\n   12      var isFile = opts.isFile || function (file) {\n   13:         try {\n   14              var stat = fs.statSync(file);\n   15          } catch (e) {\n   ..\n   58          var pkgfile = path.join(x, '/package.json');\n   59          if (isFile(pkgfile)) {\n   60:             try {\n   61                  var body = readFileSync(pkgfile, 'UTF8');\n   62                  var pkg = JSON.parse(body);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\resolve\\test\\resolver_sync.js:\n  183      var fs = require('fs');\n  184      var statSync = fs.statSync;\n  185:     try {\n  186          fs.statSync = function () {\n  187              throw new EvalError('Unknown Error');\n  ...\n  236          st.throws(run, 'throws an error');\n  237  \n  238:         try {\n  239              run();\n  240          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\resolve\\test\\symlinks.js:\n    5  \n    6  var symlinkDir = path.join(__dirname, 'resolver', 'symlinked', 'symlink');\n    7: try {\n    8      fs.unlinkSync(symlinkDir);\n    9  } catch (err) {}\n   10: try {\n   11      fs.symlinkSync('./_/symlink_target', symlinkDir, 'dir');\n   12  } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rimraf\\rimraf.js:\n  188      assert(er instanceof Error)\n  189  \n  190:   try {\n  191      options.chmodSync(p, _0666)\n  192    } catch (er2) {\n  ...\n  197    }\n  198  \n  199:   try {\n  200      var stats = options.statSync(p)\n  201    } catch (er3) {\n  ...\n  274      results = [p]\n  275    } else {\n  276:     try {\n  277        options.lstatSync(p)\n  278        results = [p]\n  ...\n  288      var p = results[i]\n  289  \n  290:     try {\n  291        var st = options.lstatSync(p)\n  292      } catch (er) {\n  ...\n  299      }\n  300  \n  301:     try {\n  302        // sunos lets the root user unlink directories, which is... weird.\n  303        if (st && st.isDirectory())\n  ...\n  324      assert(originalEr instanceof Error)\n  325  \n  326:   try {\n  327      options.rmdirSync(p)\n  328    } catch (er) {\n  ...\n  353    do {\n  354      var threw = true\n  355:     try {\n  356        var ret = options.rmdirSync(p, options)\n  357        threw = false\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\contributing.md:\n   68        function (x) {\n   69          var noYield = true;\n   70:         try {\n   71            noYield = callback.call(thisArg, x, i++, source);\n   72          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.aggregates.js:\n   59    function tryCatcherGen(tryCatchTarget) {\n   60      return function tryCatcher() {\n   61:       try {\n   62          return tryCatchTarget.apply(this, arguments);\n   63        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.all.compat.js:\n   62    function tryCatcherGen(tryCatchTarget) {\n   63      return function tryCatcher() {\n   64:       try {\n   65          return tryCatchTarget.apply(this, arguments);\n   66        } catch (e) {\n   ..\n  144      if (!hasStacks) { return; }\n  145  \n  146:     try {\n  147        throw new Error();\n  148      } catch (e) {\n  ...\n  400            e.bubbledKeyCode = e.keyCode;\n  401            if (e.ctrlKey) {\n  402:             try {\n  403                e.keyCode = 0;\n  404              } catch (e) { }\n  ...\n  475        var typeListeners = listeners[type] = listeners[type] || [];\n  476  \n  477:       try {\n  478          return target.fireEvent('on' + type, e);\n  479        } catch (err) {\n  ...\n  500        params = params || { bubbles: false, cancelable: false, detail: undefined };\n  501  \n  502:       try {\n  503          if (document.createEvent) {\n  504            event = document.createEvent('CustomEvent');\n  ...\n  778  \n  779  var isHostObject = (function() {\n  780:   try {\n  781      Object({ 'toString': 0 } + '');\n  782    } catch(e) {\n  ...\n 5570          function (x) {\n 5571            var result;\n 5572:           try {\n 5573              result = onNextFunc(x, index++);\n 5574            } catch (e) {\n ....\n 5581          function (err) {\n 5582            var result;\n 5583:           try {\n 5584              result = onErrorFunc(err);\n 5585            } catch (e) {\n ....\n 5593          function () {\n 5594            var result;\n 5595:           try {\n 5596              result = onCompletedFunc();\n 5597            } catch (e) {\n ....\n 5936          function (x) {\n 5937            var result;\n 5938:           try {\n 5939              result = onNext.call(thisArg, x, index++);\n 5940            } catch (e) {\n ....\n 5947          function (err) {\n 5948            var result;\n 5949:           try {\n 5950              result = onError.call(thisArg, err);\n 5951            } catch (e) {\n ....\n 5959          function () {\n 5960            var result;\n 5961:           try {\n 5962              result = onCompleted.call(thisArg);\n 5963            } catch (e) {\n ....\n 7697        scheduler.schedule(null, function () {\n 7698          var result;\n 7699:         try {\n 7700            result = func.apply(context, args);\n 7701          } catch (e) {\n ....\n 9031        function createWindowClose () {\n 9032          var windowClose;\n 9033:         try {\n 9034            windowClose = windowClosingSelector();\n 9035          } catch (e) {\n ....\n 9776          function (x) { o.onCompleted(); }\n 9777        );\n 9778:       try {\n 9779          for (var i = 0, len = plans.length; i < len; i++) {\n 9780            activePlans.push(plans[i].activate(externalSubscriptions, outObserver, function (activePlan) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.all.js:\n   60    function tryCatcherGen(tryCatchTarget) {\n   61      return function tryCatcher() {\n   62:       try {\n   63          return tryCatchTarget.apply(this, arguments);\n   64        } catch (e) {\n   ..\n  142      if (!hasStacks) { return; }\n  143  \n  144:     try {\n  145        throw new Error();\n  146      } catch (e) {\n  ...\n  427  \n  428  var isHostObject = (function() {\n  429:   try {\n  430      Object({ 'toString': 0 } + '');\n  431    } catch(e) {\n  ...\n 5308          function (x) {\n 5309            var result;\n 5310:           try {\n 5311              result = onNextFunc(x, index++);\n 5312            } catch (e) {\n ....\n 5319          function (err) {\n 5320            var result;\n 5321:           try {\n 5322              result = onErrorFunc(err);\n 5323            } catch (e) {\n ....\n 5331          function () {\n 5332            var result;\n 5333:           try {\n 5334              result = onCompletedFunc();\n 5335            } catch (e) {\n ....\n 5674          function (x) {\n 5675            var result;\n 5676:           try {\n 5677              result = onNext.call(thisArg, x, index++);\n 5678            } catch (e) {\n ....\n 5685          function (err) {\n 5686            var result;\n 5687:           try {\n 5688              result = onError.call(thisArg, err);\n 5689            } catch (e) {\n ....\n 5697          function () {\n 5698            var result;\n 5699:           try {\n 5700              result = onCompleted.call(thisArg);\n 5701            } catch (e) {\n ....\n 7435        scheduler.schedule(null, function () {\n 7436          var result;\n 7437:         try {\n 7438            result = func.apply(context, args);\n 7439          } catch (e) {\n ....\n 8769        function createWindowClose () {\n 8770          var windowClose;\n 8771:         try {\n 8772            windowClose = windowClosingSelector();\n 8773          } catch (e) {\n ....\n 9514          function (x) { o.onCompleted(); }\n 9515        );\n 9516:       try {\n 9517          for (var i = 0, len = plans.length; i < len; i++) {\n 9518            activePlans.push(plans[i].activate(externalSubscriptions, outObserver, function (activePlan) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.async.compat.js:\n   55    function tryCatcherGen(tryCatchTarget) {\n   56      return function tryCatcher() {\n   57:       try {\n   58          return tryCatchTarget.apply(this, arguments);\n   59        } catch (e) {\n   ..\n  249        scheduler.schedule(null, function () {\n  250          var result;\n  251:         try {\n  252            result = func.apply(context, args);\n  253          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.async.js:\n   55    function tryCatcherGen(tryCatchTarget) {\n   56      return function tryCatcher() {\n   57:       try {\n   58          return tryCatchTarget.apply(this, arguments);\n   59        } catch (e) {\n   ..\n  249        scheduler.schedule(null, function () {\n  250          var result;\n  251:         try {\n  252            result = func.apply(context, args);\n  253          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.backpressure.js:\n   58    function tryCatcherGen(tryCatchTarget) {\n   59      return function tryCatcher() {\n   60:       try {\n   61          return tryCatchTarget.apply(this, arguments);\n   62        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.coincidence.js:\n   57    function tryCatcherGen(tryCatchTarget) {\n   58      return function tryCatcher() {\n   59:       try {\n   60          return tryCatchTarget.apply(this, arguments);\n   61        } catch (e) {\n   ..\n  391        function createWindowClose () {\n  392          var windowClose;\n  393:         try {\n  394            windowClose = windowClosingSelector();\n  395          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.compat.js:\n   62    function tryCatcherGen(tryCatchTarget) {\n   63      return function tryCatcher() {\n   64:       try {\n   65          return tryCatchTarget.apply(this, arguments);\n   66        } catch (e) {\n   ..\n  144      if (!hasStacks) { return; }\n  145  \n  146:     try {\n  147        throw new Error();\n  148      } catch (e) {\n  ...\n  400            e.bubbledKeyCode = e.keyCode;\n  401            if (e.ctrlKey) {\n  402:             try {\n  403                e.keyCode = 0;\n  404              } catch (e) { }\n  ...\n  475        var typeListeners = listeners[type] = listeners[type] || [];\n  476  \n  477:       try {\n  478          return target.fireEvent('on' + type, e);\n  479        } catch (err) {\n  ...\n  500        params = params || { bubbles: false, cancelable: false, detail: undefined };\n  501  \n  502:       try {\n  503          if (document.createEvent) {\n  504            event = document.createEvent('CustomEvent');\n  ...\n  778  \n  779  var isHostObject = (function() {\n  780:   try {\n  781      Object({ 'toString': 0 } + '');\n  782    } catch(e) {\n  ...\n 5570          function (x) {\n 5571            var result;\n 5572:           try {\n 5573              result = onNextFunc(x, index++);\n 5574            } catch (e) {\n ....\n 5581          function (err) {\n 5582            var result;\n 5583:           try {\n 5584              result = onErrorFunc(err);\n 5585            } catch (e) {\n ....\n 5593          function () {\n 5594            var result;\n 5595:           try {\n 5596              result = onCompletedFunc();\n 5597            } catch (e) {\n ....\n 5834          function (x) {\n 5835            var result;\n 5836:           try {\n 5837              result = onNext.call(thisArg, x, index++);\n 5838            } catch (e) {\n ....\n 5845          function (err) {\n 5846            var result;\n 5847:           try {\n 5848              result = onError.call(thisArg, err);\n 5849            } catch (e) {\n ....\n 5857          function () {\n 5858            var result;\n 5859:           try {\n 5860              result = onCompleted.call(thisArg);\n 5861            } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.core.binding.js:\n   60    function tryCatcherGen(tryCatchTarget) {\n   61      return function tryCatcher() {\n   62:       try {\n   63          return tryCatchTarget.apply(this, arguments);\n   64        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.core.js:\n   74    function tryCatcherGen(tryCatchTarget) {\n   75      return function tryCatcher() {\n   76:       try {\n   77          return tryCatchTarget.apply(this, arguments);\n   78        } catch (e) {\n   ..\n  156      if (!hasStacks) { return; }\n  157  \n  158:     try {\n  159        throw new Error();\n  160      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.core.testing.js:\n  358  \n  359  var isHostObject = (function() {\n  360:   try {\n  361      Object({ 'toString': 0 } + '');\n  362    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.experimental.js:\n   65    function tryCatcherGen(tryCatchTarget) {\n   66      return function tryCatcher() {\n   67:       try {\n   68          return tryCatchTarget.apply(this, arguments);\n   69        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.joinpatterns.js:\n   49    function tryCatcherGen(tryCatchTarget) {\n   50      return function tryCatcher() {\n   51:       try {\n   52          return tryCatchTarget.apply(this, arguments);\n   53        } catch (e) {\n   ..\n  319          function (x) { o.onCompleted(); }\n  320        );\n  321:       try {\n  322          for (var i = 0, len = plans.length; i < len; i++) {\n  323            activePlans.push(plans[i].activate(externalSubscriptions, outObserver, function (activePlan) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.js:\n   60    function tryCatcherGen(tryCatchTarget) {\n   61      return function tryCatcher() {\n   62:       try {\n   63          return tryCatchTarget.apply(this, arguments);\n   64        } catch (e) {\n   ..\n  142      if (!hasStacks) { return; }\n  143  \n  144:     try {\n  145        throw new Error();\n  146      } catch (e) {\n  ...\n  427  \n  428  var isHostObject = (function() {\n  429:   try {\n  430      Object({ 'toString': 0 } + '');\n  431    } catch(e) {\n  ...\n 5219          function (x) {\n 5220            var result;\n 5221:           try {\n 5222              result = onNextFunc(x, index++);\n 5223            } catch (e) {\n ....\n 5230          function (err) {\n 5231            var result;\n 5232:           try {\n 5233              result = onErrorFunc(err);\n 5234            } catch (e) {\n ....\n 5242          function () {\n 5243            var result;\n 5244:           try {\n 5245              result = onCompletedFunc();\n 5246            } catch (e) {\n ....\n 5479          function (x) {\n 5480            var result;\n 5481:           try {\n 5482              result = onNext.call(thisArg, x, index++);\n 5483            } catch (e) {\n ....\n 5490          function (err) {\n 5491            var result;\n 5492:           try {\n 5493              result = onError.call(thisArg, err);\n 5494            } catch (e) {\n ....\n 5502          function () {\n 5503            var result;\n 5504:           try {\n 5505              result = onCompleted.call(thisArg);\n 5506            } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.lite.compat.js:\n   64    function tryCatcherGen(tryCatchTarget) {\n   65      return function tryCatcher() {\n   66:       try {\n   67          return tryCatchTarget.apply(this, arguments);\n   68        } catch (e) {\n   ..\n  146      if (!hasStacks) { return; }\n  147  \n  148:     try {\n  149        throw new Error();\n  150      } catch (e) {\n  ...\n  402            e.bubbledKeyCode = e.keyCode;\n  403            if (e.ctrlKey) {\n  404:             try {\n  405                e.keyCode = 0;\n  406              } catch (e) { }\n  ...\n  477        var typeListeners = listeners[type] = listeners[type] || [];\n  478  \n  479:       try {\n  480          return target.fireEvent('on' + type, e);\n  481        } catch (err) {\n  ...\n  502        params = params || { bubbles: false, cancelable: false, detail: undefined };\n  503  \n  504:       try {\n  505          if (document.createEvent) {\n  506            event = document.createEvent('CustomEvent');\n  ...\n  780  \n  781  var isHostObject = (function() {\n  782:   try {\n  783      Object({ 'toString': 0 } + '');\n  784    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.lite.extras.compat.js:\n   73    function tryCatcherGen(tryCatchTarget) {\n   74      return function tryCatcher() {\n   75:       try {\n   76          return tryCatchTarget.apply(this, arguments);\n   77        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.lite.extras.js:\n   73    function tryCatcherGen(tryCatchTarget) {\n   74      return function tryCatcher() {\n   75:       try {\n   76          return tryCatchTarget.apply(this, arguments);\n   77        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.lite.js:\n   64    function tryCatcherGen(tryCatchTarget) {\n   65      return function tryCatcher() {\n   66:       try {\n   67          return tryCatchTarget.apply(this, arguments);\n   68        } catch (e) {\n   ..\n  146      if (!hasStacks) { return; }\n  147  \n  148:     try {\n  149        throw new Error();\n  150      } catch (e) {\n  ...\n  431  \n  432  var isHostObject = (function() {\n  433:   try {\n  434      Object({ 'toString': 0 } + '');\n  435    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\rx\\dist\\rx.time.js:\n   63    function tryCatcherGen(tryCatchTarget) {\n   64      return function tryCatcher() {\n   65:       try {\n   66          return tryCatchTarget.apply(this, arguments);\n   67        } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\sass-graph.js:\n   17      for (j = 0; j < extensions.length; j++) {\n   18        scssPath = path.normalize(loadPaths[i] + '/' + sassPathName + '.' + extensions[j]);\n   19:       try {\n   20          if (fs.lstatSync(scssPath).isFile()) {\n   21            return scssPath;\n   ..\n   28        scssPath = path.normalize(loadPaths[i] + '/' + sassPathName + '.' + extensions[j]);\n   29        partialPath = path.join(path.dirname(scssPath), '_' + path.basename(scssPath));\n   30:       try {\n   31          if (fs.lstatSync(partialPath).isFile()) {\n   32            return partialPath;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\bin\\sassgraph:\n   70  \n   71  \n   72: try {\n   73    if (!directory) {\n   74      throw new Error('Missing directory');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\node_modules\\yargs\\yargs.js:\n  494  \n  495      var obj = {}\n  496:     try {\n  497        obj = readPkgUp.sync({\n  498          cwd: path || require('require-main-filename')(parentRequire || require),\n  ...\n  947      self.parsed = parsed\n  948  \n  949:     try {\n  950        guessLocale() // guess locale lazily, so that it can be turned off in chain.\n  951  \n  ...\n 1097      if (!detectLocale) return\n 1098  \n 1099:     try {\n 1100        const osLocale = require('os-locale')\n 1101        self.locale(osLocale.sync({ spawn: false }))\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\node_modules\\yargs\\lib\\argsert.js:\n    6  module.exports = function (expected, callerArguments, length) {\n    7    // TODO: should this eventually raise an exception.\n    8:   try {\n    9      // preface the argument description with \"cmd\", so\n   10      // that we can run it through yargs' command parser.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\node_modules\\yargs\\lib\\command.js:\n  290      var coerce = yargs.getOptions().coerce[key]\n  291      if (typeof coerce === 'function') {\n  292:       try {\n  293          argv[key] = coerce(argv[key])\n  294        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\node_modules\\yargs\\lib\\validation.js:\n  208        var func = f.func\n  209        var result = null\n  210:       try {\n  211          result = func(argv, aliases)\n  212        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sass-graph\\node_modules\\yargs-parser\\index.js:\n  427        var configPath = argv[configKey] || configLookup[configKey]\n  428        if (configPath) {\n  429:         try {\n  430            var config = null\n  431            var resolvedConfigPath = path.resolve(process.cwd(), configPath)\n  432  \n  433            if (typeof flags.configs[configKey] === 'function') {\n  434:             try {\n  435                config = flags.configs[configKey](resolvedConfigPath)\n  436              } catch (e) {\n  ...\n  510        coerce = checkAllAliases(key, flags.coercions)\n  511        if (typeof coerce === 'function') {\n  512:         try {\n  513            argv[key] = coerce(argv[key])\n  514          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sax\\lib\\sax.js:\n  160  \n  161    var Stream\n  162:   try {\n  163      Stream = require('stream').Stream\n  164    } catch (ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\scss-tokenizer\\node_modules\\source-map\\build\\assert-shim.js:\n   16  \n   17    exports.doesNotThrow = function (fn) {\n   18:     try {\n   19        fn();\n   20      }\n   ..\n   46  \n   47    exports.throws = function (fn) {\n   48:     try {\n   49        fn();\n   50        do_throw('Expected an error to be thrown, but it wasn\\'t.');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\semver\\semver.js:\n  248      return null;\n  249  \n  250:   try {\n  251      return new SemVer(version, loose);\n  252    } catch (er) {\n  ...\n  489    }\n  490  \n  491:   try {\n  492      return new SemVer(version, loose).inc(release, identifier).version;\n  493    } catch (er) {\n  ...\n 1142  exports.satisfies = satisfies;\n 1143  function satisfies(version, range, loose) {\n 1144:   try {\n 1145      range = new Range(range, loose);\n 1146    } catch (er) {\n ....\n 1154    var max = null;\n 1155    var maxSV = null;\n 1156:   try {\n 1157      var rangeObj = new Range(range, loose);\n 1158    } catch (er) {\n ....\n 1174    var min = null;\n 1175    var minSV = null;\n 1176:   try {\n 1177      var rangeObj = new Range(range, loose);\n 1178    } catch (er) {\n ....\n 1192  exports.validRange = validRange;\n 1193  function validRange(range, loose) {\n 1194:   try {\n 1195      // Return '*' instead of '' so that truthiness works.\n 1196      // This will throw if it's invalid anyway\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\send\\index.js:\n  987  \n  988  function decode (path) {\n  989:   try {\n  990      return decodeURIComponent(path)\n  991    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\send\\node_modules\\debug\\src\\browser.js:\n   62  \n   63  exports.formatters.j = function(v) {\n   64:   try {\n   65      return JSON.stringify(v);\n   66    } catch (err) {\n   ..\n  132  \n  133  function save(namespaces) {\n  134:   try {\n  135      if (null == namespaces) {\n  136        exports.storage.removeItem('debug');\n  ...\n  150  function load() {\n  151    var r;\n  152:   try {\n  153      r = exports.storage.debug;\n  154    } catch(e) {}\n  ...\n  180  \n  181  function localstorage() {\n  182:   try {\n  183      return window.localStorage;\n  184    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\serve-index\\node_modules\\debug\\browser.js:\n  121  \n  122  function save(namespaces) {\n  123:   try {\n  124      if (null == namespaces) {\n  125        exports.storage.removeItem('debug');\n  ...\n  139  function load() {\n  140    var r;\n  141:   try {\n  142      r = exports.storage.debug;\n  143    } catch(e) {}\n  ...\n  163  \n  164  function localstorage(){\n  165:   try {\n  166      return window.localStorage;\n  167    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\signal-exit\\index.js:\n   61  \n   62    signals.forEach(function (sig) {\n   63:     try {\n   64        process.removeListener(sig, sigListeners[sig])\n   65      } catch (er) {}\n   ..\n  119  \n  120    signals = signals.filter(function (sig) {\n  121:     try {\n  122        process.on(sig, sigListeners[sig])\n  123        return true\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io\\lib\\client.js:\n  173  Client.prototype.ondata = function(data){\n  174    // try/catch is needed for protocol violations (GH-1880)\n  175:   try {\n  176      this.decoder.add(data);\n  177    } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io\\lib\\index.js:\n   68    if (this._origins.indexOf('*:*') !== -1) return fn(null, true);\n   69    if (origin) {\n   70:     try {\n   71        var parts = url.parse(origin);\n   72        var defaultPort = 'https:' == parts.protocol ? 443 : 80;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io\\node_modules\\debug\\browser.js:\n   54  \n   55  exports.formatters.j = function(v) {\n   56:   try {\n   57      return JSON.stringify(v);\n   58    } catch (err) {\n   ..\n  126  \n  127  function save(namespaces) {\n  128:   try {\n  129      if (null == namespaces) {\n  130        exports.storage.removeItem('debug');\n  ...\n  144  function load() {\n  145    var r;\n  146:   try {\n  147      return exports.storage.debug;\n  148    } catch(e) {}\n  ...\n  172  \n  173  function localstorage(){\n  174:   try {\n  175      return window.localStorage;\n  176    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io\\node_modules\\object-assign\\index.js:\n   13  \n   14  function shouldUseNative() {\n   15: \ttry {\n   16  \t\tif (!Object.assign) {\n   17  \t\t\treturn false;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io-adapter\\node_modules\\debug\\browser.js:\n   54  \n   55  exports.formatters.j = function(v) {\n   56:   try {\n   57      return JSON.stringify(v);\n   58    } catch (err) {\n   ..\n  126  \n  127  function save(namespaces) {\n  128:   try {\n  129      if (null == namespaces) {\n  130        exports.storage.removeItem('debug');\n  ...\n  144  function load() {\n  145    var r;\n  146:   try {\n  147      return exports.storage.debug;\n  148    } catch(e) {}\n  ...\n  172  \n  173  function localstorage(){\n  174:   try {\n  175      return window.localStorage;\n  176    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io-client\\socket.io.js:\n  353  \n  354  \texports.formatters.j = function(v) {\n  355: \t  try {\n  356  \t    return JSON.stringify(v);\n  357  \t  } catch (err) {\n  ...\n  425  \n  426  \tfunction save(namespaces) {\n  427: \t  try {\n  428  \t    if (null == namespaces) {\n  429  \t      exports.storage.removeItem('debug');\n  ...\n  443  \tfunction load() {\n  444  \t  var r;\n  445: \t  try {\n  446  \t    return exports.storage.debug;\n  447  \t  } catch(e) {}\n  ...\n  471  \n  472  \tfunction localstorage(){\n  473: \t  try {\n  474  \t    return window.localStorage;\n  475  \t  } catch (e) {}\n  ...\n  500  \t}\n  501  \t(function () {\n  502: \t    try {\n  503  \t        if (typeof setTimeout === 'function') {\n  504  \t            cachedSetTimeout = setTimeout;\n  ...\n  509  \t        cachedSetTimeout = defaultSetTimout;\n  510  \t    }\n  511: \t    try {\n  512  \t        if (typeof clearTimeout === 'function') {\n  513  \t            cachedClearTimeout = clearTimeout;\n  ...\n  529  \t        return setTimeout(fun, 0);\n  530  \t    }\n  531: \t    try {\n  532  \t        // when when somebody has screwed with setTimeout but no I.E. maddness\n  533  \t        return cachedSetTimeout(fun, 0);\n  534  \t    } catch(e){\n  535: \t        try {\n  536  \t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n  537  \t            return cachedSetTimeout.call(null, fun, 0);\n  ...\n  554  \t        return clearTimeout(marker);\n  555  \t    }\n  556: \t    try {\n  557  \t        // when when somebody has screwed with setTimeout but no I.E. maddness\n  558  \t        return cachedClearTimeout(marker);\n  559  \t    } catch (e){\n  560: \t        try {\n  561  \t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n  562  \t            return cachedClearTimeout.call(null, marker);\n  ...\n 1361  \n 1362  \tfunction tryParse(p, str) {\n 1363: \t  try {\n 1364  \t    p.data = json.parse(str);\n 1365  \t  } catch(e){\n ....\n 1561  \n 1562  \tfunction save(namespaces) {\n 1563: \t  try {\n 1564  \t    if (null == namespaces) {\n 1565  \t      exports.storage.removeItem('debug');\n ....\n 1579  \tfunction load() {\n 1580  \t  var r;\n 1581: \t  try {\n 1582  \t    r = exports.storage.debug;\n 1583  \t  } catch(e) {}\n ....\n 1603  \n 1604  \tfunction localstorage(){\n 1605: \t  try {\n 1606  \t    return window.localStorage;\n 1607  \t  } catch (e) {}\n ....\n 2005  \t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n 2006  \t    var isExtended = new Date(-3509827334573292);\n 2007: \t    try {\n 2008  \t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n 2009  \t      // results for certain dates in Opera >= 10.53.\n ....\n 2041  \t              return 1;\n 2042  \t            }).toJSON = value;\n 2043: \t            try {\n 2044  \t              stringifySupported =\n 2045  \t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n ....\n 2105  \t          var parse = exports.parse;\n 2106  \t          if (typeof parse == \"function\") {\n 2107: \t            try {\n 2108  \t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n 2109  \t              // Conforming implementations should also coerce the initial argument to\n ....\n 2114  \t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n 2115  \t                if (parseSupported) {\n 2116: \t                  try {\n 2117  \t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n 2118  \t                    parseSupported = !parse('\"\\t\"');\n 2119  \t                  } catch (exception) {}\n 2120  \t                  if (parseSupported) {\n 2121: \t                    try {\n 2122  \t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n 2123  \t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n ....\n 2127  \t                  }\n 2128  \t                  if (parseSupported) {\n 2129: \t                    try {\n 2130  \t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n 2131  \t                      // points. These environments, along with FF 3.1b1 and 2,\n ....\n 2339  \t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n 2340  \t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n 2341: \t          try {\n 2342  \t            // Necessary for host object support.\n 2343  \t            value = object[property];\n ....\n 4045  \n 4046  \t  // Retry with the next transport if the transport is disabled (jsonp: false)\n 4047: \t  try {\n 4048  \t    transport = this.createTransport(transport);\n 4049  \t  } catch (e) {\n ....\n 4635  \n 4636  \t  // XMLHttpRequest can be disabled on IE\n 4637: \t  try {\n 4638  \t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n 4639  \t      return new XMLHttpRequest();\n ....\n 4644  \t  // because loading bar keeps flashing when using jsonp-polling\n 4645  \t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n 4646: \t  try {\n 4647  \t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n 4648  \t      return new XDomainRequest();\n ....\n 4651  \n 4652  \t  if (!xdomain) {\n 4653: \t    try {\n 4654  \t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n 4655  \t    } catch (e) { }\n ....\n 4672  \t */\n 4673  \n 4674: \ttry {\n 4675  \t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n 4676  \t    'withCredentials' in new XMLHttpRequest();\n ....\n 4881  \t  var self = this;\n 4882  \n 4883: \t  try {\n 4884  \t    debug('xhr open %s: %s', this.method, this.uri);\n 4885  \t    xhr.open(this.method, this.uri, this.async);\n 4886: \t    try {\n 4887  \t      if (this.extraHeaders) {\n 4888  \t        xhr.setDisableHeaderCheck(true);\n ....\n 4901  \n 4902  \t    if ('POST' === this.method) {\n 4903: \t      try {\n 4904  \t        if (this.isBinary) {\n 4905  \t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n ....\n 4910  \t    }\n 4911  \n 4912: \t    try {\n 4913  \t      xhr.setRequestHeader('Accept', '*/*');\n 4914  \t    } catch (e) {}\n ....\n 5014  \n 5015  \t  if (fromError) {\n 5016: \t    try {\n 5017  \t      this.xhr.abort();\n 5018  \t    } catch (e) {}\n ....\n 5034  \tRequest.prototype.onLoad = function () {\n 5035  \t  var data;\n 5036: \t  try {\n 5037  \t    var contentType;\n 5038: \t    try {\n 5039  \t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n 5040  \t    } catch (e) {}\n ....\n 5045  \t        data = this.xhr.responseText;\n 5046  \t      } else {\n 5047: \t        try {\n 5048  \t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n 5049  \t        } catch (e) {\n ....\n 5732  \n 5733  \t  var b64data;\n 5734: \t  try {\n 5735  \t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n 5736  \t  } catch (e) {\n ....\n 5793  \n 5794  \tfunction tryDecode(data) {\n 5795: \t  try {\n 5796  \t    data = utf8.decode(data);\n 5797  \t  } catch (e) {\n ....\n 6119  \t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n 6120  \t    if (isString) {\n 6121: \t      try {\n 6122  \t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n 6123  \t      } catch (e) {\n ....\n 6641  \n 6642  \tvar blobSupported = (function() {\n 6643: \t  try {\n 6644  \t    var a = new Blob(['hi']);\n 6645  \t    return a.size === 2;\n ....\n 6655  \n 6656  \tvar blobSupportsArrayBufferView = blobSupported && (function() {\n 6657: \t  try {\n 6658  \t    var b = new Blob([new Uint8Array([1,2])]);\n 6659  \t    return b.size === 2;\n ....\n 7215  \t  function initIframe () {\n 7216  \t    if (self.iframe) {\n 7217: \t      try {\n 7218  \t        self.form.removeChild(self.iframe);\n 7219  \t      } catch (e) {\n ....\n 7222  \t    }\n 7223  \n 7224: \t    try {\n 7225  \t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n 7226  \t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n ....\n 7245  \t  this.area.value = data.replace(rNewline, '\\\\n');\n 7246  \n 7247: \t  try {\n 7248  \t    this.form.submit();\n 7249  \t  } catch (e) {}\n ....\n 7279  \tvar NodeWebSocket;\n 7280  \tif (typeof window === 'undefined') {\n 7281: \t  try {\n 7282  \t    NodeWebSocket = __webpack_require__(42);\n 7283  \t  } catch (e) { }\n ....\n 7375  \t  }\n 7376  \n 7377: \t  try {\n 7378  \t    this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n 7379  \t  } catch (err) {\n ....\n 7453  \t        // have a chance of informing us about it yet, in that case send will\n 7454  \t        // throw an error\n 7455: \t        try {\n 7456  \t          if (self.usingBrowserWebSocket) {\n 7457  \t            // TypeError is thrown when passing the second argument on Safari\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io-client\\socket.io.js.map:\n    1: {\"version\":3,\"file\":\"socket.io.js\",\"sources\":[\"webpack:///webpack/universalModuleDefinition\",\"webpack:///webpack/bootstrap cf885fd9f28c5c4e0b41\",\"webpack:///lib/index.js\",\"webpack:///\",\"webpack:///lib/url.js\",\"webpack:///./~/parseuri/index.js\",\"webpack:///./~/debug/browser.js\",\"webpack:///(webpack)/~/node-libs-browser/~/process/browser.js\",\"webpack:///./~/debug/debug.js\",\"webpack:///./~/debug/~/ms/index.js\",\"webpack:///./~/socket.io-parser/index.js\",\"webpack:///./~/socket.io-parser/~/debug/browser.js\",\"webpack:///./~/socket.io-parser/~/debug/debug.js\",\"webpack:///./~/socket.io-parser/~/debug/~/ms/index.js\",\"webpack:///./~/socket.io-parser/~/json3/lib/json3.js\",\"webpack:///(webpack)/buildin/module.js\",\"webpack:///./~/socket.io-parser/~/component-emitter/index.js\",\"webpack:///./~/socket.io-parser/binary.js\",\"webpack:///./~/socket.io-parser/~/isarray/index.js\",\"webpack:///./~/socket.io-parser/is-buffer.js\",\"webpack:///lib/manager.js\",\"webpack:///./~/engine.io-client/index.js\",\"webpack:///./~/engine.io-client/lib/index.js\",\"webpack:///./~/engine.io-client/lib/socket.js\",\"webpack:///./~/engine.io-client/lib/transports/index.js\",\"webpack:///./~/engine.io-client/lib/xmlhttprequest.js\",\"webpack:///./~/has-cors/index.js\",\"webpack:///./~/engine.io-client/lib/transports/polling-xhr.js\",\"webpack:///./~/engine.io-client/lib/transports/polling.js\",\"webpack:///./~/engine.io-client/lib/transport.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/lib/browser.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/lib/keys.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/~/has-binary/index.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/~/has-binary/~/isarray/index.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/~/after/index.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/~/wtf-8/wtf-8.js\",\"webpack:///./~/base64-arraybuffer/lib/base64-arraybuffer.js\",\"webpack:///./~/engine.io-client/~/engine.io-parser/~/blob/index.js\",\"webpack:///./~/component-emitter/index.js\",\"webpack:///./~/engine.io-client/~/parseqs/index.js\",\"webpack:///./~/engine.io-client/~/component-inherit/index.js\",\"webpack:///./~/engine.io-client/~/yeast/index.js\",\"webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js\",\"webpack:///./~/engine.io-client/lib/transports/websocket.js\",\"webpack:///ws (ignored)\",\"webpack:///./~/indexof/index.js\",\"webpack:///./~/engine.io-client/~/parsejson/index.js\",\"webpack:///lib/socket.js\",\"webpack:///./~/to-array/index.js\",\"webpack:///lib/on.js\",\"webpack:///./~/component-bind/index.js\",\"webpack:///./~/has-binary/index.js\",\"webpack:///./~/has-binary/~/isarray/index.js\",\"webpack:///./~/backo2/index.js\"],\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine([], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"io\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"io\\\"] = factory();\\n})(this, function() {\\nreturn \\n\\n\\n// WEBPACK FOOTER //\\n// webpack/universalModuleDefinition\",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId])\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\texports: {},\\n \\t\\t\\tid: moduleId,\\n \\t\\t\\tloaded: false\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.loaded = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(0);\\n\\n\\n\\n// WEBPACK FOOTER //\\n// webpack/bootstrap cf885fd9f28c5c4e0b41\",\"\\n/**\\n * Module dependencies.\\n */\\n\\nvar url = require('./url');\\nvar parser = require('socket.io-parser');\\nvar Manager = require('./manager');\\nvar debug = require('debug')('socket.io-client');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = exports = lookup;\\n\\n/**\\n * Managers cache.\\n */\\n\\nvar cache = exports.managers = {};\\n\\n/**\\n * Looks up an existing `Manager` for multiplexing.\\n * If the user summons:\\n *\\n *   `io('http://localhost/a');`\\n *   `io('http://localhost/b');`\\n *\\n * We reuse the existing instance based on same scheme/port/host,\\n * and we initialize sockets for each namespace.\\n *\\n * @api public\\n */\\n\\nfunction lookup (uri, opts) {\\n  if (typeof uri === 'object') {\\n    opts = uri;\\n    uri = undefined;\\n  }\\n\\n  opts = opts || {};\\n\\n  var parsed = url(uri);\\n  var source = parsed.source;\\n  var id = parsed.id;\\n  var path = parsed.path;\\n  var sameNamespace = cache[id] && path in cache[id].nsps;\\n  var newConnection = opts.forceNew || opts['force new connection'] ||\\n                      false === opts.multiplex || sameNamespace;\\n\\n  var io;\\n\\n  if (newConnection) {\\n    debug('ignoring socket cache for %s', source);\\n    io = Manager(source, opts);\\n  } else {\\n    if (!cache[id]) {\\n      debug('new io instance for %s', source);\\n      cache[id] = Manager(source, opts);\\n    }\\n    io = cache[id];\\n  }\\n  if (parsed.query && !opts.query) {\\n    opts.query = parsed.query;\\n  } else if (opts && 'object' === typeof opts.query) {\\n    opts.query = encodeQueryString(opts.query);\\n  }\\n  return io.socket(parsed.path, opts);\\n}\\n/**\\n *  Helper method to parse query objects to string.\\n * @param {object} query\\n * @returns {string}\\n */\\nfunction encodeQueryString (obj) {\\n  var str = [];\\n  for (var p in obj) {\\n    if (obj.hasOwnProperty(p)) {\\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\\n    }\\n  }\\n  return str.join('&');\\n}\\n/**\\n * Protocol version.\\n *\\n * @api public\\n */\\n\\nexports.protocol = parser.protocol;\\n\\n/**\\n * `connect`.\\n *\\n * @param {String} uri\\n * @api public\\n */\\n\\nexports.connect = lookup;\\n\\n/**\\n * Expose constructors for standalone build.\\n *\\n * @api public\\n */\\n\\nexports.Manager = require('./manager');\\nexports.Socket = require('./socket');\\n\\n\\n\\n// WEBPACK FOOTER //\\n// lib/index.js\",\"undefined\\n\\n\\n// WEBPACK FOOTER //\\n// \",\"\\n/**\\n * Module dependencies.\\n */\\n\\nvar parseuri = require('parseuri');\\nvar debug = require('debug')('socket.io-client:url');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = url;\\n\\n/**\\n * URL parser.\\n *\\n * @param {String} url\\n * @param {Object} An object meant to mimic window.location.\\n *                 Defaults to window.location.\\n * @api public\\n */\\n\\nfunction url (uri, loc) {\\n  var obj = uri;\\n\\n  // default to window.location\\n  loc = loc || global.location;\\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\\n\\n  // relative path support\\n  if ('string' === typeof uri) {\\n    if ('/' === uri.charAt(0)) {\\n      if ('/' === uri.charAt(1)) {\\n        uri = loc.protocol + uri;\\n      } else {\\n        uri = loc.host + uri;\\n      }\\n    }\\n\\n    if (!/^(https?|wss?):\\\\/\\\\//.test(uri)) {\\n      debug('protocol-less url %s', uri);\\n      if ('undefined' !== typeof loc) {\\n        uri = loc.protocol + '//' + uri;\\n      } else {\\n        uri = 'https://' + uri;\\n      }\\n    }\\n\\n    // parse\\n    debug('parse %s', uri);\\n    obj = parseuri(uri);\\n  }\\n\\n  // make sure we treat `localhost:80` and `localhost` equally\\n  if (!obj.port) {\\n    if (/^(http|ws)$/.test(obj.protocol)) {\\n      obj.port = '80';\\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\\n      obj.port = '443';\\n    }\\n  }\\n\\n  obj.path = obj.path || '/';\\n\\n  var ipv6 = obj.host.indexOf(':') !== -1;\\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\\n\\n  // define unique id\\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\\n  // define href\\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\\n\\n  return obj;\\n}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// lib/url.js\",\"/**\\r\\n * Parses an URI\\r\\n *\\r\\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\\r\\n * @api private\\r\\n */\\r\\n\\r\\nvar re = /^(?:(?![^:@]+:[^:@\\\\/]*@)(http|https|ws|wss):\\\\/\\\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\\\/?#]*)(?::(\\\\d*))?)(((\\\\/(?:[^?#](?![^?#\\\\/]*\\\\.[^?#\\\\/.]+(?:[?#]|$)))*\\\\/?)?([^?#\\\\/]*))(?:\\\\?([^#]*))?(?:#(.*))?)/;\\r\\n\\r\\nvar parts = [\\r\\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\\r\\n];\\r\\n\\r\\nmodule.exports = function parseuri(str) {\\r\\n    var src = str,\\r\\n        b = str.indexOf('['),\\r\\n        e = str.indexOf(']');\\r\\n\\r\\n    if (b != -1 && e != -1) {\\r\\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\\r\\n    }\\r\\n\\r\\n    var m = re.exec(str || ''),\\r\\n        uri = {},\\r\\n        i = 14;\\r\\n\\r\\n    while (i--) {\\r\\n        uri[parts[i]] = m[i] || '';\\r\\n    }\\r\\n\\r\\n    if (b != -1 && e != -1) {\\r\\n        uri.source = src;\\r\\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\\r\\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\\r\\n        uri.ipv6uri = true;\\r\\n    }\\r\\n\\r\\n    return uri;\\r\\n};\\r\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/parseuri/index.js\\n// module id = 2\\n// module chunks = 0\",\"\\n/**\\n * This is the web browser implementation of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\n\\nexports = module.exports = require('./debug');\\nexports.log = log;\\nexports.formatArgs = formatArgs;\\nexports.save = save;\\nexports.load = load;\\nexports.useColors = useColors;\\nexports.storage = 'undefined' != typeof chrome\\n               && 'undefined' != typeof chrome.storage\\n                  ? chrome.storage.local\\n                  : localstorage();\\n\\n/**\\n * Colors.\\n */\\n\\nexports.colors = [\\n  'lightseagreen',\\n  'forestgreen',\\n  'goldenrod',\\n  'dodgerblue',\\n  'darkorchid',\\n  'crimson'\\n];\\n\\n/**\\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n * and the Firebug extension (any Firefox version) are known\\n * to support \\\"%c\\\" CSS customizations.\\n *\\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n */\\n\\nfunction useColors() {\\n  // is webkit? http://stackoverflow.com/a/16459606/376773\\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\\n  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\\n    // is firebug? http://stackoverflow.com/a/398120/376773\\n    (window.console && (console.firebug || (console.exception && console.table))) ||\\n    // is firefox >= v31?\\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n    (navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\\n}\\n\\n/**\\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n */\\n\\nexports.formatters.j = function(v) {\\n  try {\\n    return JSON.stringify(v);\\n  } catch (err) {\\n    return '[UnexpectedJSONParseError]: ' + err.message;\\n  }\\n};\\n\\n\\n/**\\n * Colorize log arguments if enabled.\\n *\\n * @api public\\n */\\n\\nfunction formatArgs() {\\n  var args = arguments;\\n  var useColors = this.useColors;\\n\\n  args[0] = (useColors ? '%c' : '')\\n    + this.namespace\\n    + (useColors ? ' %c' : ' ')\\n    + args[0]\\n    + (useColors ? '%c ' : ' ')\\n    + '+' + exports.humanize(this.diff);\\n\\n  if (!useColors) return args;\\n\\n  var c = 'color: ' + this.color;\\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\\n\\n  // the final \\\"%c\\\" is somewhat tricky, because there could be other\\n  // arguments passed either before or after the %c, so we need to\\n  // figure out the correct index to insert the CSS into\\n  var index = 0;\\n  var lastC = 0;\\n  args[0].replace(/%[a-z%]/g, function(match) {\\n    if ('%%' === match) return;\\n    index++;\\n    if ('%c' === match) {\\n      // we only are interested in the *last* %c\\n      // (the user may have provided their own)\\n      lastC = index;\\n    }\\n  });\\n\\n  args.splice(lastC, 0, c);\\n  return args;\\n}\\n\\n/**\\n * Invokes `console.log()` when available.\\n * No-op when `console.log` is not a \\\"function\\\".\\n *\\n * @api public\\n */\\n\\nfunction log() {\\n  // this hackery is required for IE8/9, where\\n  // the `console.log` function doesn't have 'apply'\\n  return 'object' === typeof console\\n    && console.log\\n    && Function.prototype.apply.call(console.log, console, arguments);\\n}\\n\\n/**\\n * Save `namespaces`.\\n *\\n * @param {String} namespaces\\n * @api private\\n */\\n\\nfunction save(namespaces) {\\n  try {\\n    if (null == namespaces) {\\n      exports.storage.removeItem('debug');\\n    } else {\\n      exports.storage.debug = namespaces;\\n    }\\n  } catch(e) {}\\n}\\n\\n/**\\n * Load `namespaces`.\\n *\\n * @return {String} returns the previously persisted debug modes\\n * @api private\\n */\\n\\nfunction load() {\\n  var r;\\n  try {\\n    return exports.storage.debug;\\n  } catch(e) {}\\n\\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\\n  if (typeof process !== 'undefined' && 'env' in process) {\\n    return process.env.DEBUG;\\n  }\\n}\\n\\n/**\\n * Enable namespaces listed in `localStorage.debug` initially.\\n */\\n\\nexports.enable(load());\\n\\n/**\\n * Localstorage attempts to return the localstorage.\\n *\\n * This is necessary because safari throws\\n * when a user disables cookies/localstorage\\n * and you attempt to access it.\\n *\\n * @return {LocalStorage}\\n * @api private\\n */\\n\\nfunction localstorage(){\\n  try {\\n    return window.localStorage;\\n  } catch (e) {}\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/debug/browser.js\\n// module id = 3\\n// module chunks = 0\",\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// (webpack)/~/node-libs-browser/~/process/browser.js\\n// module id = 4\\n// module chunks = 0\",\"\\n/**\\n * This is the common logic for both the Node.js and web browser\\n * implementations of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\n\\nexports = module.exports = debug.debug = debug;\\nexports.coerce = coerce;\\nexports.disable = disable;\\nexports.enable = enable;\\nexports.enabled = enabled;\\nexports.humanize = require('ms');\\n\\n/**\\n * The currently active debug mode names, and names to skip.\\n */\\n\\nexports.names = [];\\nexports.skips = [];\\n\\n/**\\n * Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n *\\n * Valid key names are a single, lowercased letter, i.e. \\\"n\\\".\\n */\\n\\nexports.formatters = {};\\n\\n/**\\n * Previously assigned color.\\n */\\n\\nvar prevColor = 0;\\n\\n/**\\n * Previous log timestamp.\\n */\\n\\nvar prevTime;\\n\\n/**\\n * Select a color.\\n *\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction selectColor() {\\n  return exports.colors[prevColor++ % exports.colors.length];\\n}\\n\\n/**\\n * Create a debugger with the given `namespace`.\\n *\\n * @param {String} namespace\\n * @return {Function}\\n * @api public\\n */\\n\\nfunction debug(namespace) {\\n\\n  // define the `disabled` version\\n  function disabled() {\\n  }\\n  disabled.enabled = false;\\n\\n  // define the `enabled` version\\n  function enabled() {\\n\\n    var self = enabled;\\n\\n    // set `diff` timestamp\\n    var curr = +new Date();\\n    var ms = curr - (prevTime || curr);\\n    self.diff = ms;\\n    self.prev = prevTime;\\n    self.curr = curr;\\n    prevTime = curr;\\n\\n    // add the `color` if not set\\n    if (null == self.useColors) self.useColors = exports.useColors();\\n    if (null == self.color && self.useColors) self.color = selectColor();\\n\\n    var args = new Array(arguments.length);\\n    for (var i = 0; i < args.length; i++) {\\n      args[i] = arguments[i];\\n    }\\n\\n    args[0] = exports.coerce(args[0]);\\n\\n    if ('string' !== typeof args[0]) {\\n      // anything else let's inspect with %o\\n      args = ['%o'].concat(args);\\n    }\\n\\n    // apply any `formatters` transformations\\n    var index = 0;\\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\\n      // if we encounter an escaped % then don't increase the array index\\n      if (match === '%%') return match;\\n      index++;\\n      var formatter = exports.formatters[format];\\n      if ('function' === typeof formatter) {\\n        var val = args[index];\\n        match = formatter.call(self, val);\\n\\n        // now we need to remove `args[index]` since it's inlined in the `format`\\n        args.splice(index, 1);\\n        index--;\\n      }\\n      return match;\\n    });\\n\\n    // apply env-specific formatting\\n    args = exports.formatArgs.apply(self, args);\\n\\n    var logFn = enabled.log || exports.log || console.log.bind(console);\\n    logFn.apply(self, args);\\n  }\\n  enabled.enabled = true;\\n\\n  var fn = exports.enabled(namespace) ? enabled : disabled;\\n\\n  fn.namespace = namespace;\\n\\n  return fn;\\n}\\n\\n/**\\n * Enables a debug mode by namespaces. This can include modes\\n * separated by a colon and wildcards.\\n *\\n * @param {String} namespaces\\n * @api public\\n */\\n\\nfunction enable(namespaces) {\\n  exports.save(namespaces);\\n\\n  var split = (namespaces || '').split(/[\\\\s,]+/);\\n  var len = split.length;\\n\\n  for (var i = 0; i < len; i++) {\\n    if (!split[i]) continue; // ignore empty strings\\n    namespaces = split[i].replace(/[\\\\\\\\^$+?.()|[\\\\]{}]/g, '\\\\\\\\$&').replace(/\\\\*/g, '.*?');\\n    if (namespaces[0] === '-') {\\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n    } else {\\n      exports.names.push(new RegExp('^' + namespaces + '$'));\\n    }\\n  }\\n}\\n\\n/**\\n * Disable debug output.\\n *\\n * @api public\\n */\\n\\nfunction disable() {\\n  exports.enable('');\\n}\\n\\n/**\\n * Returns true if the given mode name is enabled, false otherwise.\\n *\\n * @param {String} name\\n * @return {Boolean}\\n * @api public\\n */\\n\\nfunction enabled(name) {\\n  var i, len;\\n  for (i = 0, len = exports.skips.length; i < len; i++) {\\n    if (exports.skips[i].test(name)) {\\n      return false;\\n    }\\n  }\\n  for (i = 0, len = exports.names.length; i < len; i++) {\\n    if (exports.names[i].test(name)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/**\\n * Coerce `val`.\\n *\\n * @param {Mixed} val\\n * @return {Mixed}\\n * @api private\\n */\\n\\nfunction coerce(val) {\\n  if (val instanceof Error) return val.stack || val.message;\\n  return val;\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/debug/debug.js\\n// module id = 5\\n// module chunks = 0\",\"/**\\n * Helpers.\\n */\\n\\nvar s = 1000\\nvar m = s * 60\\nvar h = m * 60\\nvar d = h * 24\\nvar y = d * 365.25\\n\\n/**\\n * Parse or format the given `val`.\\n *\\n * Options:\\n *\\n *  - `long` verbose formatting [false]\\n *\\n * @param {String|Number} val\\n * @param {Object} options\\n * @throws {Error} throw an error if val is not a non-empty string or a number\\n * @return {String|Number}\\n * @api public\\n */\\n\\nmodule.exports = function (val, options) {\\n  options = options || {}\\n  var type = typeof val\\n  if (type === 'string' && val.length > 0) {\\n    return parse(val)\\n  } else if (type === 'number' && isNaN(val) === false) {\\n    return options.long ?\\n\\t\\t\\tfmtLong(val) :\\n\\t\\t\\tfmtShort(val)\\n  }\\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\\n}\\n\\n/**\\n * Parse the given `str` and return milliseconds.\\n *\\n * @param {String} str\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction parse(str) {\\n  str = String(str)\\n  if (str.length > 10000) {\\n    return\\n  }\\n  var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\\n  if (!match) {\\n    return\\n  }\\n  var n = parseFloat(match[1])\\n  var type = (match[2] || 'ms').toLowerCase()\\n  switch (type) {\\n    case 'years':\\n    case 'year':\\n    case 'yrs':\\n    case 'yr':\\n    case 'y':\\n      return n * y\\n    case 'days':\\n    case 'day':\\n    case 'd':\\n      return n * d\\n    case 'hours':\\n    case 'hour':\\n    case 'hrs':\\n    case 'hr':\\n    case 'h':\\n      return n * h\\n    case 'minutes':\\n    case 'minute':\\n    case 'mins':\\n    case 'min':\\n    case 'm':\\n      return n * m\\n    case 'seconds':\\n    case 'second':\\n    case 'secs':\\n    case 'sec':\\n    case 's':\\n      return n * s\\n    case 'milliseconds':\\n    case 'millisecond':\\n    case 'msecs':\\n    case 'msec':\\n    case 'ms':\\n      return n\\n    default:\\n      return undefined\\n  }\\n}\\n\\n/**\\n * Short format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\nfunction fmtShort(ms) {\\n  if (ms >= d) {\\n    return Math.round(ms / d) + 'd'\\n  }\\n  if (ms >= h) {\\n    return Math.round(ms / h) + 'h'\\n  }\\n  if (ms >= m) {\\n    return Math.round(ms / m) + 'm'\\n  }\\n  if (ms >= s) {\\n    return Math.round(ms / s) + 's'\\n  }\\n  return ms + 'ms'\\n}\\n\\n/**\\n * Long format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\nfunction fmtLong(ms) {\\n  return plural(ms, d, 'day') ||\\n    plural(ms, h, 'hour') ||\\n    plural(ms, m, 'minute') ||\\n    plural(ms, s, 'second') ||\\n    ms + ' ms'\\n}\\n\\n/**\\n * Pluralization helper.\\n */\\n\\nfunction plural(ms, n, name) {\\n  if (ms < n) {\\n    return\\n  }\\n  if (ms < n * 1.5) {\\n    return Math.floor(ms / n) + ' ' + name\\n  }\\n  return Math.ceil(ms / n) + ' ' + name + 's'\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/debug/~/ms/index.js\\n// module id = 6\\n// module chunks = 0\",\"\\n/**\\n * Module dependencies.\\n */\\n\\nvar debug = require('debug')('socket.io-parser');\\nvar json = require('json3');\\nvar Emitter = require('component-emitter');\\nvar binary = require('./binary');\\nvar isBuf = require('./is-buffer');\\n\\n/**\\n * Protocol version.\\n *\\n * @api public\\n */\\n\\nexports.protocol = 4;\\n\\n/**\\n * Packet types.\\n *\\n * @api public\\n */\\n\\nexports.types = [\\n  'CONNECT',\\n  'DISCONNECT',\\n  'EVENT',\\n  'ACK',\\n  'ERROR',\\n  'BINARY_EVENT',\\n  'BINARY_ACK'\\n];\\n\\n/**\\n * Packet type `connect`.\\n *\\n * @api public\\n */\\n\\nexports.CONNECT = 0;\\n\\n/**\\n * Packet type `disconnect`.\\n *\\n * @api public\\n */\\n\\nexports.DISCONNECT = 1;\\n\\n/**\\n * Packet type `event`.\\n *\\n * @api public\\n */\\n\\nexports.EVENT = 2;\\n\\n/**\\n * Packet type `ack`.\\n *\\n * @api public\\n */\\n\\nexports.ACK = 3;\\n\\n/**\\n * Packet type `error`.\\n *\\n * @api public\\n */\\n\\nexports.ERROR = 4;\\n\\n/**\\n * Packet type 'binary event'\\n *\\n * @api public\\n */\\n\\nexports.BINARY_EVENT = 5;\\n\\n/**\\n * Packet type `binary ack`. For acks with binary arguments.\\n *\\n * @api public\\n */\\n\\nexports.BINARY_ACK = 6;\\n\\n/**\\n * Encoder constructor.\\n *\\n * @api public\\n */\\n\\nexports.Encoder = Encoder;\\n\\n/**\\n * Decoder constructor.\\n *\\n * @api public\\n */\\n\\nexports.Decoder = Decoder;\\n\\n/**\\n * A socket.io Encoder instance\\n *\\n * @api public\\n */\\n\\nfunction Encoder() {}\\n\\n/**\\n * Encode a packet as a single string if non-binary, or as a\\n * buffer sequence, depending on packet type.\\n *\\n * @param {Object} obj - packet object\\n * @param {Function} callback - function to handle encodings (likely engine.write)\\n * @return Calls callback with Array of encodings\\n * @api public\\n */\\n\\nEncoder.prototype.encode = function(obj, callback){\\n  debug('encoding packet %j', obj);\\n\\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\\n    encodeAsBinary(obj, callback);\\n  }\\n  else {\\n    var encoding = encodeAsString(obj);\\n    callback([encoding]);\\n  }\\n};\\n\\n/**\\n * Encode packet as string.\\n *\\n * @param {Object} packet\\n * @return {String} encoded\\n * @api private\\n */\\n\\nfunction encodeAsString(obj) {\\n  var str = '';\\n  var nsp = false;\\n\\n  // first is type\\n  str += obj.type;\\n\\n  // attachments if we have them\\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\\n    str += obj.attachments;\\n    str += '-';\\n  }\\n\\n  // if we have a namespace other than `/`\\n  // we append it followed by a comma `,`\\n  if (obj.nsp && '/' != obj.nsp) {\\n    nsp = true;\\n    str += obj.nsp;\\n  }\\n\\n  // immediately followed by the id\\n  if (null != obj.id) {\\n    if (nsp) {\\n      str += ',';\\n      nsp = false;\\n    }\\n    str += obj.id;\\n  }\\n\\n  // json data\\n  if (null != obj.data) {\\n    if (nsp) str += ',';\\n    str += json.stringify(obj.data);\\n  }\\n\\n  debug('encoded %j as %s', obj, str);\\n  return str;\\n}\\n\\n/**\\n * Encode packet as 'buffer sequence' by removing blobs, and\\n * deconstructing packet into object with placeholders and\\n * a list of buffers.\\n *\\n * @param {Object} packet\\n * @return {Buffer} encoded\\n * @api private\\n */\\n\\nfunction encodeAsBinary(obj, callback) {\\n\\n  function writeEncoding(bloblessData) {\\n    var deconstruction = binary.deconstructPacket(bloblessData);\\n    var pack = encodeAsString(deconstruction.packet);\\n    var buffers = deconstruction.buffers;\\n\\n    buffers.unshift(pack); // add packet info to beginning of data list\\n    callback(buffers); // write all the buffers\\n  }\\n\\n  binary.removeBlobs(obj, writeEncoding);\\n}\\n\\n/**\\n * A socket.io Decoder instance\\n *\\n * @return {Object} decoder\\n * @api public\\n */\\n\\nfunction Decoder() {\\n  this.reconstructor = null;\\n}\\n\\n/**\\n * Mix in `Emitter` with Decoder.\\n */\\n\\nEmitter(Decoder.prototype);\\n\\n/**\\n * Decodes an ecoded packet string into packet JSON.\\n *\\n * @param {String} obj - encoded packet\\n * @return {Object} packet\\n * @api public\\n */\\n\\nDecoder.prototype.add = function(obj) {\\n  var packet;\\n  if ('string' == typeof obj) {\\n    packet = decodeString(obj);\\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\\n      this.reconstructor = new BinaryReconstructor(packet);\\n\\n      // no attachments, labeled binary but no binary data to follow\\n      if (this.reconstructor.reconPack.attachments === 0) {\\n        this.emit('decoded', packet);\\n      }\\n    } else { // non-binary full packet\\n      this.emit('decoded', packet);\\n    }\\n  }\\n  else if (isBuf(obj) || obj.base64) { // raw binary data\\n    if (!this.reconstructor) {\\n      throw new Error('got binary data when not reconstructing a packet');\\n    } else {\\n      packet = this.reconstructor.takeBinaryData(obj);\\n      if (packet) { // received final buffer\\n        this.reconstructor = null;\\n        this.emit('decoded', packet);\\n      }\\n    }\\n  }\\n  else {\\n    throw new Error('Unknown type: ' + obj);\\n  }\\n};\\n\\n/**\\n * Decode a packet String (JSON data)\\n *\\n * @param {String} str\\n * @return {Object} packet\\n * @api private\\n */\\n\\nfunction decodeString(str) {\\n  var p = {};\\n  var i = 0;\\n\\n  // look up type\\n  p.type = Number(str.charAt(0));\\n  if (null == exports.types[p.type]) return error();\\n\\n  // look up attachments if type binary\\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\\n    var buf = '';\\n    while (str.charAt(++i) != '-') {\\n      buf += str.charAt(i);\\n      if (i == str.length) break;\\n    }\\n    if (buf != Number(buf) || str.charAt(i) != '-') {\\n      throw new Error('Illegal attachments');\\n    }\\n    p.attachments = Number(buf);\\n  }\\n\\n  // look up namespace (if any)\\n  if ('/' == str.charAt(i + 1)) {\\n    p.nsp = '';\\n    while (++i) {\\n      var c = str.charAt(i);\\n      if (',' == c) break;\\n      p.nsp += c;\\n      if (i == str.length) break;\\n    }\\n  } else {\\n    p.nsp = '/';\\n  }\\n\\n  // look up id\\n  var next = str.charAt(i + 1);\\n  if ('' !== next && Number(next) == next) {\\n    p.id = '';\\n    while (++i) {\\n      var c = str.charAt(i);\\n      if (null == c || Number(c) != c) {\\n        --i;\\n        break;\\n      }\\n      p.id += str.charAt(i);\\n      if (i == str.length) break;\\n    }\\n    p.id = Number(p.id);\\n  }\\n\\n  // look up json data\\n  if (str.charAt(++i)) {\\n    p = tryParse(p, str.substr(i));\\n  }\\n\\n  debug('decoded %s as %j', str, p);\\n  return p;\\n}\\n\\nfunction tryParse(p, str) {\\n  try {\\n    p.data = json.parse(str);\\n  } catch(e){\\n    return error();\\n  }\\n  return p; \\n};\\n\\n/**\\n * Deallocates a parser's resources\\n *\\n * @api public\\n */\\n\\nDecoder.prototype.destroy = function() {\\n  if (this.reconstructor) {\\n    this.reconstructor.finishedReconstruction();\\n  }\\n};\\n\\n/**\\n * A manager of a binary event's 'buffer sequence'. Should\\n * be constructed whenever a packet of type BINARY_EVENT is\\n * decoded.\\n *\\n * @param {Object} packet\\n * @return {BinaryReconstructor} initialized reconstructor\\n * @api private\\n */\\n\\nfunction BinaryReconstructor(packet) {\\n  this.reconPack = packet;\\n  this.buffers = [];\\n}\\n\\n/**\\n * Method to be called when binary data received from connection\\n * after a BINARY_EVENT packet.\\n *\\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\\n * @return {null | Object} returns null if more binary data is expected or\\n *   a reconstructed packet object if all buffers have been received.\\n * @api private\\n */\\n\\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\\n  this.buffers.push(binData);\\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\\n    this.finishedReconstruction();\\n    return packet;\\n  }\\n  return null;\\n};\\n\\n/**\\n * Cleans up binary packet reconstruction variables.\\n *\\n * @api private\\n */\\n\\nBinaryReconstructor.prototype.finishedReconstruction = function() {\\n  this.reconPack = null;\\n  this.buffers = [];\\n};\\n\\nfunction error(data){\\n  return {\\n    type: exports.ERROR,\\n    data: 'parser error'\\n  };\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/index.js\\n// module id = 7\\n// module chunks = 0\",\"\\n/**\\n * This is the web browser implementation of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\n\\nexports = module.exports = require('./debug');\\nexports.log = log;\\nexports.formatArgs = formatArgs;\\nexports.save = save;\\nexports.load = load;\\nexports.useColors = useColors;\\nexports.storage = 'undefined' != typeof chrome\\n               && 'undefined' != typeof chrome.storage\\n                  ? chrome.storage.local\\n                  : localstorage();\\n\\n/**\\n * Colors.\\n */\\n\\nexports.colors = [\\n  'lightseagreen',\\n  'forestgreen',\\n  'goldenrod',\\n  'dodgerblue',\\n  'darkorchid',\\n  'crimson'\\n];\\n\\n/**\\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n * and the Firebug extension (any Firefox version) are known\\n * to support \\\"%c\\\" CSS customizations.\\n *\\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n */\\n\\nfunction useColors() {\\n  // is webkit? http://stackoverflow.com/a/16459606/376773\\n  return ('WebkitAppearance' in document.documentElement.style) ||\\n    // is firebug? http://stackoverflow.com/a/398120/376773\\n    (window.console && (console.firebug || (console.exception && console.table))) ||\\n    // is firefox >= v31?\\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n    (navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\\n}\\n\\n/**\\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n */\\n\\nexports.formatters.j = function(v) {\\n  return JSON.stringify(v);\\n};\\n\\n\\n/**\\n * Colorize log arguments if enabled.\\n *\\n * @api public\\n */\\n\\nfunction formatArgs() {\\n  var args = arguments;\\n  var useColors = this.useColors;\\n\\n  args[0] = (useColors ? '%c' : '')\\n    + this.namespace\\n    + (useColors ? ' %c' : ' ')\\n    + args[0]\\n    + (useColors ? '%c ' : ' ')\\n    + '+' + exports.humanize(this.diff);\\n\\n  if (!useColors) return args;\\n\\n  var c = 'color: ' + this.color;\\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\\n\\n  // the final \\\"%c\\\" is somewhat tricky, because there could be other\\n  // arguments passed either before or after the %c, so we need to\\n  // figure out the correct index to insert the CSS into\\n  var index = 0;\\n  var lastC = 0;\\n  args[0].replace(/%[a-z%]/g, function(match) {\\n    if ('%%' === match) return;\\n    index++;\\n    if ('%c' === match) {\\n      // we only are interested in the *last* %c\\n      // (the user may have provided their own)\\n      lastC = index;\\n    }\\n  });\\n\\n  args.splice(lastC, 0, c);\\n  return args;\\n}\\n\\n/**\\n * Invokes `console.log()` when available.\\n * No-op when `console.log` is not a \\\"function\\\".\\n *\\n * @api public\\n */\\n\\nfunction log() {\\n  // this hackery is required for IE8/9, where\\n  // the `console.log` function doesn't have 'apply'\\n  return 'object' === typeof console\\n    && console.log\\n    && Function.prototype.apply.call(console.log, console, arguments);\\n}\\n\\n/**\\n * Save `namespaces`.\\n *\\n * @param {String} namespaces\\n * @api private\\n */\\n\\nfunction save(namespaces) {\\n  try {\\n    if (null == namespaces) {\\n      exports.storage.removeItem('debug');\\n    } else {\\n      exports.storage.debug = namespaces;\\n    }\\n  } catch(e) {}\\n}\\n\\n/**\\n * Load `namespaces`.\\n *\\n * @return {String} returns the previously persisted debug modes\\n * @api private\\n */\\n\\nfunction load() {\\n  var r;\\n  try {\\n    r = exports.storage.debug;\\n  } catch(e) {}\\n  return r;\\n}\\n\\n/**\\n * Enable namespaces listed in `localStorage.debug` initially.\\n */\\n\\nexports.enable(load());\\n\\n/**\\n * Localstorage attempts to return the localstorage.\\n *\\n * This is necessary because safari throws\\n * when a user disables cookies/localstorage\\n * and you attempt to access it.\\n *\\n * @return {LocalStorage}\\n * @api private\\n */\\n\\nfunction localstorage(){\\n  try {\\n    return window.localStorage;\\n  } catch (e) {}\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/~/debug/browser.js\\n// module id = 8\\n// module chunks = 0\",\"\\n/**\\n * This is the common logic for both the Node.js and web browser\\n * implementations of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\n\\nexports = module.exports = debug;\\nexports.coerce = coerce;\\nexports.disable = disable;\\nexports.enable = enable;\\nexports.enabled = enabled;\\nexports.humanize = require('ms');\\n\\n/**\\n * The currently active debug mode names, and names to skip.\\n */\\n\\nexports.names = [];\\nexports.skips = [];\\n\\n/**\\n * Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n *\\n * Valid key names are a single, lowercased letter, i.e. \\\"n\\\".\\n */\\n\\nexports.formatters = {};\\n\\n/**\\n * Previously assigned color.\\n */\\n\\nvar prevColor = 0;\\n\\n/**\\n * Previous log timestamp.\\n */\\n\\nvar prevTime;\\n\\n/**\\n * Select a color.\\n *\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction selectColor() {\\n  return exports.colors[prevColor++ % exports.colors.length];\\n}\\n\\n/**\\n * Create a debugger with the given `namespace`.\\n *\\n * @param {String} namespace\\n * @return {Function}\\n * @api public\\n */\\n\\nfunction debug(namespace) {\\n\\n  // define the `disabled` version\\n  function disabled() {\\n  }\\n  disabled.enabled = false;\\n\\n  // define the `enabled` version\\n  function enabled() {\\n\\n    var self = enabled;\\n\\n    // set `diff` timestamp\\n    var curr = +new Date();\\n    var ms = curr - (prevTime || curr);\\n    self.diff = ms;\\n    self.prev = prevTime;\\n    self.curr = curr;\\n    prevTime = curr;\\n\\n    // add the `color` if not set\\n    if (null == self.useColors) self.useColors = exports.useColors();\\n    if (null == self.color && self.useColors) self.color = selectColor();\\n\\n    var args = Array.prototype.slice.call(arguments);\\n\\n    args[0] = exports.coerce(args[0]);\\n\\n    if ('string' !== typeof args[0]) {\\n      // anything else let's inspect with %o\\n      args = ['%o'].concat(args);\\n    }\\n\\n    // apply any `formatters` transformations\\n    var index = 0;\\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\\n      // if we encounter an escaped % then don't increase the array index\\n      if (match === '%%') return match;\\n      index++;\\n      var formatter = exports.formatters[format];\\n      if ('function' === typeof formatter) {\\n        var val = args[index];\\n        match = formatter.call(self, val);\\n\\n        // now we need to remove `args[index]` since it's inlined in the `format`\\n        args.splice(index, 1);\\n        index--;\\n      }\\n      return match;\\n    });\\n\\n    if ('function' === typeof exports.formatArgs) {\\n      args = exports.formatArgs.apply(self, args);\\n    }\\n    var logFn = enabled.log || exports.log || console.log.bind(console);\\n    logFn.apply(self, args);\\n  }\\n  enabled.enabled = true;\\n\\n  var fn = exports.enabled(namespace) ? enabled : disabled;\\n\\n  fn.namespace = namespace;\\n\\n  return fn;\\n}\\n\\n/**\\n * Enables a debug mode by namespaces. This can include modes\\n * separated by a colon and wildcards.\\n *\\n * @param {String} namespaces\\n * @api public\\n */\\n\\nfunction enable(namespaces) {\\n  exports.save(namespaces);\\n\\n  var split = (namespaces || '').split(/[\\\\s,]+/);\\n  var len = split.length;\\n\\n  for (var i = 0; i < len; i++) {\\n    if (!split[i]) continue; // ignore empty strings\\n    namespaces = split[i].replace(/\\\\*/g, '.*?');\\n    if (namespaces[0] === '-') {\\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n    } else {\\n      exports.names.push(new RegExp('^' + namespaces + '$'));\\n    }\\n  }\\n}\\n\\n/**\\n * Disable debug output.\\n *\\n * @api public\\n */\\n\\nfunction disable() {\\n  exports.enable('');\\n}\\n\\n/**\\n * Returns true if the given mode name is enabled, false otherwise.\\n *\\n * @param {String} name\\n * @return {Boolean}\\n * @api public\\n */\\n\\nfunction enabled(name) {\\n  var i, len;\\n  for (i = 0, len = exports.skips.length; i < len; i++) {\\n    if (exports.skips[i].test(name)) {\\n      return false;\\n    }\\n  }\\n  for (i = 0, len = exports.names.length; i < len; i++) {\\n    if (exports.names[i].test(name)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/**\\n * Coerce `val`.\\n *\\n * @param {Mixed} val\\n * @return {Mixed}\\n * @api private\\n */\\n\\nfunction coerce(val) {\\n  if (val instanceof Error) return val.stack || val.message;\\n  return val;\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/~/debug/debug.js\\n// module id = 9\\n// module chunks = 0\",\"/**\\n * Helpers.\\n */\\n\\nvar s = 1000;\\nvar m = s * 60;\\nvar h = m * 60;\\nvar d = h * 24;\\nvar y = d * 365.25;\\n\\n/**\\n * Parse or format the given `val`.\\n *\\n * Options:\\n *\\n *  - `long` verbose formatting [false]\\n *\\n * @param {String|Number} val\\n * @param {Object} options\\n * @return {String|Number}\\n * @api public\\n */\\n\\nmodule.exports = function(val, options){\\n  options = options || {};\\n  if ('string' == typeof val) return parse(val);\\n  return options.long\\n    ? long(val)\\n    : short(val);\\n};\\n\\n/**\\n * Parse the given `str` and return milliseconds.\\n *\\n * @param {String} str\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction parse(str) {\\n  str = '' + str;\\n  if (str.length > 10000) return;\\n  var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\\n  if (!match) return;\\n  var n = parseFloat(match[1]);\\n  var type = (match[2] || 'ms').toLowerCase();\\n  switch (type) {\\n    case 'years':\\n    case 'year':\\n    case 'yrs':\\n    case 'yr':\\n    case 'y':\\n      return n * y;\\n    case 'days':\\n    case 'day':\\n    case 'd':\\n      return n * d;\\n    case 'hours':\\n    case 'hour':\\n    case 'hrs':\\n    case 'hr':\\n    case 'h':\\n      return n * h;\\n    case 'minutes':\\n    case 'minute':\\n    case 'mins':\\n    case 'min':\\n    case 'm':\\n      return n * m;\\n    case 'seconds':\\n    case 'second':\\n    case 'secs':\\n    case 'sec':\\n    case 's':\\n      return n * s;\\n    case 'milliseconds':\\n    case 'millisecond':\\n    case 'msecs':\\n    case 'msec':\\n    case 'ms':\\n      return n;\\n  }\\n}\\n\\n/**\\n * Short format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\nfunction short(ms) {\\n  if (ms >= d) return Math.round(ms / d) + 'd';\\n  if (ms >= h) return Math.round(ms / h) + 'h';\\n  if (ms >= m) return Math.round(ms / m) + 'm';\\n  if (ms >= s) return Math.round(ms / s) + 's';\\n  return ms + 'ms';\\n}\\n\\n/**\\n * Long format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\nfunction long(ms) {\\n  return plural(ms, d, 'day')\\n    || plural(ms, h, 'hour')\\n    || plural(ms, m, 'minute')\\n    || plural(ms, s, 'second')\\n    || ms + ' ms';\\n}\\n\\n/**\\n * Pluralization helper.\\n */\\n\\nfunction plural(ms, n, name) {\\n  if (ms < n) return;\\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\\n  return Math.ceil(ms / n) + ' ' + name + 's';\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/~/debug/~/ms/index.js\\n// module id = 10\\n// module chunks = 0\",\"/*** IMPORTS FROM imports-loader ***/\\nvar define = false;\\n\\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\\n;(function () {\\n  // Detect the `define` function exposed by asynchronous module loaders. The\\n  // strict `define` check is necessary for compatibility with `r.js`.\\n  var isLoader = typeof define === \\\"function\\\" && define.amd;\\n\\n  // A set of types used to distinguish objects from primitives.\\n  var objectTypes = {\\n    \\\"function\\\": true,\\n    \\\"object\\\": true\\n  };\\n\\n  // Detect the `exports` object exposed by CommonJS implementations.\\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\\n\\n  // Use the `global` object exposed by Node (including Browserify via\\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\\n  // and the `window` object in browsers. Rhino exports a `global` function\\n  // instead.\\n  var root = objectTypes[typeof window] && window || this,\\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \\\"object\\\" && global;\\n\\n  if (freeGlobal && (freeGlobal[\\\"global\\\"] === freeGlobal || freeGlobal[\\\"window\\\"] === freeGlobal || freeGlobal[\\\"self\\\"] === freeGlobal)) {\\n    root = freeGlobal;\\n  }\\n\\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\\n  // `stringify` and `parse` functions to the specified `exports` object.\\n  function runInContext(context, exports) {\\n    context || (context = root[\\\"Object\\\"]());\\n    exports || (exports = root[\\\"Object\\\"]());\\n\\n    // Native constructor aliases.\\n    var Number = context[\\\"Number\\\"] || root[\\\"Number\\\"],\\n        String = context[\\\"String\\\"] || root[\\\"String\\\"],\\n        Object = context[\\\"Object\\\"] || root[\\\"Object\\\"],\\n        Date = context[\\\"Date\\\"] || root[\\\"Date\\\"],\\n        SyntaxError = context[\\\"SyntaxError\\\"] || root[\\\"SyntaxError\\\"],\\n        TypeError = context[\\\"TypeError\\\"] || root[\\\"TypeError\\\"],\\n        Math = context[\\\"Math\\\"] || root[\\\"Math\\\"],\\n        nativeJSON = context[\\\"JSON\\\"] || root[\\\"JSON\\\"];\\n\\n    // Delegate to the native `stringify` and `parse` implementations.\\n    if (typeof nativeJSON == \\\"object\\\" && nativeJSON) {\\n      exports.stringify = nativeJSON.stringify;\\n      exports.parse = nativeJSON.parse;\\n    }\\n\\n    // Convenience aliases.\\n    var objectProto = Object.prototype,\\n        getClass = objectProto.toString,\\n        isProperty, forEach, undef;\\n\\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\\n    var isExtended = new Date(-3509827334573292);\\n    try {\\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\\n      // results for certain dates in Opera >= 10.53.\\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\\n        // but clips the values returned by the date methods to the range of\\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\\n    } catch (exception) {}\\n\\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\\n    // implementations are spec-compliant. Based on work by Ken Snyder.\\n    function has(name) {\\n      if (has[name] !== undef) {\\n        // Return cached feature test result.\\n        return has[name];\\n      }\\n      var isSupported;\\n      if (name == \\\"bug-string-char-index\\\") {\\n        // IE <= 7 doesn't support accessing string characters using square\\n        // bracket notation. IE 8 only supports this for primitives.\\n        isSupported = \\\"a\\\"[0] != \\\"a\\\";\\n      } else if (name == \\\"json\\\") {\\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\\n        // supported.\\n        isSupported = has(\\\"json-stringify\\\") && has(\\\"json-parse\\\");\\n      } else {\\n        var value, serialized = '{\\\"a\\\":[1,true,false,null,\\\"\\\\\\\\u0000\\\\\\\\b\\\\\\\\n\\\\\\\\f\\\\\\\\r\\\\\\\\t\\\"]}';\\n        // Test `JSON.stringify`.\\n        if (name == \\\"json-stringify\\\") {\\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \\\"function\\\" && isExtended;\\n          if (stringifySupported) {\\n            // A test function object with a custom `toJSON` method.\\n            (value = function () {\\n              return 1;\\n            }).toJSON = value;\\n            try {\\n              stringifySupported =\\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\\n                // primitives as object literals.\\n                stringify(0) === \\\"0\\\" &&\\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\\n                // literals.\\n                stringify(new Number()) === \\\"0\\\" &&\\n                stringify(new String()) == '\\\"\\\"' &&\\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\\n                // does not define a canonical JSON representation (this applies to\\n                // objects with `toJSON` properties as well, *unless* they are nested\\n                // within an object or array).\\n                stringify(getClass) === undef &&\\n                // IE 8 serializes `undefined` as `\\\"undefined\\\"`. Safari <= 5.1.7 and\\n                // FF 3.1b3 pass this test.\\n                stringify(undef) === undef &&\\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\\n                // respectively, if the value is omitted entirely.\\n                stringify() === undef &&\\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\\n                // string, array, object, Boolean, or `null` literal. This applies to\\n                // objects with custom `toJSON` methods as well, unless they are nested\\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\\n                // methods entirely.\\n                stringify(value) === \\\"1\\\" &&\\n                stringify([value]) == \\\"[1]\\\" &&\\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\\\"[]\\\"` instead of\\n                // `\\\"[null]\\\"`.\\n                stringify([undef]) == \\\"[null]\\\" &&\\n                // YUI 3.0.0b1 fails to serialize `null` literals.\\n                stringify(null) == \\\"null\\\" &&\\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\\n                // `[1, true, getClass, 1]` serializes as \\\"[1,true,],\\\". FF 3.1b3\\n                // elides non-JSON values from objects and arrays, unless they\\n                // define custom `toJSON` methods.\\n                stringify([undef, getClass, null]) == \\\"[null,null,null]\\\" &&\\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\\n                // where character escape codes are expected (e.g., `\\\\b` => `\\\\u0008`).\\n                stringify({ \\\"a\\\": [value, true, false, null, \\\"\\\\x00\\\\b\\\\n\\\\f\\\\r\\\\t\\\"] }) == serialized &&\\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\\n                stringify(null, value) === \\\"1\\\" &&\\n                stringify([1, 2], null, 1) == \\\"[\\\\n 1,\\\\n 2\\\\n]\\\" &&\\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\\n                // serialize extended years.\\n                stringify(new Date(-8.64e15)) == '\\\"-271821-04-20T00:00:00.000Z\\\"' &&\\n                // The milliseconds are optional in ES 5, but required in 5.1.\\n                stringify(new Date(8.64e15)) == '\\\"+275760-09-13T00:00:00.000Z\\\"' &&\\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\\n                stringify(new Date(-621987552e5)) == '\\\"-000001-01-01T00:00:00.000Z\\\"' &&\\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\\n                // values less than 1000. Credits: @Yaffle.\\n                stringify(new Date(-1)) == '\\\"1969-12-31T23:59:59.999Z\\\"';\\n            } catch (exception) {\\n              stringifySupported = false;\\n            }\\n          }\\n          isSupported = stringifySupported;\\n        }\\n        // Test `JSON.parse`.\\n        if (name == \\\"json-parse\\\") {\\n          var parse = exports.parse;\\n          if (typeof parse == \\\"function\\\") {\\n            try {\\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\\n              // Conforming implementations should also coerce the initial argument to\\n              // a string prior to parsing.\\n              if (parse(\\\"0\\\") === 0 && !parse(false)) {\\n                // Simple parsing test.\\n                value = parse(serialized);\\n                var parseSupported = value[\\\"a\\\"].length == 5 && value[\\\"a\\\"][0] === 1;\\n                if (parseSupported) {\\n                  try {\\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\\n                    parseSupported = !parse('\\\"\\\\t\\\"');\\n                  } catch (exception) {}\\n                  if (parseSupported) {\\n                    try {\\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\\n                      // certain octal literals.\\n                      parseSupported = parse(\\\"01\\\") !== 1;\\n                    } catch (exception) {}\\n                  }\\n                  if (parseSupported) {\\n                    try {\\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\\n                      // points. These environments, along with FF 3.1b1 and 2,\\n                      // also allow trailing commas in JSON objects and arrays.\\n                      parseSupported = parse(\\\"1.\\\") !== 1;\\n                    } catch (exception) {}\\n                  }\\n                }\\n              }\\n            } catch (exception) {\\n              parseSupported = false;\\n            }\\n          }\\n          isSupported = parseSupported;\\n        }\\n      }\\n      return has[name] = !!isSupported;\\n    }\\n\\n    if (!has(\\\"json\\\")) {\\n      // Common `[[Class]]` name aliases.\\n      var functionClass = \\\"[object Function]\\\",\\n          dateClass = \\\"[object Date]\\\",\\n          numberClass = \\\"[object Number]\\\",\\n          stringClass = \\\"[object String]\\\",\\n          arrayClass = \\\"[object Array]\\\",\\n          booleanClass = \\\"[object Boolean]\\\";\\n\\n      // Detect incomplete support for accessing string characters by index.\\n      var charIndexBuggy = has(\\\"bug-string-char-index\\\");\\n\\n      // Define additional utility methods if the `Date` methods are buggy.\\n      if (!isExtended) {\\n        var floor = Math.floor;\\n        // A mapping between the months of the year and the number of days between\\n        // January 1st and the first of the respective month.\\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\\n        // Internal: Calculates the number of days between the Unix epoch and the\\n        // first day of the given month.\\n        var getDay = function (year, month) {\\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\\n        };\\n      }\\n\\n      // Internal: Determines if a property is a direct property of the given\\n      // object. Delegates to the native `Object#hasOwnProperty` method.\\n      if (!(isProperty = objectProto.hasOwnProperty)) {\\n        isProperty = function (property) {\\n          var members = {}, constructor;\\n          if ((members.__proto__ = null, members.__proto__ = {\\n            // The *proto* property cannot be set multiple times in recent\\n            // versions of Firefox and SeaMonkey.\\n            \\\"toString\\\": 1\\n          }, members).toString != getClass) {\\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\\n            // supports the mutable *proto* property.\\n            isProperty = function (property) {\\n              // Capture and break the object's prototype chain (see section 8.6.2\\n              // of the ES 5.1 spec). The parenthesized expression prevents an\\n              // unsafe transformation by the Closure Compiler.\\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\\n              // Restore the original prototype chain.\\n              this.__proto__ = original;\\n              return result;\\n            };\\n          } else {\\n            // Capture a reference to the top-level `Object` constructor.\\n            constructor = members.constructor;\\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\\n            // other environments.\\n            isProperty = function (property) {\\n              var parent = (this.constructor || constructor).prototype;\\n              return property in this && !(property in parent && this[property] === parent[property]);\\n            };\\n          }\\n          members = null;\\n          return isProperty.call(this, property);\\n        };\\n      }\\n\\n      // Internal: Normalizes the `for...in` iteration algorithm across\\n      // environments. Each enumerated key is yielded to a `callback` function.\\n      forEach = function (object, callback) {\\n        var size = 0, Properties, members, property;\\n\\n        // Tests for bugs in the current environment's `for...in` algorithm. The\\n        // `valueOf` property inherits the non-enumerable flag from\\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\\n        (Properties = function () {\\n          this.valueOf = 0;\\n        }).prototype.valueOf = 0;\\n\\n        // Iterate over a new instance of the `Properties` class.\\n        members = new Properties();\\n        for (property in members) {\\n          // Ignore all properties inherited from `Object.prototype`.\\n          if (isProperty.call(members, property)) {\\n            size++;\\n          }\\n        }\\n        Properties = members = null;\\n\\n        // Normalize the iteration algorithm.\\n        if (!size) {\\n          // A list of non-enumerable properties inherited from `Object.prototype`.\\n          members = [\\\"valueOf\\\", \\\"toString\\\", \\\"toLocaleString\\\", \\\"propertyIsEnumerable\\\", \\\"isPrototypeOf\\\", \\\"hasOwnProperty\\\", \\\"constructor\\\"];\\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\\n          // properties.\\n          forEach = function (object, callback) {\\n            var isFunction = getClass.call(object) == functionClass, property, length;\\n            var hasProperty = !isFunction && typeof object.constructor != \\\"function\\\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\\n            for (property in object) {\\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\\n              // certain conditions; IE does not.\\n              if (!(isFunction && property == \\\"prototype\\\") && hasProperty.call(object, property)) {\\n                callback(property);\\n              }\\n            }\\n            // Manually invoke the callback for each non-enumerable property.\\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\\n          };\\n        } else if (size == 2) {\\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\\n          forEach = function (object, callback) {\\n            // Create a set of iterated properties.\\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\\n            for (property in object) {\\n              // Store each property name to prevent double enumeration. The\\n              // `prototype` property of functions is not enumerated due to cross-\\n              // environment inconsistencies.\\n              if (!(isFunction && property == \\\"prototype\\\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\\n                callback(property);\\n              }\\n            }\\n          };\\n        } else {\\n          // No bugs detected; use the standard `for...in` algorithm.\\n          forEach = function (object, callback) {\\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\\n            for (property in object) {\\n              if (!(isFunction && property == \\\"prototype\\\") && isProperty.call(object, property) && !(isConstructor = property === \\\"constructor\\\")) {\\n                callback(property);\\n              }\\n            }\\n            // Manually invoke the callback for the `constructor` property due to\\n            // cross-environment inconsistencies.\\n            if (isConstructor || isProperty.call(object, (property = \\\"constructor\\\"))) {\\n              callback(property);\\n            }\\n          };\\n        }\\n        return forEach(object, callback);\\n      };\\n\\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\\n      // `filter` argument may specify either a function that alters how object and\\n      // array members are serialized, or an array of strings and numbers that\\n      // indicates which properties should be serialized. The optional `width`\\n      // argument may be either a string or number that specifies the indentation\\n      // level of the output.\\n      if (!has(\\\"json-stringify\\\")) {\\n        // Internal: A map of control characters and their escaped equivalents.\\n        var Escapes = {\\n          92: \\\"\\\\\\\\\\\\\\\\\\\",\\n          34: '\\\\\\\\\\\"',\\n          8: \\\"\\\\\\\\b\\\",\\n          12: \\\"\\\\\\\\f\\\",\\n          10: \\\"\\\\\\\\n\\\",\\n          13: \\\"\\\\\\\\r\\\",\\n          9: \\\"\\\\\\\\t\\\"\\n        };\\n\\n        // Internal: Converts `value` into a zero-padded string such that its\\n        // length is at least equal to `width`. The `width` must be <= 6.\\n        var leadingZeroes = \\\"000000\\\";\\n        var toPaddedString = function (width, value) {\\n          // The `|| 0` expression is necessary to work around a bug in\\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \\\"0\\\"`.\\n          return (leadingZeroes + (value || 0)).slice(-width);\\n        };\\n\\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\\n        // characters (characters with code unit values between 0 and 31) with\\n        // their escaped equivalents. This is an implementation of the\\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\\n        var unicodePrefix = \\\"\\\\\\\\u00\\\";\\n        var quote = function (value) {\\n          var result = '\\\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\\\"\\\") : value);\\n          for (; index < length; index++) {\\n            var charCode = value.charCodeAt(index);\\n            // If the character is a control character, append its Unicode or\\n            // shorthand escape sequence; otherwise, append the character as-is.\\n            switch (charCode) {\\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\\n                result += Escapes[charCode];\\n                break;\\n              default:\\n                if (charCode < 32) {\\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\\n                  break;\\n                }\\n                result += useCharIndex ? symbols[index] : value.charAt(index);\\n            }\\n          }\\n          return result + '\\\"';\\n        };\\n\\n        // Internal: Recursively serializes an object. Implements the\\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\\n          try {\\n            // Necessary for host object support.\\n            value = object[property];\\n          } catch (exception) {}\\n          if (typeof value == \\\"object\\\" && value) {\\n            className = getClass.call(value);\\n            if (className == dateClass && !isProperty.call(value, \\\"toJSON\\\")) {\\n              if (value > -1 / 0 && value < 1 / 0) {\\n                // Dates are serialized according to the `Date#toJSON` method\\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\\n                // for the ISO 8601 date time string format.\\n                if (getDay) {\\n                  // Manually compute the year, month, date, hours, minutes,\\n                  // seconds, and milliseconds if the `getUTC*` methods are\\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\\n                  date = floor(value / 864e5);\\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\\n                  date = 1 + date - getDay(year, month);\\n                  // The `time` value specifies the time within the day (see ES\\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\\n                  // to compute `A modulo B`, as the `%` operator does not\\n                  // correspond to the `modulo` operation for negative numbers.\\n                  time = (value % 864e5 + 864e5) % 864e5;\\n                  // The hours, minutes, seconds, and milliseconds are obtained by\\n                  // decomposing the time within the day. See section 15.9.1.10.\\n                  hours = floor(time / 36e5) % 24;\\n                  minutes = floor(time / 6e4) % 60;\\n                  seconds = floor(time / 1e3) % 60;\\n                  milliseconds = time % 1e3;\\n                } else {\\n                  year = value.getUTCFullYear();\\n                  month = value.getUTCMonth();\\n                  date = value.getUTCDate();\\n                  hours = value.getUTCHours();\\n                  minutes = value.getUTCMinutes();\\n                  seconds = value.getUTCSeconds();\\n                  milliseconds = value.getUTCMilliseconds();\\n                }\\n                // Serialize extended years correctly.\\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \\\"-\\\" : \\\"+\\\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\\n                  \\\"-\\\" + toPaddedString(2, month + 1) + \\\"-\\\" + toPaddedString(2, date) +\\n                  // Months, dates, hours, minutes, and seconds should have two\\n                  // digits; milliseconds should have three.\\n                  \\\"T\\\" + toPaddedString(2, hours) + \\\":\\\" + toPaddedString(2, minutes) + \\\":\\\" + toPaddedString(2, seconds) +\\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\\n                  \\\".\\\" + toPaddedString(3, milliseconds) + \\\"Z\\\";\\n              } else {\\n                value = null;\\n              }\\n            } else if (typeof value.toJSON == \\\"function\\\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \\\"toJSON\\\"))) {\\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\\n              // ignores all `toJSON` methods on these objects unless they are\\n              // defined directly on an instance.\\n              value = value.toJSON(property);\\n            }\\n          }\\n          if (callback) {\\n            // If a replacement function was provided, call it to obtain the value\\n            // for serialization.\\n            value = callback.call(object, property, value);\\n          }\\n          if (value === null) {\\n            return \\\"null\\\";\\n          }\\n          className = getClass.call(value);\\n          if (className == booleanClass) {\\n            // Booleans are represented literally.\\n            return \\\"\\\" + value;\\n          } else if (className == numberClass) {\\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\\n            // `\\\"null\\\"`.\\n            return value > -1 / 0 && value < 1 / 0 ? \\\"\\\" + value : \\\"null\\\";\\n          } else if (className == stringClass) {\\n            // Strings are double-quoted and escaped.\\n            return quote(\\\"\\\" + value);\\n          }\\n          // Recursively serialize objects and arrays.\\n          if (typeof value == \\\"object\\\") {\\n            // Check for cyclic structures. This is a linear search; performance\\n            // is inversely proportional to the number of unique nested objects.\\n            for (length = stack.length; length--;) {\\n              if (stack[length] === value) {\\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\\n                throw TypeError();\\n              }\\n            }\\n            // Add the object to the stack of traversed objects.\\n            stack.push(value);\\n            results = [];\\n            // Save the current indentation level and indent one additional level.\\n            prefix = indentation;\\n            indentation += whitespace;\\n            if (className == arrayClass) {\\n              // Recursively serialize array elements.\\n              for (index = 0, length = value.length; index < length; index++) {\\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\\n                results.push(element === undef ? \\\"null\\\" : element);\\n              }\\n              result = results.length ? (whitespace ? \\\"[\\\\n\\\" + indentation + results.join(\\\",\\\\n\\\" + indentation) + \\\"\\\\n\\\" + prefix + \\\"]\\\" : (\\\"[\\\" + results.join(\\\",\\\") + \\\"]\\\")) : \\\"[]\\\";\\n            } else {\\n              // Recursively serialize object members. Members are selected from\\n              // either a user-specified list of property names, or the object\\n              // itself.\\n              forEach(properties || value, function (property) {\\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\\n                if (element !== undef) {\\n                  // According to ES 5.1 section 15.12.3: \\\"If `gap` {whitespace}\\n                  // is not the empty string, let `member` {quote(property) + \\\":\\\"}\\n                  // be the concatenation of `member` and the `space` character.\\\"\\n                  // The \\\"`space` character\\\" refers to the literal space\\n                  // character, not the `space` {width} argument provided to\\n                  // `JSON.stringify`.\\n                  results.push(quote(property) + \\\":\\\" + (whitespace ? \\\" \\\" : \\\"\\\") + element);\\n                }\\n              });\\n              result = results.length ? (whitespace ? \\\"{\\\\n\\\" + indentation + results.join(\\\",\\\\n\\\" + indentation) + \\\"\\\\n\\\" + prefix + \\\"}\\\" : (\\\"{\\\" + results.join(\\\",\\\") + \\\"}\\\")) : \\\"{}\\\";\\n            }\\n            // Remove the object from the traversed object stack.\\n            stack.pop();\\n            return result;\\n          }\\n        };\\n\\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\\n        exports.stringify = function (source, filter, width) {\\n          var whitespace, callback, properties, className;\\n          if (objectTypes[typeof filter] && filter) {\\n            if ((className = getClass.call(filter)) == functionClass) {\\n              callback = filter;\\n            } else if (className == arrayClass) {\\n              // Convert the property names array into a makeshift set.\\n              properties = {};\\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\\n            }\\n          }\\n          if (width) {\\n            if ((className = getClass.call(width)) == numberClass) {\\n              // Convert the `width` to an integer and create a string containing\\n              // `width` number of space characters.\\n              if ((width -= width % 1) > 0) {\\n                for (whitespace = \\\"\\\", width > 10 && (width = 10); whitespace.length < width; whitespace += \\\" \\\");\\n              }\\n            } else if (className == stringClass) {\\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\\n            }\\n          }\\n          // Opera <= 7.54u2 discards the values associated with empty string keys\\n          // (`\\\"\\\"`) only if they are used directly within an object member list\\n          // (e.g., `!(\\\"\\\" in { \\\"\\\": 1})`).\\n          return serialize(\\\"\\\", (value = {}, value[\\\"\\\"] = source, value), callback, properties, whitespace, \\\"\\\", []);\\n        };\\n      }\\n\\n      // Public: Parses a JSON source string.\\n      if (!has(\\\"json-parse\\\")) {\\n        var fromCharCode = String.fromCharCode;\\n\\n        // Internal: A map of escaped control characters and their unescaped\\n        // equivalents.\\n        var Unescapes = {\\n          92: \\\"\\\\\\\\\\\",\\n          34: '\\\"',\\n          47: \\\"/\\\",\\n          98: \\\"\\\\b\\\",\\n          116: \\\"\\\\t\\\",\\n          110: \\\"\\\\n\\\",\\n          102: \\\"\\\\f\\\",\\n          114: \\\"\\\\r\\\"\\n        };\\n\\n        // Internal: Stores the parser state.\\n        var Index, Source;\\n\\n        // Internal: Resets the parser state and throws a `SyntaxError`.\\n        var abort = function () {\\n          Index = Source = null;\\n          throw SyntaxError();\\n        };\\n\\n        // Internal: Returns the next token, or `\\\"$\\\"` if the parser has reached\\n        // the end of the source string. A token may be a string, number, `null`\\n        // literal, or Boolean literal.\\n        var lex = function () {\\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\\n          while (Index < length) {\\n            charCode = source.charCodeAt(Index);\\n            switch (charCode) {\\n              case 9: case 10: case 13: case 32:\\n                // Skip whitespace tokens, including tabs, carriage returns, line\\n                // feeds, and space characters.\\n                Index++;\\n                break;\\n              case 123: case 125: case 91: case 93: case 58: case 44:\\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\\n                // the current position.\\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\\n                Index++;\\n                return value;\\n              case 34:\\n                // `\\\"` delimits a JSON string; advance to the next character and\\n                // begin parsing the string. String tokens are prefixed with the\\n                // sentinel `@` character to distinguish them from punctuators and\\n                // end-of-string tokens.\\n                for (value = \\\"@\\\", Index++; Index < length;) {\\n                  charCode = source.charCodeAt(Index);\\n                  if (charCode < 32) {\\n                    // Unescaped ASCII control characters (those with a code unit\\n                    // less than the space character) are not permitted.\\n                    abort();\\n                  } else if (charCode == 92) {\\n                    // A reverse solidus (`\\\\`) marks the beginning of an escaped\\n                    // control character (including `\\\"`, `\\\\`, and `/`) or Unicode\\n                    // escape sequence.\\n                    charCode = source.charCodeAt(++Index);\\n                    switch (charCode) {\\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\\n                        // Revive escaped control characters.\\n                        value += Unescapes[charCode];\\n                        Index++;\\n                        break;\\n                      case 117:\\n                        // `\\\\u` marks the beginning of a Unicode escape sequence.\\n                        // Advance to the first character and validate the\\n                        // four-digit code point.\\n                        begin = ++Index;\\n                        for (position = Index + 4; Index < position; Index++) {\\n                          charCode = source.charCodeAt(Index);\\n                          // A valid sequence comprises four hexdigits (case-\\n                          // insensitive) that form a single hexadecimal value.\\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\\n                            // Invalid Unicode escape sequence.\\n                            abort();\\n                          }\\n                        }\\n                        // Revive the escaped character.\\n                        value += fromCharCode(\\\"0x\\\" + source.slice(begin, Index));\\n                        break;\\n                      default:\\n                        // Invalid escape sequence.\\n                        abort();\\n                    }\\n                  } else {\\n                    if (charCode == 34) {\\n                      // An unescaped double-quote character marks the end of the\\n                      // string.\\n                      break;\\n                    }\\n                    charCode = source.charCodeAt(Index);\\n                    begin = Index;\\n                    // Optimize for the common case where a string is valid.\\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\\n                      charCode = source.charCodeAt(++Index);\\n                    }\\n                    // Append the string as-is.\\n                    value += source.slice(begin, Index);\\n                  }\\n                }\\n                if (source.charCodeAt(Index) == 34) {\\n                  // Advance to the next character and return the revived string.\\n                  Index++;\\n                  return value;\\n                }\\n                // Unterminated string.\\n                abort();\\n              default:\\n                // Parse numbers and literals.\\n                begin = Index;\\n                // Advance past the negative sign, if one is specified.\\n                if (charCode == 45) {\\n                  isSigned = true;\\n                  charCode = source.charCodeAt(++Index);\\n                }\\n                // Parse an integer or floating-point value.\\n                if (charCode >= 48 && charCode <= 57) {\\n                  // Leading zeroes are interpreted as octal literals.\\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\\n                    // Illegal octal literal.\\n                    abort();\\n                  }\\n                  isSigned = false;\\n                  // Parse the integer component.\\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\\n                  // Floats cannot contain a leading decimal point; however, this\\n                  // case is already accounted for by the parser.\\n                  if (source.charCodeAt(Index) == 46) {\\n                    position = ++Index;\\n                    // Parse the decimal component.\\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\\n                    if (position == Index) {\\n                      // Illegal trailing decimal.\\n                      abort();\\n                    }\\n                    Index = position;\\n                  }\\n                  // Parse exponents. The `e` denoting the exponent is\\n                  // case-insensitive.\\n                  charCode = source.charCodeAt(Index);\\n                  if (charCode == 101 || charCode == 69) {\\n                    charCode = source.charCodeAt(++Index);\\n                    // Skip past the sign following the exponent, if one is\\n                    // specified.\\n                    if (charCode == 43 || charCode == 45) {\\n                      Index++;\\n                    }\\n                    // Parse the exponential component.\\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\\n                    if (position == Index) {\\n                      // Illegal empty exponent.\\n                      abort();\\n                    }\\n                    Index = position;\\n                  }\\n                  // Coerce the parsed value to a JavaScript number.\\n                  return +source.slice(begin, Index);\\n                }\\n                // A negative sign may only precede numbers.\\n                if (isSigned) {\\n                  abort();\\n                }\\n                // `true`, `false`, and `null` literals.\\n                if (source.slice(Index, Index + 4) == \\\"true\\\") {\\n                  Index += 4;\\n                  return true;\\n                } else if (source.slice(Index, Index + 5) == \\\"false\\\") {\\n                  Index += 5;\\n                  return false;\\n                } else if (source.slice(Index, Index + 4) == \\\"null\\\") {\\n                  Index += 4;\\n                  return null;\\n                }\\n                // Unrecognized token.\\n                abort();\\n            }\\n          }\\n          // Return the sentinel `$` character if the parser has reached the end\\n          // of the source string.\\n          return \\\"$\\\";\\n        };\\n\\n        // Internal: Parses a JSON `value` token.\\n        var get = function (value) {\\n          var results, hasMembers;\\n          if (value == \\\"$\\\") {\\n            // Unexpected end of input.\\n            abort();\\n          }\\n          if (typeof value == \\\"string\\\") {\\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \\\"@\\\") {\\n              // Remove the sentinel `@` character.\\n              return value.slice(1);\\n            }\\n            // Parse object and array literals.\\n            if (value == \\\"[\\\") {\\n              // Parses a JSON array, returning a new JavaScript array.\\n              results = [];\\n              for (;; hasMembers || (hasMembers = true)) {\\n                value = lex();\\n                // A closing square bracket marks the end of the array literal.\\n                if (value == \\\"]\\\") {\\n                  break;\\n                }\\n                // If the array literal contains elements, the current token\\n                // should be a comma separating the previous element from the\\n                // next.\\n                if (hasMembers) {\\n                  if (value == \\\",\\\") {\\n                    value = lex();\\n                    if (value == \\\"]\\\") {\\n                      // Unexpected trailing `,` in array literal.\\n                      abort();\\n                    }\\n                  } else {\\n                    // A `,` must separate each array element.\\n                    abort();\\n                  }\\n                }\\n                // Elisions and leading commas are not permitted.\\n                if (value == \\\",\\\") {\\n                  abort();\\n                }\\n                results.push(get(value));\\n              }\\n              return results;\\n            } else if (value == \\\"{\\\") {\\n              // Parses a JSON object, returning a new JavaScript object.\\n              results = {};\\n              for (;; hasMembers || (hasMembers = true)) {\\n                value = lex();\\n                // A closing curly brace marks the end of the object literal.\\n                if (value == \\\"}\\\") {\\n                  break;\\n                }\\n                // If the object literal contains members, the current token\\n                // should be a comma separator.\\n                if (hasMembers) {\\n                  if (value == \\\",\\\") {\\n                    value = lex();\\n                    if (value == \\\"}\\\") {\\n                      // Unexpected trailing `,` in object literal.\\n                      abort();\\n                    }\\n                  } else {\\n                    // A `,` must separate each object member.\\n                    abort();\\n                  }\\n                }\\n                // Leading commas are not permitted, object property names must be\\n                // double-quoted strings, and a `:` must separate each property\\n                // name and value.\\n                if (value == \\\",\\\" || typeof value != \\\"string\\\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \\\"@\\\" || lex() != \\\":\\\") {\\n                  abort();\\n                }\\n                results[value.slice(1)] = get(lex());\\n              }\\n              return results;\\n            }\\n            // Unexpected token encountered.\\n            abort();\\n          }\\n          return value;\\n        };\\n\\n        // Internal: Updates a traversed object member.\\n        var update = function (source, property, callback) {\\n          var element = walk(source, property, callback);\\n          if (element === undef) {\\n            delete source[property];\\n          } else {\\n            source[property] = element;\\n          }\\n        };\\n\\n        // Internal: Recursively traverses a parsed JSON object, invoking the\\n        // `callback` function for each value. This is an implementation of the\\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\\n        var walk = function (source, property, callback) {\\n          var value = source[property], length;\\n          if (typeof value == \\\"object\\\" && value) {\\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\\n            // because its `Object#hasOwnProperty` implementation returns `false`\\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\\\"0\\\")`).\\n            if (getClass.call(value) == arrayClass) {\\n              for (length = value.length; length--;) {\\n                update(value, length, callback);\\n              }\\n            } else {\\n              forEach(value, function (property) {\\n                update(value, property, callback);\\n              });\\n            }\\n          }\\n          return callback.call(source, property, value);\\n        };\\n\\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\\n        exports.parse = function (source, callback) {\\n          var result, value;\\n          Index = 0;\\n          Source = \\\"\\\" + source;\\n          result = get(lex());\\n          // If a JSON string contains multiple tokens, it is invalid.\\n          if (lex() != \\\"$\\\") {\\n            abort();\\n          }\\n          // Reset the parser state.\\n          Index = Source = null;\\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\\\"\\\"] = result, value), \\\"\\\", callback) : result;\\n        };\\n      }\\n    }\\n\\n    exports[\\\"runInContext\\\"] = runInContext;\\n    return exports;\\n  }\\n\\n  if (freeExports && !isLoader) {\\n    // Export for CommonJS environments.\\n    runInContext(root, freeExports);\\n  } else {\\n    // Export for web browsers and JavaScript engines.\\n    var nativeJSON = root.JSON,\\n        previousJSON = root[\\\"JSON3\\\"],\\n        isRestored = false;\\n\\n    var JSON3 = runInContext(root, (root[\\\"JSON3\\\"] = {\\n      // Public: Restores the original value of the global `JSON` object and\\n      // returns a reference to the `JSON3` object.\\n      \\\"noConflict\\\": function () {\\n        if (!isRestored) {\\n          isRestored = true;\\n          root.JSON = nativeJSON;\\n          root[\\\"JSON3\\\"] = previousJSON;\\n          nativeJSON = previousJSON = null;\\n        }\\n        return JSON3;\\n      }\\n    }));\\n\\n    root.JSON = {\\n      \\\"parse\\\": JSON3.parse,\\n      \\\"stringify\\\": JSON3.stringify\\n    };\\n  }\\n\\n  // Export for asynchronous module loaders.\\n  if (isLoader) {\\n    define(function () {\\n      return JSON3;\\n    });\\n  }\\n}).call(this);\\n\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/~/json3/lib/json3.js\\n// module id = 11\\n// module chunks = 0\",\"module.exports = function(module) {\\n\\tif(!module.webpackPolyfill) {\\n\\t\\tmodule.deprecate = function() {};\\n\\t\\tmodule.paths = [];\\n\\t\\t// module.parent = undefined by default\\n\\t\\tmodule.children = [];\\n\\t\\tmodule.webpackPolyfill = 1;\\n\\t}\\n\\treturn module;\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// (webpack)/buildin/module.js\\n// module id = 12\\n// module chunks = 0\",\"\\n/**\\n * Expose `Emitter`.\\n */\\n\\nmodule.exports = Emitter;\\n\\n/**\\n * Initialize a new `Emitter`.\\n *\\n * @api public\\n */\\n\\nfunction Emitter(obj) {\\n  if (obj) return mixin(obj);\\n};\\n\\n/**\\n * Mixin the emitter properties.\\n *\\n * @param {Object} obj\\n * @return {Object}\\n * @api private\\n */\\n\\nfunction mixin(obj) {\\n  for (var key in Emitter.prototype) {\\n    obj[key] = Emitter.prototype[key];\\n  }\\n  return obj;\\n}\\n\\n/**\\n * Listen on the given `event` with `fn`.\\n *\\n * @param {String} event\\n * @param {Function} fn\\n * @return {Emitter}\\n * @api public\\n */\\n\\nEmitter.prototype.on =\\nEmitter.prototype.addEventListener = function(event, fn){\\n  this._callbacks = this._callbacks || {};\\n  (this._callbacks[event] = this._callbacks[event] || [])\\n    .push(fn);\\n  return this;\\n};\\n\\n/**\\n * Adds an `event` listener that will be invoked a single\\n * time then automatically removed.\\n *\\n * @param {String} event\\n * @param {Function} fn\\n * @return {Emitter}\\n * @api public\\n */\\n\\nEmitter.prototype.once = function(event, fn){\\n  var self = this;\\n  this._callbacks = this._callbacks || {};\\n\\n  function on() {\\n    self.off(event, on);\\n    fn.apply(this, arguments);\\n  }\\n\\n  on.fn = fn;\\n  this.on(event, on);\\n  return this;\\n};\\n\\n/**\\n * Remove the given callback for `event` or all\\n * registered callbacks.\\n *\\n * @param {String} event\\n * @param {Function} fn\\n * @return {Emitter}\\n * @api public\\n */\\n\\nEmitter.prototype.off =\\nEmitter.prototype.removeListener =\\nEmitter.prototype.removeAllListeners =\\nEmitter.prototype.removeEventListener = function(event, fn){\\n  this._callbacks = this._callbacks || {};\\n\\n  // all\\n  if (0 == arguments.length) {\\n    this._callbacks = {};\\n    return this;\\n  }\\n\\n  // specific event\\n  var callbacks = this._callbacks[event];\\n  if (!callbacks) return this;\\n\\n  // remove all handlers\\n  if (1 == arguments.length) {\\n    delete this._callbacks[event];\\n    return this;\\n  }\\n\\n  // remove specific handler\\n  var cb;\\n  for (var i = 0; i < callbacks.length; i++) {\\n    cb = callbacks[i];\\n    if (cb === fn || cb.fn === fn) {\\n      callbacks.splice(i, 1);\\n      break;\\n    }\\n  }\\n  return this;\\n};\\n\\n/**\\n * Emit `event` with the given args.\\n *\\n * @param {String} event\\n * @param {Mixed} ...\\n * @return {Emitter}\\n */\\n\\nEmitter.prototype.emit = function(event){\\n  this._callbacks = this._callbacks || {};\\n  var args = [].slice.call(arguments, 1)\\n    , callbacks = this._callbacks[event];\\n\\n  if (callbacks) {\\n    callbacks = callbacks.slice(0);\\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\\n      callbacks[i].apply(this, args);\\n    }\\n  }\\n\\n  return this;\\n};\\n\\n/**\\n * Return array of callbacks for `event`.\\n *\\n * @param {String} event\\n * @return {Array}\\n * @api public\\n */\\n\\nEmitter.prototype.listeners = function(event){\\n  this._callbacks = this._callbacks || {};\\n  return this._callbacks[event] || [];\\n};\\n\\n/**\\n * Check if this emitter has `event` handlers.\\n *\\n * @param {String} event\\n * @return {Boolean}\\n * @api public\\n */\\n\\nEmitter.prototype.hasListeners = function(event){\\n  return !! this.listeners(event).length;\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/~/component-emitter/index.js\\n// module id = 13\\n// module chunks = 0\",\"/*global Blob,File*/\\n\\n/**\\n * Module requirements\\n */\\n\\nvar isArray = require('isarray');\\nvar isBuf = require('./is-buffer');\\n\\n/**\\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\\n * Anything with blobs or files should be fed through removeBlobs before coming\\n * here.\\n *\\n * @param {Object} packet - socket.io event packet\\n * @return {Object} with deconstructed packet and list of buffers\\n * @api public\\n */\\n\\nexports.deconstructPacket = function(packet){\\n  var buffers = [];\\n  var packetData = packet.data;\\n\\n  function _deconstructPacket(data) {\\n    if (!data) return data;\\n\\n    if (isBuf(data)) {\\n      var placeholder = { _placeholder: true, num: buffers.length };\\n      buffers.push(data);\\n      return placeholder;\\n    } else if (isArray(data)) {\\n      var newData = new Array(data.length);\\n      for (var i = 0; i < data.length; i++) {\\n        newData[i] = _deconstructPacket(data[i]);\\n      }\\n      return newData;\\n    } else if ('object' == typeof data && !(data instanceof Date)) {\\n      var newData = {};\\n      for (var key in data) {\\n        newData[key] = _deconstructPacket(data[key]);\\n      }\\n      return newData;\\n    }\\n    return data;\\n  }\\n\\n  var pack = packet;\\n  pack.data = _deconstructPacket(packetData);\\n  pack.attachments = buffers.length; // number of binary 'attachments'\\n  return {packet: pack, buffers: buffers};\\n};\\n\\n/**\\n * Reconstructs a binary packet from its placeholder packet and buffers\\n *\\n * @param {Object} packet - event packet with placeholders\\n * @param {Array} buffers - binary buffers to put in placeholder positions\\n * @return {Object} reconstructed packet\\n * @api public\\n */\\n\\nexports.reconstructPacket = function(packet, buffers) {\\n  var curPlaceHolder = 0;\\n\\n  function _reconstructPacket(data) {\\n    if (data && data._placeholder) {\\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\\n      return buf;\\n    } else if (isArray(data)) {\\n      for (var i = 0; i < data.length; i++) {\\n        data[i] = _reconstructPacket(data[i]);\\n      }\\n      return data;\\n    } else if (data && 'object' == typeof data) {\\n      for (var key in data) {\\n        data[key] = _reconstructPacket(data[key]);\\n      }\\n      return data;\\n    }\\n    return data;\\n  }\\n\\n  packet.data = _reconstructPacket(packet.data);\\n  packet.attachments = undefined; // no longer useful\\n  return packet;\\n};\\n\\n/**\\n * Asynchronously removes Blobs or Files from data via\\n * FileReader's readAsArrayBuffer method. Used before encoding\\n * data as msgpack. Calls callback with the blobless data.\\n *\\n * @param {Object} data\\n * @param {Function} callback\\n * @api private\\n */\\n\\nexports.removeBlobs = function(data, callback) {\\n  function _removeBlobs(obj, curKey, containingObject) {\\n    if (!obj) return obj;\\n\\n    // convert any blob\\n    if ((global.Blob && obj instanceof Blob) ||\\n        (global.File && obj instanceof File)) {\\n      pendingBlobs++;\\n\\n      // async filereader\\n      var fileReader = new FileReader();\\n      fileReader.onload = function() { // this.result == arraybuffer\\n        if (containingObject) {\\n          containingObject[curKey] = this.result;\\n        }\\n        else {\\n          bloblessData = this.result;\\n        }\\n\\n        // if nothing pending its callback time\\n        if(! --pendingBlobs) {\\n          callback(bloblessData);\\n        }\\n      };\\n\\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\\n    } else if (isArray(obj)) { // handle array\\n      for (var i = 0; i < obj.length; i++) {\\n        _removeBlobs(obj[i], i, obj);\\n      }\\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\\n      for (var key in obj) {\\n        _removeBlobs(obj[key], key, obj);\\n      }\\n    }\\n  }\\n\\n  var pendingBlobs = 0;\\n  var bloblessData = data;\\n  _removeBlobs(bloblessData);\\n  if (!pendingBlobs) {\\n    callback(bloblessData);\\n  }\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/binary.js\\n// module id = 14\\n// module chunks = 0\",\"module.exports = Array.isArray || function (arr) {\\n  return Object.prototype.toString.call(arr) == '[object Array]';\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/~/isarray/index.js\\n// module id = 15\\n// module chunks = 0\",\"\\nmodule.exports = isBuf;\\n\\n/**\\n * Returns true if obj is a buffer or an arraybuffer.\\n *\\n * @api private\\n */\\n\\nfunction isBuf(obj) {\\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/socket.io-parser/is-buffer.js\\n// module id = 16\\n// module chunks = 0\",\"\\n/**\\n * Module dependencies.\\n */\\n\\nvar eio = require('engine.io-client');\\nvar Socket = require('./socket');\\nvar Emitter = require('component-emitter');\\nvar parser = require('socket.io-parser');\\nvar on = require('./on');\\nvar bind = require('component-bind');\\nvar debug = require('debug')('socket.io-client:manager');\\nvar indexOf = require('indexof');\\nvar Backoff = require('backo2');\\n\\n/**\\n * IE6+ hasOwnProperty\\n */\\n\\nvar has = Object.prototype.hasOwnProperty;\\n\\n/**\\n * Module exports\\n */\\n\\nmodule.exports = Manager;\\n\\n/**\\n * `Manager` constructor.\\n *\\n * @param {String} engine instance or engine uri/opts\\n * @param {Object} options\\n * @api public\\n */\\n\\nfunction Manager (uri, opts) {\\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\\n  if (uri && ('object' === typeof uri)) {\\n    opts = uri;\\n    uri = undefined;\\n  }\\n  opts = opts || {};\\n\\n  opts.path = opts.path || '/socket.io';\\n  this.nsps = {};\\n  this.subs = [];\\n  this.opts = opts;\\n  this.reconnection(opts.reconnection !== false);\\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\\n  this.backoff = new Backoff({\\n    min: this.reconnectionDelay(),\\n    max: this.reconnectionDelayMax(),\\n    jitter: this.randomizationFactor()\\n  });\\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\\n  this.readyState = 'closed';\\n  this.uri = uri;\\n  this.connecting = [];\\n  this.lastPing = null;\\n  this.encoding = false;\\n  this.packetBuffer = [];\\n  this.encoder = new parser.Encoder();\\n  this.decoder = new parser.Decoder();\\n  this.autoConnect = opts.autoConnect !== false;\\n  if (this.autoConnect) this.open();\\n}\\n\\n/**\\n * Propagate given event to sockets and emit on `this`\\n *\\n * @api private\\n */\\n\\nManager.prototype.emitAll = function () {\\n  this.emit.apply(this, arguments);\\n  for (var nsp in this.nsps) {\\n    if (has.call(this.nsps, nsp)) {\\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\\n    }\\n  }\\n};\\n\\n/**\\n * Update `socket.id` of all sockets\\n *\\n * @api private\\n */\\n\\nManager.prototype.updateSocketIds = function () {\\n  for (var nsp in this.nsps) {\\n    if (has.call(this.nsps, nsp)) {\\n      this.nsps[nsp].id = this.engine.id;\\n    }\\n  }\\n};\\n\\n/**\\n * Mix in `Emitter`.\\n */\\n\\nEmitter(Manager.prototype);\\n\\n/**\\n * Sets the `reconnection` config.\\n *\\n * @param {Boolean} true/false if it should automatically reconnect\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\nManager.prototype.reconnection = function (v) {\\n  if (!arguments.length) return this._reconnection;\\n  this._reconnection = !!v;\\n  return this;\\n};\\n\\n/**\\n * Sets the reconnection attempts config.\\n *\\n * @param {Number} max reconnection attempts before giving up\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\nManager.prototype.reconnectionAttempts = function (v) {\\n  if (!arguments.length) return this._reconnectionAttempts;\\n  this._reconnectionAttempts = v;\\n  return this;\\n};\\n\\n/**\\n * Sets the delay between reconnections.\\n *\\n * @param {Number} delay\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\nManager.prototype.reconnectionDelay = function (v) {\\n  if (!arguments.length) return this._reconnectionDelay;\\n  this._reconnectionDelay = v;\\n  this.backoff && this.backoff.setMin(v);\\n  return this;\\n};\\n\\nManager.prototype.randomizationFactor = function (v) {\\n  if (!arguments.length) return this._randomizationFactor;\\n  this._randomizationFactor = v;\\n  this.backoff && this.backoff.setJitter(v);\\n  return this;\\n};\\n\\n/**\\n * Sets the maximum delay between reconnections.\\n *\\n * @param {Number} delay\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\nManager.prototype.reconnectionDelayMax = function (v) {\\n  if (!arguments.length) return this._reconnectionDelayMax;\\n  this._reconnectionDelayMax = v;\\n  this.backoff && this.backoff.setMax(v);\\n  return this;\\n};\\n\\n/**\\n * Sets the connection timeout. `false` to disable\\n *\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\nManager.prototype.timeout = function (v) {\\n  if (!arguments.length) return this._timeout;\\n  this._timeout = v;\\n  return this;\\n};\\n\\n/**\\n * Starts trying to reconnect if reconnection is enabled and we have not\\n * started reconnecting yet\\n *\\n * @api private\\n */\\n\\nManager.prototype.maybeReconnectOnOpen = function () {\\n  // Only try to reconnect if it's the first time we're connecting\\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\\n    // keeps reconnection from firing twice for the same reconnection loop\\n    this.reconnect();\\n  }\\n};\\n\\n/**\\n * Sets the current transport `socket`.\\n *\\n * @param {Function} optional, callback\\n * @return {Manager} self\\n * @api public\\n */\\n\\nManager.prototype.open =\\nManager.prototype.connect = function (fn, opts) {\\n  debug('readyState %s', this.readyState);\\n  if (~this.readyState.indexOf('open')) return this;\\n\\n  debug('opening %s', this.uri);\\n  this.engine = eio(this.uri, this.opts);\\n  var socket = this.engine;\\n  var self = this;\\n  this.readyState = 'opening';\\n  this.skipReconnect = false;\\n\\n  // emit `open`\\n  var openSub = on(socket, 'open', function () {\\n    self.onopen();\\n    fn && fn();\\n  });\\n\\n  // emit `connect_error`\\n  var errorSub = on(socket, 'error', function (data) {\\n    debug('connect_error');\\n    self.cleanup();\\n    self.readyState = 'closed';\\n    self.emitAll('connect_error', data);\\n    if (fn) {\\n      var err = new Error('Connection error');\\n      err.data = data;\\n      fn(err);\\n    } else {\\n      // Only do this if there is no fn to handle the error\\n      self.maybeReconnectOnOpen();\\n    }\\n  });\\n\\n  // emit `connect_timeout`\\n  if (false !== this._timeout) {\\n    var timeout = this._timeout;\\n    debug('connect attempt will timeout after %d', timeout);\\n\\n    // set timer\\n    var timer = setTimeout(function () {\\n      debug('connect attempt timed out after %d', timeout);\\n      openSub.destroy();\\n      socket.close();\\n      socket.emit('error', 'timeout');\\n      self.emitAll('connect_timeout', timeout);\\n    }, timeout);\\n\\n    this.subs.push({\\n      destroy: function () {\\n        clearTimeout(timer);\\n      }\\n    });\\n  }\\n\\n  this.subs.push(openSub);\\n  this.subs.push(errorSub);\\n\\n  return this;\\n};\\n\\n/**\\n * Called upon transport open.\\n *\\n * @api private\\n */\\n\\nManager.prototype.onopen = function () {\\n  debug('open');\\n\\n  // clear old subs\\n  this.cleanup();\\n\\n  // mark as open\\n  this.readyState = 'open';\\n  this.emit('open');\\n\\n  // add new subs\\n  var socket = this.engine;\\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\\n};\\n\\n/**\\n * Called upon a ping.\\n *\\n * @api private\\n */\\n\\nManager.prototype.onping = function () {\\n  this.lastPing = new Date();\\n  this.emitAll('ping');\\n};\\n\\n/**\\n * Called upon a packet.\\n *\\n * @api private\\n */\\n\\nManager.prototype.onpong = function () {\\n  this.emitAll('pong', new Date() - this.lastPing);\\n};\\n\\n/**\\n * Called with data.\\n *\\n * @api private\\n */\\n\\nManager.prototype.ondata = function (data) {\\n  this.decoder.add(data);\\n};\\n\\n/**\\n * Called when parser fully decodes a packet.\\n *\\n * @api private\\n */\\n\\nManager.prototype.ondecoded = function (packet) {\\n  this.emit('packet', packet);\\n};\\n\\n/**\\n * Called upon socket error.\\n *\\n * @api private\\n */\\n\\nManager.prototype.onerror = function (err) {\\n  debug('error', err);\\n  this.emitAll('error', err);\\n};\\n\\n/**\\n * Creates a new socket for the given `nsp`.\\n *\\n * @return {Socket}\\n * @api public\\n */\\n\\nManager.prototype.socket = function (nsp, opts) {\\n  var socket = this.nsps[nsp];\\n  if (!socket) {\\n    socket = new Socket(this, nsp, opts);\\n    this.nsps[nsp] = socket;\\n    var self = this;\\n    socket.on('connecting', onConnecting);\\n    socket.on('connect', function () {\\n      socket.id = self.engine.id;\\n    });\\n\\n    if (this.autoConnect) {\\n      // manually call here since connecting evnet is fired before listening\\n      onConnecting();\\n    }\\n  }\\n\\n  function onConnecting () {\\n    if (!~indexOf(self.connecting, socket)) {\\n      self.connecting.push(socket);\\n    }\\n  }\\n\\n  return socket;\\n};\\n\\n/**\\n * Called upon a socket close.\\n *\\n * @param {Socket} socket\\n */\\n\\nManager.prototype.destroy = function (socket) {\\n  var index = indexOf(this.connecting, socket);\\n  if (~index) this.connecting.splice(index, 1);\\n  if (this.connecting.length) return;\\n\\n  this.close();\\n};\\n\\n/**\\n * Writes a packet.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\nManager.prototype.packet = function (packet) {\\n  debug('writing packet %j', packet);\\n  var self = this;\\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\\n\\n  if (!self.encoding) {\\n    // encode, then write to engine with result\\n    self.encoding = true;\\n    this.encoder.encode(packet, function (encodedPackets) {\\n      for (var i = 0; i < encodedPackets.length; i++) {\\n        self.engine.write(encodedPackets[i], packet.options);\\n      }\\n      self.encoding = false;\\n      self.processPacketQueue();\\n    });\\n  } else { // add packet to the queue\\n    self.packetBuffer.push(packet);\\n  }\\n};\\n\\n/**\\n * If packet buffer is non-empty, begins encoding the\\n * next packet in line.\\n *\\n * @api private\\n */\\n\\nManager.prototype.processPacketQueue = function () {\\n  if (this.packetBuffer.length > 0 && !this.encoding) {\\n    var pack = this.packetBuffer.shift();\\n    this.packet(pack);\\n  }\\n};\\n\\n/**\\n * Clean up transport subscriptions and packet buffer.\\n *\\n * @api private\\n */\\n\\nManager.prototype.cleanup = function () {\\n  debug('cleanup');\\n\\n  var subsLength = this.subs.length;\\n  for (var i = 0; i < subsLength; i++) {\\n    var sub = this.subs.shift();\\n    sub.destroy();\\n  }\\n\\n  this.packetBuffer = [];\\n  this.encoding = false;\\n  this.lastPing = null;\\n\\n  this.decoder.destroy();\\n};\\n\\n/**\\n * Close the current socket.\\n *\\n * @api private\\n */\\n\\nManager.prototype.close =\\nManager.prototype.disconnect = function () {\\n  debug('disconnect');\\n  this.skipReconnect = true;\\n  this.reconnecting = false;\\n  if ('opening' === this.readyState) {\\n    // `onclose` will not fire because\\n    // an open event never happened\\n    this.cleanup();\\n  }\\n  this.backoff.reset();\\n  this.readyState = 'closed';\\n  if (this.engine) this.engine.close();\\n};\\n\\n/**\\n * Called upon engine close.\\n *\\n * @api private\\n */\\n\\nManager.prototype.onclose = function (reason) {\\n  debug('onclose');\\n\\n  this.cleanup();\\n  this.backoff.reset();\\n  this.readyState = 'closed';\\n  this.emit('close', reason);\\n\\n  if (this._reconnection && !this.skipReconnect) {\\n    this.reconnect();\\n  }\\n};\\n\\n/**\\n * Attempt a reconnection.\\n *\\n * @api private\\n */\\n\\nManager.prototype.reconnect = function () {\\n  if (this.reconnecting || this.skipReconnect) return this;\\n\\n  var self = this;\\n\\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\\n    debug('reconnect failed');\\n    this.backoff.reset();\\n    this.emitAll('reconnect_failed');\\n    this.reconnecting = false;\\n  } else {\\n    var delay = this.backoff.duration();\\n    debug('will wait %dms before reconnect attempt', delay);\\n\\n    this.reconnecting = true;\\n    var timer = setTimeout(function () {\\n      if (self.skipReconnect) return;\\n\\n      debug('attempting reconnect');\\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\\n      self.emitAll('reconnecting', self.backoff.attempts);\\n\\n      // check again for the case socket closed in above events\\n      if (self.skipReconnect) return;\\n\\n      self.open(function (err) {\\n        if (err) {\\n          debug('reconnect attempt error');\\n          self.reconnecting = false;\\n          self.reconnect();\\n          self.emitAll('reconnect_error', err.data);\\n        } else {\\n          debug('reconnect success');\\n          self.onreconnect();\\n        }\\n      });\\n    }, delay);\\n\\n    this.subs.push({\\n      destroy: function () {\\n        clearTimeout(timer);\\n      }\\n    });\\n  }\\n};\\n\\n/**\\n * Called upon successful reconnect.\\n *\\n * @api private\\n */\\n\\nManager.prototype.onreconnect = function () {\\n  var attempt = this.backoff.attempts;\\n  this.reconnecting = false;\\n  this.backoff.reset();\\n  this.updateSocketIds();\\n  this.emitAll('reconnect', attempt);\\n};\\n\\n\\n\\n// WEBPACK FOOTER //\\n// lib/manager.js\",\"\\nmodule.exports = require('./lib/index');\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/index.js\\n// module id = 18\\n// module chunks = 0\",\"\\nmodule.exports = require('./socket');\\n\\n/**\\n * Exports parser\\n *\\n * @api public\\n *\\n */\\nmodule.exports.parser = require('engine.io-parser');\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/index.js\\n// module id = 19\\n// module chunks = 0\",\"/**\\n * Module dependencies.\\n */\\n\\nvar transports = require('./transports/index');\\nvar Emitter = require('component-emitter');\\nvar debug = require('debug')('engine.io-client:socket');\\nvar index = require('indexof');\\nvar parser = require('engine.io-parser');\\nvar parseuri = require('parseuri');\\nvar parsejson = require('parsejson');\\nvar parseqs = require('parseqs');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = Socket;\\n\\n/**\\n * Socket constructor.\\n *\\n * @param {String|Object} uri or options\\n * @param {Object} options\\n * @api public\\n */\\n\\nfunction Socket (uri, opts) {\\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\\n\\n  opts = opts || {};\\n\\n  if (uri && 'object' === typeof uri) {\\n    opts = uri;\\n    uri = null;\\n  }\\n\\n  if (uri) {\\n    uri = parseuri(uri);\\n    opts.hostname = uri.host;\\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\\n    opts.port = uri.port;\\n    if (uri.query) opts.query = uri.query;\\n  } else if (opts.host) {\\n    opts.hostname = parseuri(opts.host).host;\\n  }\\n\\n  this.secure = null != opts.secure ? opts.secure\\n    : (global.location && 'https:' === location.protocol);\\n\\n  if (opts.hostname && !opts.port) {\\n    // if no port is specified manually, use the protocol default\\n    opts.port = this.secure ? '443' : '80';\\n  }\\n\\n  this.agent = opts.agent || false;\\n  this.hostname = opts.hostname ||\\n    (global.location ? location.hostname : 'localhost');\\n  this.port = opts.port || (global.location && location.port\\n      ? location.port\\n      : (this.secure ? 443 : 80));\\n  this.query = opts.query || {};\\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\\n  this.upgrade = false !== opts.upgrade;\\n  this.path = (opts.path || '/engine.io').replace(/\\\\/$/, '') + '/';\\n  this.forceJSONP = !!opts.forceJSONP;\\n  this.jsonp = false !== opts.jsonp;\\n  this.forceBase64 = !!opts.forceBase64;\\n  this.enablesXDR = !!opts.enablesXDR;\\n  this.timestampParam = opts.timestampParam || 't';\\n  this.timestampRequests = opts.timestampRequests;\\n  this.transports = opts.transports || ['polling', 'websocket'];\\n  this.readyState = '';\\n  this.writeBuffer = [];\\n  this.prevBufferLen = 0;\\n  this.policyPort = opts.policyPort || 843;\\n  this.rememberUpgrade = opts.rememberUpgrade || false;\\n  this.binaryType = null;\\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\\n\\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\\n    this.perMessageDeflate.threshold = 1024;\\n  }\\n\\n  // SSL options for Node.js client\\n  this.pfx = opts.pfx || null;\\n  this.key = opts.key || null;\\n  this.passphrase = opts.passphrase || null;\\n  this.cert = opts.cert || null;\\n  this.ca = opts.ca || null;\\n  this.ciphers = opts.ciphers || null;\\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\\n  this.forceNode = !!opts.forceNode;\\n\\n  // other options for Node.js client\\n  var freeGlobal = typeof global === 'object' && global;\\n  if (freeGlobal.global === freeGlobal) {\\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\\n      this.extraHeaders = opts.extraHeaders;\\n    }\\n\\n    if (opts.localAddress) {\\n      this.localAddress = opts.localAddress;\\n    }\\n  }\\n\\n  // set on handshake\\n  this.id = null;\\n  this.upgrades = null;\\n  this.pingInterval = null;\\n  this.pingTimeout = null;\\n\\n  // set on heartbeat\\n  this.pingIntervalTimer = null;\\n  this.pingTimeoutTimer = null;\\n\\n  this.open();\\n}\\n\\nSocket.priorWebsocketSuccess = false;\\n\\n/**\\n * Mix in `Emitter`.\\n */\\n\\nEmitter(Socket.prototype);\\n\\n/**\\n * Protocol version.\\n *\\n * @api public\\n */\\n\\nSocket.protocol = parser.protocol; // this is an int\\n\\n/**\\n * Expose deps for legacy compatibility\\n * and standalone browser access.\\n */\\n\\nSocket.Socket = Socket;\\nSocket.Transport = require('./transport');\\nSocket.transports = require('./transports/index');\\nSocket.parser = require('engine.io-parser');\\n\\n/**\\n * Creates transport of the given type.\\n *\\n * @param {String} transport name\\n * @return {Transport}\\n * @api private\\n */\\n\\nSocket.prototype.createTransport = function (name) {\\n  debug('creating transport \\\"%s\\\"', name);\\n  var query = clone(this.query);\\n\\n  // append engine.io protocol identifier\\n  query.EIO = parser.protocol;\\n\\n  // transport name\\n  query.transport = name;\\n\\n  // session id if we already have one\\n  if (this.id) query.sid = this.id;\\n\\n  var transport = new transports[name]({\\n    agent: this.agent,\\n    hostname: this.hostname,\\n    port: this.port,\\n    secure: this.secure,\\n    path: this.path,\\n    query: query,\\n    forceJSONP: this.forceJSONP,\\n    jsonp: this.jsonp,\\n    forceBase64: this.forceBase64,\\n    enablesXDR: this.enablesXDR,\\n    timestampRequests: this.timestampRequests,\\n    timestampParam: this.timestampParam,\\n    policyPort: this.policyPort,\\n    socket: this,\\n    pfx: this.pfx,\\n    key: this.key,\\n    passphrase: this.passphrase,\\n    cert: this.cert,\\n    ca: this.ca,\\n    ciphers: this.ciphers,\\n    rejectUnauthorized: this.rejectUnauthorized,\\n    perMessageDeflate: this.perMessageDeflate,\\n    extraHeaders: this.extraHeaders,\\n    forceNode: this.forceNode,\\n    localAddress: this.localAddress\\n  });\\n\\n  return transport;\\n};\\n\\nfunction clone (obj) {\\n  var o = {};\\n  for (var i in obj) {\\n    if (obj.hasOwnProperty(i)) {\\n      o[i] = obj[i];\\n    }\\n  }\\n  return o;\\n}\\n\\n/**\\n * Initializes transport to use and starts probe.\\n *\\n * @api private\\n */\\nSocket.prototype.open = function () {\\n  var transport;\\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\\n    transport = 'websocket';\\n  } else if (0 === this.transports.length) {\\n    // Emit error on next tick so it can be listened to\\n    var self = this;\\n    setTimeout(function () {\\n      self.emit('error', 'No transports available');\\n    }, 0);\\n    return;\\n  } else {\\n    transport = this.transports[0];\\n  }\\n  this.readyState = 'opening';\\n\\n  // Retry with the next transport if the transport is disabled (jsonp: false)\\n  try {\\n    transport = this.createTransport(transport);\\n  } catch (e) {\\n    this.transports.shift();\\n    this.open();\\n    return;\\n  }\\n\\n  transport.open();\\n  this.setTransport(transport);\\n};\\n\\n/**\\n * Sets the current transport. Disables the existing one (if any).\\n *\\n * @api private\\n */\\n\\nSocket.prototype.setTransport = function (transport) {\\n  debug('setting transport %s', transport.name);\\n  var self = this;\\n\\n  if (this.transport) {\\n    debug('clearing existing transport %s', this.transport.name);\\n    this.transport.removeAllListeners();\\n  }\\n\\n  // set up transport\\n  this.transport = transport;\\n\\n  // set up transport listeners\\n  transport\\n  .on('drain', function () {\\n    self.onDrain();\\n  })\\n  .on('packet', function (packet) {\\n    self.onPacket(packet);\\n  })\\n  .on('error', function (e) {\\n    self.onError(e);\\n  })\\n  .on('close', function () {\\n    self.onClose('transport close');\\n  });\\n};\\n\\n/**\\n * Probes a transport.\\n *\\n * @param {String} transport name\\n * @api private\\n */\\n\\nSocket.prototype.probe = function (name) {\\n  debug('probing transport \\\"%s\\\"', name);\\n  var transport = this.createTransport(name, { probe: 1 });\\n  var failed = false;\\n  var self = this;\\n\\n  Socket.priorWebsocketSuccess = false;\\n\\n  function onTransportOpen () {\\n    if (self.onlyBinaryUpgrades) {\\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\\n      failed = failed || upgradeLosesBinary;\\n    }\\n    if (failed) return;\\n\\n    debug('probe transport \\\"%s\\\" opened', name);\\n    transport.send([{ type: 'ping', data: 'probe' }]);\\n    transport.once('packet', function (msg) {\\n      if (failed) return;\\n      if ('pong' === msg.type && 'probe' === msg.data) {\\n        debug('probe transport \\\"%s\\\" pong', name);\\n        self.upgrading = true;\\n        self.emit('upgrading', transport);\\n        if (!transport) return;\\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\\n\\n        debug('pausing current transport \\\"%s\\\"', self.transport.name);\\n        self.transport.pause(function () {\\n          if (failed) return;\\n          if ('closed' === self.readyState) return;\\n          debug('changing transport and sending upgrade packet');\\n\\n          cleanup();\\n\\n          self.setTransport(transport);\\n          transport.send([{ type: 'upgrade' }]);\\n          self.emit('upgrade', transport);\\n          transport = null;\\n          self.upgrading = false;\\n          self.flush();\\n        });\\n      } else {\\n        debug('probe transport \\\"%s\\\" failed', name);\\n        var err = new Error('probe error');\\n        err.transport = transport.name;\\n        self.emit('upgradeError', err);\\n      }\\n    });\\n  }\\n\\n  function freezeTransport () {\\n    if (failed) return;\\n\\n    // Any callback called by transport should be ignored since now\\n    failed = true;\\n\\n    cleanup();\\n\\n    transport.close();\\n    transport = null;\\n  }\\n\\n  // Handle any error that happens while probing\\n  function onerror (err) {\\n    var error = new Error('probe error: ' + err);\\n    error.transport = transport.name;\\n\\n    freezeTransport();\\n\\n    debug('probe transport \\\"%s\\\" failed because of error: %s', name, err);\\n\\n    self.emit('upgradeError', error);\\n  }\\n\\n  function onTransportClose () {\\n    onerror('transport closed');\\n  }\\n\\n  // When the socket is closed while we're probing\\n  function onclose () {\\n    onerror('socket closed');\\n  }\\n\\n  // When the socket is upgraded while we're probing\\n  function onupgrade (to) {\\n    if (transport && to.name !== transport.name) {\\n      debug('\\\"%s\\\" works - aborting \\\"%s\\\"', to.name, transport.name);\\n      freezeTransport();\\n    }\\n  }\\n\\n  // Remove all listeners on the transport and on self\\n  function cleanup () {\\n    transport.removeListener('open', onTransportOpen);\\n    transport.removeListener('error', onerror);\\n    transport.removeListener('close', onTransportClose);\\n    self.removeListener('close', onclose);\\n    self.removeListener('upgrading', onupgrade);\\n  }\\n\\n  transport.once('open', onTransportOpen);\\n  transport.once('error', onerror);\\n  transport.once('close', onTransportClose);\\n\\n  this.once('close', onclose);\\n  this.once('upgrading', onupgrade);\\n\\n  transport.open();\\n};\\n\\n/**\\n * Called when connection is deemed open.\\n *\\n * @api public\\n */\\n\\nSocket.prototype.onOpen = function () {\\n  debug('socket open');\\n  this.readyState = 'open';\\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\\n  this.emit('open');\\n  this.flush();\\n\\n  // we check for `readyState` in case an `open`\\n  // listener already closed the socket\\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\\n    debug('starting upgrade probes');\\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\\n      this.probe(this.upgrades[i]);\\n    }\\n  }\\n};\\n\\n/**\\n * Handles a packet.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onPacket = function (packet) {\\n  if ('opening' === this.readyState || 'open' === this.readyState ||\\n      'closing' === this.readyState) {\\n    debug('socket receive: type \\\"%s\\\", data \\\"%s\\\"', packet.type, packet.data);\\n\\n    this.emit('packet', packet);\\n\\n    // Socket is live - any packet counts\\n    this.emit('heartbeat');\\n\\n    switch (packet.type) {\\n      case 'open':\\n        this.onHandshake(parsejson(packet.data));\\n        break;\\n\\n      case 'pong':\\n        this.setPing();\\n        this.emit('pong');\\n        break;\\n\\n      case 'error':\\n        var err = new Error('server error');\\n        err.code = packet.data;\\n        this.onError(err);\\n        break;\\n\\n      case 'message':\\n        this.emit('data', packet.data);\\n        this.emit('message', packet.data);\\n        break;\\n    }\\n  } else {\\n    debug('packet received with socket readyState \\\"%s\\\"', this.readyState);\\n  }\\n};\\n\\n/**\\n * Called upon handshake completion.\\n *\\n * @param {Object} handshake obj\\n * @api private\\n */\\n\\nSocket.prototype.onHandshake = function (data) {\\n  this.emit('handshake', data);\\n  this.id = data.sid;\\n  this.transport.query.sid = data.sid;\\n  this.upgrades = this.filterUpgrades(data.upgrades);\\n  this.pingInterval = data.pingInterval;\\n  this.pingTimeout = data.pingTimeout;\\n  this.onOpen();\\n  // In case open handler closes socket\\n  if ('closed' === this.readyState) return;\\n  this.setPing();\\n\\n  // Prolong liveness of socket on heartbeat\\n  this.removeListener('heartbeat', this.onHeartbeat);\\n  this.on('heartbeat', this.onHeartbeat);\\n};\\n\\n/**\\n * Resets ping timeout.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onHeartbeat = function (timeout) {\\n  clearTimeout(this.pingTimeoutTimer);\\n  var self = this;\\n  self.pingTimeoutTimer = setTimeout(function () {\\n    if ('closed' === self.readyState) return;\\n    self.onClose('ping timeout');\\n  }, timeout || (self.pingInterval + self.pingTimeout));\\n};\\n\\n/**\\n * Pings server every `this.pingInterval` and expects response\\n * within `this.pingTimeout` or closes connection.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.setPing = function () {\\n  var self = this;\\n  clearTimeout(self.pingIntervalTimer);\\n  self.pingIntervalTimer = setTimeout(function () {\\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\\n    self.ping();\\n    self.onHeartbeat(self.pingTimeout);\\n  }, self.pingInterval);\\n};\\n\\n/**\\n* Sends a ping packet.\\n*\\n* @api private\\n*/\\n\\nSocket.prototype.ping = function () {\\n  var self = this;\\n  this.sendPacket('ping', function () {\\n    self.emit('ping');\\n  });\\n};\\n\\n/**\\n * Called on `drain` event\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onDrain = function () {\\n  this.writeBuffer.splice(0, this.prevBufferLen);\\n\\n  // setting prevBufferLen = 0 is very important\\n  // for example, when upgrading, upgrade packet is sent over,\\n  // and a nonzero prevBufferLen could cause problems on `drain`\\n  this.prevBufferLen = 0;\\n\\n  if (0 === this.writeBuffer.length) {\\n    this.emit('drain');\\n  } else {\\n    this.flush();\\n  }\\n};\\n\\n/**\\n * Flush write buffers.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.flush = function () {\\n  if ('closed' !== this.readyState && this.transport.writable &&\\n    !this.upgrading && this.writeBuffer.length) {\\n    debug('flushing %d packets in socket', this.writeBuffer.length);\\n    this.transport.send(this.writeBuffer);\\n    // keep track of current length of writeBuffer\\n    // splice writeBuffer and callbackBuffer on `drain`\\n    this.prevBufferLen = this.writeBuffer.length;\\n    this.emit('flush');\\n  }\\n};\\n\\n/**\\n * Sends a message.\\n *\\n * @param {String} message.\\n * @param {Function} callback function.\\n * @param {Object} options.\\n * @return {Socket} for chaining.\\n * @api public\\n */\\n\\nSocket.prototype.write =\\nSocket.prototype.send = function (msg, options, fn) {\\n  this.sendPacket('message', msg, options, fn);\\n  return this;\\n};\\n\\n/**\\n * Sends a packet.\\n *\\n * @param {String} packet type.\\n * @param {String} data.\\n * @param {Object} options.\\n * @param {Function} callback function.\\n * @api private\\n */\\n\\nSocket.prototype.sendPacket = function (type, data, options, fn) {\\n  if ('function' === typeof data) {\\n    fn = data;\\n    data = undefined;\\n  }\\n\\n  if ('function' === typeof options) {\\n    fn = options;\\n    options = null;\\n  }\\n\\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\\n    return;\\n  }\\n\\n  options = options || {};\\n  options.compress = false !== options.compress;\\n\\n  var packet = {\\n    type: type,\\n    data: data,\\n    options: options\\n  };\\n  this.emit('packetCreate', packet);\\n  this.writeBuffer.push(packet);\\n  if (fn) this.once('flush', fn);\\n  this.flush();\\n};\\n\\n/**\\n * Closes the connection.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.close = function () {\\n  if ('opening' === this.readyState || 'open' === this.readyState) {\\n    this.readyState = 'closing';\\n\\n    var self = this;\\n\\n    if (this.writeBuffer.length) {\\n      this.once('drain', function () {\\n        if (this.upgrading) {\\n          waitForUpgrade();\\n        } else {\\n          close();\\n        }\\n      });\\n    } else if (this.upgrading) {\\n      waitForUpgrade();\\n    } else {\\n      close();\\n    }\\n  }\\n\\n  function close () {\\n    self.onClose('forced close');\\n    debug('socket closing - telling transport to close');\\n    self.transport.close();\\n  }\\n\\n  function cleanupAndClose () {\\n    self.removeListener('upgrade', cleanupAndClose);\\n    self.removeListener('upgradeError', cleanupAndClose);\\n    close();\\n  }\\n\\n  function waitForUpgrade () {\\n    // wait for upgrade to finish since we can't send packets while pausing a transport\\n    self.once('upgrade', cleanupAndClose);\\n    self.once('upgradeError', cleanupAndClose);\\n  }\\n\\n  return this;\\n};\\n\\n/**\\n * Called upon transport error\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onError = function (err) {\\n  debug('socket error %j', err);\\n  Socket.priorWebsocketSuccess = false;\\n  this.emit('error', err);\\n  this.onClose('transport error', err);\\n};\\n\\n/**\\n * Called upon transport close.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onClose = function (reason, desc) {\\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\\n    debug('socket close with reason: \\\"%s\\\"', reason);\\n    var self = this;\\n\\n    // clear timers\\n    clearTimeout(this.pingIntervalTimer);\\n    clearTimeout(this.pingTimeoutTimer);\\n\\n    // stop event from firing again for transport\\n    this.transport.removeAllListeners('close');\\n\\n    // ensure transport won't stay open\\n    this.transport.close();\\n\\n    // ignore further transport communication\\n    this.transport.removeAllListeners();\\n\\n    // set ready state\\n    this.readyState = 'closed';\\n\\n    // clear session id\\n    this.id = null;\\n\\n    // emit close event\\n    this.emit('close', reason, desc);\\n\\n    // clean buffers after, so users can still\\n    // grab the buffers on `close` event\\n    self.writeBuffer = [];\\n    self.prevBufferLen = 0;\\n  }\\n};\\n\\n/**\\n * Filters upgrades, returning only those matching client transports.\\n *\\n * @param {Array} server upgrades\\n * @api private\\n *\\n */\\n\\nSocket.prototype.filterUpgrades = function (upgrades) {\\n  var filteredUpgrades = [];\\n  for (var i = 0, j = upgrades.length; i < j; i++) {\\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\\n  }\\n  return filteredUpgrades;\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/socket.js\\n// module id = 20\\n// module chunks = 0\",\"/**\\n * Module dependencies\\n */\\n\\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\\nvar XHR = require('./polling-xhr');\\nvar JSONP = require('./polling-jsonp');\\nvar websocket = require('./websocket');\\n\\n/**\\n * Export transports.\\n */\\n\\nexports.polling = polling;\\nexports.websocket = websocket;\\n\\n/**\\n * Polling transport polymorphic constructor.\\n * Decides on xhr vs jsonp based on feature detection.\\n *\\n * @api private\\n */\\n\\nfunction polling (opts) {\\n  var xhr;\\n  var xd = false;\\n  var xs = false;\\n  var jsonp = false !== opts.jsonp;\\n\\n  if (global.location) {\\n    var isSSL = 'https:' === location.protocol;\\n    var port = location.port;\\n\\n    // some user agents have empty `location.port`\\n    if (!port) {\\n      port = isSSL ? 443 : 80;\\n    }\\n\\n    xd = opts.hostname !== location.hostname || port !== opts.port;\\n    xs = opts.secure !== isSSL;\\n  }\\n\\n  opts.xdomain = xd;\\n  opts.xscheme = xs;\\n  xhr = new XMLHttpRequest(opts);\\n\\n  if ('open' in xhr && !opts.forceJSONP) {\\n    return new XHR(opts);\\n  } else {\\n    if (!jsonp) throw new Error('JSONP disabled');\\n    return new JSONP(opts);\\n  }\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/transports/index.js\\n// module id = 21\\n// module chunks = 0\",\"// browser shim for xmlhttprequest module\\n\\nvar hasCORS = require('has-cors');\\n\\nmodule.exports = function (opts) {\\n  var xdomain = opts.xdomain;\\n\\n  // scheme must be same when usign XDomainRequest\\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\\n  var xscheme = opts.xscheme;\\n\\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\\n  // https://github.com/Automattic/engine.io-client/pull/217\\n  var enablesXDR = opts.enablesXDR;\\n\\n  // XMLHttpRequest can be disabled on IE\\n  try {\\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\\n      return new XMLHttpRequest();\\n    }\\n  } catch (e) { }\\n\\n  // Use XDomainRequest for IE8 if enablesXDR is true\\n  // because loading bar keeps flashing when using jsonp-polling\\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\\n  try {\\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\\n      return new XDomainRequest();\\n    }\\n  } catch (e) { }\\n\\n  if (!xdomain) {\\n    try {\\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\\n    } catch (e) { }\\n  }\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/xmlhttprequest.js\\n// module id = 22\\n// module chunks = 0\",\"\\n/**\\n * Module exports.\\n *\\n * Logic borrowed from Modernizr:\\n *\\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\\n */\\n\\ntry {\\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\\n    'withCredentials' in new XMLHttpRequest();\\n} catch (err) {\\n  // if XMLHttp support is disabled in IE then it will throw\\n  // when trying to create\\n  module.exports = false;\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/has-cors/index.js\\n// module id = 23\\n// module chunks = 0\",\"/**\\n * Module requirements.\\n */\\n\\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\\nvar Polling = require('./polling');\\nvar Emitter = require('component-emitter');\\nvar inherit = require('component-inherit');\\nvar debug = require('debug')('engine.io-client:polling-xhr');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = XHR;\\nmodule.exports.Request = Request;\\n\\n/**\\n * Empty function\\n */\\n\\nfunction empty () {}\\n\\n/**\\n * XHR Polling constructor.\\n *\\n * @param {Object} opts\\n * @api public\\n */\\n\\nfunction XHR (opts) {\\n  Polling.call(this, opts);\\n  this.requestTimeout = opts.requestTimeout;\\n\\n  if (global.location) {\\n    var isSSL = 'https:' === location.protocol;\\n    var port = location.port;\\n\\n    // some user agents have empty `location.port`\\n    if (!port) {\\n      port = isSSL ? 443 : 80;\\n    }\\n\\n    this.xd = opts.hostname !== global.location.hostname ||\\n      port !== opts.port;\\n    this.xs = opts.secure !== isSSL;\\n  } else {\\n    this.extraHeaders = opts.extraHeaders;\\n  }\\n}\\n\\n/**\\n * Inherits from Polling.\\n */\\n\\ninherit(XHR, Polling);\\n\\n/**\\n * XHR supports binary\\n */\\n\\nXHR.prototype.supportsBinary = true;\\n\\n/**\\n * Creates a request.\\n *\\n * @param {String} method\\n * @api private\\n */\\n\\nXHR.prototype.request = function (opts) {\\n  opts = opts || {};\\n  opts.uri = this.uri();\\n  opts.xd = this.xd;\\n  opts.xs = this.xs;\\n  opts.agent = this.agent || false;\\n  opts.supportsBinary = this.supportsBinary;\\n  opts.enablesXDR = this.enablesXDR;\\n\\n  // SSL options for Node.js client\\n  opts.pfx = this.pfx;\\n  opts.key = this.key;\\n  opts.passphrase = this.passphrase;\\n  opts.cert = this.cert;\\n  opts.ca = this.ca;\\n  opts.ciphers = this.ciphers;\\n  opts.rejectUnauthorized = this.rejectUnauthorized;\\n  opts.requestTimeout = this.requestTimeout;\\n\\n  // other options for Node.js client\\n  opts.extraHeaders = this.extraHeaders;\\n\\n  return new Request(opts);\\n};\\n\\n/**\\n * Sends data.\\n *\\n * @param {String} data to send.\\n * @param {Function} called upon flush.\\n * @api private\\n */\\n\\nXHR.prototype.doWrite = function (data, fn) {\\n  var isBinary = typeof data !== 'string' && data !== undefined;\\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\\n  var self = this;\\n  req.on('success', fn);\\n  req.on('error', function (err) {\\n    self.onError('xhr post error', err);\\n  });\\n  this.sendXhr = req;\\n};\\n\\n/**\\n * Starts a poll cycle.\\n *\\n * @api private\\n */\\n\\nXHR.prototype.doPoll = function () {\\n  debug('xhr poll');\\n  var req = this.request();\\n  var self = this;\\n  req.on('data', function (data) {\\n    self.onData(data);\\n  });\\n  req.on('error', function (err) {\\n    self.onError('xhr poll error', err);\\n  });\\n  this.pollXhr = req;\\n};\\n\\n/**\\n * Request constructor\\n *\\n * @param {Object} options\\n * @api public\\n */\\n\\nfunction Request (opts) {\\n  this.method = opts.method || 'GET';\\n  this.uri = opts.uri;\\n  this.xd = !!opts.xd;\\n  this.xs = !!opts.xs;\\n  this.async = false !== opts.async;\\n  this.data = undefined !== opts.data ? opts.data : null;\\n  this.agent = opts.agent;\\n  this.isBinary = opts.isBinary;\\n  this.supportsBinary = opts.supportsBinary;\\n  this.enablesXDR = opts.enablesXDR;\\n  this.requestTimeout = opts.requestTimeout;\\n\\n  // SSL options for Node.js client\\n  this.pfx = opts.pfx;\\n  this.key = opts.key;\\n  this.passphrase = opts.passphrase;\\n  this.cert = opts.cert;\\n  this.ca = opts.ca;\\n  this.ciphers = opts.ciphers;\\n  this.rejectUnauthorized = opts.rejectUnauthorized;\\n\\n  // other options for Node.js client\\n  this.extraHeaders = opts.extraHeaders;\\n\\n  this.create();\\n}\\n\\n/**\\n * Mix in `Emitter`.\\n */\\n\\nEmitter(Request.prototype);\\n\\n/**\\n * Creates the XHR object and sends the request.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.create = function () {\\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\\n\\n  // SSL options for Node.js client\\n  opts.pfx = this.pfx;\\n  opts.key = this.key;\\n  opts.passphrase = this.passphrase;\\n  opts.cert = this.cert;\\n  opts.ca = this.ca;\\n  opts.ciphers = this.ciphers;\\n  opts.rejectUnauthorized = this.rejectUnauthorized;\\n\\n  var xhr = this.xhr = new XMLHttpRequest(opts);\\n  var self = this;\\n\\n  try {\\n    debug('xhr open %s: %s', this.method, this.uri);\\n    xhr.open(this.method, this.uri, this.async);\\n    try {\\n      if (this.extraHeaders) {\\n        xhr.setDisableHeaderCheck(true);\\n        for (var i in this.extraHeaders) {\\n          if (this.extraHeaders.hasOwnProperty(i)) {\\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\\n          }\\n        }\\n      }\\n    } catch (e) {}\\n    if (this.supportsBinary) {\\n      // This has to be done after open because Firefox is stupid\\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\\n      xhr.responseType = 'arraybuffer';\\n    }\\n\\n    if ('POST' === this.method) {\\n      try {\\n        if (this.isBinary) {\\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\\n        } else {\\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\\n        }\\n      } catch (e) {}\\n    }\\n\\n    try {\\n      xhr.setRequestHeader('Accept', '*/*');\\n    } catch (e) {}\\n\\n    // ie6 check\\n    if ('withCredentials' in xhr) {\\n      xhr.withCredentials = true;\\n    }\\n\\n    if (this.requestTimeout) {\\n      xhr.timeout = this.requestTimeout;\\n    }\\n\\n    if (this.hasXDR()) {\\n      xhr.onload = function () {\\n        self.onLoad();\\n      };\\n      xhr.onerror = function () {\\n        self.onError(xhr.responseText);\\n      };\\n    } else {\\n      xhr.onreadystatechange = function () {\\n        if (4 !== xhr.readyState) return;\\n        if (200 === xhr.status || 1223 === xhr.status) {\\n          self.onLoad();\\n        } else {\\n          // make sure the `error` event handler that's user-set\\n          // does not throw in the same tick and gets caught here\\n          setTimeout(function () {\\n            self.onError(xhr.status);\\n          }, 0);\\n        }\\n      };\\n    }\\n\\n    debug('xhr data %s', this.data);\\n    xhr.send(this.data);\\n  } catch (e) {\\n    // Need to defer since .create() is called directly fhrom the constructor\\n    // and thus the 'error' event can only be only bound *after* this exception\\n    // occurs.  Therefore, also, we cannot throw here at all.\\n    setTimeout(function () {\\n      self.onError(e);\\n    }, 0);\\n    return;\\n  }\\n\\n  if (global.document) {\\n    this.index = Request.requestsCount++;\\n    Request.requests[this.index] = this;\\n  }\\n};\\n\\n/**\\n * Called upon successful response.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.onSuccess = function () {\\n  this.emit('success');\\n  this.cleanup();\\n};\\n\\n/**\\n * Called if we have data.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.onData = function (data) {\\n  this.emit('data', data);\\n  this.onSuccess();\\n};\\n\\n/**\\n * Called upon error.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.onError = function (err) {\\n  this.emit('error', err);\\n  this.cleanup(true);\\n};\\n\\n/**\\n * Cleans up house.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.cleanup = function (fromError) {\\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\\n    return;\\n  }\\n  // xmlhttprequest\\n  if (this.hasXDR()) {\\n    this.xhr.onload = this.xhr.onerror = empty;\\n  } else {\\n    this.xhr.onreadystatechange = empty;\\n  }\\n\\n  if (fromError) {\\n    try {\\n      this.xhr.abort();\\n    } catch (e) {}\\n  }\\n\\n  if (global.document) {\\n    delete Request.requests[this.index];\\n  }\\n\\n  this.xhr = null;\\n};\\n\\n/**\\n * Called upon load.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.onLoad = function () {\\n  var data;\\n  try {\\n    var contentType;\\n    try {\\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\\n    } catch (e) {}\\n    if (contentType === 'application/octet-stream') {\\n      data = this.xhr.response || this.xhr.responseText;\\n    } else {\\n      if (!this.supportsBinary) {\\n        data = this.xhr.responseText;\\n      } else {\\n        try {\\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\\n        } catch (e) {\\n          var ui8Arr = new Uint8Array(this.xhr.response);\\n          var dataArray = [];\\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\\n            dataArray.push(ui8Arr[idx]);\\n          }\\n\\n          data = String.fromCharCode.apply(null, dataArray);\\n        }\\n      }\\n    }\\n  } catch (e) {\\n    this.onError(e);\\n  }\\n  if (null != data) {\\n    this.onData(data);\\n  }\\n};\\n\\n/**\\n * Check if it has XDomainRequest.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.hasXDR = function () {\\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\\n};\\n\\n/**\\n * Aborts the request.\\n *\\n * @api public\\n */\\n\\nRequest.prototype.abort = function () {\\n  this.cleanup();\\n};\\n\\n/**\\n * Aborts pending requests when unloading the window. This is needed to prevent\\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\\n * emitted.\\n */\\n\\nRequest.requestsCount = 0;\\nRequest.requests = {};\\n\\nif (global.document) {\\n  if (global.attachEvent) {\\n    global.attachEvent('onunload', unloadHandler);\\n  } else if (global.addEventListener) {\\n    global.addEventListener('beforeunload', unloadHandler, false);\\n  }\\n}\\n\\nfunction unloadHandler () {\\n  for (var i in Request.requests) {\\n    if (Request.requests.hasOwnProperty(i)) {\\n      Request.requests[i].abort();\\n    }\\n  }\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/transports/polling-xhr.js\\n// module id = 24\\n// module chunks = 0\",\"/**\\n * Module dependencies.\\n */\\n\\nvar Transport = require('../transport');\\nvar parseqs = require('parseqs');\\nvar parser = require('engine.io-parser');\\nvar inherit = require('component-inherit');\\nvar yeast = require('yeast');\\nvar debug = require('debug')('engine.io-client:polling');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = Polling;\\n\\n/**\\n * Is XHR2 supported?\\n */\\n\\nvar hasXHR2 = (function () {\\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\\n  var xhr = new XMLHttpRequest({ xdomain: false });\\n  return null != xhr.responseType;\\n})();\\n\\n/**\\n * Polling interface.\\n *\\n * @param {Object} opts\\n * @api private\\n */\\n\\nfunction Polling (opts) {\\n  var forceBase64 = (opts && opts.forceBase64);\\n  if (!hasXHR2 || forceBase64) {\\n    this.supportsBinary = false;\\n  }\\n  Transport.call(this, opts);\\n}\\n\\n/**\\n * Inherits from Transport.\\n */\\n\\ninherit(Polling, Transport);\\n\\n/**\\n * Transport name.\\n */\\n\\nPolling.prototype.name = 'polling';\\n\\n/**\\n * Opens the socket (triggers polling). We write a PING message to determine\\n * when the transport is open.\\n *\\n * @api private\\n */\\n\\nPolling.prototype.doOpen = function () {\\n  this.poll();\\n};\\n\\n/**\\n * Pauses polling.\\n *\\n * @param {Function} callback upon buffers are flushed and transport is paused\\n * @api private\\n */\\n\\nPolling.prototype.pause = function (onPause) {\\n  var self = this;\\n\\n  this.readyState = 'pausing';\\n\\n  function pause () {\\n    debug('paused');\\n    self.readyState = 'paused';\\n    onPause();\\n  }\\n\\n  if (this.polling || !this.writable) {\\n    var total = 0;\\n\\n    if (this.polling) {\\n      debug('we are currently polling - waiting to pause');\\n      total++;\\n      this.once('pollComplete', function () {\\n        debug('pre-pause polling complete');\\n        --total || pause();\\n      });\\n    }\\n\\n    if (!this.writable) {\\n      debug('we are currently writing - waiting to pause');\\n      total++;\\n      this.once('drain', function () {\\n        debug('pre-pause writing complete');\\n        --total || pause();\\n      });\\n    }\\n  } else {\\n    pause();\\n  }\\n};\\n\\n/**\\n * Starts polling cycle.\\n *\\n * @api public\\n */\\n\\nPolling.prototype.poll = function () {\\n  debug('polling');\\n  this.polling = true;\\n  this.doPoll();\\n  this.emit('poll');\\n};\\n\\n/**\\n * Overloads onData to detect payloads.\\n *\\n * @api private\\n */\\n\\nPolling.prototype.onData = function (data) {\\n  var self = this;\\n  debug('polling got data %s', data);\\n  var callback = function (packet, index, total) {\\n    // if its the first message we consider the transport open\\n    if ('opening' === self.readyState) {\\n      self.onOpen();\\n    }\\n\\n    // if its a close packet, we close the ongoing requests\\n    if ('close' === packet.type) {\\n      self.onClose();\\n      return false;\\n    }\\n\\n    // otherwise bypass onData and handle the message\\n    self.onPacket(packet);\\n  };\\n\\n  // decode payload\\n  parser.decodePayload(data, this.socket.binaryType, callback);\\n\\n  // if an event did not trigger closing\\n  if ('closed' !== this.readyState) {\\n    // if we got data we're not polling\\n    this.polling = false;\\n    this.emit('pollComplete');\\n\\n    if ('open' === this.readyState) {\\n      this.poll();\\n    } else {\\n      debug('ignoring poll - transport state \\\"%s\\\"', this.readyState);\\n    }\\n  }\\n};\\n\\n/**\\n * For polling, send a close packet.\\n *\\n * @api private\\n */\\n\\nPolling.prototype.doClose = function () {\\n  var self = this;\\n\\n  function close () {\\n    debug('writing close packet');\\n    self.write([{ type: 'close' }]);\\n  }\\n\\n  if ('open' === this.readyState) {\\n    debug('transport open - closing');\\n    close();\\n  } else {\\n    // in case we're trying to close while\\n    // handshaking is in progress (GH-164)\\n    debug('transport not open - deferring close');\\n    this.once('open', close);\\n  }\\n};\\n\\n/**\\n * Writes a packets payload.\\n *\\n * @param {Array} data packets\\n * @param {Function} drain callback\\n * @api private\\n */\\n\\nPolling.prototype.write = function (packets) {\\n  var self = this;\\n  this.writable = false;\\n  var callbackfn = function () {\\n    self.writable = true;\\n    self.emit('drain');\\n  };\\n\\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\\n    self.doWrite(data, callbackfn);\\n  });\\n};\\n\\n/**\\n * Generates uri for connection.\\n *\\n * @api private\\n */\\n\\nPolling.prototype.uri = function () {\\n  var query = this.query || {};\\n  var schema = this.secure ? 'https' : 'http';\\n  var port = '';\\n\\n  // cache busting is forced\\n  if (false !== this.timestampRequests) {\\n    query[this.timestampParam] = yeast();\\n  }\\n\\n  if (!this.supportsBinary && !query.sid) {\\n    query.b64 = 1;\\n  }\\n\\n  query = parseqs.encode(query);\\n\\n  // avoid port if default for schema\\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\\n     ('http' === schema && Number(this.port) !== 80))) {\\n    port = ':' + this.port;\\n  }\\n\\n  // prepend ? to query\\n  if (query.length) {\\n    query = '?' + query;\\n  }\\n\\n  var ipv6 = this.hostname.indexOf(':') !== -1;\\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/transports/polling.js\\n// module id = 25\\n// module chunks = 0\",\"/**\\n * Module dependencies.\\n */\\n\\nvar parser = require('engine.io-parser');\\nvar Emitter = require('component-emitter');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = Transport;\\n\\n/**\\n * Transport abstract constructor.\\n *\\n * @param {Object} options.\\n * @api private\\n */\\n\\nfunction Transport (opts) {\\n  this.path = opts.path;\\n  this.hostname = opts.hostname;\\n  this.port = opts.port;\\n  this.secure = opts.secure;\\n  this.query = opts.query;\\n  this.timestampParam = opts.timestampParam;\\n  this.timestampRequests = opts.timestampRequests;\\n  this.readyState = '';\\n  this.agent = opts.agent || false;\\n  this.socket = opts.socket;\\n  this.enablesXDR = opts.enablesXDR;\\n\\n  // SSL options for Node.js client\\n  this.pfx = opts.pfx;\\n  this.key = opts.key;\\n  this.passphrase = opts.passphrase;\\n  this.cert = opts.cert;\\n  this.ca = opts.ca;\\n  this.ciphers = opts.ciphers;\\n  this.rejectUnauthorized = opts.rejectUnauthorized;\\n  this.forceNode = opts.forceNode;\\n\\n  // other options for Node.js client\\n  this.extraHeaders = opts.extraHeaders;\\n  this.localAddress = opts.localAddress;\\n}\\n\\n/**\\n * Mix in `Emitter`.\\n */\\n\\nEmitter(Transport.prototype);\\n\\n/**\\n * Emits an error.\\n *\\n * @param {String} str\\n * @return {Transport} for chaining\\n * @api public\\n */\\n\\nTransport.prototype.onError = function (msg, desc) {\\n  var err = new Error(msg);\\n  err.type = 'TransportError';\\n  err.description = desc;\\n  this.emit('error', err);\\n  return this;\\n};\\n\\n/**\\n * Opens the transport.\\n *\\n * @api public\\n */\\n\\nTransport.prototype.open = function () {\\n  if ('closed' === this.readyState || '' === this.readyState) {\\n    this.readyState = 'opening';\\n    this.doOpen();\\n  }\\n\\n  return this;\\n};\\n\\n/**\\n * Closes the transport.\\n *\\n * @api private\\n */\\n\\nTransport.prototype.close = function () {\\n  if ('opening' === this.readyState || 'open' === this.readyState) {\\n    this.doClose();\\n    this.onClose();\\n  }\\n\\n  return this;\\n};\\n\\n/**\\n * Sends multiple packets.\\n *\\n * @param {Array} packets\\n * @api private\\n */\\n\\nTransport.prototype.send = function (packets) {\\n  if ('open' === this.readyState) {\\n    this.write(packets);\\n  } else {\\n    throw new Error('Transport not open');\\n  }\\n};\\n\\n/**\\n * Called upon open\\n *\\n * @api private\\n */\\n\\nTransport.prototype.onOpen = function () {\\n  this.readyState = 'open';\\n  this.writable = true;\\n  this.emit('open');\\n};\\n\\n/**\\n * Called with data.\\n *\\n * @param {String} data\\n * @api private\\n */\\n\\nTransport.prototype.onData = function (data) {\\n  var packet = parser.decodePacket(data, this.socket.binaryType);\\n  this.onPacket(packet);\\n};\\n\\n/**\\n * Called with a decoded packet.\\n */\\n\\nTransport.prototype.onPacket = function (packet) {\\n  this.emit('packet', packet);\\n};\\n\\n/**\\n * Called upon close.\\n *\\n * @api private\\n */\\n\\nTransport.prototype.onClose = function () {\\n  this.readyState = 'closed';\\n  this.emit('close');\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/transport.js\\n// module id = 26\\n// module chunks = 0\",\"/**\\n * Module dependencies.\\n */\\n\\nvar keys = require('./keys');\\nvar hasBinary = require('has-binary');\\nvar sliceBuffer = require('arraybuffer.slice');\\nvar after = require('after');\\nvar utf8 = require('wtf-8');\\n\\nvar base64encoder;\\nif (global && global.ArrayBuffer) {\\n  base64encoder = require('base64-arraybuffer');\\n}\\n\\n/**\\n * Check if we are running an android browser. That requires us to use\\n * ArrayBuffer with polling transports...\\n *\\n * http://ghinda.net/jpeg-blob-ajax-android/\\n */\\n\\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\\n\\n/**\\n * Check if we are running in PhantomJS.\\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\\n * https://github.com/ariya/phantomjs/issues/11395\\n * @type boolean\\n */\\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\\n\\n/**\\n * When true, avoids using Blobs to encode payloads.\\n * @type boolean\\n */\\nvar dontSendBlobs = isAndroid || isPhantomJS;\\n\\n/**\\n * Current protocol version.\\n */\\n\\nexports.protocol = 3;\\n\\n/**\\n * Packet types.\\n */\\n\\nvar packets = exports.packets = {\\n    open:     0    // non-ws\\n  , close:    1    // non-ws\\n  , ping:     2\\n  , pong:     3\\n  , message:  4\\n  , upgrade:  5\\n  , noop:     6\\n};\\n\\nvar packetslist = keys(packets);\\n\\n/**\\n * Premade error packet.\\n */\\n\\nvar err = { type: 'error', data: 'parser error' };\\n\\n/**\\n * Create a blob api even for blob builder when vendor prefixes exist\\n */\\n\\nvar Blob = require('blob');\\n\\n/**\\n * Encodes a packet.\\n *\\n *     <packet type id> [ <data> ]\\n *\\n * Example:\\n *\\n *     5hello world\\n *     3\\n *     4\\n *\\n * Binary is encoded in an identical principle\\n *\\n * @api private\\n */\\n\\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\\n  if ('function' == typeof supportsBinary) {\\n    callback = supportsBinary;\\n    supportsBinary = false;\\n  }\\n\\n  if ('function' == typeof utf8encode) {\\n    callback = utf8encode;\\n    utf8encode = null;\\n  }\\n\\n  var data = (packet.data === undefined)\\n    ? undefined\\n    : packet.data.buffer || packet.data;\\n\\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\\n    return encodeArrayBuffer(packet, supportsBinary, callback);\\n  } else if (Blob && data instanceof global.Blob) {\\n    return encodeBlob(packet, supportsBinary, callback);\\n  }\\n\\n  // might be an object with { base64: true, data: dataAsBase64String }\\n  if (data && data.base64) {\\n    return encodeBase64Object(packet, callback);\\n  }\\n\\n  // Sending data as a utf-8 string\\n  var encoded = packets[packet.type];\\n\\n  // data fragment is optional\\n  if (undefined !== packet.data) {\\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\\n  }\\n\\n  return callback('' + encoded);\\n\\n};\\n\\nfunction encodeBase64Object(packet, callback) {\\n  // packet data is an object { base64: true, data: dataAsBase64String }\\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\\n  return callback(message);\\n}\\n\\n/**\\n * Encode packet helpers for binary types\\n */\\n\\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\\n  if (!supportsBinary) {\\n    return exports.encodeBase64Packet(packet, callback);\\n  }\\n\\n  var data = packet.data;\\n  var contentArray = new Uint8Array(data);\\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\\n\\n  resultBuffer[0] = packets[packet.type];\\n  for (var i = 0; i < contentArray.length; i++) {\\n    resultBuffer[i+1] = contentArray[i];\\n  }\\n\\n  return callback(resultBuffer.buffer);\\n}\\n\\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\\n  if (!supportsBinary) {\\n    return exports.encodeBase64Packet(packet, callback);\\n  }\\n\\n  var fr = new FileReader();\\n  fr.onload = function() {\\n    packet.data = fr.result;\\n    exports.encodePacket(packet, supportsBinary, true, callback);\\n  };\\n  return fr.readAsArrayBuffer(packet.data);\\n}\\n\\nfunction encodeBlob(packet, supportsBinary, callback) {\\n  if (!supportsBinary) {\\n    return exports.encodeBase64Packet(packet, callback);\\n  }\\n\\n  if (dontSendBlobs) {\\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\\n  }\\n\\n  var length = new Uint8Array(1);\\n  length[0] = packets[packet.type];\\n  var blob = new Blob([length.buffer, packet.data]);\\n\\n  return callback(blob);\\n}\\n\\n/**\\n * Encodes a packet with binary data in a base64 string\\n *\\n * @param {Object} packet, has `type` and `data`\\n * @return {String} base64 encoded message\\n */\\n\\nexports.encodeBase64Packet = function(packet, callback) {\\n  var message = 'b' + exports.packets[packet.type];\\n  if (Blob && packet.data instanceof global.Blob) {\\n    var fr = new FileReader();\\n    fr.onload = function() {\\n      var b64 = fr.result.split(',')[1];\\n      callback(message + b64);\\n    };\\n    return fr.readAsDataURL(packet.data);\\n  }\\n\\n  var b64data;\\n  try {\\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\\n  } catch (e) {\\n    // iPhone Safari doesn't let you apply with typed arrays\\n    var typed = new Uint8Array(packet.data);\\n    var basic = new Array(typed.length);\\n    for (var i = 0; i < typed.length; i++) {\\n      basic[i] = typed[i];\\n    }\\n    b64data = String.fromCharCode.apply(null, basic);\\n  }\\n  message += global.btoa(b64data);\\n  return callback(message);\\n};\\n\\n/**\\n * Decodes a packet. Changes format to Blob if requested.\\n *\\n * @return {Object} with `type` and `data` (if any)\\n * @api private\\n */\\n\\nexports.decodePacket = function (data, binaryType, utf8decode) {\\n  if (data === undefined) {\\n    return err;\\n  }\\n  // String data\\n  if (typeof data == 'string') {\\n    if (data.charAt(0) == 'b') {\\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\\n    }\\n\\n    if (utf8decode) {\\n      data = tryDecode(data);\\n      if (data === false) {\\n        return err;\\n      }\\n    }\\n    var type = data.charAt(0);\\n\\n    if (Number(type) != type || !packetslist[type]) {\\n      return err;\\n    }\\n\\n    if (data.length > 1) {\\n      return { type: packetslist[type], data: data.substring(1) };\\n    } else {\\n      return { type: packetslist[type] };\\n    }\\n  }\\n\\n  var asArray = new Uint8Array(data);\\n  var type = asArray[0];\\n  var rest = sliceBuffer(data, 1);\\n  if (Blob && binaryType === 'blob') {\\n    rest = new Blob([rest]);\\n  }\\n  return { type: packetslist[type], data: rest };\\n};\\n\\nfunction tryDecode(data) {\\n  try {\\n    data = utf8.decode(data);\\n  } catch (e) {\\n    return false;\\n  }\\n  return data;\\n}\\n\\n/**\\n * Decodes a packet encoded in a base64 string\\n *\\n * @param {String} base64 encoded message\\n * @return {Object} with `type` and `data` (if any)\\n */\\n\\nexports.decodeBase64Packet = function(msg, binaryType) {\\n  var type = packetslist[msg.charAt(0)];\\n  if (!base64encoder) {\\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\\n  }\\n\\n  var data = base64encoder.decode(msg.substr(1));\\n\\n  if (binaryType === 'blob' && Blob) {\\n    data = new Blob([data]);\\n  }\\n\\n  return { type: type, data: data };\\n};\\n\\n/**\\n * Encodes multiple messages (payload).\\n *\\n *     <length>:data\\n *\\n * Example:\\n *\\n *     11:hello world2:hi\\n *\\n * If any contents are binary, they will be encoded as base64 strings. Base64\\n * encoded strings are marked with a b before the length specifier\\n *\\n * @param {Array} packets\\n * @api private\\n */\\n\\nexports.encodePayload = function (packets, supportsBinary, callback) {\\n  if (typeof supportsBinary == 'function') {\\n    callback = supportsBinary;\\n    supportsBinary = null;\\n  }\\n\\n  var isBinary = hasBinary(packets);\\n\\n  if (supportsBinary && isBinary) {\\n    if (Blob && !dontSendBlobs) {\\n      return exports.encodePayloadAsBlob(packets, callback);\\n    }\\n\\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\\n  }\\n\\n  if (!packets.length) {\\n    return callback('0:');\\n  }\\n\\n  function setLengthHeader(message) {\\n    return message.length + ':' + message;\\n  }\\n\\n  function encodeOne(packet, doneCallback) {\\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\\n      doneCallback(null, setLengthHeader(message));\\n    });\\n  }\\n\\n  map(packets, encodeOne, function(err, results) {\\n    return callback(results.join(''));\\n  });\\n};\\n\\n/**\\n * Async array map using after\\n */\\n\\nfunction map(ary, each, done) {\\n  var result = new Array(ary.length);\\n  var next = after(ary.length, done);\\n\\n  var eachWithIndex = function(i, el, cb) {\\n    each(el, function(error, msg) {\\n      result[i] = msg;\\n      cb(error, result);\\n    });\\n  };\\n\\n  for (var i = 0; i < ary.length; i++) {\\n    eachWithIndex(i, ary[i], next);\\n  }\\n}\\n\\n/*\\n * Decodes data when a payload is maybe expected. Possible binary contents are\\n * decoded from their base64 representation\\n *\\n * @param {String} data, callback method\\n * @api public\\n */\\n\\nexports.decodePayload = function (data, binaryType, callback) {\\n  if (typeof data != 'string') {\\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\\n  }\\n\\n  if (typeof binaryType === 'function') {\\n    callback = binaryType;\\n    binaryType = null;\\n  }\\n\\n  var packet;\\n  if (data == '') {\\n    // parser error - ignoring payload\\n    return callback(err, 0, 1);\\n  }\\n\\n  var length = ''\\n    , n, msg;\\n\\n  for (var i = 0, l = data.length; i < l; i++) {\\n    var chr = data.charAt(i);\\n\\n    if (':' != chr) {\\n      length += chr;\\n    } else {\\n      if ('' == length || (length != (n = Number(length)))) {\\n        // parser error - ignoring payload\\n        return callback(err, 0, 1);\\n      }\\n\\n      msg = data.substr(i + 1, n);\\n\\n      if (length != msg.length) {\\n        // parser error - ignoring payload\\n        return callback(err, 0, 1);\\n      }\\n\\n      if (msg.length) {\\n        packet = exports.decodePacket(msg, binaryType, true);\\n\\n        if (err.type == packet.type && err.data == packet.data) {\\n          // parser error in individual packet - ignoring payload\\n          return callback(err, 0, 1);\\n        }\\n\\n        var ret = callback(packet, i + n, l);\\n        if (false === ret) return;\\n      }\\n\\n      // advance cursor\\n      i += n;\\n      length = '';\\n    }\\n  }\\n\\n  if (length != '') {\\n    // parser error - ignoring payload\\n    return callback(err, 0, 1);\\n  }\\n\\n};\\n\\n/**\\n * Encodes multiple messages (payload) as binary.\\n *\\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\\n * 255><data>\\n *\\n * Example:\\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\\n *\\n * @param {Array} packets\\n * @return {ArrayBuffer} encoded payload\\n * @api private\\n */\\n\\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\\n  if (!packets.length) {\\n    return callback(new ArrayBuffer(0));\\n  }\\n\\n  function encodeOne(packet, doneCallback) {\\n    exports.encodePacket(packet, true, true, function(data) {\\n      return doneCallback(null, data);\\n    });\\n  }\\n\\n  map(packets, encodeOne, function(err, encodedPackets) {\\n    var totalLength = encodedPackets.reduce(function(acc, p) {\\n      var len;\\n      if (typeof p === 'string'){\\n        len = p.length;\\n      } else {\\n        len = p.byteLength;\\n      }\\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\\n    }, 0);\\n\\n    var resultArray = new Uint8Array(totalLength);\\n\\n    var bufferIndex = 0;\\n    encodedPackets.forEach(function(p) {\\n      var isString = typeof p === 'string';\\n      var ab = p;\\n      if (isString) {\\n        var view = new Uint8Array(p.length);\\n        for (var i = 0; i < p.length; i++) {\\n          view[i] = p.charCodeAt(i);\\n        }\\n        ab = view.buffer;\\n      }\\n\\n      if (isString) { // not true binary\\n        resultArray[bufferIndex++] = 0;\\n      } else { // true binary\\n        resultArray[bufferIndex++] = 1;\\n      }\\n\\n      var lenStr = ab.byteLength.toString();\\n      for (var i = 0; i < lenStr.length; i++) {\\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\\n      }\\n      resultArray[bufferIndex++] = 255;\\n\\n      var view = new Uint8Array(ab);\\n      for (var i = 0; i < view.length; i++) {\\n        resultArray[bufferIndex++] = view[i];\\n      }\\n    });\\n\\n    return callback(resultArray.buffer);\\n  });\\n};\\n\\n/**\\n * Encode as Blob\\n */\\n\\nexports.encodePayloadAsBlob = function(packets, callback) {\\n  function encodeOne(packet, doneCallback) {\\n    exports.encodePacket(packet, true, true, function(encoded) {\\n      var binaryIdentifier = new Uint8Array(1);\\n      binaryIdentifier[0] = 1;\\n      if (typeof encoded === 'string') {\\n        var view = new Uint8Array(encoded.length);\\n        for (var i = 0; i < encoded.length; i++) {\\n          view[i] = encoded.charCodeAt(i);\\n        }\\n        encoded = view.buffer;\\n        binaryIdentifier[0] = 0;\\n      }\\n\\n      var len = (encoded instanceof ArrayBuffer)\\n        ? encoded.byteLength\\n        : encoded.size;\\n\\n      var lenStr = len.toString();\\n      var lengthAry = new Uint8Array(lenStr.length + 1);\\n      for (var i = 0; i < lenStr.length; i++) {\\n        lengthAry[i] = parseInt(lenStr[i]);\\n      }\\n      lengthAry[lenStr.length] = 255;\\n\\n      if (Blob) {\\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\\n        doneCallback(null, blob);\\n      }\\n    });\\n  }\\n\\n  map(packets, encodeOne, function(err, results) {\\n    return callback(new Blob(results));\\n  });\\n};\\n\\n/*\\n * Decodes data when a payload is maybe expected. Strings are decoded by\\n * interpreting each byte as a key code for entries marked to start with 0. See\\n * description of encodePayloadAsBinary\\n *\\n * @param {ArrayBuffer} data, callback method\\n * @api public\\n */\\n\\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\\n  if (typeof binaryType === 'function') {\\n    callback = binaryType;\\n    binaryType = null;\\n  }\\n\\n  var bufferTail = data;\\n  var buffers = [];\\n\\n  var numberTooLong = false;\\n  while (bufferTail.byteLength > 0) {\\n    var tailArray = new Uint8Array(bufferTail);\\n    var isString = tailArray[0] === 0;\\n    var msgLength = '';\\n\\n    for (var i = 1; ; i++) {\\n      if (tailArray[i] == 255) break;\\n\\n      if (msgLength.length > 310) {\\n        numberTooLong = true;\\n        break;\\n      }\\n\\n      msgLength += tailArray[i];\\n    }\\n\\n    if(numberTooLong) return callback(err, 0, 1);\\n\\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\\n    msgLength = parseInt(msgLength);\\n\\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\\n    if (isString) {\\n      try {\\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\\n      } catch (e) {\\n        // iPhone Safari doesn't let you apply to typed arrays\\n        var typed = new Uint8Array(msg);\\n        msg = '';\\n        for (var i = 0; i < typed.length; i++) {\\n          msg += String.fromCharCode(typed[i]);\\n        }\\n      }\\n    }\\n\\n    buffers.push(msg);\\n    bufferTail = sliceBuffer(bufferTail, msgLength);\\n  }\\n\\n  var total = buffers.length;\\n  buffers.forEach(function(buffer, i) {\\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\\n  });\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/lib/browser.js\\n// module id = 27\\n// module chunks = 0\",\"\\n/**\\n * Gets the keys for an object.\\n *\\n * @return {Array} keys\\n * @api private\\n */\\n\\nmodule.exports = Object.keys || function keys (obj){\\n  var arr = [];\\n  var has = Object.prototype.hasOwnProperty;\\n\\n  for (var i in obj) {\\n    if (has.call(obj, i)) {\\n      arr.push(i);\\n    }\\n  }\\n  return arr;\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/lib/keys.js\\n// module id = 28\\n// module chunks = 0\",\"\\n/*\\n * Module requirements.\\n */\\n\\nvar isArray = require('isarray');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = hasBinary;\\n\\n/**\\n * Checks for binary data.\\n *\\n * Right now only Buffer and ArrayBuffer are supported..\\n *\\n * @param {Object} anything\\n * @api public\\n */\\n\\nfunction hasBinary(data) {\\n\\n  function _hasBinary(obj) {\\n    if (!obj) return false;\\n\\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\\n         (global.Blob && obj instanceof Blob) ||\\n         (global.File && obj instanceof File)\\n        ) {\\n      return true;\\n    }\\n\\n    if (isArray(obj)) {\\n      for (var i = 0; i < obj.length; i++) {\\n          if (_hasBinary(obj[i])) {\\n              return true;\\n          }\\n      }\\n    } else if (obj && 'object' == typeof obj) {\\n      if (obj.toJSON) {\\n        obj = obj.toJSON();\\n      }\\n\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\\n          return true;\\n        }\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  return _hasBinary(data);\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/~/has-binary/index.js\\n// module id = 29\\n// module chunks = 0\",\"module.exports = Array.isArray || function (arr) {\\n  return Object.prototype.toString.call(arr) == '[object Array]';\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/~/has-binary/~/isarray/index.js\\n// module id = 30\\n// module chunks = 0\",\"/**\\n * An abstraction for slicing an arraybuffer even when\\n * ArrayBuffer.prototype.slice is not supported\\n *\\n * @api public\\n */\\n\\nmodule.exports = function(arraybuffer, start, end) {\\n  var bytes = arraybuffer.byteLength;\\n  start = start || 0;\\n  end = end || bytes;\\n\\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\\n\\n  if (start < 0) { start += bytes; }\\n  if (end < 0) { end += bytes; }\\n  if (end > bytes) { end = bytes; }\\n\\n  if (start >= bytes || start >= end || bytes === 0) {\\n    return new ArrayBuffer(0);\\n  }\\n\\n  var abv = new Uint8Array(arraybuffer);\\n  var result = new Uint8Array(end - start);\\n  for (var i = start, ii = 0; i < end; i++, ii++) {\\n    result[ii] = abv[i];\\n  }\\n  return result.buffer;\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js\\n// module id = 31\\n// module chunks = 0\",\"module.exports = after\\n\\nfunction after(count, callback, err_cb) {\\n    var bail = false\\n    err_cb = err_cb || noop\\n    proxy.count = count\\n\\n    return (count === 0) ? callback() : proxy\\n\\n    function proxy(err, result) {\\n        if (proxy.count <= 0) {\\n            throw new Error('after called too many times')\\n        }\\n        --proxy.count\\n\\n        // after first error, rest are passed to err_cb\\n        if (err) {\\n            bail = true\\n            callback(err)\\n            // future error callbacks will go to error handler\\n            callback = err_cb\\n        } else if (proxy.count === 0 && !bail) {\\n            callback(null, result)\\n        }\\n    }\\n}\\n\\nfunction noop() {}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/~/after/index.js\\n// module id = 32\\n// module chunks = 0\",\"/*! https://mths.be/wtf8 v1.0.0 by @mathias */\\n;(function(root) {\\n\\n\\t// Detect free variables `exports`\\n\\tvar freeExports = typeof exports == 'object' && exports;\\n\\n\\t// Detect free variable `module`\\n\\tvar freeModule = typeof module == 'object' && module &&\\n\\t\\tmodule.exports == freeExports && module;\\n\\n\\t// Detect free variable `global`, from Node.js or Browserified code,\\n\\t// and use it as `root`\\n\\tvar freeGlobal = typeof global == 'object' && global;\\n\\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\\n\\t\\troot = freeGlobal;\\n\\t}\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\tvar stringFromCharCode = String.fromCharCode;\\n\\n\\t// Taken from https://mths.be/punycode\\n\\tfunction ucs2decode(string) {\\n\\t\\tvar output = [];\\n\\t\\tvar counter = 0;\\n\\t\\tvar length = string.length;\\n\\t\\tvar value;\\n\\t\\tvar extra;\\n\\t\\twhile (counter < length) {\\n\\t\\t\\tvalue = string.charCodeAt(counter++);\\n\\t\\t\\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\\n\\t\\t\\t\\t// high surrogate, and there is a next character\\n\\t\\t\\t\\textra = string.charCodeAt(counter++);\\n\\t\\t\\t\\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\\n\\t\\t\\t\\t\\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// unmatched surrogate; only append this code unit, in case the next\\n\\t\\t\\t\\t\\t// code unit is the high surrogate of a surrogate pair\\n\\t\\t\\t\\t\\toutput.push(value);\\n\\t\\t\\t\\t\\tcounter--;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\toutput.push(value);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn output;\\n\\t}\\n\\n\\t// Taken from https://mths.be/punycode\\n\\tfunction ucs2encode(array) {\\n\\t\\tvar length = array.length;\\n\\t\\tvar index = -1;\\n\\t\\tvar value;\\n\\t\\tvar output = '';\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tvalue = array[index];\\n\\t\\t\\tif (value > 0xFFFF) {\\n\\t\\t\\t\\tvalue -= 0x10000;\\n\\t\\t\\t\\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\\n\\t\\t\\t\\tvalue = 0xDC00 | value & 0x3FF;\\n\\t\\t\\t}\\n\\t\\t\\toutput += stringFromCharCode(value);\\n\\t\\t}\\n\\t\\treturn output;\\n\\t}\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\tfunction createByte(codePoint, shift) {\\n\\t\\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\\n\\t}\\n\\n\\tfunction encodeCodePoint(codePoint) {\\n\\t\\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\\n\\t\\t\\treturn stringFromCharCode(codePoint);\\n\\t\\t}\\n\\t\\tvar symbol = '';\\n\\t\\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\\n\\t\\t\\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\\n\\t\\t}\\n\\t\\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\\n\\t\\t\\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\\n\\t\\t\\tsymbol += createByte(codePoint, 6);\\n\\t\\t}\\n\\t\\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\\n\\t\\t\\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\\n\\t\\t\\tsymbol += createByte(codePoint, 12);\\n\\t\\t\\tsymbol += createByte(codePoint, 6);\\n\\t\\t}\\n\\t\\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\\n\\t\\treturn symbol;\\n\\t}\\n\\n\\tfunction wtf8encode(string) {\\n\\t\\tvar codePoints = ucs2decode(string);\\n\\t\\tvar length = codePoints.length;\\n\\t\\tvar index = -1;\\n\\t\\tvar codePoint;\\n\\t\\tvar byteString = '';\\n\\t\\twhile (++index < length) {\\n\\t\\t\\tcodePoint = codePoints[index];\\n\\t\\t\\tbyteString += encodeCodePoint(codePoint);\\n\\t\\t}\\n\\t\\treturn byteString;\\n\\t}\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\tfunction readContinuationByte() {\\n\\t\\tif (byteIndex >= byteCount) {\\n\\t\\t\\tthrow Error('Invalid byte index');\\n\\t\\t}\\n\\n\\t\\tvar continuationByte = byteArray[byteIndex] & 0xFF;\\n\\t\\tbyteIndex++;\\n\\n\\t\\tif ((continuationByte & 0xC0) == 0x80) {\\n\\t\\t\\treturn continuationByte & 0x3F;\\n\\t\\t}\\n\\n\\t\\t// If we end up here, it’s not a continuation byte.\\n\\t\\tthrow Error('Invalid continuation byte');\\n\\t}\\n\\n\\tfunction decodeSymbol() {\\n\\t\\tvar byte1;\\n\\t\\tvar byte2;\\n\\t\\tvar byte3;\\n\\t\\tvar byte4;\\n\\t\\tvar codePoint;\\n\\n\\t\\tif (byteIndex > byteCount) {\\n\\t\\t\\tthrow Error('Invalid byte index');\\n\\t\\t}\\n\\n\\t\\tif (byteIndex == byteCount) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// Read the first byte.\\n\\t\\tbyte1 = byteArray[byteIndex] & 0xFF;\\n\\t\\tbyteIndex++;\\n\\n\\t\\t// 1-byte sequence (no continuation bytes)\\n\\t\\tif ((byte1 & 0x80) == 0) {\\n\\t\\t\\treturn byte1;\\n\\t\\t}\\n\\n\\t\\t// 2-byte sequence\\n\\t\\tif ((byte1 & 0xE0) == 0xC0) {\\n\\t\\t\\tvar byte2 = readContinuationByte();\\n\\t\\t\\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\\n\\t\\t\\tif (codePoint >= 0x80) {\\n\\t\\t\\t\\treturn codePoint;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tthrow Error('Invalid continuation byte');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// 3-byte sequence (may include unpaired surrogates)\\n\\t\\tif ((byte1 & 0xF0) == 0xE0) {\\n\\t\\t\\tbyte2 = readContinuationByte();\\n\\t\\t\\tbyte3 = readContinuationByte();\\n\\t\\t\\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\\n\\t\\t\\tif (codePoint >= 0x0800) {\\n\\t\\t\\t\\treturn codePoint;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tthrow Error('Invalid continuation byte');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// 4-byte sequence\\n\\t\\tif ((byte1 & 0xF8) == 0xF0) {\\n\\t\\t\\tbyte2 = readContinuationByte();\\n\\t\\t\\tbyte3 = readContinuationByte();\\n\\t\\t\\tbyte4 = readContinuationByte();\\n\\t\\t\\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\\n\\t\\t\\t\\t(byte3 << 0x06) | byte4;\\n\\t\\t\\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\\n\\t\\t\\t\\treturn codePoint;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthrow Error('Invalid WTF-8 detected');\\n\\t}\\n\\n\\tvar byteArray;\\n\\tvar byteCount;\\n\\tvar byteIndex;\\n\\tfunction wtf8decode(byteString) {\\n\\t\\tbyteArray = ucs2decode(byteString);\\n\\t\\tbyteCount = byteArray.length;\\n\\t\\tbyteIndex = 0;\\n\\t\\tvar codePoints = [];\\n\\t\\tvar tmp;\\n\\t\\twhile ((tmp = decodeSymbol()) !== false) {\\n\\t\\t\\tcodePoints.push(tmp);\\n\\t\\t}\\n\\t\\treturn ucs2encode(codePoints);\\n\\t}\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\tvar wtf8 = {\\n\\t\\t'version': '1.0.0',\\n\\t\\t'encode': wtf8encode,\\n\\t\\t'decode': wtf8decode\\n\\t};\\n\\n\\t// Some AMD build optimizers, like r.js, check for specific condition patterns\\n\\t// like the following:\\n\\tif (\\n\\t\\ttypeof define == 'function' &&\\n\\t\\ttypeof define.amd == 'object' &&\\n\\t\\tdefine.amd\\n\\t) {\\n\\t\\tdefine(function() {\\n\\t\\t\\treturn wtf8;\\n\\t\\t});\\n\\t}\\telse if (freeExports && !freeExports.nodeType) {\\n\\t\\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\\n\\t\\t\\tfreeModule.exports = wtf8;\\n\\t\\t} else { // in Narwhal or RingoJS v0.7.0-\\n\\t\\t\\tvar object = {};\\n\\t\\t\\tvar hasOwnProperty = object.hasOwnProperty;\\n\\t\\t\\tfor (var key in wtf8) {\\n\\t\\t\\t\\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else { // in Rhino or a web browser\\n\\t\\troot.wtf8 = wtf8;\\n\\t}\\n\\n}(this));\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/~/wtf-8/wtf-8.js\\n// module id = 33\\n// module chunks = 0\",\"/*\\n * base64-arraybuffer\\n * https://github.com/niklasvh/base64-arraybuffer\\n *\\n * Copyright (c) 2012 Niklas von Hertzen\\n * Licensed under the MIT license.\\n */\\n(function(){\\n  \\\"use strict\\\";\\n\\n  var chars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n  // Use a lookup table to find the index.\\n  var lookup = new Uint8Array(256);\\n  for (var i = 0; i < chars.length; i++) {\\n    lookup[chars.charCodeAt(i)] = i;\\n  }\\n\\n  exports.encode = function(arraybuffer) {\\n    var bytes = new Uint8Array(arraybuffer),\\n    i, len = bytes.length, base64 = \\\"\\\";\\n\\n    for (i = 0; i < len; i+=3) {\\n      base64 += chars[bytes[i] >> 2];\\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\\n      base64 += chars[bytes[i + 2] & 63];\\n    }\\n\\n    if ((len % 3) === 2) {\\n      base64 = base64.substring(0, base64.length - 1) + \\\"=\\\";\\n    } else if (len % 3 === 1) {\\n      base64 = base64.substring(0, base64.length - 2) + \\\"==\\\";\\n    }\\n\\n    return base64;\\n  };\\n\\n  exports.decode =  function(base64) {\\n    var bufferLength = base64.length * 0.75,\\n    len = base64.length, i, p = 0,\\n    encoded1, encoded2, encoded3, encoded4;\\n\\n    if (base64[base64.length - 1] === \\\"=\\\") {\\n      bufferLength--;\\n      if (base64[base64.length - 2] === \\\"=\\\") {\\n        bufferLength--;\\n      }\\n    }\\n\\n    var arraybuffer = new ArrayBuffer(bufferLength),\\n    bytes = new Uint8Array(arraybuffer);\\n\\n    for (i = 0; i < len; i+=4) {\\n      encoded1 = lookup[base64.charCodeAt(i)];\\n      encoded2 = lookup[base64.charCodeAt(i+1)];\\n      encoded3 = lookup[base64.charCodeAt(i+2)];\\n      encoded4 = lookup[base64.charCodeAt(i+3)];\\n\\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\\n    }\\n\\n    return arraybuffer;\\n  };\\n})();\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/base64-arraybuffer/lib/base64-arraybuffer.js\\n// module id = 34\\n// module chunks = 0\",\"/**\\n * Create a blob builder even when vendor prefixes exist\\n */\\n\\nvar BlobBuilder = global.BlobBuilder\\n  || global.WebKitBlobBuilder\\n  || global.MSBlobBuilder\\n  || global.MozBlobBuilder;\\n\\n/**\\n * Check if Blob constructor is supported\\n */\\n\\nvar blobSupported = (function() {\\n  try {\\n    var a = new Blob(['hi']);\\n    return a.size === 2;\\n  } catch(e) {\\n    return false;\\n  }\\n})();\\n\\n/**\\n * Check if Blob constructor supports ArrayBufferViews\\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\\n */\\n\\nvar blobSupportsArrayBufferView = blobSupported && (function() {\\n  try {\\n    var b = new Blob([new Uint8Array([1,2])]);\\n    return b.size === 2;\\n  } catch(e) {\\n    return false;\\n  }\\n})();\\n\\n/**\\n * Check if BlobBuilder is supported\\n */\\n\\nvar blobBuilderSupported = BlobBuilder\\n  && BlobBuilder.prototype.append\\n  && BlobBuilder.prototype.getBlob;\\n\\n/**\\n * Helper function that maps ArrayBufferViews to ArrayBuffers\\n * Used by BlobBuilder constructor and old browsers that didn't\\n * support it in the Blob constructor.\\n */\\n\\nfunction mapArrayBufferViews(ary) {\\n  for (var i = 0; i < ary.length; i++) {\\n    var chunk = ary[i];\\n    if (chunk.buffer instanceof ArrayBuffer) {\\n      var buf = chunk.buffer;\\n\\n      // if this is a subarray, make a copy so we only\\n      // include the subarray region from the underlying buffer\\n      if (chunk.byteLength !== buf.byteLength) {\\n        var copy = new Uint8Array(chunk.byteLength);\\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\\n        buf = copy.buffer;\\n      }\\n\\n      ary[i] = buf;\\n    }\\n  }\\n}\\n\\nfunction BlobBuilderConstructor(ary, options) {\\n  options = options || {};\\n\\n  var bb = new BlobBuilder();\\n  mapArrayBufferViews(ary);\\n\\n  for (var i = 0; i < ary.length; i++) {\\n    bb.append(ary[i]);\\n  }\\n\\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\\n};\\n\\nfunction BlobConstructor(ary, options) {\\n  mapArrayBufferViews(ary);\\n  return new Blob(ary, options || {});\\n};\\n\\nmodule.exports = (function() {\\n  if (blobSupported) {\\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\\n  } else if (blobBuilderSupported) {\\n    return BlobBuilderConstructor;\\n  } else {\\n    return undefined;\\n  }\\n})();\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/engine.io-parser/~/blob/index.js\\n// module id = 35\\n// module chunks = 0\",\"\\r\\n/**\\r\\n * Expose `Emitter`.\\r\\n */\\r\\n\\r\\nif (typeof module !== 'undefined') {\\r\\n  module.exports = Emitter;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Initialize a new `Emitter`.\\r\\n *\\r\\n * @api public\\r\\n */\\r\\n\\r\\nfunction Emitter(obj) {\\r\\n  if (obj) return mixin(obj);\\r\\n};\\r\\n\\r\\n/**\\r\\n * Mixin the emitter properties.\\r\\n *\\r\\n * @param {Object} obj\\r\\n * @return {Object}\\r\\n * @api private\\r\\n */\\r\\n\\r\\nfunction mixin(obj) {\\r\\n  for (var key in Emitter.prototype) {\\r\\n    obj[key] = Emitter.prototype[key];\\r\\n  }\\r\\n  return obj;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Listen on the given `event` with `fn`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.on =\\r\\nEmitter.prototype.addEventListener = function(event, fn){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\\r\\n    .push(fn);\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Adds an `event` listener that will be invoked a single\\r\\n * time then automatically removed.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.once = function(event, fn){\\r\\n  function on() {\\r\\n    this.off(event, on);\\r\\n    fn.apply(this, arguments);\\r\\n  }\\r\\n\\r\\n  on.fn = fn;\\r\\n  this.on(event, on);\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Remove the given callback for `event` or all\\r\\n * registered callbacks.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.off =\\r\\nEmitter.prototype.removeListener =\\r\\nEmitter.prototype.removeAllListeners =\\r\\nEmitter.prototype.removeEventListener = function(event, fn){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n\\r\\n  // all\\r\\n  if (0 == arguments.length) {\\r\\n    this._callbacks = {};\\r\\n    return this;\\r\\n  }\\r\\n\\r\\n  // specific event\\r\\n  var callbacks = this._callbacks['$' + event];\\r\\n  if (!callbacks) return this;\\r\\n\\r\\n  // remove all handlers\\r\\n  if (1 == arguments.length) {\\r\\n    delete this._callbacks['$' + event];\\r\\n    return this;\\r\\n  }\\r\\n\\r\\n  // remove specific handler\\r\\n  var cb;\\r\\n  for (var i = 0; i < callbacks.length; i++) {\\r\\n    cb = callbacks[i];\\r\\n    if (cb === fn || cb.fn === fn) {\\r\\n      callbacks.splice(i, 1);\\r\\n      break;\\r\\n    }\\r\\n  }\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Emit `event` with the given args.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Mixed} ...\\r\\n * @return {Emitter}\\r\\n */\\r\\n\\r\\nEmitter.prototype.emit = function(event){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n  var args = [].slice.call(arguments, 1)\\r\\n    , callbacks = this._callbacks['$' + event];\\r\\n\\r\\n  if (callbacks) {\\r\\n    callbacks = callbacks.slice(0);\\r\\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\\r\\n      callbacks[i].apply(this, args);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Return array of callbacks for `event`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Array}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.listeners = function(event){\\r\\n  this._callbacks = this._callbacks || {};\\r\\n  return this._callbacks['$' + event] || [];\\r\\n};\\r\\n\\r\\n/**\\r\\n * Check if this emitter has `event` handlers.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Boolean}\\r\\n * @api public\\r\\n */\\r\\n\\r\\nEmitter.prototype.hasListeners = function(event){\\r\\n  return !! this.listeners(event).length;\\r\\n};\\r\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/component-emitter/index.js\\n// module id = 36\\n// module chunks = 0\",\"/**\\r\\n * Compiles a querystring\\r\\n * Returns string representation of the object\\r\\n *\\r\\n * @param {Object}\\r\\n * @api private\\r\\n */\\r\\n\\r\\nexports.encode = function (obj) {\\r\\n  var str = '';\\r\\n\\r\\n  for (var i in obj) {\\r\\n    if (obj.hasOwnProperty(i)) {\\r\\n      if (str.length) str += '&';\\r\\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return str;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Parses a simple querystring into an object\\r\\n *\\r\\n * @param {String} qs\\r\\n * @api private\\r\\n */\\r\\n\\r\\nexports.decode = function(qs){\\r\\n  var qry = {};\\r\\n  var pairs = qs.split('&');\\r\\n  for (var i = 0, l = pairs.length; i < l; i++) {\\r\\n    var pair = pairs[i].split('=');\\r\\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\\r\\n  }\\r\\n  return qry;\\r\\n};\\r\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/parseqs/index.js\\n// module id = 37\\n// module chunks = 0\",\"\\nmodule.exports = function(a, b){\\n  var fn = function(){};\\n  fn.prototype = b.prototype;\\n  a.prototype = new fn;\\n  a.prototype.constructor = a;\\n};\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/component-inherit/index.js\\n// module id = 38\\n// module chunks = 0\",\"'use strict';\\n\\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\\n  , length = 64\\n  , map = {}\\n  , seed = 0\\n  , i = 0\\n  , prev;\\n\\n/**\\n * Return a string representing the specified number.\\n *\\n * @param {Number} num The number to convert.\\n * @returns {String} The string representation of the number.\\n * @api public\\n */\\nfunction encode(num) {\\n  var encoded = '';\\n\\n  do {\\n    encoded = alphabet[num % length] + encoded;\\n    num = Math.floor(num / length);\\n  } while (num > 0);\\n\\n  return encoded;\\n}\\n\\n/**\\n * Return the integer value specified by the given string.\\n *\\n * @param {String} str The string to convert.\\n * @returns {Number} The integer value represented by the string.\\n * @api public\\n */\\nfunction decode(str) {\\n  var decoded = 0;\\n\\n  for (i = 0; i < str.length; i++) {\\n    decoded = decoded * length + map[str.charAt(i)];\\n  }\\n\\n  return decoded;\\n}\\n\\n/**\\n * Yeast: A tiny growing id generator.\\n *\\n * @returns {String} A unique id.\\n * @api public\\n */\\nfunction yeast() {\\n  var now = encode(+new Date());\\n\\n  if (now !== prev) return seed = 0, prev = now;\\n  return now +'.'+ encode(seed++);\\n}\\n\\n//\\n// Map each character to its index.\\n//\\nfor (; i < length; i++) map[alphabet[i]] = i;\\n\\n//\\n// Expose the `yeast`, `encode` and `decode` functions.\\n//\\nyeast.encode = encode;\\nyeast.decode = decode;\\nmodule.exports = yeast;\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/yeast/index.js\\n// module id = 39\\n// module chunks = 0\",\"\\n/**\\n * Module requirements.\\n */\\n\\nvar Polling = require('./polling');\\nvar inherit = require('component-inherit');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = JSONPPolling;\\n\\n/**\\n * Cached regular expressions.\\n */\\n\\nvar rNewline = /\\\\n/g;\\nvar rEscapedNewline = /\\\\\\\\n/g;\\n\\n/**\\n * Global JSONP callbacks.\\n */\\n\\nvar callbacks;\\n\\n/**\\n * Noop.\\n */\\n\\nfunction empty () { }\\n\\n/**\\n * JSONP Polling constructor.\\n *\\n * @param {Object} opts.\\n * @api public\\n */\\n\\nfunction JSONPPolling (opts) {\\n  Polling.call(this, opts);\\n\\n  this.query = this.query || {};\\n\\n  // define global callbacks array if not present\\n  // we do this here (lazily) to avoid unneeded global pollution\\n  if (!callbacks) {\\n    // we need to consider multiple engines in the same page\\n    if (!global.___eio) global.___eio = [];\\n    callbacks = global.___eio;\\n  }\\n\\n  // callback identifier\\n  this.index = callbacks.length;\\n\\n  // add callback to jsonp global\\n  var self = this;\\n  callbacks.push(function (msg) {\\n    self.onData(msg);\\n  });\\n\\n  // append to query string\\n  this.query.j = this.index;\\n\\n  // prevent spurious errors from being emitted when the window is unloaded\\n  if (global.document && global.addEventListener) {\\n    global.addEventListener('beforeunload', function () {\\n      if (self.script) self.script.onerror = empty;\\n    }, false);\\n  }\\n}\\n\\n/**\\n * Inherits from Polling.\\n */\\n\\ninherit(JSONPPolling, Polling);\\n\\n/*\\n * JSONP only supports binary as base64 encoded strings\\n */\\n\\nJSONPPolling.prototype.supportsBinary = false;\\n\\n/**\\n * Closes the socket.\\n *\\n * @api private\\n */\\n\\nJSONPPolling.prototype.doClose = function () {\\n  if (this.script) {\\n    this.script.parentNode.removeChild(this.script);\\n    this.script = null;\\n  }\\n\\n  if (this.form) {\\n    this.form.parentNode.removeChild(this.form);\\n    this.form = null;\\n    this.iframe = null;\\n  }\\n\\n  Polling.prototype.doClose.call(this);\\n};\\n\\n/**\\n * Starts a poll cycle.\\n *\\n * @api private\\n */\\n\\nJSONPPolling.prototype.doPoll = function () {\\n  var self = this;\\n  var script = document.createElement('script');\\n\\n  if (this.script) {\\n    this.script.parentNode.removeChild(this.script);\\n    this.script = null;\\n  }\\n\\n  script.async = true;\\n  script.src = this.uri();\\n  script.onerror = function (e) {\\n    self.onError('jsonp poll error', e);\\n  };\\n\\n  var insertAt = document.getElementsByTagName('script')[0];\\n  if (insertAt) {\\n    insertAt.parentNode.insertBefore(script, insertAt);\\n  } else {\\n    (document.head || document.body).appendChild(script);\\n  }\\n  this.script = script;\\n\\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\\n\\n  if (isUAgecko) {\\n    setTimeout(function () {\\n      var iframe = document.createElement('iframe');\\n      document.body.appendChild(iframe);\\n      document.body.removeChild(iframe);\\n    }, 100);\\n  }\\n};\\n\\n/**\\n * Writes with a hidden iframe.\\n *\\n * @param {String} data to send\\n * @param {Function} called upon flush.\\n * @api private\\n */\\n\\nJSONPPolling.prototype.doWrite = function (data, fn) {\\n  var self = this;\\n\\n  if (!this.form) {\\n    var form = document.createElement('form');\\n    var area = document.createElement('textarea');\\n    var id = this.iframeId = 'eio_iframe_' + this.index;\\n    var iframe;\\n\\n    form.className = 'socketio';\\n    form.style.position = 'absolute';\\n    form.style.top = '-1000px';\\n    form.style.left = '-1000px';\\n    form.target = id;\\n    form.method = 'POST';\\n    form.setAttribute('accept-charset', 'utf-8');\\n    area.name = 'd';\\n    form.appendChild(area);\\n    document.body.appendChild(form);\\n\\n    this.form = form;\\n    this.area = area;\\n  }\\n\\n  this.form.action = this.uri();\\n\\n  function complete () {\\n    initIframe();\\n    fn();\\n  }\\n\\n  function initIframe () {\\n    if (self.iframe) {\\n      try {\\n        self.form.removeChild(self.iframe);\\n      } catch (e) {\\n        self.onError('jsonp polling iframe removal error', e);\\n      }\\n    }\\n\\n    try {\\n      // ie6 dynamic iframes with target=\\\"\\\" support (thanks Chris Lambacher)\\n      var html = '<iframe src=\\\"javascript:0\\\" name=\\\"' + self.iframeId + '\\\">';\\n      iframe = document.createElement(html);\\n    } catch (e) {\\n      iframe = document.createElement('iframe');\\n      iframe.name = self.iframeId;\\n      iframe.src = 'javascript:0';\\n    }\\n\\n    iframe.id = self.iframeId;\\n\\n    self.form.appendChild(iframe);\\n    self.iframe = iframe;\\n  }\\n\\n  initIframe();\\n\\n  // escape \\\\n to prevent it from being converted into \\\\r\\\\n by some UAs\\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\\n  data = data.replace(rEscapedNewline, '\\\\\\\\\\\\n');\\n  this.area.value = data.replace(rNewline, '\\\\\\\\n');\\n\\n  try {\\n    this.form.submit();\\n  } catch (e) {}\\n\\n  if (this.iframe.attachEvent) {\\n    this.iframe.onreadystatechange = function () {\\n      if (self.iframe.readyState === 'complete') {\\n        complete();\\n      }\\n    };\\n  } else {\\n    this.iframe.onload = complete;\\n  }\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/transports/polling-jsonp.js\\n// module id = 40\\n// module chunks = 0\",\"/**\\n * Module dependencies.\\n */\\n\\nvar Transport = require('../transport');\\nvar parser = require('engine.io-parser');\\nvar parseqs = require('parseqs');\\nvar inherit = require('component-inherit');\\nvar yeast = require('yeast');\\nvar debug = require('debug')('engine.io-client:websocket');\\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\\nvar NodeWebSocket;\\nif (typeof window === 'undefined') {\\n  try {\\n    NodeWebSocket = require('ws');\\n  } catch (e) { }\\n}\\n\\n/**\\n * Get either the `WebSocket` or `MozWebSocket` globals\\n * in the browser or try to resolve WebSocket-compatible\\n * interface exposed by `ws` for Node-like environment.\\n */\\n\\nvar WebSocket = BrowserWebSocket;\\nif (!WebSocket && typeof window === 'undefined') {\\n  WebSocket = NodeWebSocket;\\n}\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = WS;\\n\\n/**\\n * WebSocket transport constructor.\\n *\\n * @api {Object} connection options\\n * @api public\\n */\\n\\nfunction WS (opts) {\\n  var forceBase64 = (opts && opts.forceBase64);\\n  if (forceBase64) {\\n    this.supportsBinary = false;\\n  }\\n  this.perMessageDeflate = opts.perMessageDeflate;\\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\\n  if (!this.usingBrowserWebSocket) {\\n    WebSocket = NodeWebSocket;\\n  }\\n  Transport.call(this, opts);\\n}\\n\\n/**\\n * Inherits from Transport.\\n */\\n\\ninherit(WS, Transport);\\n\\n/**\\n * Transport name.\\n *\\n * @api public\\n */\\n\\nWS.prototype.name = 'websocket';\\n\\n/*\\n * WebSockets support binary\\n */\\n\\nWS.prototype.supportsBinary = true;\\n\\n/**\\n * Opens socket.\\n *\\n * @api private\\n */\\n\\nWS.prototype.doOpen = function () {\\n  if (!this.check()) {\\n    // let probe timeout\\n    return;\\n  }\\n\\n  var uri = this.uri();\\n  var protocols = void (0);\\n  var opts = {\\n    agent: this.agent,\\n    perMessageDeflate: this.perMessageDeflate\\n  };\\n\\n  // SSL options for Node.js client\\n  opts.pfx = this.pfx;\\n  opts.key = this.key;\\n  opts.passphrase = this.passphrase;\\n  opts.cert = this.cert;\\n  opts.ca = this.ca;\\n  opts.ciphers = this.ciphers;\\n  opts.rejectUnauthorized = this.rejectUnauthorized;\\n  if (this.extraHeaders) {\\n    opts.headers = this.extraHeaders;\\n  }\\n  if (this.localAddress) {\\n    opts.localAddress = this.localAddress;\\n  }\\n\\n  try {\\n    this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\\n  } catch (err) {\\n    return this.emit('error', err);\\n  }\\n\\n  if (this.ws.binaryType === undefined) {\\n    this.supportsBinary = false;\\n  }\\n\\n  if (this.ws.supports && this.ws.supports.binary) {\\n    this.supportsBinary = true;\\n    this.ws.binaryType = 'nodebuffer';\\n  } else {\\n    this.ws.binaryType = 'arraybuffer';\\n  }\\n\\n  this.addEventListeners();\\n};\\n\\n/**\\n * Adds event listeners to the socket\\n *\\n * @api private\\n */\\n\\nWS.prototype.addEventListeners = function () {\\n  var self = this;\\n\\n  this.ws.onopen = function () {\\n    self.onOpen();\\n  };\\n  this.ws.onclose = function () {\\n    self.onClose();\\n  };\\n  this.ws.onmessage = function (ev) {\\n    self.onData(ev.data);\\n  };\\n  this.ws.onerror = function (e) {\\n    self.onError('websocket error', e);\\n  };\\n};\\n\\n/**\\n * Writes data to socket.\\n *\\n * @param {Array} array of packets.\\n * @api private\\n */\\n\\nWS.prototype.write = function (packets) {\\n  var self = this;\\n  this.writable = false;\\n\\n  // encodePacket efficient as it uses WS framing\\n  // no need for encodePayload\\n  var total = packets.length;\\n  for (var i = 0, l = total; i < l; i++) {\\n    (function (packet) {\\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\\n        if (!self.usingBrowserWebSocket) {\\n          // always create a new object (GH-437)\\n          var opts = {};\\n          if (packet.options) {\\n            opts.compress = packet.options.compress;\\n          }\\n\\n          if (self.perMessageDeflate) {\\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\\n            if (len < self.perMessageDeflate.threshold) {\\n              opts.compress = false;\\n            }\\n          }\\n        }\\n\\n        // Sometimes the websocket has already been closed but the browser didn't\\n        // have a chance of informing us about it yet, in that case send will\\n        // throw an error\\n        try {\\n          if (self.usingBrowserWebSocket) {\\n            // TypeError is thrown when passing the second argument on Safari\\n            self.ws.send(data);\\n          } else {\\n            self.ws.send(data, opts);\\n          }\\n        } catch (e) {\\n          debug('websocket closed before onclose event');\\n        }\\n\\n        --total || done();\\n      });\\n    })(packets[i]);\\n  }\\n\\n  function done () {\\n    self.emit('flush');\\n\\n    // fake drain\\n    // defer to next tick to allow Socket to clear writeBuffer\\n    setTimeout(function () {\\n      self.writable = true;\\n      self.emit('drain');\\n    }, 0);\\n  }\\n};\\n\\n/**\\n * Called upon close\\n *\\n * @api private\\n */\\n\\nWS.prototype.onClose = function () {\\n  Transport.prototype.onClose.call(this);\\n};\\n\\n/**\\n * Closes socket.\\n *\\n * @api private\\n */\\n\\nWS.prototype.doClose = function () {\\n  if (typeof this.ws !== 'undefined') {\\n    this.ws.close();\\n  }\\n};\\n\\n/**\\n * Generates uri for connection.\\n *\\n * @api private\\n */\\n\\nWS.prototype.uri = function () {\\n  var query = this.query || {};\\n  var schema = this.secure ? 'wss' : 'ws';\\n  var port = '';\\n\\n  // avoid port if default for schema\\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\\n    ('ws' === schema && Number(this.port) !== 80))) {\\n    port = ':' + this.port;\\n  }\\n\\n  // append timestamp to URI\\n  if (this.timestampRequests) {\\n    query[this.timestampParam] = yeast();\\n  }\\n\\n  // communicate binary support capabilities\\n  if (!this.supportsBinary) {\\n    query.b64 = 1;\\n  }\\n\\n  query = parseqs.encode(query);\\n\\n  // prepend ? to query\\n  if (query.length) {\\n    query = '?' + query;\\n  }\\n\\n  var ipv6 = this.hostname.indexOf(':') !== -1;\\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\\n};\\n\\n/**\\n * Feature detection for WebSocket.\\n *\\n * @return {Boolean} whether this transport is available.\\n * @api public\\n */\\n\\nWS.prototype.check = function () {\\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/lib/transports/websocket.js\\n// module id = 41\\n// module chunks = 0\",\"/* (ignored) */\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ws (ignored)\\n// module id = 42\\n// module chunks = 0\",\"\\nvar indexOf = [].indexOf;\\n\\nmodule.exports = function(arr, obj){\\n  if (indexOf) return arr.indexOf(obj);\\n  for (var i = 0; i < arr.length; ++i) {\\n    if (arr[i] === obj) return i;\\n  }\\n  return -1;\\n};\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/indexof/index.js\\n// module id = 43\\n// module chunks = 0\",\"/**\\r\\n * JSON parse.\\r\\n *\\r\\n * @see Based on jQuery#parseJSON (MIT) and JSON2\\r\\n * @api private\\r\\n */\\r\\n\\r\\nvar rvalidchars = /^[\\\\],:{}\\\\s]*$/;\\r\\nvar rvalidescape = /\\\\\\\\(?:[\\\"\\\\\\\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\\r\\nvar rvalidtokens = /\\\"[^\\\"\\\\\\\\\\\\n\\\\r]*\\\"|true|false|null|-?\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d+)?/g;\\r\\nvar rvalidbraces = /(?:^|:|,)(?:\\\\s*\\\\[)+/g;\\r\\nvar rtrimLeft = /^\\\\s+/;\\r\\nvar rtrimRight = /\\\\s+$/;\\r\\n\\r\\nmodule.exports = function parsejson(data) {\\r\\n  if ('string' != typeof data || !data) {\\r\\n    return null;\\r\\n  }\\r\\n\\r\\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\\r\\n\\r\\n  // Attempt to parse using the native JSON parser first\\r\\n  if (global.JSON && JSON.parse) {\\r\\n    return JSON.parse(data);\\r\\n  }\\r\\n\\r\\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\\r\\n      .replace(rvalidtokens, ']')\\r\\n      .replace(rvalidbraces, ''))) {\\r\\n    return (new Function('return ' + data))();\\r\\n  }\\r\\n};\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/engine.io-client/~/parsejson/index.js\\n// module id = 44\\n// module chunks = 0\",\"\\n/**\\n * Module dependencies.\\n */\\n\\nvar parser = require('socket.io-parser');\\nvar Emitter = require('component-emitter');\\nvar toArray = require('to-array');\\nvar on = require('./on');\\nvar bind = require('component-bind');\\nvar debug = require('debug')('socket.io-client:socket');\\nvar hasBin = require('has-binary');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = exports = Socket;\\n\\n/**\\n * Internal events (blacklisted).\\n * These events can't be emitted by the user.\\n *\\n * @api private\\n */\\n\\nvar events = {\\n  connect: 1,\\n  connect_error: 1,\\n  connect_timeout: 1,\\n  connecting: 1,\\n  disconnect: 1,\\n  error: 1,\\n  reconnect: 1,\\n  reconnect_attempt: 1,\\n  reconnect_failed: 1,\\n  reconnect_error: 1,\\n  reconnecting: 1,\\n  ping: 1,\\n  pong: 1\\n};\\n\\n/**\\n * Shortcut to `Emitter#emit`.\\n */\\n\\nvar emit = Emitter.prototype.emit;\\n\\n/**\\n * `Socket` constructor.\\n *\\n * @api public\\n */\\n\\nfunction Socket (io, nsp, opts) {\\n  this.io = io;\\n  this.nsp = nsp;\\n  this.json = this; // compat\\n  this.ids = 0;\\n  this.acks = {};\\n  this.receiveBuffer = [];\\n  this.sendBuffer = [];\\n  this.connected = false;\\n  this.disconnected = true;\\n  if (opts && opts.query) {\\n    this.query = opts.query;\\n  }\\n  if (this.io.autoConnect) this.open();\\n}\\n\\n/**\\n * Mix in `Emitter`.\\n */\\n\\nEmitter(Socket.prototype);\\n\\n/**\\n * Subscribe to open, close and packet events\\n *\\n * @api private\\n */\\n\\nSocket.prototype.subEvents = function () {\\n  if (this.subs) return;\\n\\n  var io = this.io;\\n  this.subs = [\\n    on(io, 'open', bind(this, 'onopen')),\\n    on(io, 'packet', bind(this, 'onpacket')),\\n    on(io, 'close', bind(this, 'onclose'))\\n  ];\\n};\\n\\n/**\\n * \\\"Opens\\\" the socket.\\n *\\n * @api public\\n */\\n\\nSocket.prototype.open =\\nSocket.prototype.connect = function () {\\n  if (this.connected) return this;\\n\\n  this.subEvents();\\n  this.io.open(); // ensure open\\n  if ('open' === this.io.readyState) this.onopen();\\n  this.emit('connecting');\\n  return this;\\n};\\n\\n/**\\n * Sends a `message` event.\\n *\\n * @return {Socket} self\\n * @api public\\n */\\n\\nSocket.prototype.send = function () {\\n  var args = toArray(arguments);\\n  args.unshift('message');\\n  this.emit.apply(this, args);\\n  return this;\\n};\\n\\n/**\\n * Override `emit`.\\n * If the event is in `events`, it's emitted normally.\\n *\\n * @param {String} event name\\n * @return {Socket} self\\n * @api public\\n */\\n\\nSocket.prototype.emit = function (ev) {\\n  if (events.hasOwnProperty(ev)) {\\n    emit.apply(this, arguments);\\n    return this;\\n  }\\n\\n  var args = toArray(arguments);\\n  var parserType = parser.EVENT; // default\\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\\n  var packet = { type: parserType, data: args };\\n\\n  packet.options = {};\\n  packet.options.compress = !this.flags || false !== this.flags.compress;\\n\\n  // event ack callback\\n  if ('function' === typeof args[args.length - 1]) {\\n    debug('emitting packet with ack id %d', this.ids);\\n    this.acks[this.ids] = args.pop();\\n    packet.id = this.ids++;\\n  }\\n\\n  if (this.connected) {\\n    this.packet(packet);\\n  } else {\\n    this.sendBuffer.push(packet);\\n  }\\n\\n  delete this.flags;\\n\\n  return this;\\n};\\n\\n/**\\n * Sends a packet.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\nSocket.prototype.packet = function (packet) {\\n  packet.nsp = this.nsp;\\n  this.io.packet(packet);\\n};\\n\\n/**\\n * Called upon engine `open`.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onopen = function () {\\n  debug('transport is open - connecting');\\n\\n  // write connect packet if necessary\\n  if ('/' !== this.nsp) {\\n    if (this.query) {\\n      this.packet({type: parser.CONNECT, query: this.query});\\n    } else {\\n      this.packet({type: parser.CONNECT});\\n    }\\n  }\\n};\\n\\n/**\\n * Called upon engine `close`.\\n *\\n * @param {String} reason\\n * @api private\\n */\\n\\nSocket.prototype.onclose = function (reason) {\\n  debug('close (%s)', reason);\\n  this.connected = false;\\n  this.disconnected = true;\\n  delete this.id;\\n  this.emit('disconnect', reason);\\n};\\n\\n/**\\n * Called with socket packet.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\nSocket.prototype.onpacket = function (packet) {\\n  if (packet.nsp !== this.nsp) return;\\n\\n  switch (packet.type) {\\n    case parser.CONNECT:\\n      this.onconnect();\\n      break;\\n\\n    case parser.EVENT:\\n      this.onevent(packet);\\n      break;\\n\\n    case parser.BINARY_EVENT:\\n      this.onevent(packet);\\n      break;\\n\\n    case parser.ACK:\\n      this.onack(packet);\\n      break;\\n\\n    case parser.BINARY_ACK:\\n      this.onack(packet);\\n      break;\\n\\n    case parser.DISCONNECT:\\n      this.ondisconnect();\\n      break;\\n\\n    case parser.ERROR:\\n      this.emit('error', packet.data);\\n      break;\\n  }\\n};\\n\\n/**\\n * Called upon a server event.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\nSocket.prototype.onevent = function (packet) {\\n  var args = packet.data || [];\\n  debug('emitting event %j', args);\\n\\n  if (null != packet.id) {\\n    debug('attaching ack callback to event');\\n    args.push(this.ack(packet.id));\\n  }\\n\\n  if (this.connected) {\\n    emit.apply(this, args);\\n  } else {\\n    this.receiveBuffer.push(args);\\n  }\\n};\\n\\n/**\\n * Produces an ack callback to emit with an event.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.ack = function (id) {\\n  var self = this;\\n  var sent = false;\\n  return function () {\\n    // prevent double callbacks\\n    if (sent) return;\\n    sent = true;\\n    var args = toArray(arguments);\\n    debug('sending ack %j', args);\\n\\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\\n    self.packet({\\n      type: type,\\n      id: id,\\n      data: args\\n    });\\n  };\\n};\\n\\n/**\\n * Called upon a server acknowlegement.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\nSocket.prototype.onack = function (packet) {\\n  var ack = this.acks[packet.id];\\n  if ('function' === typeof ack) {\\n    debug('calling ack %s with %j', packet.id, packet.data);\\n    ack.apply(this, packet.data);\\n    delete this.acks[packet.id];\\n  } else {\\n    debug('bad ack %s', packet.id);\\n  }\\n};\\n\\n/**\\n * Called upon server connect.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.onconnect = function () {\\n  this.connected = true;\\n  this.disconnected = false;\\n  this.emit('connect');\\n  this.emitBuffered();\\n};\\n\\n/**\\n * Emit buffered events (received and emitted).\\n *\\n * @api private\\n */\\n\\nSocket.prototype.emitBuffered = function () {\\n  var i;\\n  for (i = 0; i < this.receiveBuffer.length; i++) {\\n    emit.apply(this, this.receiveBuffer[i]);\\n  }\\n  this.receiveBuffer = [];\\n\\n  for (i = 0; i < this.sendBuffer.length; i++) {\\n    this.packet(this.sendBuffer[i]);\\n  }\\n  this.sendBuffer = [];\\n};\\n\\n/**\\n * Called upon server disconnect.\\n *\\n * @api private\\n */\\n\\nSocket.prototype.ondisconnect = function () {\\n  debug('server disconnect (%s)', this.nsp);\\n  this.destroy();\\n  this.onclose('io server disconnect');\\n};\\n\\n/**\\n * Called upon forced client/server side disconnections,\\n * this method ensures the manager stops tracking us and\\n * that reconnections don't get triggered for this.\\n *\\n * @api private.\\n */\\n\\nSocket.prototype.destroy = function () {\\n  if (this.subs) {\\n    // clean subscriptions to avoid reconnections\\n    for (var i = 0; i < this.subs.length; i++) {\\n      this.subs[i].destroy();\\n    }\\n    this.subs = null;\\n  }\\n\\n  this.io.destroy(this);\\n};\\n\\n/**\\n * Disconnects the socket manually.\\n *\\n * @return {Socket} self\\n * @api public\\n */\\n\\nSocket.prototype.close =\\nSocket.prototype.disconnect = function () {\\n  if (this.connected) {\\n    debug('performing disconnect (%s)', this.nsp);\\n    this.packet({ type: parser.DISCONNECT });\\n  }\\n\\n  // remove socket from pool\\n  this.destroy();\\n\\n  if (this.connected) {\\n    // fire events\\n    this.onclose('io client disconnect');\\n  }\\n  return this;\\n};\\n\\n/**\\n * Sets the compress flag.\\n *\\n * @param {Boolean} if `true`, compresses the sending data\\n * @return {Socket} self\\n * @api public\\n */\\n\\nSocket.prototype.compress = function (compress) {\\n  this.flags = this.flags || {};\\n  this.flags.compress = compress;\\n  return this;\\n};\\n\\n\\n\\n// WEBPACK FOOTER //\\n// lib/socket.js\",\"module.exports = toArray\\n\\nfunction toArray(list, index) {\\n    var array = []\\n\\n    index = index || 0\\n\\n    for (var i = index || 0; i < list.length; i++) {\\n        array[i - index] = list[i]\\n    }\\n\\n    return array\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/to-array/index.js\\n// module id = 46\\n// module chunks = 0\",\"\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = on;\\n\\n/**\\n * Helper for subscriptions.\\n *\\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\\n * @param {String} event name\\n * @param {Function} callback\\n * @api public\\n */\\n\\nfunction on (obj, ev, fn) {\\n  obj.on(ev, fn);\\n  return {\\n    destroy: function () {\\n      obj.removeListener(ev, fn);\\n    }\\n  };\\n}\\n\\n\\n\\n// WEBPACK FOOTER //\\n// lib/on.js\",\"/**\\n * Slice reference.\\n */\\n\\nvar slice = [].slice;\\n\\n/**\\n * Bind `obj` to `fn`.\\n *\\n * @param {Object} obj\\n * @param {Function|String} fn or string\\n * @return {Function}\\n * @api public\\n */\\n\\nmodule.exports = function(obj, fn){\\n  if ('string' == typeof fn) fn = obj[fn];\\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\\n  var args = slice.call(arguments, 2);\\n  return function(){\\n    return fn.apply(obj, args.concat(slice.call(arguments)));\\n  }\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/component-bind/index.js\\n// module id = 48\\n// module chunks = 0\",\"\\n/*\\n * Module requirements.\\n */\\n\\nvar isArray = require('isarray');\\n\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = hasBinary;\\n\\n/**\\n * Checks for binary data.\\n *\\n * Right now only Buffer and ArrayBuffer are supported..\\n *\\n * @param {Object} anything\\n * @api public\\n */\\n\\nfunction hasBinary(data) {\\n\\n  function _hasBinary(obj) {\\n    if (!obj) return false;\\n\\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\\n         (global.Blob && obj instanceof Blob) ||\\n         (global.File && obj instanceof File)\\n        ) {\\n      return true;\\n    }\\n\\n    if (isArray(obj)) {\\n      for (var i = 0; i < obj.length; i++) {\\n          if (_hasBinary(obj[i])) {\\n              return true;\\n          }\\n      }\\n    } else if (obj && 'object' == typeof obj) {\\n      // see: https://github.com/Automattic/has-binary/pull/4\\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\\n        obj = obj.toJSON();\\n      }\\n\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\\n          return true;\\n        }\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  return _hasBinary(data);\\n}\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/has-binary/index.js\\n// module id = 49\\n// module chunks = 0\",\"module.exports = Array.isArray || function (arr) {\\n  return Object.prototype.toString.call(arr) == '[object Array]';\\n};\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/has-binary/~/isarray/index.js\\n// module id = 50\\n// module chunks = 0\",\"\\n/**\\n * Expose `Backoff`.\\n */\\n\\nmodule.exports = Backoff;\\n\\n/**\\n * Initialize backoff timer with `opts`.\\n *\\n * - `min` initial timeout in milliseconds [100]\\n * - `max` max timeout [10000]\\n * - `jitter` [0]\\n * - `factor` [2]\\n *\\n * @param {Object} opts\\n * @api public\\n */\\n\\nfunction Backoff(opts) {\\n  opts = opts || {};\\n  this.ms = opts.min || 100;\\n  this.max = opts.max || 10000;\\n  this.factor = opts.factor || 2;\\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\\n  this.attempts = 0;\\n}\\n\\n/**\\n * Return the backoff duration.\\n *\\n * @return {Number}\\n * @api public\\n */\\n\\nBackoff.prototype.duration = function(){\\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\\n  if (this.jitter) {\\n    var rand =  Math.random();\\n    var deviation = Math.floor(rand * this.jitter * ms);\\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\\n  }\\n  return Math.min(ms, this.max) | 0;\\n};\\n\\n/**\\n * Reset the number of attempts.\\n *\\n * @api public\\n */\\n\\nBackoff.prototype.reset = function(){\\n  this.attempts = 0;\\n};\\n\\n/**\\n * Set the minimum duration\\n *\\n * @api public\\n */\\n\\nBackoff.prototype.setMin = function(min){\\n  this.ms = min;\\n};\\n\\n/**\\n * Set the maximum duration\\n *\\n * @api public\\n */\\n\\nBackoff.prototype.setMax = function(max){\\n  this.max = max;\\n};\\n\\n/**\\n * Set the jitter\\n *\\n * @api public\\n */\\n\\nBackoff.prototype.setJitter = function(jitter){\\n  this.jitter = jitter;\\n};\\n\\n\\n\\n\\n//////////////////\\n// WEBPACK FOOTER\\n// ./~/backo2/index.js\\n// module id = 51\\n// module chunks = 0\"],\"mappings\":\"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrCA;;;;AAIA;ACCA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;;;;;;;AAOA;AACA;AACA;;;;;;AAMA;;;;;;;;;AC1GA;;;;AAIA;ADCA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AEzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClnvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpnvpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC34BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnbA;;;;AAIA;AjBCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AkB9inuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChzaplmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3DA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnxbA;AACA;AAeA;;;;AAIA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;;;;;;;A8CjaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;;;;AAIA;AACA;A/CCA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;AgDvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC5DA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;\",\"sourceRoot\":\"\"}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io-client\\node_modules\\debug\\browser.js:\n   54  \n   55  exports.formatters.j = function(v) {\n   56:   try {\n   57      return JSON.stringify(v);\n   58    } catch (err) {\n   ..\n  126  \n  127  function save(namespaces) {\n  128:   try {\n  129      if (null == namespaces) {\n  130        exports.storage.removeItem('debug');\n  ...\n  144  function load() {\n  145    var r;\n  146:   try {\n  147      return exports.storage.debug;\n  148    } catch(e) {}\n  ...\n  172  \n  173  function localstorage(){\n  174:   try {\n  175      return window.localStorage;\n  176    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io-parser\\index.js:\n  331  \n  332  function tryParse(p, str) {\n  333:   try {\n  334      p.data = json.parse(str);\n  335    } catch(e){\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\socket.io-parser\\node_modules\\debug\\browser.js:\n  121  \n  122  function save(namespaces) {\n  123:   try {\n  124      if (null == namespaces) {\n  125        exports.storage.removeItem('debug');\n  ...\n  139  function load() {\n  140    var r;\n  141:   try {\n  142      r = exports.storage.debug;\n  143    } catch(e) {}\n  ...\n  163  \n  164  function localstorage(){\n  165:   try {\n  166      return window.localStorage;\n  167    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\source-map-resolve\\source-map-resolve.js:\n   30    function resolveSourceMap(code, codeUrl, read, callback) {\n   31      var mapData\n   32:     try {\n   33        mapData = resolveSourceMapHelper(code, codeUrl)\n   34      } catch (error) {\n   ..\n   42          return callback(error)\n   43        }\n   44:       try {\n   45          mapData.map = parseMapToJSON(String(result))\n   46        } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\source-map-resolve\\lib\\source-map-resolve-node.js:\n   21  function resolveSourceMap(code, codeUrl, read, callback) {\n   22    var mapData\n   23:   try {\n   24      mapData = resolveSourceMapHelper(code, codeUrl)\n   25    } catch (error) {\n   ..\n   33        return callback(error)\n   34      }\n   35:     try {\n   36        mapData.map = parseMapToJSON(String(result))\n   37      } catch (error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\source-map-support\\source-map-support.js:\n    3  \n    4  var fs;\n    5: try {\n    6    fs = require('fs');\n    7    if (!fs.existsSync || !fs.readFileSync) {\n    .\n   81    } else if (fs.existsSync(path)) {\n   82      // Otherwise, use the filesystem\n   83:     try {\n   84        contents = fs.readFileSync(path, 'utf8');\n   85      } catch (er) {\n   ..\n  105  \n  106    if (isInBrowser()) {\n  107:      try {\n  108         var xhr = new XMLHttpRequest();\n  109         xhr.open('GET', source, false);\n  ...\n  393      // Support files on disk\n  394      if (!contents && fs && fs.existsSync(source)) {\n  395:       try {\n  396          contents = fs.readFileSync(source, 'utf8');\n  397        } catch (er) {\n  ...\n  479    if (options.hookRequire && !isInBrowser()) {\n  480      var Module;\n  481:     try {\n  482        Module = require('module');\n  483      } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\bin\\sshpk-conv:\n   65  \t});\n   66  \n   67: \ttry {\n   68  \t\tvar opts = parser.parse(process.argv);\n   69  \t} catch (e) {\n   ..\n  105  \t\tinFileName = path.basename(inFilePath);\n  106  \n  107: \ttry {\n  108  \t\tif (inFilePath) {\n  109  \t\t\tfs.accessSync(inFilePath, fs.R_OK);\n  ...\n  118  \tvar outFile = process.stdout;\n  119  \n  120: \ttry {\n  121  \t\tif (opts.out && !opts.identify) {\n  122  \t\t\tfs.accessSync(path.dirname(opts.out), fs.W_OK);\n  ...\n  145  \t\tif (opts.private)\n  146  \t\t\tf = sshpk.parsePrivateKey;\n  147: \t\ttry {\n  148  \t\t\tvar key = f(buf, fmt, parseOpts);\n  149  \t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\bin\\sshpk-sign:\n   60  \t});\n   61  \n   62: \ttry {\n   63  \t\tvar opts = parser.parse(process.argv);\n   64  \t} catch (e) {\n   ..\n   90  function run() {\n   91  \tvar key;\n   92: \ttry {\n   93  \t\tkey = sshpk.parsePrivateKey(keyData, 'auto', parseOpts);\n   94  \t} catch (e) {\n   ..\n  108  \n  109  \tvar signer;\n  110: \ttry {\n  111  \t\tsigner = key.createSign(hash);\n  112  \t} catch (e) {\n  ...\n  134  \t\tinFileName = path.basename(inFilePath);\n  135  \n  136: \ttry {\n  137  \t\tif (inFilePath) {\n  138  \t\t\tfs.accessSync(inFilePath, fs.R_OK);\n  ...\n  147  \tvar outFile = process.stdout;\n  148  \n  149: \ttry {\n  150  \t\tif (opts.out && !opts.identify) {\n  151  \t\t\tfs.accessSync(path.dirname(opts.out), fs.W_OK);\n  ...\n  161  \tinFile.on('end', function () {\n  162  \t\tvar sig;\n  163: \t\ttry {\n  164  \t\t\tsig = signer.sign();\n  165  \t\t} catch (e) {\n  ...\n  171  \t\tvar fmt = opts.format || 'asn1';\n  172  \t\tvar output;\n  173: \t\ttry {\n  174  \t\t\toutput = sig.toBuffer(fmt);\n  175  \t\t\tif (!opts.binary)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\bin\\sshpk-verify:\n   52  \t});\n   53  \n   54: \ttry {\n   55  \t\tvar opts = parser.parse(process.argv);\n   56  \t} catch (e) {\n   ..\n   85  \n   86  \tvar key;\n   87: \ttry {\n   88  \t\tkey = sshpk.parseKey(keyData);\n   89  \t} catch (e) {\n   ..\n   97  \n   98  \tvar sig;\n   99: \ttry {\n  100  \t\tsig = sshpk.parseSignature(sigData, key.type, fmt);\n  101  \t} catch (e) {\n  ...\n  108  \n  109  \tvar verifier;\n  110: \ttry {\n  111  \t\tverifier = key.createVerify(hash);\n  112  \t} catch (e) {\n  ...\n  134  \t\tinFileName = path.basename(inFilePath);\n  135  \n  136: \ttry {\n  137  \t\tif (inFilePath) {\n  138  \t\t\tfs.accessSync(inFilePath, fs.R_OK);\n  ...\n  148  \tinFile.on('end', function () {\n  149  \t\tvar ret;\n  150: \t\ttry {\n  151  \t\t\tret = verifier.verify(sig);\n  152  \t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\certificate.js:\n  355  \tassert.object(formats[format], 'formats[format]');\n  356  \n  357: \ttry {\n  358  \t\tvar k = formats[format].read(data, options);\n  359  \t\treturn (k);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\fingerprint.js:\n   90  \t\tif (!base64RE.test(parts[1]))\n   91  \t\t\tthrow (new FingerprintFormatError(fp));\n   92: \t\ttry {\n   93  \t\t\thash = new Buffer(parts[1], 'base64');\n   94  \t\t} catch (e) {\n   ..\n  104  \t\tif (!md5RE.test(parts))\n  105  \t\t\tthrow (new FingerprintFormatError(fp));\n  106: \t\ttry {\n  107  \t\t\thash = new Buffer(parts, 'hex');\n  108  \t\t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\key.js:\n   14  var edCompat;\n   15  \n   16: try {\n   17  \tedCompat = require('./ed-compat');\n   18  } catch (e) {\n   ..\n  157  \n  158  \tvar v, nm, err;\n  159: \ttry {\n  160  \t\tnm = hashAlgo.toUpperCase();\n  161  \t\tv = crypto.createVerify(nm);\n  ...\n  231  \tassert.object(formats[format], 'formats[format]');\n  232  \n  233: \ttry {\n  234  \t\tvar k = formats[format].read(data, options);\n  235  \t\tif (k instanceof PrivateKey)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\private-key.js:\n   17  var nacl;\n   18  \n   19: try {\n   20  \tedCompat = require('./ed-compat');\n   21  } catch (e) {\n   ..\n  150  \n  151  \tvar v, nm, err;\n  152: \ttry {\n  153  \t\tnm = hashAlgo.toUpperCase();\n  154  \t\tv = crypto.createSign(nm);\n  ...\n  196  \tassert.object(formats[format], 'formats[format]');\n  197  \n  198: \ttry {\n  199  \t\tvar k = formats[format].read(data, options);\n  200  \t\tassert.ok(k instanceof PrivateKey, 'key is not a private key');\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\signature.js:\n  151  \topts.parts = [];\n  152  \n  153: \ttry {\n  154  \t\tassert.ok(data.length > 0, 'signature must not be empty');\n  155  \t\tswitch (opts.type) {\n  ...\n  181  function parseOneNum(data, type, format, opts) {\n  182  \tif (format === 'ssh') {\n  183: \t\ttry {\n  184  \t\t\tvar buf = new SSHBuffer({buffer: data});\n  185  \t\t\tvar head = buf.readString();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\utils.js:\n  202  \tassert.buffer(p);\n  203  \tassert.buffer(x);\n  204: \ttry {\n  205  \t\tvar bigInt = require('jsbn').BigInteger;\n  206  \t} catch (e) {\n  ...\n  219  \tassert.object(key);\n  220  \tassertCompatible(key, PrivateKey, [1, 1]);\n  221: \ttry {\n  222  \t\tvar bigInt = require('jsbn').BigInteger;\n  223  \t} catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\formats\\openssh-cert.js:\n  174  \tif (cert.signatures.openssh === undefined)\n  175  \t\tcert.signatures.openssh = {};\n  176: \ttry {\n  177  \t\tvar blob = toBuffer(cert, true);\n  178  \t} catch (e) {\n  ...\n  193  \tif (cert.signatures.openssh === undefined)\n  194  \t\tcert.signatures.openssh = {};\n  195: \ttry {\n  196  \t\tvar blob = toBuffer(cert, true);\n  197  \t} catch (e) {\n  ...\n  207  \t\t\treturn;\n  208  \t\t}\n  209: \t\ttry {\n  210  \t\t\t/*\n  211  \t\t\t * This will throw if the signature isn't of a\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\sshpk\\lib\\formats\\ssh.js:\n   45  \tvar ret = {};\n   46  \tif (m[4]) {\n   47: \t\ttry {\n   48  \t\t\tkey = rfc4253.read(kbuf);\n   49  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\stdout-stream\\index.js:\n    3  \n    4  var exists = function(path) {\n    5: \ttry {\n    6  \t\treturn fs.existsSync(path);\n    7  \t} catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\stream-consume\\index.js:\n    4          if (!state || state.pipesCount === 0) {\n    5              // Either a classic stream or streams2 that's not piped to another destination\n    6:             try {\n    7                  stream.resume();\n    8              } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\string.fromcodepoint\\fromcodepoint.js:\n    4  \t\tvar defineProperty = (function() {\n    5  \t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n    6: \t\t\ttry {\n    7  \t\t\t\tvar object = {};\n    8  \t\t\t\tvar $defineProperty = Object.defineProperty;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\string.prototype.codepointat\\codepointat.js:\n    5  \t\tvar defineProperty = (function() {\n    6  \t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n    7: \t\t\ttry {\n    8  \t\t\t\tvar object = {};\n    9  \t\t\t\tvar $defineProperty = Object.defineProperty;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\svg-pathdata\\dist\\SVGPathData.js:\n 1784  function typedArraySupport () {\n 1785    // Can typed array instances can be augmented?\n 1786:   try {\n 1787      var arr = new Uint8Array(1)\n 1788      arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n ....\n 4075  }\n 4076  (function () {\n 4077:     try {\n 4078          if (typeof setTimeout === 'function') {\n 4079              cachedSetTimeout = setTimeout;\n ....\n 4084          cachedSetTimeout = defaultSetTimout;\n 4085      }\n 4086:     try {\n 4087          if (typeof clearTimeout === 'function') {\n 4088              cachedClearTimeout = clearTimeout;\n ....\n 4104          return setTimeout(fun, 0);\n 4105      }\n 4106:     try {\n 4107          // when when somebody has screwed with setTimeout but no I.E. maddness\n 4108          return cachedSetTimeout(fun, 0);\n 4109      } catch(e){\n 4110:         try {\n 4111              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n 4112              return cachedSetTimeout.call(null, fun, 0);\n ....\n 4129          return clearTimeout(marker);\n 4130      }\n 4131:     try {\n 4132          // when when somebody has screwed with setTimeout but no I.E. maddness\n 4133          return cachedClearTimeout(marker);\n 4134      } catch (e){\n 4135:         try {\n 4136              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n 4137              return cachedClearTimeout.call(null, marker);\n ....\n 5855  \n 5856  (function () {\n 5857:   try {\n 5858      Object.defineProperty(WritableState.prototype, 'buffer', {\n 5859        get: internalUtil.deprecate(function () {\n ....\n 7005  function config (name) {\n 7006    // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n 7007:   try {\n 7008      if (!global.localStorage) return false;\n 7009    } catch (_) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\svg2ttf\\svg2ttf.js:\n   70  var options = {};\n   71  \n   72: try {\n   73    svg = fs.readFileSync(args.infile[0], 'utf-8');\n   74  } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\svgicons2svgfont\\node_modules\\debug\\src\\browser.js:\n   62  \n   63  exports.formatters.j = function(v) {\n   64:   try {\n   65      return JSON.stringify(v);\n   66    } catch (err) {\n   ..\n  132  \n  133  function save(namespaces) {\n  134:   try {\n  135      if (null == namespaces) {\n  136        exports.storage.removeItem('debug');\n  ...\n  149  \n  150  function load() {\n  151:   try {\n  152      return exports.storage.debug;\n  153    } catch(e) {}\n  ...\n  177  \n  178  function localstorage() {\n  179:   try {\n  180      return window.localStorage;\n  181    } catch (e) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\svgicons2svgfont\\src\\index.js:\n  169  \n  170        parents.push(tag);\n  171:       try {\n  172          const currentTransform = transformStack[transformStack.length - 1];\n  173  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\svgo\\lib\\svgo\\coa.js:\n  159              // string\n  160              if (opts.config.charAt(0) === '{') {\n  161:                 try {\n  162                      config = JSON.parse(opts.config);\n  163                  } catch (e) {\n  ...\n  170              } else {\n  171                  var configPath = PATH.resolve(opts.config);\n  172:                 try {\n  173                      // require() adds some weird output on YML files\n  174                      config = JSON.parse(FS.readFileSync(configPath, 'utf8'));\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\svgo\\lib\\svgo\\svg2js.js:\n  161      };\n  162  \n  163:     try {\n  164          sax.write(data);\n  165      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\tar\\test\\extract-move.js:\n   59  // Make sure we get the graceful-fs that fstream is using.\n   60  var gfs2\n   61: try {\n   62    gfs2 = require(\"fstream/node_modules/graceful-fs\")\n   63  } catch (er) {}\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\tar\\test\\pack-no-proprietary.js:\n   11    , path = require(\"path\")\n   12    , symlink = path.resolve(__dirname, \"fixtures/symlink\")\n   13: try { fs.unlinkSync(symlink) } catch (e) {}\n   14  fs.symlinkSync(\"./hardlink-1\", symlink)\n   15  process.on(\"exit\", function () {\n   ..\n  771    , fs = require(\"fs\")\n  772  \n  773: try { fs.unlinkSync(hard2) } catch (e) {}\n  774  fs.linkSync(hard1, hard2)\n  775  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\tar\\test\\pack.js:\n    5    , path = require(\"path\")\n    6    , symlink = path.resolve(__dirname, \"fixtures/symlink\")\n    7: try { fs.unlinkSync(symlink) } catch (e) {}\n    8  fs.symlinkSync(\"./hardlink-1\", symlink)\n    9  process.on(\"exit\", function () {\n   ..\n  820    , fs = require(\"fs\")\n  821  \n  822: try { fs.unlinkSync(hard2) } catch (e) {}\n  823  fs.linkSync(hard1, hard2)\n  824  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\TinyAnimate\\test\\js\\vendor\\require-2.1.11.js:\n  858                              if ((this.events.error && this.map.isDefine) ||\n  859                                  req.onError !== defaultOnError) {\n  860:                                 try {\n  861                                      exports = context.execCb(id, factory, depExports, exports);\n  862                                  } catch (e) {\n  ...\n 1041                          }\n 1042  \n 1043:                         try {\n 1044                              req.exec(text);\n 1045                          } catch (e) {\n ....\n 1899              return node;\n 1900          } else if (isWebWorker) {\n 1901:             try {\n 1902                  //In a web worker, use importScripts. This is not a very\n 1903                  //efficient use of importScripts, importScripts will block until\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\tough-cookie\\lib\\cookie.js:\n   39  \n   40  var punycode;\n   41: try {\n   42    punycode = require('punycode');\n   43  } catch(e) {\n   ..\n  479  function jsonParse(str) {\n  480    var obj;\n  481:   try {\n  482      obj = JSON.parse(str);\n  483    } catch (e) {\n  ...\n  592    // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  593    // Therefore, we will just skip decoding for such URIs.\n  594:   try {\n  595      url = decodeURI(url);\n  596    }\n  ...\n 1223  \n 1224      var cookie;\n 1225:     try {\n 1226        cookie = fromJSON(cookies.shift());\n 1227      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\true-case-path\\node_modules\\glob\\sync.js:\n   56        var set = self.matches[index] = Object.create(null)\n   57        for (var p in matchset) {\n   58:         try {\n   59            p = self._makeAbs(p)\n   60            var real = fs.realpathSync(p, self.realpathCache)\n   ..\n  237    var lstat\n  238    var stat\n  239:   try {\n  240      lstat = fs.lstatSync(abs)\n  241    } catch (er) {\n  ...\n  272    }\n  273  \n  274:   try {\n  275      return this._readdirEntries(abs, fs.readdirSync(abs))\n  276    } catch (er) {\n  ...\n  424    if (!stat) {\n  425      var lstat\n  426:     try {\n  427        lstat = fs.lstatSync(abs)\n  428      } catch (er) {\n  ...\n  431  \n  432      if (lstat.isSymbolicLink()) {\n  433:       try {\n  434          stat = fs.statSync(abs)\n  435        } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ttf2eot\\ttf2eot.js:\n   42  var input, size;\n   43  \n   44: try {\n   45    if (args.infile) {\n   46      input = fs.readFileSync(args.infile);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ttf2woff\\ttf2woff.js:\n   51  /* eslint-disable */\n   52  \n   53: try {\n   54    input = fs.readFileSync(args.infile[0]);\n   55  } catch (e) {\n   ..\n   59  \n   60  if (args.metadata) {\n   61:   try {\n   62      options.metadata = Array.prototype.slice.call(fs.readFileSync (args.metadata), 0);\n   63    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ttf2woff2\\src\\index.js:\n    1  'use strict';\n    2  \n    3: try {\n    4    module.exports = require('bindings')('addon.node').convert;\n    5  } catch(err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\cancellationToken.js:\n   17  var fs = require(\"fs\");\n   18  function pipeExists(name) {\n   19:     try {\n   20          fs.statSync(name);\n   21          return true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\lib.d.ts:\n 11460  };\n 11461  \n 11462: interface IntersectionObserverEntry {\n 11463      readonly boundingClientRect: ClientRect;\n 11464      readonly intersectionRatio: number;\n .....\n 12919  };\n 12920  \n 12921: interface PerformanceEntry {\n 12922      readonly duration: number;\n 12923      readonly entryType: string;\n .....\n 12931  };\n 12932  \n 12933: interface PerformanceMark extends PerformanceEntry {\n 12934  }\n 12935  \n .....\n 12939  };\n 12940  \n 12941: interface PerformanceMeasure extends PerformanceEntry {\n 12942  }\n 12943  \n .....\n 12966  };\n 12967  \n 12968: interface PerformanceNavigationTiming extends PerformanceEntry {\n 12969      readonly connectEnd: number;\n 12970      readonly connectStart: number;\n .....\n 12996  };\n 12997  \n 12998: interface PerformanceResourceTiming extends PerformanceEntry {\n 12999      readonly connectEnd: number;\n 13000      readonly connectStart: number;\n .....\n 17337  };\n 17338  \n 17339: interface WebKitDirectoryEntry extends WebKitEntry {\n 17340      createReader(): WebKitDirectoryReader;\n 17341  }\n .....\n 17355  };\n 17356  \n 17357: interface WebKitEntry {\n 17358      readonly filesystem: WebKitFileSystem;\n 17359      readonly fullPath: string;\n .....\n 17368  };\n 17369  \n 17370: interface WebKitFileEntry extends WebKitEntry {\n 17371      file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\n 17372  }\n .....\n 18663  }\n 18664  \n 18665: interface CustomElementRegistry {\n 18666      define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\n 18667      get(name: string): any;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\lib.dom.d.ts:\n 7374  };\n 7375  \n 7376: interface IntersectionObserverEntry {\n 7377      readonly boundingClientRect: ClientRect;\n 7378      readonly intersectionRatio: number;\n ....\n 8833  };\n 8834  \n 8835: interface PerformanceEntry {\n 8836      readonly duration: number;\n 8837      readonly entryType: string;\n ....\n 8845  };\n 8846  \n 8847: interface PerformanceMark extends PerformanceEntry {\n 8848  }\n 8849  \n ....\n 8853  };\n 8854  \n 8855: interface PerformanceMeasure extends PerformanceEntry {\n 8856  }\n 8857  \n ....\n 8880  };\n 8881  \n 8882: interface PerformanceNavigationTiming extends PerformanceEntry {\n 8883      readonly connectEnd: number;\n 8884      readonly connectStart: number;\n ....\n 8910  };\n 8911  \n 8912: interface PerformanceResourceTiming extends PerformanceEntry {\n 8913      readonly connectEnd: number;\n 8914      readonly connectStart: number;\n ....\n 13251  };\n 13252  \n 13253: interface WebKitDirectoryEntry extends WebKitEntry {\n 13254      createReader(): WebKitDirectoryReader;\n 13255  }\n .....\n 13269  };\n 13270  \n 13271: interface WebKitEntry {\n 13272      readonly filesystem: WebKitFileSystem;\n 13273      readonly fullPath: string;\n .....\n 13282  };\n 13283  \n 13284: interface WebKitFileEntry extends WebKitEntry {\n 13285      file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\n 13286  }\n .....\n 14577  }\n 14578  \n 14579: interface CustomElementRegistry {\n 14580      define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\n 14581      get(name: string): any;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\lib.es2016.full.d.ts:\n 7377  };\n 7378  \n 7379: interface IntersectionObserverEntry {\n 7380      readonly boundingClientRect: ClientRect;\n 7381      readonly intersectionRatio: number;\n ....\n 8836  };\n 8837  \n 8838: interface PerformanceEntry {\n 8839      readonly duration: number;\n 8840      readonly entryType: string;\n ....\n 8848  };\n 8849  \n 8850: interface PerformanceMark extends PerformanceEntry {\n 8851  }\n 8852  \n ....\n 8856  };\n 8857  \n 8858: interface PerformanceMeasure extends PerformanceEntry {\n 8859  }\n 8860  \n ....\n 8883  };\n 8884  \n 8885: interface PerformanceNavigationTiming extends PerformanceEntry {\n 8886      readonly connectEnd: number;\n 8887      readonly connectStart: number;\n ....\n 8913  };\n 8914  \n 8915: interface PerformanceResourceTiming extends PerformanceEntry {\n 8916      readonly connectEnd: number;\n 8917      readonly connectStart: number;\n ....\n 13254  };\n 13255  \n 13256: interface WebKitDirectoryEntry extends WebKitEntry {\n 13257      createReader(): WebKitDirectoryReader;\n 13258  }\n .....\n 13272  };\n 13273  \n 13274: interface WebKitEntry {\n 13275      readonly filesystem: WebKitFileSystem;\n 13276      readonly fullPath: string;\n .....\n 13285  };\n 13286  \n 13287: interface WebKitFileEntry extends WebKitEntry {\n 13288      file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\n 13289  }\n .....\n 14580  }\n 14581  \n 14582: interface CustomElementRegistry {\n 14583      define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\n 14584      get(name: string): any;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\lib.es2017.full.d.ts:\n 7381  };\n 7382  \n 7383: interface IntersectionObserverEntry {\n 7384      readonly boundingClientRect: ClientRect;\n 7385      readonly intersectionRatio: number;\n ....\n 8840  };\n 8841  \n 8842: interface PerformanceEntry {\n 8843      readonly duration: number;\n 8844      readonly entryType: string;\n ....\n 8852  };\n 8853  \n 8854: interface PerformanceMark extends PerformanceEntry {\n 8855  }\n 8856  \n ....\n 8860  };\n 8861  \n 8862: interface PerformanceMeasure extends PerformanceEntry {\n 8863  }\n 8864  \n ....\n 8887  };\n 8888  \n 8889: interface PerformanceNavigationTiming extends PerformanceEntry {\n 8890      readonly connectEnd: number;\n 8891      readonly connectStart: number;\n ....\n 8917  };\n 8918  \n 8919: interface PerformanceResourceTiming extends PerformanceEntry {\n 8920      readonly connectEnd: number;\n 8921      readonly connectStart: number;\n ....\n 13258  };\n 13259  \n 13260: interface WebKitDirectoryEntry extends WebKitEntry {\n 13261      createReader(): WebKitDirectoryReader;\n 13262  }\n .....\n 13276  };\n 13277  \n 13278: interface WebKitEntry {\n 13279      readonly filesystem: WebKitFileSystem;\n 13280      readonly fullPath: string;\n .....\n 13289  };\n 13290  \n 13291: interface WebKitFileEntry extends WebKitEntry {\n 13292      file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\n 13293  }\n .....\n 14584  }\n 14585  \n 14586: interface CustomElementRegistry {\n 14587      define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\n 14588      get(name: string): any;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\lib.es6.d.ts:\n 13147  };\n 13148  \n 13149: interface IntersectionObserverEntry {\n 13150      readonly boundingClientRect: ClientRect;\n 13151      readonly intersectionRatio: number;\n .....\n 14606  };\n 14607  \n 14608: interface PerformanceEntry {\n 14609      readonly duration: number;\n 14610      readonly entryType: string;\n .....\n 14618  };\n 14619  \n 14620: interface PerformanceMark extends PerformanceEntry {\n 14621  }\n 14622  \n .....\n 14626  };\n 14627  \n 14628: interface PerformanceMeasure extends PerformanceEntry {\n 14629  }\n 14630  \n .....\n 14653  };\n 14654  \n 14655: interface PerformanceNavigationTiming extends PerformanceEntry {\n 14656      readonly connectEnd: number;\n 14657      readonly connectStart: number;\n .....\n 14683  };\n 14684  \n 14685: interface PerformanceResourceTiming extends PerformanceEntry {\n 14686      readonly connectEnd: number;\n 14687      readonly connectStart: number;\n .....\n 19024  };\n 19025  \n 19026: interface WebKitDirectoryEntry extends WebKitEntry {\n 19027      createReader(): WebKitDirectoryReader;\n 19028  }\n .....\n 19042  };\n 19043  \n 19044: interface WebKitEntry {\n 19045      readonly filesystem: WebKitFileSystem;\n 19046      readonly fullPath: string;\n .....\n 19055  };\n 19056  \n 19057: interface WebKitFileEntry extends WebKitEntry {\n 19058      file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\n 19059  }\n .....\n 20350  }\n 20351  \n 20352: interface CustomElementRegistry {\n 20353      define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\n 20354      get(name: string): any;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\lib.esnext.full.d.ts:\n 7378  };\n 7379  \n 7380: interface IntersectionObserverEntry {\n 7381      readonly boundingClientRect: ClientRect;\n 7382      readonly intersectionRatio: number;\n ....\n 8837  };\n 8838  \n 8839: interface PerformanceEntry {\n 8840      readonly duration: number;\n 8841      readonly entryType: string;\n ....\n 8849  };\n 8850  \n 8851: interface PerformanceMark extends PerformanceEntry {\n 8852  }\n 8853  \n ....\n 8857  };\n 8858  \n 8859: interface PerformanceMeasure extends PerformanceEntry {\n 8860  }\n 8861  \n ....\n 8884  };\n 8885  \n 8886: interface PerformanceNavigationTiming extends PerformanceEntry {\n 8887      readonly connectEnd: number;\n 8888      readonly connectStart: number;\n ....\n 8914  };\n 8915  \n 8916: interface PerformanceResourceTiming extends PerformanceEntry {\n 8917      readonly connectEnd: number;\n 8918      readonly connectStart: number;\n ....\n 13255  };\n 13256  \n 13257: interface WebKitDirectoryEntry extends WebKitEntry {\n 13258      createReader(): WebKitDirectoryReader;\n 13259  }\n .....\n 13273  };\n 13274  \n 13275: interface WebKitEntry {\n 13276      readonly filesystem: WebKitFileSystem;\n 13277      readonly fullPath: string;\n .....\n 13286  };\n 13287  \n 13288: interface WebKitFileEntry extends WebKitEntry {\n 13289      file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\n 13290  }\n .....\n 14581  }\n 14582  \n 14583: interface CustomElementRegistry {\n 14584      define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\n 14585      get(name: string): any;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\protocol.d.ts:\n 1264       * An item found in a completion response.\n 1265       */\n 1266:     interface CompletionEntry {\n 1267          /**\n 1268           * The symbol's name.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\tsc.js:\n 2367                  return cachedResult;\n 2368              }\n 2369:             try {\n 2370                  return createCachedFileSystemEntries(rootDir, rootDirPath);\n 2371              }\n ....\n 2680                  }\n 2681                  var fd;\n 2682:                 try {\n 2683                      fd = _fs.openSync(fileName, \"w\");\n 2684                      _fs.writeSync(fd, data, undefined, \"utf8\");\n ....\n 2691              }\n 2692              function getAccessibleFileSystemEntries(path) {\n 2693:                 try {\n 2694                      var entries = _fs.readdirSync(path || \".\").sort();\n 2695                      var files = [];\n ....\n 2702                          var name = ts.combinePaths(path, entry);\n 2703                          var stat = void 0;\n 2704:                         try {\n 2705                              stat = _fs.statSync(name);\n 2706                          }\n ....\n 2725              }\n 2726              function fileSystemEntryExists(path, entryKind) {\n 2727:                 try {\n 2728                      var stat = _fs.statSync(path);\n 2729                      switch (entryKind) {\n ....\n 2792                  readDirectory: readDirectory,\n 2793                  getModifiedTime: function (path) {\n 2794:                     try {\n 2795                          return _fs.statSync(path).mtime;\n 2796                      }\n ....\n 2811                  },\n 2812                  getFileSize: function (path) {\n 2813:                     try {\n 2814                          var stat = _fs.statSync(path);\n 2815                          if (stat.isFile()) {\n ....\n 2828                  debugMode: ts.some(process.execArgv, function (arg) { return /^--(inspect|debug)(-brk)?(=\\d+)?$/i.test(arg); }),\n 2829                  tryEnableSourceMapsForHost: function () {\n 2830:                     try {\n 2831                          require(\"source-map-support\").install();\n 2832                      }\n ....\n 5510      function usingSingleLineStringWriter(action) {\n 5511          var oldString = stringWriter.string();\n 5512:         try {\n 5513              action(stringWriter);\n 5514              return stringWriter.string();\n ....\n 8684              }\n 8685              var fileContents = \"\";\n 8686:             try {\n 8687                  fileContents = sys.readFile(filePath);\n 8688              }\n ....\n 8693                  return false;\n 8694              }\n 8695:             try {\n 8696                  ts.localizedDiagnosticMessages = JSON.parse(fileContents);\n 8697              }\n ....\n 18118              return {\n 18119                  walkType: function (type) {\n 18120:                     try {\n 18121                          visitType(type);\n 18122                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 18128                  },\n 18129                  walkSymbol: function (symbol) {\n 18130:                     try {\n 18131                          visitSymbol(symbol);\n 18132                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 18327      }\n 18328      function readJson(path, host) {\n 18329:         try {\n 18330              var jsonText = host.readFile(path);\n 18331              return jsonText ? JSON.parse(jsonText) : {};\n .....\n 36838          }\n 36839          function getDiagnostics(sourceFile, ct) {\n 36840:             try {\n 36841                  cancellationToken = ct;\n 36842                  return getDiagnosticsWorker(sourceFile);\n .....\n 41508          name: \"typescript:read\",\n 41509          scoped: false,\n 41510:         text: \"\\n            var __read = (this && this.__read) || function (o, n) {\\n                var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\n                if (!m) return o;\\n                var i = m.call(o), r, ar = [], e;\\n                try {\\n                    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\n                }\\n                catch (error) { e = { error: error }; }\\n                finally {\\n                    try {\\n                        if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\n                    }\\n                    finally { if (e) throw e.error; }\\n                }\\n                return ar;\\n            };\\n        \"\n 41511      };\n 41512      function createReadHelper(context, iteratorRecord, count, location) {\n .....\n 45656          scoped: false,\n 45657          priority: 5,\n 45658:         text: \"\\n            var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n                return new (P || (P = Promise))(function (resolve, reject) {\\n                    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n                    function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n                    function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\\n                });\\n            };\"\n 45659      };\n 45660      function createAwaiterHelper(context, hasLexicalArguments, promiseConstructor, body) {\n .....\n 46181          name: \"typescript:asyncGenerator\",\n 46182          scoped: false,\n 46183:         text: \"\\n            var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\\n                if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\n                var g = generator.apply(thisArg, _arguments || []), i, q = [];\\n                return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\n                function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\n                function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\n                function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\\n                function fulfill(value) { resume(\\\"next\\\", value); }\\n                function reject(value) { resume(\\\"throw\\\", value); }\\n                function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\n            };\\n        \"\n 46184      };\n 46185      function createAsyncGeneratorHelper(context, generatorFunc) {\n .....\n 50345          scoped: false,\n 50346          priority: 6,\n 50347:         text: \"\\n            var __generator = (this && this.__generator) || function (thisArg, body) {\\n                var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n                return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n                function verb(n) { return function (v) { return step([n, v]); }; }\\n                function step(op) {\\n                    if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n                    while (_) try {\\n                        if (f = 1, y && (t = y[op[0] & 2 ? \\\"return\\\" : op[0] ? \\\"throw\\\" : \\\"next\\\"]) && !(t = t.call(y, op[1])).done) return t;\\n                        if (y = 0, t) op = [0, t.value];\\n                        switch (op[0]) {\\n                            case 0: case 1: t = op; break;\\n                            case 4: _.label++; return { value: op[1], done: false };\\n                            case 5: _.label++; y = op[1]; op = [0]; continue;\\n                            case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                            default:\\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                                if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                                if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                                if (t[2]) _.ops.pop();\\n                                _.trys.pop(); continue;\\n                        }\\n                        op = body.call(thisArg, _);\\n                    } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n                    if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n                }\\n            };\"\n 50348      };\n 50349  })(ts || (ts = {}));\n .....\n 57376          function getSourceFile(fileName, languageVersion, onError) {\n 57377              var text;\n 57378:             try {\n 57379                  ts.performance.mark(\"beforeIORead\");\n 57380                  text = ts.sys.readFile(fileName, options.charset);\n .....\n 57432          }\n 57433          function writeFile(fileName, data, writeByteOrderMark, onError) {\n 57434:             try {\n 57435                  ts.performance.mark(\"beforeIOWrite\");\n 57436                  ensureDirectoriesExist(ts.getDirectoryPath(ts.normalizePath(fileName)));\n .....\n 58182          }\n 58183          function runWithCancellationToken(func) {\n 58184:             try {\n 58185                  return func();\n 58186              }\n .....\n 59551      function parseConfigFile(configFileName, optionsToExtend, system, reportDiagnostic, reportWatchDiagnostic) {\n 59552          var configFileText;\n 59553:         try {\n 59554              configFileText = system.readFile(configFileName);\n 59555          }\n .....\n 59654              }\n 59655              function writeFile(fileName, text, writeByteOrderMark, onError) {\n 59656:                 try {\n 59657                      ts.performance.mark(\"beforeIOWrite\");\n 59658                      ensureDirectoriesExist(ts.getDirectoryPath(ts.normalizePath(fileName)));\n .....\n 59837              function getNewSourceFile() {\n 59838                  var text;\n 59839:                 try {\n 59840                      ts.performance.mark(\"beforeIORead\");\n 59841                      text = system.readFile(fileName, compilerOptions.charset);\n .....\n 60843      function tryReadFile(fileName, readFile) {\n 60844          var text;\n 60845:         try {\n 60846              text = readFile(fileName);\n 60847          }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\tsserver.js:\n 3417                  return cachedResult;\n 3418              }\n 3419:             try {\n 3420                  return createCachedFileSystemEntries(rootDir, rootDirPath);\n 3421              }\n ....\n 3730                  }\n 3731                  var fd;\n 3732:                 try {\n 3733                      fd = _fs.openSync(fileName, \"w\");\n 3734                      _fs.writeSync(fd, data, undefined, \"utf8\");\n ....\n 3741              }\n 3742              function getAccessibleFileSystemEntries(path) {\n 3743:                 try {\n 3744                      var entries = _fs.readdirSync(path || \".\").sort();\n 3745                      var files = [];\n ....\n 3752                          var name = ts.combinePaths(path, entry);\n 3753                          var stat = void 0;\n 3754:                         try {\n 3755                              stat = _fs.statSync(name);\n 3756                          }\n ....\n 3780              })(FileSystemEntryKind || (FileSystemEntryKind = {}));\n 3781              function fileSystemEntryExists(path, entryKind) {\n 3782:                 try {\n 3783                      var stat = _fs.statSync(path);\n 3784                      switch (entryKind) {\n ....\n 3847                  readDirectory: readDirectory,\n 3848                  getModifiedTime: function (path) {\n 3849:                     try {\n 3850                          return _fs.statSync(path).mtime;\n 3851                      }\n ....\n 3866                  },\n 3867                  getFileSize: function (path) {\n 3868:                     try {\n 3869                          var stat = _fs.statSync(path);\n 3870                          if (stat.isFile()) {\n ....\n 3883                  debugMode: ts.some(process.execArgv, function (arg) { return /^--(inspect|debug)(-brk)?(=\\d+)?$/i.test(arg); }),\n 3884                  tryEnableSourceMapsForHost: function () {\n 3885:                     try {\n 3886                          require(\"source-map-support\").install();\n 3887                      }\n ....\n 4975      }\n 4976      function readJson(path, host) {\n 4977:         try {\n 4978              var jsonText = host.readFile(path);\n 4979              return jsonText ? JSON.parse(jsonText) : {};\n ....\n 5787      function usingSingleLineStringWriter(action) {\n 5788          var oldString = stringWriter.string();\n 5789:         try {\n 5790              action(stringWriter);\n 5791              return stringWriter.string();\n ....\n 8986              }\n 8987              var fileContents = \"\";\n 8988:             try {\n 8989                  fileContents = sys.readFile(filePath);\n 8990              }\n ....\n 8995                  return false;\n 8996              }\n 8997:             try {\n 8998                  ts.localizedDiagnosticMessages = JSON.parse(fileContents);\n 8999              }\n ....\n 20107              return {\n 20108                  walkType: function (type) {\n 20109:                     try {\n 20110                          visitType(type);\n 20111                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 20117                  },\n 20118                  walkSymbol: function (symbol) {\n 20119:                     try {\n 20120                          visitSymbol(symbol);\n 20121                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 38099          }\n 38100          function getDiagnostics(sourceFile, ct) {\n 38101:             try {\n 38102                  cancellationToken = ct;\n 38103                  return getDiagnosticsWorker(sourceFile);\n .....\n 42769          name: \"typescript:read\",\n 42770          scoped: false,\n 42771:         text: \"\\n            var __read = (this && this.__read) || function (o, n) {\\n                var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\n                if (!m) return o;\\n                var i = m.call(o), r, ar = [], e;\\n                try {\\n                    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\n                }\\n                catch (error) { e = { error: error }; }\\n                finally {\\n                    try {\\n                        if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\n                    }\\n                    finally { if (e) throw e.error; }\\n                }\\n                return ar;\\n            };\\n        \"\n 42772      };\n 42773      function createReadHelper(context, iteratorRecord, count, location) {\n .....\n 46955          scoped: false,\n 46956          priority: 5,\n 46957:         text: \"\\n            var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n                return new (P || (P = Promise))(function (resolve, reject) {\\n                    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n                    function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n                    function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\\n                });\\n            };\"\n 46958      };\n 46959      function createAwaiterHelper(context, hasLexicalArguments, promiseConstructor, body) {\n .....\n 47484          name: \"typescript:asyncGenerator\",\n 47485          scoped: false,\n 47486:         text: \"\\n            var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\\n                if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\n                var g = generator.apply(thisArg, _arguments || []), i, q = [];\\n                return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\n                function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\n                function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\n                function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\\n                function fulfill(value) { resume(\\\"next\\\", value); }\\n                function reject(value) { resume(\\\"throw\\\", value); }\\n                function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\n            };\\n        \"\n 47487      };\n 47488      function createAsyncGeneratorHelper(context, generatorFunc) {\n .....\n 51692          scoped: false,\n 51693          priority: 6,\n 51694:         text: \"\\n            var __generator = (this && this.__generator) || function (thisArg, body) {\\n                var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n                return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n                function verb(n) { return function (v) { return step([n, v]); }; }\\n                function step(op) {\\n                    if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n                    while (_) try {\\n                        if (f = 1, y && (t = y[op[0] & 2 ? \\\"return\\\" : op[0] ? \\\"throw\\\" : \\\"next\\\"]) && !(t = t.call(y, op[1])).done) return t;\\n                        if (y = 0, t) op = [0, t.value];\\n                        switch (op[0]) {\\n                            case 0: case 1: t = op; break;\\n                            case 4: _.label++; return { value: op[1], done: false };\\n                            case 5: _.label++; y = op[1]; op = [0]; continue;\\n                            case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                            default:\\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                                if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                                if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                                if (t[2]) _.ops.pop();\\n                                _.trys.pop(); continue;\\n                        }\\n                        op = body.call(thisArg, _);\\n                    } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n                    if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n                }\\n            };\"\n 51695      };\n 51696  })(ts || (ts = {}));\n .....\n 58765          function getSourceFile(fileName, languageVersion, onError) {\n 58766              var text;\n 58767:             try {\n 58768                  ts.performance.mark(\"beforeIORead\");\n 58769                  text = ts.sys.readFile(fileName, options.charset);\n .....\n 58821          }\n 58822          function writeFile(fileName, data, writeByteOrderMark, onError) {\n 58823:             try {\n 58824                  ts.performance.mark(\"beforeIOWrite\");\n 58825                  ensureDirectoriesExist(ts.getDirectoryPath(ts.normalizePath(fileName)));\n .....\n 59576          }\n 59577          function runWithCancellationToken(func) {\n 59578:             try {\n 59579                  return func();\n 59580              }\n .....\n 61326      function tryReadFile(fileName, readFile) {\n 61327          var text;\n 61328:         try {\n 61329              text = readFile(fileName);\n 61330          }\n .....\n 63456      ts.lineBreakPart = lineBreakPart;\n 63457      function mapToDisplayParts(writeDisplayParts) {\n 63458:         try {\n 63459              writeDisplayParts(displayPartWriter);\n 63460              return displayPartWriter.displayParts();\n .....\n 65076                  else if (host.getDirectories) {\n 65077                      var typeRoots = void 0;\n 65078:                     try {\n 65079                          typeRoots = ts.getEffectiveTypeRoots(options, host);\n 65080                      }\n .....\n 65155                  return result;\n 65156                  function tryReadingPackageJson(filePath) {\n 65157:                     try {\n 65158                          var fileText = tryReadFile(host, filePath);\n 65159                          return fileText ? JSON.parse(fileText) : undefined;\n .....\n 65207              }\n 65208              function tryDirectoryExists(host, path) {\n 65209:                 try {\n 65210                      return ts.directoryProbablyExists(path, host);\n 65211                  }\n .....\n 65218                      args[_i - 2] = arguments[_i];\n 65219                  }\n 65220:                 try {\n 65221                      return toApply && toApply.apply(host, args);\n 65222                  }\n .....\n 69808              curCancellationToken = cancellationToken;\n 69809              curSourceFile = sourceFile;\n 69810:             try {\n 69811                  return ts.map(topLevelItems(rootNavigationBarNode(sourceFile)), convertToTopLevelItem);\n 69812              }\n .....\n 69819              curCancellationToken = cancellationToken;\n 69820              curSourceFile = sourceFile;\n 69821:             try {\n 69822                  return convertToTree(rootNavigationBarNode(sourceFile));\n 69823              }\n .....\n 80786                  return null;\n 80787              }\n 80788:             try {\n 80789                  return JSON.parse(diagnosticMessagesJson);\n 80790              }\n .....\n 80872      }\n 80873      function forwardCall(logger, actionDescription, returnJson, action, logPerformance) {\n 80874:         try {\n 80875              var result = simpleForwardCall(logger, actionDescription, action, logPerformance);\n 80876              return returnJson ? JSON.stringify({ result: result }) : result;\n .....\n 81267          };\n 81268          TypeScriptServicesFactory.prototype.createLanguageServiceShim = function (host) {\n 81269:             try {\n 81270                  if (this.documentRegistry === undefined) {\n 81271                      this.documentRegistry = ts.createDocumentRegistry(host.useCaseSensitiveFileNames && host.useCaseSensitiveFileNames(), host.getCurrentDirectory());\n .....\n 81281          };\n 81282          TypeScriptServicesFactory.prototype.createClassifierShim = function (logger) {\n 81283:             try {\n 81284                  return new ClassifierShimObject(this, logger);\n 81285              }\n .....\n 81290          };\n 81291          TypeScriptServicesFactory.prototype.createCoreServicesShim = function (host) {\n 81292:             try {\n 81293                  var adapter = new CoreServicesShimHostAdapter(host);\n 81294                  return new CoreServicesShimObject(this, host, adapter);\n .....\n 83614              };\n 83615              ConfiguredProject.prototype.enableProxy = function (pluginModuleFactory, configEntry) {\n 83616:                 try {\n 83617                      if (typeof pluginModuleFactory !== \"function\") {\n 83618                          this.projectService.logger.info(\"Skipped loading plugin \" + configEntry.name + \" because it did expose a proper factory function\");\n .....\n 83663                      if (typeof plugin.getExternalFiles !== \"function\")\n 83664                          return;\n 83665:                     try {\n 83666                          return plugin.getExternalFiles(_this);\n 83667                      }\n .....\n 84001              };\n 84002              ProjectService.prototype.loadTypesMap = function () {\n 84003:                 try {\n 84004                      var fileContent = this.host.readFile(this.typesMapLocation);\n 84005                      if (fileContent === undefined) {\n .....\n 85500              MultistepOperation.prototype.executeAction = function (action) {\n 85501                  var stop = false;\n 85502:                 try {\n 85503                      if (this.operationHost.isCancellationRequested()) {\n 85504                          stop = true;\n .....\n 85937              };\n 85938              Session.prototype.semanticCheck = function (file, project) {\n 85939:                 try {\n 85940                      var diags = server.emptyArray;\n 85941                      if (!isDeclarationFileInJSOnlyNonConfiguredProject(project, file)) {\n .....\n 85950              };\n 85951              Session.prototype.syntacticCheck = function (file, project) {\n 85952:                 try {\n 85953                      var diags = project.getLanguageService().getSyntacticDiagnostics(file);\n 85954                      if (diags) {\n .....\n 87009              };\n 87010              Session.prototype.executeWithRequestId = function (requestId, f) {\n 87011:                 try {\n 87012                      this.setCurrentRequest(requestId);\n 87013                      return f();\n .....\n 87038                  }\n 87039                  var request;\n 87040:                 try {\n 87041                      request = JSON.parse(message);\n 87042                      var _a = this.executeCommand(request), response = _a.response, responseRequired = _a.responseRequired;\n .....\n 87873                  this.firstInGroup = true;\n 87874                  if (this.logFilename) {\n 87875:                     try {\n 87876                          this.fd = fs.openSync(this.logFilename, \"w\");\n 87877                      }\n .....\n 88416          var noopWatcher = { close: ts.noop };\n 88417          function watchDirectorySwallowingException(path, callback, recursive) {\n 88418:             try {\n 88419                  return originalWatchDirectory(path, callback, recursive);\n 88420              }\n .....\n 88434                          logger.info(cacheKey + \" for path \" + path + \" not found in cache...\");\n 88435                      }\n 88436:                     try {\n 88437                          var args = [ts.combinePaths(__dirname, \"watchGuard.js\"), path];\n 88438                          if (logger.hasLevel(server.LogLevel.verbose)) {\n .....\n 88484          }\n 88485          sys.require = function (initialDir, moduleName) {\n 88486:             try {\n 88487                  return { module: require(ts.resolveJavaScriptModule(moduleName, initialDir, sys)), error: undefined };\n 88488              }\n .....\n 88492          };\n 88493          var cancellationToken;\n 88494:         try {\n 88495              var factory = require(\"./cancellationToken\");\n 88496              cancellationToken = factory(sys.args);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\tsserverlibrary.d.ts:\n 4318          entries: CompletionEntry[];\n 4319      }\n 4320:     interface CompletionEntry {\n 4321          name: string;\n 4322          kind: ScriptElementKind;\n ....\n 4560       * to all subsequent createLanguageService calls.\n 4561       */\n 4562:     interface DocumentRegistry {\n 4563          /**\n 4564           * Request a stored SourceFile with a given fileName and compilationSettings.\n ....\n 6105       * An item found in a completion response.\n 6106       */\n 6107:     interface CompletionEntry {\n 6108          /**\n 6109           * The symbol's name.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\tsserverlibrary.js:\n 3906                  return cachedResult;\n 3907              }\n 3908:             try {\n 3909                  return createCachedFileSystemEntries(rootDir, rootDirPath);\n 3910              }\n ....\n 4262                  }\n 4263                  var fd;\n 4264:                 try {\n 4265                      fd = _fs.openSync(fileName, \"w\");\n 4266                      _fs.writeSync(fd, data, /*position*/ undefined, \"utf8\");\n ....\n 4273              }\n 4274              function getAccessibleFileSystemEntries(path) {\n 4275:                 try {\n 4276                      var entries = _fs.readdirSync(path || \".\").sort();\n 4277                      var files = [];\n ....\n 4286                          var name = ts.combinePaths(path, entry);\n 4287                          var stat = void 0;\n 4288:                         try {\n 4289                              stat = _fs.statSync(name);\n 4290                          }\n ....\n 4314              })(FileSystemEntryKind || (FileSystemEntryKind = {}));\n 4315              function fileSystemEntryExists(path, entryKind) {\n 4316:                 try {\n 4317                      var stat = _fs.statSync(path);\n 4318                      switch (entryKind) {\n ....\n 4387                  readDirectory: readDirectory,\n 4388                  getModifiedTime: function (path) {\n 4389:                     try {\n 4390                          return _fs.statSync(path).mtime;\n 4391                      }\n ....\n 4406                  },\n 4407                  getFileSize: function (path) {\n 4408:                     try {\n 4409                          var stat = _fs.statSync(path);\n 4410                          if (stat.isFile()) {\n ....\n 4423                  debugMode: ts.some(process.execArgv, function (arg) { return /^--(inspect|debug)(-brk)?(=\\d+)?$/i.test(arg); }),\n 4424                  tryEnableSourceMapsForHost: function () {\n 4425:                     try {\n 4426                          require(\"source-map-support\").install();\n 4427                      }\n ....\n 5512      function usingSingleLineStringWriter(action) {\n 5513          var oldString = stringWriter.string();\n 5514:         try {\n 5515              action(stringWriter);\n 5516              return stringWriter.string();\n ....\n 9188              // TODO: Add codePage support for readFile?\n 9189              var fileContents = \"\";\n 9190:             try {\n 9191                  fileContents = sys.readFile(filePath);\n 9192              }\n ....\n 9197                  return false;\n 9198              }\n 9199:             try {\n 9200                  ts.localizedDiagnosticMessages = JSON.parse(fileContents);\n 9201              }\n ....\n 20194      function tryReadFile(fileName, readFile) {\n 20195          var text;\n 20196:         try {\n 20197              text = readFile(fileName);\n 20198          }\n .....\n 21397      }\n 21398      function readJson(path, host) {\n 21399:         try {\n 21400              var jsonText = host.readFile(path);\n 21401              return jsonText ? JSON.parse(jsonText) : {};\n .....\n 23291                  // these edges are used in following scenario:\n 23292                  // let a; (1)\n 23293:                 // try { a = someOperation(); (2)}\n 23294                  // finally { (3) console.log(a) } (4)\n 23295                  // (5) a\n .....\n 23318                  // if yes - convert current flow to unreachable\n 23319                  // i.e.\n 23320:                 // try { return \"1\" } finally { console.log(1); }\n 23321                  // console.log(2); // this line should be unreachable even if flow falls out of finally block\n 23322                  if (!(currentFlow.flags & 1 /* Unreachable */)) {\n .....\n 25504              return {\n 25505                  walkType: function (type) {\n 25506:                     try {\n 25507                          visitType(type);\n 25508                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 25514                  },\n 25515                  walkSymbol: function (symbol) {\n 25516:                     try {\n 25517                          visitSymbol(symbol);\n 25518                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 46699          }\n 46700          function getDiagnostics(sourceFile, ct) {\n 46701:             try {\n 46702                  // Record the cancellation token so it can be checked later on during checkSourceElement.\n 46703                  // Do this in a finally block so we can ensure that it gets reset back to nothing after\n .....\n 51787          name: \"typescript:read\",\n 51788          scoped: false,\n 51789:         text: \"\\n            var __read = (this && this.__read) || function (o, n) {\\n                var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\n                if (!m) return o;\\n                var i = m.call(o), r, ar = [], e;\\n                try {\\n                    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\n                }\\n                catch (error) { e = { error: error }; }\\n                finally {\\n                    try {\\n                        if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\n                    }\\n                    finally { if (e) throw e.error; }\\n                }\\n                return ar;\\n            };\\n        \"\n 51790      };\n 51791      function createReadHelper(context, iteratorRecord, count, location) {\n .....\n 57848          scoped: false,\n 57849          priority: 5,\n 57850:         text: \"\\n            var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n                return new (P || (P = Promise))(function (resolve, reject) {\\n                    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n                    function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n                    function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\\n                });\\n            };\"\n 57851      };\n 57852      function createAwaiterHelper(context, hasLexicalArguments, promiseConstructor, body) {\n .....\n 58473          name: \"typescript:asyncGenerator\",\n 58474          scoped: false,\n 58475:         text: \"\\n            var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\\n                if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\n                var g = generator.apply(thisArg, _arguments || []), i, q = [];\\n                return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\n                function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\n                function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\n                function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\\n                function fulfill(value) { resume(\\\"next\\\", value); }\\n                function reject(value) { resume(\\\"throw\\\", value); }\\n                function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\n            };\\n        \"\n 58476      };\n 58477      function createAsyncGeneratorHelper(context, generatorFunc) {\n .....\n 63609              if (containsYield(node)) {\n 63610                  // [source]\n 63611:                 //      try {\n 63612                  //          /*tryBlock*/\n 63613                  //      }\n .....\n 64727          scoped: false,\n 64728          priority: 6,\n 64729:         text: \"\\n            var __generator = (this && this.__generator) || function (thisArg, body) {\\n                var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n                return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n                function verb(n) { return function (v) { return step([n, v]); }; }\\n                function step(op) {\\n                    if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n                    while (_) try {\\n                        if (f = 1, y && (t = y[op[0] & 2 ? \\\"return\\\" : op[0] ? \\\"throw\\\" : \\\"next\\\"]) && !(t = t.call(y, op[1])).done) return t;\\n                        if (y = 0, t) op = [0, t.value];\\n                        switch (op[0]) {\\n                            case 0: case 1: t = op; break;\\n                            case 4: _.label++; return { value: op[1], done: false };\\n                            case 5: _.label++; y = op[1]; op = [0]; continue;\\n                            case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                            default:\\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                                if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                                if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                                if (t[2]) _.ops.pop();\\n                                _.trys.pop(); continue;\\n                        }\\n                        op = body.call(thisArg, _);\\n                    } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n                    if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n                }\\n            };\"\n 64730      };\n 64731  })(ts || (ts = {}));\n .....\n 73630          function getSourceFile(fileName, languageVersion, onError) {\n 73631              var text;\n 73632:             try {\n 73633                  ts.performance.mark(\"beforeIORead\");\n 73634                  text = ts.sys.readFile(fileName, options.charset);\n .....\n 73687          }\n 73688          function writeFile(fileName, data, writeByteOrderMark, onError) {\n 73689:             try {\n 73690                  ts.performance.mark(\"beforeIOWrite\");\n 73691                  ensureDirectoriesExist(ts.getDirectoryPath(ts.normalizePath(fileName)));\n .....\n 74601          }\n 74602          function runWithCancellationToken(func) {\n 74603:             try {\n 74604                  return func();\n 74605              }\n .....\n 76992      ts.lineBreakPart = lineBreakPart;\n 76993      function mapToDisplayParts(writeDisplayParts) {\n 76994:         try {\n 76995              writeDisplayParts(displayPartWriter);\n 76996              return displayPartWriter.displayParts();\n .....\n 78960                  else if (host.getDirectories) {\n 78961                      var typeRoots = void 0;\n 78962:                     try {\n 78963                          // Wrap in try catch because getEffectiveTypeRoots touches the filesystem\n 78964                          typeRoots = ts.getEffectiveTypeRoots(options, host);\n .....\n 79042                  return result;\n 79043                  function tryReadingPackageJson(filePath) {\n 79044:                     try {\n 79045                          var fileText = tryReadFile(host, filePath);\n 79046                          return fileText ? JSON.parse(fileText) : undefined;\n .....\n 79108              }\n 79109              function tryDirectoryExists(host, path) {\n 79110:                 try {\n 79111                      return ts.directoryProbablyExists(path, host);\n 79112                  }\n .....\n 79119                      args[_i - 2] = arguments[_i];\n 79120                  }\n 79121:                 try {\n 79122                      return toApply && toApply.apply(host, args);\n 79123                  }\n .....\n 84629              curCancellationToken = cancellationToken;\n 84630              curSourceFile = sourceFile;\n 84631:             try {\n 84632                  return ts.map(topLevelItems(rootNavigationBarNode(sourceFile)), convertToTopLevelItem);\n 84633              }\n .....\n 84640              curCancellationToken = cancellationToken;\n 84641              curSourceFile = sourceFile;\n 84642:             try {\n 84643                  return convertToTree(rootNavigationBarNode(sourceFile));\n 84644              }\n .....\n 88004                  // So, we have a rule to add a space for [),Any], [do,Any], [else,Any], and [case,Any]\n 88005                  this.SpaceBetweenStatements = new formatting.Rule(formatting.RuleDescriptor.create4(formatting.Shared.TokenRange.FromTokens([20 /* CloseParenToken */, 81 /* DoKeyword */, 82 /* ElseKeyword */, 73 /* CaseKeyword */]), formatting.Shared.TokenRange.Any), formatting.RuleOperation.create2(new formatting.RuleOperationContext(Rules.IsNonJsxSameLineTokenContext, Rules.IsNonJsxElementContext, Rules.IsNotForContext), 2 /* Space */));\n 88006:                 // This low-pri rule takes care of \"try {\" and \"finally {\" in case the rule SpaceBeforeOpenBraceInControl didn't execute on FormatOnEnter.\n 88007                  this.SpaceAfterTryFinally = new formatting.Rule(formatting.RuleDescriptor.create2(formatting.Shared.TokenRange.FromTokens([102 /* TryKeyword */, 87 /* FinallyKeyword */]), 17 /* OpenBraceToken */), formatting.RuleOperation.create2(new formatting.RuleOperationContext(Rules.IsNonJsxSameLineTokenContext), 2 /* Space */));\n 88008                  //      get x() {}\n .....\n 97817              MultistepOperation.prototype.executeAction = function (action) {\n 97818                  var stop = false;\n 97819:                 try {\n 97820                      if (this.operationHost.isCancellationRequested()) {\n 97821                          stop = true;\n .....\n 98262              };\n 98263              Session.prototype.semanticCheck = function (file, project) {\n 98264:                 try {\n 98265                      var diags = server.emptyArray;\n 98266                      if (!isDeclarationFileInJSOnlyNonConfiguredProject(project, file)) {\n .....\n 98275              };\n 98276              Session.prototype.syntacticCheck = function (file, project) {\n 98277:                 try {\n 98278                      var diags = project.getLanguageService().getSyntacticDiagnostics(file);\n 98279                      if (diags) {\n .....\n 99370              };\n 99371              Session.prototype.executeWithRequestId = function (requestId, f) {\n 99372:                 try {\n 99373                      this.setCurrentRequest(requestId);\n 99374                      return f();\n .....\n 99399                  }\n 99400                  var request;\n 99401:                 try {\n 99402                      request = JSON.parse(message);\n 99403                      var _a = this.executeCommand(request), response = _a.response, responseRequired = _a.responseRequired;\n .....\n 102354              };\n 102355              ConfiguredProject.prototype.enableProxy = function (pluginModuleFactory, configEntry) {\n 102356:                 try {\n 102357                      if (typeof pluginModuleFactory !== \"function\") {\n 102358                          this.projectService.logger.info(\"Skipped loading plugin \" + configEntry.name + \" because it did expose a proper factory function\");\n .....\n 102409                      if (typeof plugin.getExternalFiles !== \"function\")\n 102410                          return;\n 102411:                     try {\n 102412                          return plugin.getExternalFiles(_this);\n 102413                      }\n .....\n 102841              };\n 102842              ProjectService.prototype.loadTypesMap = function () {\n 102843:                 try {\n 102844                      var fileContent = this.host.readFile(this.typesMapLocation);\n 102845                      if (fileContent === undefined) {\n .....\n 104694                  return null;\n 104695              }\n 104696:             try {\n 104697                  return JSON.parse(diagnosticMessagesJson);\n 104698              }\n .....\n 104780      }\n 104781      function forwardCall(logger, actionDescription, returnJson, action, logPerformance) {\n 104782:         try {\n 104783              var result = simpleForwardCall(logger, actionDescription, action, logPerformance);\n 104784              return returnJson ? JSON.stringify({ result: result }) : result;\n .....\n 105242          };\n 105243          TypeScriptServicesFactory.prototype.createLanguageServiceShim = function (host) {\n 105244:             try {\n 105245                  if (this.documentRegistry === undefined) {\n 105246                      this.documentRegistry = ts.createDocumentRegistry(host.useCaseSensitiveFileNames && host.useCaseSensitiveFileNames(), host.getCurrentDirectory());\n .....\n 105256          };\n 105257          TypeScriptServicesFactory.prototype.createClassifierShim = function (logger) {\n 105258:             try {\n 105259                  return new ClassifierShimObject(this, logger);\n 105260              }\n .....\n 105265          };\n 105266          TypeScriptServicesFactory.prototype.createCoreServicesShim = function (host) {\n 105267:             try {\n 105268                  var adapter = new CoreServicesShimHostAdapter(host);\n 105269                  return new CoreServicesShimObject(this, host, adapter);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\typescript.d.ts:\n 4318          entries: CompletionEntry[];\n 4319      }\n 4320:     interface CompletionEntry {\n 4321          name: string;\n 4322          kind: ScriptElementKind;\n ....\n 4560       * to all subsequent createLanguageService calls.\n 4561       */\n 4562:     interface DocumentRegistry {\n 4563          /**\n 4564           * Request a stored SourceFile with a given fileName and compilationSettings.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\typescript.js:\n 3906                  return cachedResult;\n 3907              }\n 3908:             try {\n 3909                  return createCachedFileSystemEntries(rootDir, rootDirPath);\n 3910              }\n ....\n 4262                  }\n 4263                  var fd;\n 4264:                 try {\n 4265                      fd = _fs.openSync(fileName, \"w\");\n 4266                      _fs.writeSync(fd, data, /*position*/ undefined, \"utf8\");\n ....\n 4273              }\n 4274              function getAccessibleFileSystemEntries(path) {\n 4275:                 try {\n 4276                      var entries = _fs.readdirSync(path || \".\").sort();\n 4277                      var files = [];\n ....\n 4286                          var name = ts.combinePaths(path, entry);\n 4287                          var stat = void 0;\n 4288:                         try {\n 4289                              stat = _fs.statSync(name);\n 4290                          }\n ....\n 4314              })(FileSystemEntryKind || (FileSystemEntryKind = {}));\n 4315              function fileSystemEntryExists(path, entryKind) {\n 4316:                 try {\n 4317                      var stat = _fs.statSync(path);\n 4318                      switch (entryKind) {\n ....\n 4387                  readDirectory: readDirectory,\n 4388                  getModifiedTime: function (path) {\n 4389:                     try {\n 4390                          return _fs.statSync(path).mtime;\n 4391                      }\n ....\n 4406                  },\n 4407                  getFileSize: function (path) {\n 4408:                     try {\n 4409                          var stat = _fs.statSync(path);\n 4410                          if (stat.isFile()) {\n ....\n 4423                  debugMode: ts.some(process.execArgv, function (arg) { return /^--(inspect|debug)(-brk)?(=\\d+)?$/i.test(arg); }),\n 4424                  tryEnableSourceMapsForHost: function () {\n 4425:                     try {\n 4426                          require(\"source-map-support\").install();\n 4427                      }\n ....\n 7304      function usingSingleLineStringWriter(action) {\n 7305          var oldString = stringWriter.string();\n 7306:         try {\n 7307              action(stringWriter);\n 7308              return stringWriter.string();\n ....\n 10980              // TODO: Add codePage support for readFile?\n 10981              var fileContents = \"\";\n 10982:             try {\n 10983                  fileContents = sys.readFile(filePath);\n 10984              }\n .....\n 10989                  return false;\n 10990              }\n 10991:             try {\n 10992                  ts.localizedDiagnosticMessages = JSON.parse(fileContents);\n 10993              }\n .....\n 20261                  // these edges are used in following scenario:\n 20262                  // let a; (1)\n 20263:                 // try { a = someOperation(); (2)}\n 20264                  // finally { (3) console.log(a) } (4)\n 20265                  // (5) a\n .....\n 20288                  // if yes - convert current flow to unreachable\n 20289                  // i.e.\n 20290:                 // try { return \"1\" } finally { console.log(1); }\n 20291                  // console.log(2); // this line should be unreachable even if flow falls out of finally block\n 20292                  if (!(currentFlow.flags & 1 /* Unreachable */)) {\n .....\n 22474              return {\n 22475                  walkType: function (type) {\n 22476:                     try {\n 22477                          visitType(type);\n 22478                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 22484                  },\n 22485                  walkSymbol: function (symbol) {\n 22486:                     try {\n 22487                          visitSymbol(symbol);\n 22488                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 22700      }\n 22701      function readJson(path, host) {\n 22702:         try {\n 22703              var jsonText = host.readFile(path);\n 22704              return jsonText ? JSON.parse(jsonText) : {};\n .....\n 44666          }\n 44667          function getDiagnostics(sourceFile, ct) {\n 44668:             try {\n 44669                  // Record the cancellation token so it can be checked later on during checkSourceElement.\n 44670                  // Do this in a finally block so we can ensure that it gets reset back to nothing after\n .....\n 49754          name: \"typescript:read\",\n 49755          scoped: false,\n 49756:         text: \"\\n            var __read = (this && this.__read) || function (o, n) {\\n                var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\n                if (!m) return o;\\n                var i = m.call(o), r, ar = [], e;\\n                try {\\n                    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\n                }\\n                catch (error) { e = { error: error }; }\\n                finally {\\n                    try {\\n                        if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\n                    }\\n                    finally { if (e) throw e.error; }\\n                }\\n                return ar;\\n            };\\n        \"\n 49757      };\n 49758      function createReadHelper(context, iteratorRecord, count, location) {\n .....\n 55815          scoped: false,\n 55816          priority: 5,\n 55817:         text: \"\\n            var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n                return new (P || (P = Promise))(function (resolve, reject) {\\n                    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n                    function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n                    function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\\n                });\\n            };\"\n 55818      };\n 55819      function createAwaiterHelper(context, hasLexicalArguments, promiseConstructor, body) {\n .....\n 56440          name: \"typescript:asyncGenerator\",\n 56441          scoped: false,\n 56442:         text: \"\\n            var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\\n                if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\n                var g = generator.apply(thisArg, _arguments || []), i, q = [];\\n                return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\n                function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\n                function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\n                function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\\n                function fulfill(value) { resume(\\\"next\\\", value); }\\n                function reject(value) { resume(\\\"throw\\\", value); }\\n                function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\n            };\\n        \"\n 56443      };\n 56444      function createAsyncGeneratorHelper(context, generatorFunc) {\n .....\n 61688              if (containsYield(node)) {\n 61689                  // [source]\n 61690:                 //      try {\n 61691                  //          /*tryBlock*/\n 61692                  //      }\n .....\n 62806          scoped: false,\n 62807          priority: 6,\n 62808:         text: \"\\n            var __generator = (this && this.__generator) || function (thisArg, body) {\\n                var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n                return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n                function verb(n) { return function (v) { return step([n, v]); }; }\\n                function step(op) {\\n                    if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n                    while (_) try {\\n                        if (f = 1, y && (t = y[op[0] & 2 ? \\\"return\\\" : op[0] ? \\\"throw\\\" : \\\"next\\\"]) && !(t = t.call(y, op[1])).done) return t;\\n                        if (y = 0, t) op = [0, t.value];\\n                        switch (op[0]) {\\n                            case 0: case 1: t = op; break;\\n                            case 4: _.label++; return { value: op[1], done: false };\\n                            case 5: _.label++; y = op[1]; op = [0]; continue;\\n                            case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                            default:\\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                                if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                                if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                                if (t[2]) _.ops.pop();\\n                                _.trys.pop(); continue;\\n                        }\\n                        op = body.call(thisArg, _);\\n                    } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n                    if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n                }\\n            };\"\n 62809      };\n 62810  })(ts || (ts = {}));\n .....\n 71597          function getSourceFile(fileName, languageVersion, onError) {\n 71598              var text;\n 71599:             try {\n 71600                  ts.performance.mark(\"beforeIORead\");\n 71601                  text = ts.sys.readFile(fileName, options.charset);\n .....\n 71654          }\n 71655          function writeFile(fileName, data, writeByteOrderMark, onError) {\n 71656:             try {\n 71657                  ts.performance.mark(\"beforeIOWrite\");\n 71658                  ensureDirectoriesExist(ts.getDirectoryPath(ts.normalizePath(fileName)));\n .....\n 72568          }\n 72569          function runWithCancellationToken(func) {\n 72570:             try {\n 72571                  return func();\n 72572              }\n .....\n 74474      function tryReadFile(fileName, readFile) {\n 74475          var text;\n 74476:         try {\n 74477              text = readFile(fileName);\n 74478          }\n .....\n 76992      ts.lineBreakPart = lineBreakPart;\n 76993      function mapToDisplayParts(writeDisplayParts) {\n 76994:         try {\n 76995              writeDisplayParts(displayPartWriter);\n 76996              return displayPartWriter.displayParts();\n .....\n 78356                  else if (host.getDirectories) {\n 78357                      var typeRoots = void 0;\n 78358:                     try {\n 78359                          // Wrap in try catch because getEffectiveTypeRoots touches the filesystem\n 78360                          typeRoots = ts.getEffectiveTypeRoots(options, host);\n .....\n 78438                  return result;\n 78439                  function tryReadingPackageJson(filePath) {\n 78440:                     try {\n 78441                          var fileText = tryReadFile(host, filePath);\n 78442                          return fileText ? JSON.parse(fileText) : undefined;\n .....\n 78504              }\n 78505              function tryDirectoryExists(host, path) {\n 78506:                 try {\n 78507                      return ts.directoryProbablyExists(path, host);\n 78508                  }\n .....\n 78515                      args[_i - 2] = arguments[_i];\n 78516                  }\n 78517:                 try {\n 78518                      return toApply && toApply.apply(host, args);\n 78519                  }\n .....\n 84025              curCancellationToken = cancellationToken;\n 84026              curSourceFile = sourceFile;\n 84027:             try {\n 84028                  return ts.map(topLevelItems(rootNavigationBarNode(sourceFile)), convertToTopLevelItem);\n 84029              }\n .....\n 84036              curCancellationToken = cancellationToken;\n 84037              curSourceFile = sourceFile;\n 84038:             try {\n 84039                  return convertToTree(rootNavigationBarNode(sourceFile));\n 84040              }\n .....\n 87400                  // So, we have a rule to add a space for [),Any], [do,Any], [else,Any], and [case,Any]\n 87401                  this.SpaceBetweenStatements = new formatting.Rule(formatting.RuleDescriptor.create4(formatting.Shared.TokenRange.FromTokens([20 /* CloseParenToken */, 81 /* DoKeyword */, 82 /* ElseKeyword */, 73 /* CaseKeyword */]), formatting.Shared.TokenRange.Any), formatting.RuleOperation.create2(new formatting.RuleOperationContext(Rules.IsNonJsxSameLineTokenContext, Rules.IsNonJsxElementContext, Rules.IsNotForContext), 2 /* Space */));\n 87402:                 // This low-pri rule takes care of \"try {\" and \"finally {\" in case the rule SpaceBeforeOpenBraceInControl didn't execute on FormatOnEnter.\n 87403                  this.SpaceAfterTryFinally = new formatting.Rule(formatting.RuleDescriptor.create2(formatting.Shared.TokenRange.FromTokens([102 /* TryKeyword */, 87 /* FinallyKeyword */]), 17 /* OpenBraceToken */), formatting.RuleOperation.create2(new formatting.RuleOperationContext(Rules.IsNonJsxSameLineTokenContext), 2 /* Space */));\n 87404                  //      get x() {}\n .....\n 97350                  return null;\n 97351              }\n 97352:             try {\n 97353                  return JSON.parse(diagnosticMessagesJson);\n 97354              }\n .....\n 97436      }\n 97437      function forwardCall(logger, actionDescription, returnJson, action, logPerformance) {\n 97438:         try {\n 97439              var result = simpleForwardCall(logger, actionDescription, action, logPerformance);\n 97440              return returnJson ? JSON.stringify({ result: result }) : result;\n .....\n 97898          };\n 97899          TypeScriptServicesFactory.prototype.createLanguageServiceShim = function (host) {\n 97900:             try {\n 97901                  if (this.documentRegistry === undefined) {\n 97902                      this.documentRegistry = ts.createDocumentRegistry(host.useCaseSensitiveFileNames && host.useCaseSensitiveFileNames(), host.getCurrentDirectory());\n .....\n 97912          };\n 97913          TypeScriptServicesFactory.prototype.createClassifierShim = function (logger) {\n 97914:             try {\n 97915                  return new ClassifierShimObject(this, logger);\n 97916              }\n .....\n 97921          };\n 97922          TypeScriptServicesFactory.prototype.createCoreServicesShim = function (host) {\n 97923:             try {\n 97924                  var adapter = new CoreServicesShimHostAdapter(host);\n 97925                  return new CoreServicesShimObject(this, host, adapter);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\typescriptServices.d.ts:\n 4318          entries: CompletionEntry[];\n 4319      }\n 4320:     interface CompletionEntry {\n 4321          name: string;\n 4322          kind: ScriptElementKind;\n ....\n 4560       * to all subsequent createLanguageService calls.\n 4561       */\n 4562:     interface DocumentRegistry {\n 4563          /**\n 4564           * Request a stored SourceFile with a given fileName and compilationSettings.\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\typescriptServices.js:\n 3906                  return cachedResult;\n 3907              }\n 3908:             try {\n 3909                  return createCachedFileSystemEntries(rootDir, rootDirPath);\n 3910              }\n ....\n 4262                  }\n 4263                  var fd;\n 4264:                 try {\n 4265                      fd = _fs.openSync(fileName, \"w\");\n 4266                      _fs.writeSync(fd, data, /*position*/ undefined, \"utf8\");\n ....\n 4273              }\n 4274              function getAccessibleFileSystemEntries(path) {\n 4275:                 try {\n 4276                      var entries = _fs.readdirSync(path || \".\").sort();\n 4277                      var files = [];\n ....\n 4286                          var name = ts.combinePaths(path, entry);\n 4287                          var stat = void 0;\n 4288:                         try {\n 4289                              stat = _fs.statSync(name);\n 4290                          }\n ....\n 4314              })(FileSystemEntryKind || (FileSystemEntryKind = {}));\n 4315              function fileSystemEntryExists(path, entryKind) {\n 4316:                 try {\n 4317                      var stat = _fs.statSync(path);\n 4318                      switch (entryKind) {\n ....\n 4387                  readDirectory: readDirectory,\n 4388                  getModifiedTime: function (path) {\n 4389:                     try {\n 4390                          return _fs.statSync(path).mtime;\n 4391                      }\n ....\n 4406                  },\n 4407                  getFileSize: function (path) {\n 4408:                     try {\n 4409                          var stat = _fs.statSync(path);\n 4410                          if (stat.isFile()) {\n ....\n 4423                  debugMode: ts.some(process.execArgv, function (arg) { return /^--(inspect|debug)(-brk)?(=\\d+)?$/i.test(arg); }),\n 4424                  tryEnableSourceMapsForHost: function () {\n 4425:                     try {\n 4426                          require(\"source-map-support\").install();\n 4427                      }\n ....\n 7304      function usingSingleLineStringWriter(action) {\n 7305          var oldString = stringWriter.string();\n 7306:         try {\n 7307              action(stringWriter);\n 7308              return stringWriter.string();\n ....\n 10980              // TODO: Add codePage support for readFile?\n 10981              var fileContents = \"\";\n 10982:             try {\n 10983                  fileContents = sys.readFile(filePath);\n 10984              }\n .....\n 10989                  return false;\n 10990              }\n 10991:             try {\n 10992                  ts.localizedDiagnosticMessages = JSON.parse(fileContents);\n 10993              }\n .....\n 20261                  // these edges are used in following scenario:\n 20262                  // let a; (1)\n 20263:                 // try { a = someOperation(); (2)}\n 20264                  // finally { (3) console.log(a) } (4)\n 20265                  // (5) a\n .....\n 20288                  // if yes - convert current flow to unreachable\n 20289                  // i.e.\n 20290:                 // try { return \"1\" } finally { console.log(1); }\n 20291                  // console.log(2); // this line should be unreachable even if flow falls out of finally block\n 20292                  if (!(currentFlow.flags & 1 /* Unreachable */)) {\n .....\n 22474              return {\n 22475                  walkType: function (type) {\n 22476:                     try {\n 22477                          visitType(type);\n 22478                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 22484                  },\n 22485                  walkSymbol: function (symbol) {\n 22486:                     try {\n 22487                          visitSymbol(symbol);\n 22488                          return { visitedTypes: ts.getOwnValues(visitedTypes), visitedSymbols: ts.getOwnValues(visitedSymbols) };\n .....\n 22700      }\n 22701      function readJson(path, host) {\n 22702:         try {\n 22703              var jsonText = host.readFile(path);\n 22704              return jsonText ? JSON.parse(jsonText) : {};\n .....\n 44666          }\n 44667          function getDiagnostics(sourceFile, ct) {\n 44668:             try {\n 44669                  // Record the cancellation token so it can be checked later on during checkSourceElement.\n 44670                  // Do this in a finally block so we can ensure that it gets reset back to nothing after\n .....\n 49754          name: \"typescript:read\",\n 49755          scoped: false,\n 49756:         text: \"\\n            var __read = (this && this.__read) || function (o, n) {\\n                var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\n                if (!m) return o;\\n                var i = m.call(o), r, ar = [], e;\\n                try {\\n                    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\n                }\\n                catch (error) { e = { error: error }; }\\n                finally {\\n                    try {\\n                        if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\n                    }\\n                    finally { if (e) throw e.error; }\\n                }\\n                return ar;\\n            };\\n        \"\n 49757      };\n 49758      function createReadHelper(context, iteratorRecord, count, location) {\n .....\n 55815          scoped: false,\n 55816          priority: 5,\n 55817:         text: \"\\n            var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n                return new (P || (P = Promise))(function (resolve, reject) {\\n                    function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n                    function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n                    function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\\n                });\\n            };\"\n 55818      };\n 55819      function createAwaiterHelper(context, hasLexicalArguments, promiseConstructor, body) {\n .....\n 56440          name: \"typescript:asyncGenerator\",\n 56441          scoped: false,\n 56442:         text: \"\\n            var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\\n                if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\n                var g = generator.apply(thisArg, _arguments || []), i, q = [];\\n                return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\n                function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\n                function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\n                function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\\n                function fulfill(value) { resume(\\\"next\\\", value); }\\n                function reject(value) { resume(\\\"throw\\\", value); }\\n                function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\n            };\\n        \"\n 56443      };\n 56444      function createAsyncGeneratorHelper(context, generatorFunc) {\n .....\n 61688              if (containsYield(node)) {\n 61689                  // [source]\n 61690:                 //      try {\n 61691                  //          /*tryBlock*/\n 61692                  //      }\n .....\n 62806          scoped: false,\n 62807          priority: 6,\n 62808:         text: \"\\n            var __generator = (this && this.__generator) || function (thisArg, body) {\\n                var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n                return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n                function verb(n) { return function (v) { return step([n, v]); }; }\\n                function step(op) {\\n                    if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n                    while (_) try {\\n                        if (f = 1, y && (t = y[op[0] & 2 ? \\\"return\\\" : op[0] ? \\\"throw\\\" : \\\"next\\\"]) && !(t = t.call(y, op[1])).done) return t;\\n                        if (y = 0, t) op = [0, t.value];\\n                        switch (op[0]) {\\n                            case 0: case 1: t = op; break;\\n                            case 4: _.label++; return { value: op[1], done: false };\\n                            case 5: _.label++; y = op[1]; op = [0]; continue;\\n                            case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                            default:\\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                                if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                                if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                                if (t[2]) _.ops.pop();\\n                                _.trys.pop(); continue;\\n                        }\\n                        op = body.call(thisArg, _);\\n                    } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n                    if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n                }\\n            };\"\n 62809      };\n 62810  })(ts || (ts = {}));\n .....\n 71597          function getSourceFile(fileName, languageVersion, onError) {\n 71598              var text;\n 71599:             try {\n 71600                  ts.performance.mark(\"beforeIORead\");\n 71601                  text = ts.sys.readFile(fileName, options.charset);\n .....\n 71654          }\n 71655          function writeFile(fileName, data, writeByteOrderMark, onError) {\n 71656:             try {\n 71657                  ts.performance.mark(\"beforeIOWrite\");\n 71658                  ensureDirectoriesExist(ts.getDirectoryPath(ts.normalizePath(fileName)));\n .....\n 72568          }\n 72569          function runWithCancellationToken(func) {\n 72570:             try {\n 72571                  return func();\n 72572              }\n .....\n 74474      function tryReadFile(fileName, readFile) {\n 74475          var text;\n 74476:         try {\n 74477              text = readFile(fileName);\n 74478          }\n .....\n 76992      ts.lineBreakPart = lineBreakPart;\n 76993      function mapToDisplayParts(writeDisplayParts) {\n 76994:         try {\n 76995              writeDisplayParts(displayPartWriter);\n 76996              return displayPartWriter.displayParts();\n .....\n 78356                  else if (host.getDirectories) {\n 78357                      var typeRoots = void 0;\n 78358:                     try {\n 78359                          // Wrap in try catch because getEffectiveTypeRoots touches the filesystem\n 78360                          typeRoots = ts.getEffectiveTypeRoots(options, host);\n .....\n 78438                  return result;\n 78439                  function tryReadingPackageJson(filePath) {\n 78440:                     try {\n 78441                          var fileText = tryReadFile(host, filePath);\n 78442                          return fileText ? JSON.parse(fileText) : undefined;\n .....\n 78504              }\n 78505              function tryDirectoryExists(host, path) {\n 78506:                 try {\n 78507                      return ts.directoryProbablyExists(path, host);\n 78508                  }\n .....\n 78515                      args[_i - 2] = arguments[_i];\n 78516                  }\n 78517:                 try {\n 78518                      return toApply && toApply.apply(host, args);\n 78519                  }\n .....\n 84025              curCancellationToken = cancellationToken;\n 84026              curSourceFile = sourceFile;\n 84027:             try {\n 84028                  return ts.map(topLevelItems(rootNavigationBarNode(sourceFile)), convertToTopLevelItem);\n 84029              }\n .....\n 84036              curCancellationToken = cancellationToken;\n 84037              curSourceFile = sourceFile;\n 84038:             try {\n 84039                  return convertToTree(rootNavigationBarNode(sourceFile));\n 84040              }\n .....\n 87400                  // So, we have a rule to add a space for [),Any], [do,Any], [else,Any], and [case,Any]\n 87401                  this.SpaceBetweenStatements = new formatting.Rule(formatting.RuleDescriptor.create4(formatting.Shared.TokenRange.FromTokens([20 /* CloseParenToken */, 81 /* DoKeyword */, 82 /* ElseKeyword */, 73 /* CaseKeyword */]), formatting.Shared.TokenRange.Any), formatting.RuleOperation.create2(new formatting.RuleOperationContext(Rules.IsNonJsxSameLineTokenContext, Rules.IsNonJsxElementContext, Rules.IsNotForContext), 2 /* Space */));\n 87402:                 // This low-pri rule takes care of \"try {\" and \"finally {\" in case the rule SpaceBeforeOpenBraceInControl didn't execute on FormatOnEnter.\n 87403                  this.SpaceAfterTryFinally = new formatting.Rule(formatting.RuleDescriptor.create2(formatting.Shared.TokenRange.FromTokens([102 /* TryKeyword */, 87 /* FinallyKeyword */]), 17 /* OpenBraceToken */), formatting.RuleOperation.create2(new formatting.RuleOperationContext(Rules.IsNonJsxSameLineTokenContext), 2 /* Space */));\n 87404                  //      get x() {}\n .....\n 97350                  return null;\n 97351              }\n 97352:             try {\n 97353                  return JSON.parse(diagnosticMessagesJson);\n 97354              }\n .....\n 97436      }\n 97437      function forwardCall(logger, actionDescription, returnJson, action, logPerformance) {\n 97438:         try {\n 97439              var result = simpleForwardCall(logger, actionDescription, action, logPerformance);\n 97440              return returnJson ? JSON.stringify({ result: result }) : result;\n .....\n 97898          };\n 97899          TypeScriptServicesFactory.prototype.createLanguageServiceShim = function (host) {\n 97900:             try {\n 97901                  if (this.documentRegistry === undefined) {\n 97902                      this.documentRegistry = ts.createDocumentRegistry(host.useCaseSensitiveFileNames && host.useCaseSensitiveFileNames(), host.getCurrentDirectory());\n .....\n 97912          };\n 97913          TypeScriptServicesFactory.prototype.createClassifierShim = function (logger) {\n 97914:             try {\n 97915                  return new ClassifierShimObject(this, logger);\n 97916              }\n .....\n 97921          };\n 97922          TypeScriptServicesFactory.prototype.createCoreServicesShim = function (host) {\n 97923:             try {\n 97924                  var adapter = new CoreServicesShimHostAdapter(host);\n 97925                  return new CoreServicesShimObject(this, host, adapter);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\typingsInstaller.js:\n 2377                  return cachedResult;\n 2378              }\n 2379:             try {\n 2380                  return createCachedFileSystemEntries(rootDir, rootDirPath);\n 2381              }\n ....\n 2690                  }\n 2691                  var fd;\n 2692:                 try {\n 2693                      fd = _fs.openSync(fileName, \"w\");\n 2694                      _fs.writeSync(fd, data, undefined, \"utf8\");\n ....\n 2701              }\n 2702              function getAccessibleFileSystemEntries(path) {\n 2703:                 try {\n 2704                      var entries = _fs.readdirSync(path || \".\").sort();\n 2705                      var files = [];\n ....\n 2712                          var name = ts.combinePaths(path, entry);\n 2713                          var stat = void 0;\n 2714:                         try {\n 2715                              stat = _fs.statSync(name);\n 2716                          }\n ....\n 2735              }\n 2736              function fileSystemEntryExists(path, entryKind) {\n 2737:                 try {\n 2738                      var stat = _fs.statSync(path);\n 2739                      switch (entryKind) {\n ....\n 2802                  readDirectory: readDirectory,\n 2803                  getModifiedTime: function (path) {\n 2804:                     try {\n 2805                          return _fs.statSync(path).mtime;\n 2806                      }\n ....\n 2821                  },\n 2822                  getFileSize: function (path) {\n 2823:                     try {\n 2824                          var stat = _fs.statSync(path);\n 2825                          if (stat.isFile()) {\n ....\n 2838                  debugMode: ts.some(process.execArgv, function (arg) { return /^--(inspect|debug)(-brk)?(=\\d+)?$/i.test(arg); }),\n 2839                  tryEnableSourceMapsForHost: function () {\n 2840:                     try {\n 2841                          require(\"source-map-support\").install();\n 2842                      }\n ....\n 3914      function usingSingleLineStringWriter(action) {\n 3915          var oldString = stringWriter.string();\n 3916:         try {\n 3917              action(stringWriter);\n 3918              return stringWriter.string();\n ....\n 7088              }\n 7089              var fileContents = \"\";\n 7090:             try {\n 7091                  fileContents = sys.readFile(filePath);\n 7092              }\n ....\n 7097                  return false;\n 7098              }\n 7099:             try {\n 7100                  ts.localizedDiagnosticMessages = JSON.parse(fileContents);\n 7101              }\n ....\n 16333      function tryReadFile(fileName, readFile) {\n 16334          var text;\n 16335:         try {\n 16336              text = readFile(fileName);\n 16337          }\n .....\n 17532      }\n 17533      function readJson(path, host) {\n 17534:         try {\n 17535              var jsonText = host.readFile(path);\n 17536              return jsonText ? JSON.parse(jsonText) : {};\n .....\n 18312              };\n 18313              function typingToFileName(cachePath, packageName, installTypingHost, log) {\n 18314:                 try {\n 18315                      var result = ts.resolveModuleName(packageName, ts.combinePaths(cachePath, \"index.d.ts\"), { moduleResolution: ts.ModuleResolutionKind.NodeJs }, installTypingHost);\n 18316                      return result.resolvedModule && result.resolvedModule.resolvedFileName;\n .....\n 18525                      var scopedTypings = filteredTypings.map(typingsName);\n 18526                      this.installTypingsAsync(requestId, scopedTypings, cachePath, function (ok) {\n 18527:                         try {\n 18528                              if (!ok) {\n 18529                                  if (_this.log.isEnabled()) {\n .....\n 18659                      };\n 18660                      this.writeLine = function (text) {\n 18661:                         try {\n 18662                              fs.appendFileSync(_this.logFile, text + ts.sys.newLine);\n 18663                          }\n .....\n 18684                      return ts.createMap();\n 18685                  }\n 18686:                 try {\n 18687                      var content = JSON.parse(host.readFile(typesRegistryFilePath));\n 18688                      return ts.createMapFromTemplate(content.entries);\n .....\n 18713                      (_this.nodeExecSync = require(\"child_process\").execSync);\n 18714                      _this.ensurePackageDirectoryExists(globalTypingsCacheLocation);\n 18715:                     try {\n 18716                          if (_this.log.isEnabled()) {\n 18717                              _this.log.writeLine(\"Updating \" + TypesRegistryPackageName + \" npm package...\");\n .....\n 18803                          this.log.writeLine(\"Exec: \" + command);\n 18804                      }\n 18805:                     try {\n 18806                          var stdout = this.nodeExecSync(command, __assign({}, options, { encoding: \"utf-8\" }));\n 18807                          if (this.log.isEnabled()) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\typescript\\lib\\watchGuard.js:\n   20  var directoryName = process.argv[2];\n   21  var fs = require(\"fs\");\n   22: try {\n   23      var watcher = fs.watch(directoryName, { recursive: true }, function () { return ({}); });\n   24      watcher.close();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\bin\\uglifyjs:\n  178      };\n  179      if (program.timings) options.timings = true;\n  180:     try {\n  181          if (program.parse) {\n  182              if (program.parse.acorn) {\n  ...\n  284      if (glob.match(/\\*|\\?/)) {\n  285          var dir = path.dirname(glob);\n  286:         try {\n  287              var entries = fs.readdirSync(dir);\n  288          } catch (ex) {}\n  ...\n  306  \n  307  function read_file(path, default_value) {\n  308:     try {\n  309          return fs.readFileSync(path, \"utf8\");\n  310      } catch (ex) {\n  ...\n  317      return function(value, options) {\n  318          options = options || {};\n  319:         try {\n  320              UglifyJS.minify(value, {\n  321                  parse: {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\lib\\compress.js:\n 3576                  //   https://github.com/mishoo/UglifyJS2/issues/203\n 3577                  // if the code argument is a constant, then we can minify it.\n 3578:                 try {\n 3579                      var code = \"n(function(\" + self.args.slice(0, -1).map(function(arg) {\n 3580                          return arg.value;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\lib\\minify.js:\n   47  function minify(files, options) {\n   48      var warn_function = AST_Node.warn_function;\n   49:     try {\n   50          options = defaults(options, {\n   51              compress: {},\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\lib\\output.js:\n  200      var do_add_mapping = mappings ? function() {\n  201          mappings.forEach(function(mapping) {\n  202:             try {\n  203                  options.source_map.add(\n  204                      mapping.token.file,\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\lib\\parse.js:\n  497          }\n  498          var mods = read_name();\n  499:         try {\n  500              var regexp = new RegExp(source, mods);\n  501              regexp.raw_source = source;\n  ...\n  551      function with_eof_error(eof_error, cont) {\n  552          return function(x) {\n  553:             try {\n  554                  return cont(x);\n  555              } catch(ex) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\lib\\scope.js:\n  513  AST_Toplevel.DEFMETHOD(\"compute_char_frequency\", function(options){\n  514      options = this._default_mangler_options(options);\n  515:     try {\n  516          AST_Node.prototype.print = function(stream, force_parens) {\n  517              this._print(stream, force_parens);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\lib\\utils.js:\n   77              var err = new Error(this.message);\n   78              err.name = this.name;\n   79:             try {\n   80                  throw err;\n   81              } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\uglify-js\\tools\\props.html:\n    8        function addObject(obj) {\n    9          if (obj == null) return;\n   10:         try {\n   11            Object.getOwnPropertyNames(obj).forEach(add);\n   12          } catch(ex) {}\n   ..\n   15          }\n   16          if (typeof obj == \"function\") {\n   17:           try {\n   18              Object.getOwnPropertyNames(new obj).forEach(add);\n   19            } catch(ex) {}\n   ..\n   29        });\n   30  \n   31:       try {\n   32          addObject(new Event(\"click\"));\n   33          addObject(new Event(\"contextmenu\"));\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\underscore\\underscore.js:\n 1326        source + 'return __p;\\n';\n 1327  \n 1328:     try {\n 1329        var render = new Function(settings.variable || 'obj', '_', source);\n 1330      } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\util-deprecate\\browser.js:\n   57  function config (name) {\n   58    // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n   59:   try {\n   60      if (!global.localStorage) return false;\n   61    } catch (_) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\v8flags\\index.js:\n   41  \n   42  function tryOpenConfig (configpath, cb) {\n   43:   try {\n   44      // if the config file is valid, it should be json and therefore\n   45      // node should be able to require it directly. if this doesn't\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\validate-npm-package-license\\index.js:\n   33    var ast;\n   34  \n   35:   try {\n   36      ast = parse(argument);\n   37    } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\varstream\\cli\\json2varstream.js:\n   13  \t\t\t}\n   14  \t\t\t// Parsing the JSON datas\n   15: \t\t\ttry {\n   16  \t\t\t\tscope.vars = JSON.parse(data);\n   17  \t\t\t} catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\varstream\\node_modules\\readable-stream\\float.patch:\n   59  +if (util.debuglog)\n   60  +  debug = util.debuglog('stream');\n   61: +else try {\n   62  +  debug = require('debuglog')('stream');\n   63  +} catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\vinyl-fs\\node_modules\\graceful-fs\\graceful-fs.js:\n  109  \n  110  function closeSync (fd) {\n  111:   try {\n  112      return originalCloseSync(fd)\n  113    } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\vinyl-fs\\node_modules\\graceful-fs\\polyfills.js:\n   47      // but still try to close, and report closing errors if they occur.\n   48      var err, err2\n   49:     try {\n   50        var ret = fs.fchmodSync(fd, mode)\n   51      } catch (er) {\n   52        err = er\n   53      }\n   54:     try {\n   55        fs.closeSync(fd)\n   56      } catch (er) {\n   ..\n   84          , ret\n   85  \n   86:       try {\n   87          var ret = fs.futimesSync(fd, at, mt)\n   88        } catch (er) {\n   89          err = er\n   90        }\n   91:       try {\n   92          fs.closeSync(fd)\n   93        } catch (er) {\n   ..\n  149    if (!orig) return orig\n  150    return function (target, uid, gid) {\n  151:     try {\n  152        return orig.call(fs, target, uid, gid)\n  153      } catch (er) {\n  ...\n  242    var eagCounter = 0\n  243    while (true) {\n  244:     try {\n  245        return readSync.call(fs, fd, buffer, offset, length, position)\n  246      } catch (er) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\vinyl-fs\\node_modules\\graceful-fs\\test\\open.js:\n   22  test('open a non-existing file throws', function (t) {\n   23    var er\n   24:   try {\n   25      var fd = fs.openSync('this file does not exist', 'r')\n   26    } catch (x) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\lib\\Channel.js:\n  112  parseJSON = function(message) {\n  113    var e;\n  114:   try {\n  115      return JSON.parse(message);\n  116    } catch (_error) {\n  ...\n  122  genJSON = function(message) {\n  123    var e;\n  124:   try {\n  125      return JSON.stringify(message);\n  126    } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\lib\\dumpingHandler.js:\n   36      return;\n   37    }\n   38:   try {\n   39      body = JSON.parse(body);\n   40    } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\lib\\jsonBodyParser.js:\n   27        return next();\n   28      }\n   29:     try {\n   30        request.body = JSON.parse(buffer);\n   31        return next();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\lib\\messageHandler.js:\n   25      args = args.slice();\n   26      args.unshift(channel);\n   27:     try {\n   28        return service[method].apply(service, args);\n   29      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\lib\\serviceManager.js:\n   28      var e, serviceClass;\n   29      serviceClass = null;\n   30:     try {\n   31        serviceClass = require(\"./service/\" + name);\n   32      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\modjewel.js:\n  103  \n  104          module.__isLoading = true\n  105:         try {\n  106              currentModule.moduleIdsRequired.push(moduleId)\n  107  \n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\AuditRules.js:\n  354                  var result = {};\n  355                  for (var i = 0; i < selectorArray.length; ++i) {\n  356:                     try {\n  357                          if (document.querySelector(selectorArray[i]))\n  358                              result[selectorArray[i]] = true;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\ElementsTreeOutline.js:\n 1089              var attr = parseElement.attributes[i];\n 1090              foundOriginalAttribute = foundOriginalAttribute || attr.name === attributeName;\n 1091:             try {\n 1092                  this.representedObject.setAttribute(attr.name, attr.value);\n 1093                  regenerateStyledAttribute.call(this, attr.name, attr.value);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\ExtensionAPI.js:\n  296      {\n  297          var auditResult = new AuditResult(request.arguments[0]);\n  298:         try {\n  299              this._fire(auditResult);\n  300          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\ExtensionServer.js:\n  340          if (!auditResult)\n  341              return this._status.E_NOTFOUND(request.resultId);\n  342:         try {\n  343              auditResult.addResult(request.displayName, request.description, request.severity, request.details);\n  344          } catch (e) {\n  ...\n  370          for (var i = 0; i < extensions.length; ++i) {\n  371              var extension = extensions[i];\n  372:             try {\n  373                  if (!extension.startPage)\n  374                      return;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\InjectedFakeWorker.js:\n  194          }\n  195  \n  196:         try {\n  197              callback(msg);\n  198          } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\PleaseWaitMessage.js:\n   93          function doAction()\n   94          {\n   95:             try {\n   96                  actionCallback();\n   97              } finally {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\ResourceHeadersView.js:\n  156              if (this._decodeRequestParameters) {\n  157                  if (value.indexOf(\"%\") >= 0) {\n  158:                     try {\n  159                          value = decodeURIComponent(value);\n  160                      } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\Settings.js:\n  122              if (!match)\n  123                  continue;\n  124:             try {\n  125                  result[match[1]] = JSON.parse(window.localStorage[fullKey]);\n  126              } catch(e) {\n  ...\n  134      {\n  135          if (key in window.localStorage) {\n  136:             try {\n  137                  return JSON.parse(window.localStorage[key]);\n  138              } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\SourceFrame.js:\n  264  \n  265              // Then try regex search if user knows the / / hint.\n  266:             try {\n  267                  if (/^\\/.*\\/$/.test(query))\n  268                      this._collectRegexMatches(new RegExp(query.substring(1, query.length - 1)), this._searchResults);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\StylesSidebarPane.js:\n 1284              function processColor(text)\n 1285              {\n 1286:                 try {\n 1287                      var color = new WebInspector.Color(text);\n 1288                  } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\TestController.js:\n   65      function invokeMethod()\n   66      {\n   67:         try {\n   68              var result;\n   69              if (window[script] && typeof window[script] === \"function\")\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\TextViewer.js:\n  759      {\n  760          this.beginDomUpdates();\n  761:         try {\n  762              var highlight = this._textModel.getAttribute(lineNumber, \"highlight\");\n  763              if (!highlight) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\UglifyJS\\parse-js.js:\n  232          this.col = col;\n  233          this.pos = pos;\n  234:         try {\n  235                  ({})();\n  236          } catch(ex) {\n  ...\n  513  \n  514          function with_eof_error(eof_error, cont) {\n  515:                 try {\n  516                          return cont();\n  517                  } catch(ex) {\n  ...\n 1173  \n 1174          function in_loop(cont) {\n 1175:                 try {\n 1176                          ++S.in_loop;\n 1177                          return cont();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\client\\UglifyJS\\process.js:\n  207                  if (ast == null)\n  208                          return null;\n  209:                 try {\n  210                          stack.push(ast);\n  211                          var type = ast[0];\n  ...\n  984                  if (incr == null) incr = 1;\n  985                  indentation += incr;\n  986:                 try { return cont.apply(null, slice(arguments, 1)); }\n  987                  finally { indentation -= incr; }\n  988          };\n  ...\n 1099                          return add_spaces([ \"new\", parenthesize(ctor, \"seq\", \"binary\", \"conditional\", \"assign\", function(expr){\n 1100                                  var w = ast_walker(), has_call = {};\n 1101:                                 try {\n 1102                                          w.with_walkers({\n 1103                                                  \"call\": function() { throw has_call },\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\demo\\weinre-demo-min.html:\n   24  <title>weinre minified demo</title>\n   25  <link rel=\"stylesheet\" href=\"weinre-demo.css\">\n   26: <script>try {window.WeinreServerId = location.hash.split(\"#\")[1]} catch(e) {window.WeinreServerId = \"anonymous\"}</script>\n   27  <script src=\"/target/target-script-min.js\"></script>\n   28  <script src=\"weinre-demo.js\"></script>\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\demo\\weinre-demo-strict.html:\n   25  <title>weinre non-minified strict demo</title>\n   26  <link rel=\"stylesheet\" href=\"weinre-demo.css\">\n   27: <script>try {window.WeinreServerId = location.hash.split(\"#\")[1]} catch(e) {window.WeinreServerId = \"anonymous\"}</script>\n   28  <script src=\"/target/target-script.js\"></script>\n   29  <script src=\"weinre-demo-strict.js\"></script>\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\demo\\weinre-demo.html:\n   24  <title>weinre non-minified demo</title>\n   25  <link rel=\"stylesheet\" href=\"weinre-demo.css\">\n   26: <script>try {window.WeinreServerId = location.hash.split(\"#\")[1]} catch(e) {window.WeinreServerId = \"anonymous\"}</script>\n   27  <script src=\"/target/target-script.js\"></script>\n   28  <script src=\"weinre-demo.js\"></script>\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\interfaces\\interfaces.js:\n  433  //-----------------------------------------------------------------------------\n  434  function allowExBreak(func) {\n  435:     try {\n  436          func.call()\n  437      }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\target\\target-script-min.js:\n   58  ModuleStore[moduleId] = module\n   59  module.__isLoading = true\n   60: try {\n   61  currentModule.moduleIdsRequired.push(moduleId)\n   62  var prereqModules = []\n   ..\n  296  func = callback[1];\n  297  args = callback[2].concat(args);\n  298: try {\n  299  return func.apply(receiver, args);\n  300  } catch (_error) {\n  ...\n  402  listener = listener[0];\n  403  if (typeof listener === \"function\") {\n  404: try {\n  405  listener.call(null, event);\n  406  } catch (_error) {\n  ...\n  413  throw new Ex(arguments, \"listener does not implement the handleEvent() method\");\n  414  }\n  415: try {\n  416  _results.push(listener.handleEvent.call(listener, event));\n  417  } catch (_error) {\n  ...\n  435  Ex.catching = function(func) {\n  436  var e;\n  437: try {\n  438  return func.call(this);\n  439  } catch (_error) {\n  ...\n  488  HookLib.ignoreHooks = function(func) {\n  489  var result;\n  490: try {\n  491  IgnoreHooks++;\n  492  result = func.call();\n  ...\n  553  var e, result;\n  554  callBeforeHooks(hookSite, this, arguments);\n  555: try {\n  556  result = func.apply(this, arguments);\n  557  } catch (_error) {\n  ...\n  926  var args, data, e, intf, intfName, method, methodName, methodSignature, skipErrorForMethods;\n  927  skipErrorForMethods = ['domContentEventFired', 'loadEventFired', 'childNodeRemoved'];\n  928: try {\n  929  data = JSON.parse(message.data);\n  930  } catch (_error) {\n  ...\n  950  return;\n  951  }\n  952: try {\n  953  method.apply(intf, args);\n  954  } catch (_error) {\n  ...\n 1061  }\n 1062  visitedFuncs.push(func);\n 1063: try {\n 1064  func = func.caller;\n 1065  } catch (_error) {\n ....\n 1119  return this._handleXhrResponseError(xhr);\n 1120  }\n 1121: try {\n 1122  object = JSON.parse(xhr.responseText);\n 1123  } catch (_error) {\n ....\n 1161  return this._handleXhrResponseError(xhr);\n 1162  }\n 1163: try {\n 1164  datum = JSON.parse(xhr.responseText);\n 1165  } catch (_error) {\n ....\n 1620  var cssRule, err, object, result, styleSheet, _i, _j, _len, _len1, _ref, _ref1;\n 1621  result = [];\n 1622: try {\n 1623  _ref = document.styleSheets;\n 1624  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n ....\n 1851  var match, property, propertyPattern, result, testStyleDecl;\n 1852  testStyleDecl = this.testElement.style;\n 1853: try {\n 1854  testStyleDecl.cssText = string;\n 1855  if (testStyleDecl.cssText !== \"\") {\n ....\n 2172  _wrapObject: function(object, objectGroupName, abbreviate)\n 2173  {\n 2174: try {\n 2175  var objectId;\n 2176  if (typeof object === \"object\" || typeof object === \"function\" || this._isHTMLAllCollection(object)) {\n ....\n 2235  var isGetter = object[\"__lookupGetter__\"] && object.__lookupGetter__(propertyName);\n 2236  if (!isGetter) {\n 2237: try {\n 2238  property.value = this._wrapObject(object[propertyName], parsedObjectId.groupName, abbreviate);\n 2239  } catch(e) {\n ....\n 2259  return !(propertyName in object);\n 2260  }\n 2261: try {\n 2262  var result = inspectedWindow.eval(\"(\" + expression + \")\");\n 2263  object[propertyName] = result;\n 2264  return true;\n 2265  } catch(e) {\n 2266: try {\n 2267  var result = inspectedWindow.eval(\"\\\"\" + expression.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\");\n 2268  object[propertyName] = result;\n ....\n 2276  {\n 2277  for (var o = object; o; o = Object.getPrototypeOf(o)) {\n 2278: try {\n 2279  var names = Object.getOwnPropertyNames(o);\n 2280  for (var i = 0; i < names.length; ++i)\n ....\n 2293  {\n 2294  var props = {};\n 2295: try {\n 2296  if (!expression)\n 2297  expression = \"this\";\n ....\n 2310  {\n 2311  var props = {};\n 2312: try {\n 2313  var callFrame = this._callFrameForId(callFrameId);\n 2314  if (!callFrame)\n ....\n 2337  _evaluateAndWrap: function(evalFunction, object, expression, objectGroup, isEvalOnCallFrame, injectCommandLineAPI)\n 2338  {\n 2339: try {\n 2340  return this._wrapObject(this._evaluateOn(evalFunction, object, expression, isEvalOnCallFrame, injectCommandLineAPI), objectGroup);\n 2341  } catch (e) {\n ....\n 2345  _evaluateOn: function(evalFunction, object, expression, isEvalOnCallFrame, injectCommandLineAPI)\n 2346  {\n 2347: try {\n 2348  if (injectCommandLineAPI && inspectedWindow.console) {\n 2349  inspectedWindow.console._commandLineAPI = new CommandLineAPI(this._commandLineAPIImpl, isEvalOnCallFrame ? object : null);\n ....\n 2469  return type;\n 2470  if (obj instanceof inspectedWindow.Node) {\n 2471: try {\n 2472  return (obj.nodeType === undefined ? type : \"node\");\n 2473  } catch (ex) {} \n ....\n 2554  var hasChildren = (rawType === \"object\" && object !== null && (Object.getOwnPropertyNames(object).length || !!Object.getPrototypeOf(object))) || rawType === \"function\";\n 2555  var description = \"\";\n 2556: try {\n 2557  var description = injectedScript._describe(object, abbreviate);\n 2558  return new InjectedScript.RemoteObject(objectId, type, description, hasChildren);\n ....\n 2660  {\n 2661  var nodes = [];\n 2662: try {\n 2663  var doc = (context && context.ownerDocument) || inspectedWindow.document;\n 2664  var results = doc.evaluate(xpath, context || doc, null, XPathResult.ANY_TYPE, null);\n ....\n 2867  var description, e, sourceString, status, statusText, success, time;\n 2868  sourceString = \"\";\n 2869: try {\n 2870  sourceString = this.xhr.responseText;\n 2871  } catch (_error) {\n ....\n 3002  return;\n 3003  }\n 3004: try {\n 3005  switch (xhr.readyState) {\n 3006  case 2:\n ....\n 3689  return;\n 3690  }\n 3691: try {\n 3692  contentLength = xhr.getResponseHeader(\"Content-Length\");\n 3693  contentLength = parseInt(contentLength);\n ....\n 4494  }\n 4495  result = true;\n 4496: try {\n 4497  HookLib.ignoreHooks(function() {\n 4498  if (storageArea === window.localStorage) {\n ....\n 4518  }\n 4519  result = true;\n 4520: try {\n 4521  HookLib.ignoreHooks(function() {\n 4522  if (storageArea === window.localStorage) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\target\\target-script.js:\n   18   */\n   19  ;(function(){\n   20: ;eval(\"/*\\n * Licensed to the Apache Software Foundation (ASF) under one\\n * or more contributor license agreements.  See the NOTICE file\\n * distributed with this work for additional information\\n * regarding copyright ownership.  The ASF licenses this file\\n * to you under the Apache License, Version 2.0 (the\\n * \\\"License\\\"); you may not use this file except in compliance\\n * with the License.  You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing,\\n * software distributed under the License is distributed on an\\n * \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n * KIND, either express or implied.  See the License for the\\n * specific language governing permissions and limitations\\n * under the License.\\n */\\n\\n//----------------------------------------------------------------------------\\n// an implementation of the require() function as specified for use with\\n// CommonJS Modules - see http://commonjs.org/specs/modules/1.0.html\\n//----------------------------------------------------------------------------\\n\\n//----------------------------------------------------------------------------\\n// inspired from David Flanagan's require() function documented here:\\n// http://www.davidflanagan.com/2009/11/a-module-loader.html\\n//----------------------------------------------------------------------------\\n\\n//----------------------------------------------------------------------------\\n// only supports \\\"preloaded\\\" modules ala define() (AMD)\\n//    http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition\\n// but the id parameter is required\\n//----------------------------------------------------------------------------\\n\\n//----------------------------------------------------------------------------\\n// function wrapper\\n//----------------------------------------------------------------------------\\n(function(){\\n\\n//----------------------------------------------------------------------------\\n// some constants\\n//----------------------------------------------------------------------------\\nvar PROGRAM = \\\"modjewel\\\"\\nvar VERSION = \\\"2.0.0\\\"\\nvar global  = this\\n\\n//----------------------------------------------------------------------------\\n// if require() is already defined, leave\\n//----------------------------------------------------------------------------\\nif (global.modjewel) {\\n    log(\\\"modjewel global variable already defined\\\")\\n    return\\n}\\n\\nglobal.modjewel = null\\n\\n//----------------------------------------------------------------------------\\n// \\\"globals\\\" (local to this function scope though)\\n//----------------------------------------------------------------------------\\nvar ModuleStore\\nvar ModulePreloadStore\\nvar MainModule\\nvar WarnOnRecursiveRequire = false\\n\\n//----------------------------------------------------------------------------\\n// the require function\\n//----------------------------------------------------------------------------\\nfunction get_require(currentModule) {\\n    var result = function require(moduleId) {\\n\\n        if (moduleId.match(/^\\\\.{1,2}\\\\//)) {\\n            moduleId = normalize(currentModule, moduleId)\\n        }\\n\\n        if (hop(ModuleStore, moduleId)) {\\n            var module = ModuleStore[moduleId]\\n            if (module.__isLoading) {\\n                if (WarnOnRecursiveRequire) {\\n                    var fromModule = currentModule ? currentModule.id : \\\"<root>\\\"\\n                    console.log(\\\"module '\\\" + moduleId + \\\"' recursively require()d from '\\\" + fromModule + \\\"', problem?\\\")\\n                }\\n            }\\n\\n            currentModule.moduleIdsRequired.push(moduleId)\\n\\n            return module.exports\\n        }\\n\\n        if (!hop(ModulePreloadStore, moduleId)) {\\n            var fromModule = currentModule ? currentModule.id : \\\"<root>\\\"\\n            error(\\\"module '\\\" + moduleId + \\\"' not found from '\\\" + fromModule + \\\"', must be define()'d first\\\")\\n        }\\n\\n        var factory = ModulePreloadStore[moduleId][0]\\n        var prereqs = ModulePreloadStore[moduleId][1]\\n\\n        var module = create_module(moduleId)\\n\\n        var newRequire = get_require(module)\\n\\n        ModuleStore[moduleId] = module\\n\\n        module.__isLoading = true\\n        try {\\n            currentModule.moduleIdsRequired.push(moduleId)\\n\\n            var prereqModules = []\\n            for (var i=0; i<prereqs.length; i++) {\\n                var prereqId = prereqs[i]\\n                var prereqModule\\n\\n                if      (prereqId == \\\"require\\\") prereqModule = newRequire\\n                else if (prereqId == \\\"exports\\\") prereqModule = module.exports\\n                else if (prereqId == \\\"module\\\")  prereqModule = module\\n                else                            prereqModule = newRequire(prereqId)\\n\\n                prereqModules.push(prereqModule)\\n            }\\n\\n            if (typeof factory == \\\"function\\\") {\\n                var result = factory.apply(null, prereqModules)\\n                if (result) {\\n                    module.exports = result\\n                }\\n            }\\n            else {\\n                module.exports = factory\\n            }\\n        }\\n        finally {\\n            module.__isLoading = false\\n        }\\n\\n        return module.exports\\n    }\\n\\n    result.define         = require_define\\n    result.implementation = PROGRAM\\n    result.version        = VERSION\\n\\n    return result\\n}\\n\\n//----------------------------------------------------------------------------\\n// shorter version of hasOwnProperty\\n//----------------------------------------------------------------------------\\nfunction hop(object, name) {\\n    return Object.prototype.hasOwnProperty.call(object, name)\\n}\\n\\n//----------------------------------------------------------------------------\\n// create a new module\\n//----------------------------------------------------------------------------\\nfunction create_module(id) {\\n    return {\\n        id:                id,\\n        uri:               id,\\n        exports:           {},\\n        prereqIds:         [],\\n        moduleIdsRequired: []\\n    }\\n}\\n\\n//----------------------------------------------------------------------------\\n// reset the stores\\n//----------------------------------------------------------------------------\\nfunction require_reset() {\\n    ModuleStore        = {}\\n    ModulePreloadStore = {}\\n    MainModule         = create_module(null)\\n\\n    var require = get_require(MainModule)\\n    var define  = require_define\\n    \\n    define(\\\"modjewel\\\", modjewel_module)\\n\\n    global.modjewel            = require(\\\"modjewel\\\")\\n    global.modjewel.require    = require\\n    global.modjewel.define     = define\\n    global.modjewel.define.amd = {implementation: PROGRAM, version: VERSION}\\n}\\n\\n//----------------------------------------------------------------------------\\n// used by pre-built modules that can be included via <script src=>\\n// a simplification of\\n//    http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition\\n// where id is required\\n//----------------------------------------------------------------------------\\nfunction require_define(moduleId, prereqs, factory) {\\n    var rem = [\\\"require\\\", \\\"exports\\\", \\\"module\\\"]\\n\\n    if (typeof moduleId != \\\"string\\\") {\\n        console.log(\\\"modjewel.define(): first parameter must be a string; was: \\\" + moduleId)\\n        return\\n    }\\n\\n    if (arguments.length == 2) {\\n        factory = prereqs\\n        prereqs = null\\n    }\\n\\n    if (!prereqs || prereqs.length == 0) {\\n        prereqs = rem\\n    }\\n\\n    if (typeof factory != \\\"function\\\") {\\n        if (factory) {\\n            ModulePreloadStore[moduleId] = [factory, prereqs]\\n            return\\n        }\\n\\n        console.log(\\\"modjewel.define(): factory was falsy: \\\" + factory)\\n        return\\n    }\\n\\n    if (moduleId.match(/^\\\\./)) {\\n        console.log(\\\"modjewel.define(): moduleId must not start with '.': '\\\" + moduleName + \\\"'\\\")\\n        return\\n    }\\n\\n    if (hop(ModulePreloadStore, moduleId)) {\\n        console.log(\\\"modjewel.define(): module '\\\" + moduleId + \\\"' has already been defined\\\")\\n        return\\n    }\\n\\n    ModulePreloadStore[moduleId] = [factory, prereqs]\\n}\\n\\n//----------------------------------------------------------------------------\\n// get the path of a module\\n//----------------------------------------------------------------------------\\nfunction getModulePath(module) {\\n    if (!module || !module.id) return \\\"\\\"\\n\\n    var parts = module.id.split(\\\"/\\\")\\n\\n    return parts.slice(0, parts.length-1).join(\\\"/\\\")\\n}\\n\\n//----------------------------------------------------------------------------\\n// normalize a 'file name' with . and .. with a 'directory name'\\n//----------------------------------------------------------------------------\\nfunction normalize(module, file) {\\n    var modulePath = getModulePath(module)\\n    var dirParts   = (\\\"\\\" == modulePath) ? [] : modulePath.split(\\\"/\\\")\\n    var fileParts  = file.split(\\\"/\\\")\\n\\n    for (var i=0; i<fileParts.length; i++) {\\n        var filePart = fileParts[i]\\n\\n        if (filePart == \\\".\\\") {\\n        }\\n\\n        else if (filePart == \\\"..\\\") {\\n            if (dirParts.length > 0) {\\n                dirParts.pop()\\n            }\\n            else {\\n                // error(\\\"error normalizing '\\\" + module + \\\"' and '\\\" + file + \\\"'\\\")\\n                // eat non-valid .. paths\\n            }\\n        }\\n\\n        else {\\n            dirParts.push(filePart)\\n        }\\n    }\\n\\n    return dirParts.join(\\\"/\\\")\\n}\\n\\n//----------------------------------------------------------------------------\\n// throw an error\\n//----------------------------------------------------------------------------\\nfunction error(message) {\\n    throw new Error(PROGRAM + \\\": \\\" + message)\\n}\\n\\n//----------------------------------------------------------------------------\\n// get a list of loaded modules\\n//----------------------------------------------------------------------------\\nfunction modjewel_getLoadedModuleIds() {\\n    var result = []\\n\\n    for (moduleId in ModuleStore) {\\n        result.push(moduleId)\\n    }\\n\\n    return result\\n}\\n\\n//----------------------------------------------------------------------------\\n// get a list of the preloaded module ids\\n//----------------------------------------------------------------------------\\nfunction modjewel_getPreloadedModuleIds() {\\n    var result = []\\n\\n    for (moduleId in ModulePreloadStore) {\\n        result.push(moduleId)\\n    }\\n\\n    return result\\n}\\n\\n//----------------------------------------------------------------------------\\n// get a module by module id\\n//----------------------------------------------------------------------------\\nfunction modjewel_getModule(moduleId) {\\n    if (null == moduleId) return MainModule\\n\\n    return ModuleStore[moduleId]\\n}\\n\\n//----------------------------------------------------------------------------\\n// get a list of module ids which have been required by the specified module id\\n//----------------------------------------------------------------------------\\nfunction modjewel_getModuleIdsRequired(moduleId) {\\n    var module = modjewel_getModule(moduleId)\\n    if (null == module) return null\\n\\n    return module.moduleIdsRequired.slice()\\n}\\n\\n//----------------------------------------------------------------------------\\n// set the WarnOnRecursiveRequireFlag\\n// - if you make use of \\\"module.exports =\\\" in your code, you will want this on\\n//----------------------------------------------------------------------------\\nfunction modjewel_warnOnRecursiveRequire(value) {\\n    if (arguments.length == 0) return WarnOnRecursiveRequire\\n    WarnOnRecursiveRequire = !!value\\n}\\n\\n//----------------------------------------------------------------------------\\n// the modjewel module\\n//----------------------------------------------------------------------------\\nfunction modjewel_module(require, exports, module) {\\n    exports.VERSION                = VERSION\\n    exports.require                = null // filled in later\\n    exports.define                 = null // filled in later\\n    exports.getLoadedModuleIds     = modjewel_getLoadedModuleIds\\n    exports.getPreloadedModuleIds  = modjewel_getPreloadedModuleIds\\n    exports.getModule              = modjewel_getModule\\n    exports.getModuleIdsRequired   = modjewel_getModuleIdsRequired\\n    exports.warnOnRecursiveRequire = modjewel_warnOnRecursiveRequire\\n}\\n\\n//----------------------------------------------------------------------------\\n// log a message\\n//----------------------------------------------------------------------------\\nfunction log(message) {\\n    console.log(\\\"modjewel: \\\" + message)\\n}\\n\\n//----------------------------------------------------------------------------\\n// make the require function a global\\n//----------------------------------------------------------------------------\\nrequire_reset()\\n\\n//----------------------------------------------------------------------------\\n})();\\n\\n//@ sourceURL=modjewel.js\")\n   21  modjewel.require('modjewel').warnOnRecursiveRequire(true);\n   22  ;eval(\";modjewel.define(\\\"weinre/common/Binding\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Binding, Ex;\\n\\nEx = require('./Ex');\\n\\nmodule.exports = Binding = (function() {\\n  function Binding(receiver, method) {\\n    if (!receiver) {\\n      throw new Ex(arguments, \\\"receiver argument for Binding constructor was null\\\");\\n    }\\n    if (typeof method === \\\"string\\\") {\\n      method = receiver[method];\\n    }\\n    if (typeof method === !\\\"function\\\") {\\n      throw new Ex(arguments, \\\"method argument didn't specify a function\\\");\\n    }\\n    return function() {\\n      return method.apply(receiver, [].slice.call(arguments));\\n    };\\n  }\\n\\n  return Binding;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/Binding.amd.js\")\n   23: ;eval(\";modjewel.define(\\\"weinre/common/Callback\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Callback, CallbackIndex, CallbackTable, ConnectorChannel, Ex;\\n\\nEx = require('./Ex');\\n\\nCallbackTable = {};\\n\\nCallbackIndex = 1;\\n\\nConnectorChannel = \\\"???\\\";\\n\\nmodule.exports = Callback = (function() {\\n  function Callback() {\\n    throw new Ex(arguments, \\\"this class is not intended to be instantiated\\\");\\n  }\\n\\n  Callback.setConnectorChannel = function(connectorChannel) {\\n    return ConnectorChannel = \\\"\\\" + connectorChannel;\\n  };\\n\\n  Callback.register = function(callback) {\\n    var data, func, index, receiver;\\n    if (typeof callback === \\\"function\\\") {\\n      callback = [null, callback];\\n    }\\n    if (typeof callback.slice !== \\\"function\\\") {\\n      throw new Ex(arguments, \\\"callback must be an array or function\\\");\\n    }\\n    receiver = callback[0];\\n    func = callback[1];\\n    data = callback.slice(2);\\n    if (typeof func === \\\"string\\\") {\\n      func = receiver[func];\\n    }\\n    if (typeof func !== \\\"function\\\") {\\n      throw new Ex(arguments, \\\"callback function was null or not found\\\");\\n    }\\n    index = ConnectorChannel + \\\"::\\\" + CallbackIndex;\\n    CallbackIndex++;\\n    if (CallbackIndex >= 65536 * 65536) {\\n      CallbackIndex = 1;\\n    }\\n    CallbackTable[index] = [receiver, func, data];\\n    return index;\\n  };\\n\\n  Callback.deregister = function(index) {\\n    return delete CallbackTable[index];\\n  };\\n\\n  Callback.invoke = function(index, args) {\\n    var callback, e, func, funcName, receiver;\\n    callback = CallbackTable[index];\\n    if (!callback) {\\n      throw new Ex(arguments, \\\"callback \\\" + index + \\\" not registered or already invoked\\\");\\n    }\\n    receiver = callback[0];\\n    func = callback[1];\\n    args = callback[2].concat(args);\\n    try {\\n      return func.apply(receiver, args);\\n    } catch (_error) {\\n      e = _error;\\n      funcName = func.name || func.signature;\\n      if (!funcName) {\\n        funcName = \\\"<unnamed>\\\";\\n      }\\n      return require(\\\"./Weinre\\\").logError(arguments.callee.signature + (\\\" exception invoking callback: \\\" + funcName + \\\"(\\\" + (args.join(',')) + \\\"): \\\") + e);\\n    } finally {\\n      Callback.deregister(index);\\n    }\\n  };\\n\\n  return Callback;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/Callback.amd.js\")\n   24  ;eval(\";modjewel.define(\\\"weinre/common/Debug\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Debug;\\n\\nmodule.exports = new (Debug = (function() {\\n  function Debug() {\\n    this._printCalledArgs = {};\\n  }\\n\\n  Debug.prototype.log = function(message) {\\n    var console;\\n    console = window.console.__original || window.console;\\n    return console.log(\\\"\\\" + (this.timeStamp()) + \\\": \\\" + message);\\n  };\\n\\n  Debug.prototype.logCall = function(context, intf, method, args, message) {\\n    var printArgs, signature;\\n    if (message) {\\n      message = \\\": \\\" + message;\\n    } else {\\n      message = \\\"\\\";\\n    }\\n    signature = this.signature(intf, method);\\n    printArgs = this._printCalledArgs[signature];\\n    if (printArgs) {\\n      args = JSON.stringify(args, null, 4);\\n    } else {\\n      args = \\\"\\\";\\n    }\\n    return this.log(\\\"\\\" + context + \\\" \\\" + signature + \\\"(\\\" + args + \\\")\\\" + message);\\n  };\\n\\n  Debug.prototype.logCallArgs = function(intf, method) {\\n    return this._printCalledArgs[this.signature(intf, method)] = true;\\n  };\\n\\n  Debug.prototype.signature = function(intf, method) {\\n    return \\\"\\\" + intf + \\\".\\\" + method;\\n  };\\n\\n  Debug.prototype.timeStamp = function() {\\n    var date, mins, secs;\\n    date = new Date();\\n    mins = \\\"\\\" + (date.getMinutes());\\n    secs = \\\"\\\" + (date.getSeconds());\\n    if (mins.length === 1) {\\n      mins = \\\"0\\\" + mins;\\n    }\\n    if (secs.length === 1) {\\n      secs = \\\"0\\\" + secs;\\n    }\\n    return \\\"\\\" + mins + \\\":\\\" + secs;\\n  };\\n\\n  return Debug;\\n\\n})());\\n\\n});\\n\\n//@ sourceURL=weinre/common/Debug.amd.js\")\n   25: ;eval(\";modjewel.define(\\\"weinre/common/EventListeners\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar EventListeners, Ex, Weinre;\\n\\nEx = require('./Ex');\\n\\nWeinre = require('./Weinre');\\n\\nmodule.exports = EventListeners = (function() {\\n  function EventListeners() {\\n    this.listeners = [];\\n  }\\n\\n  EventListeners.prototype.add = function(listener, useCapture) {\\n    return this.listeners.push([listener, useCapture]);\\n  };\\n\\n  EventListeners.prototype.remove = function(listener, useCapture) {\\n    var listeners, _i, _len, _listener;\\n    listeners = this.listeners.slice();\\n    for (_i = 0, _len = listeners.length; _i < _len; _i++) {\\n      _listener = listeners[_i];\\n      if (_listener[0] !== listener) {\\n        continue;\\n      }\\n      if (_listener[1] !== useCapture) {\\n        continue;\\n      }\\n      this._listeners.splice(i, 1);\\n      return;\\n    }\\n  };\\n\\n  EventListeners.prototype.fire = function(event) {\\n    var e, listener, listeners, _i, _len, _results;\\n    listeners = this.listeners.slice();\\n    _results = [];\\n    for (_i = 0, _len = listeners.length; _i < _len; _i++) {\\n      listener = listeners[_i];\\n      listener = listener[0];\\n      if (typeof listener === \\\"function\\\") {\\n        try {\\n          listener.call(null, event);\\n        } catch (_error) {\\n          e = _error;\\n          Weinre.logError(\\\"\\\" + arguments.callee.name + \\\" invocation exception: \\\" + e);\\n        }\\n        continue;\\n      }\\n      if (typeof (listener != null ? listener.handleEvent : void 0) !== \\\"function\\\") {\\n        throw new Ex(arguments, \\\"listener does not implement the handleEvent() method\\\");\\n      }\\n      try {\\n        _results.push(listener.handleEvent.call(listener, event));\\n      } catch (_error) {\\n        e = _error;\\n        _results.push(Weinre.logError(\\\"\\\" + arguments.callee.name + \\\" invocation exception: \\\" + e));\\n      }\\n    }\\n    return _results;\\n  };\\n\\n  return EventListeners;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/EventListeners.amd.js\")\n   26: ;eval(\";modjewel.define(\\\"weinre/common/Ex\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Ex, StackTrace, prefix;\\n\\nStackTrace = require('./StackTrace');\\n\\nmodule.exports = Ex = (function() {\\n  Ex.catching = function(func) {\\n    var e;\\n    try {\\n      return func.call(this);\\n    } catch (_error) {\\n      e = _error;\\n      console.log(\\\"runtime error: \\\" + e);\\n      return StackTrace.dump(arguments);\\n    }\\n  };\\n\\n  function Ex(args, message) {\\n    if (!args || !args.callee) {\\n      throw Ex(arguments, \\\"first parameter must be an Arguments object\\\");\\n    }\\n    StackTrace.dump(args);\\n    if (message instanceof Error) {\\n      message = \\\"threw error: \\\" + message;\\n    }\\n    message = prefix(args, message);\\n    message;\\n  }\\n\\n  return Ex;\\n\\n})();\\n\\nprefix = function(args, string) {\\n  if (args.callee.signature) {\\n    return args.callee.signature + \\\": \\\" + string;\\n  }\\n  if (args.callee.displayName) {\\n    return args.callee.displayName + \\\": \\\" + string;\\n  }\\n  if (args.callee.name) {\\n    return args.callee.name + \\\": \\\" + string;\\n  }\\n  return \\\"<anonymous>\\\" + \\\": \\\" + string;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/Ex.amd.js\")\n   27: ;eval(\";modjewel.define(\\\"weinre/common/HookLib\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar HookLib, HookSite, HookSites, IgnoreHooks, callAfterHooks, callBeforeHooks, callExceptHooks, getHookSite, getHookedFunction;\\n\\nHookLib = exports;\\n\\nHookSites = [];\\n\\nIgnoreHooks = 0;\\n\\nmodule.exports = HookLib = (function() {\\n  function HookLib() {}\\n\\n  HookLib.addHookSite = function(object, property) {\\n    return getHookSite(object, property, true);\\n  };\\n\\n  HookLib.getHookSite = function(object, property) {\\n    return getHookSite(object, property, false);\\n  };\\n\\n  HookLib.ignoreHooks = function(func) {\\n    var result;\\n    try {\\n      IgnoreHooks++;\\n      result = func.call();\\n    } finally {\\n      IgnoreHooks--;\\n    }\\n    return result;\\n  };\\n\\n  return HookLib;\\n\\n})();\\n\\ngetHookSite = function(object, property, addIfNotFound) {\\n  var hookSite, i, _i, _len;\\n  i = 0;\\n  for (_i = 0, _len = HookSites.length; _i < _len; _i++) {\\n    hookSite = HookSites[_i];\\n    if (hookSite.object !== object) {\\n      continue;\\n    }\\n    if (hookSite.property !== property) {\\n      continue;\\n    }\\n    return hookSite;\\n  }\\n  if (!addIfNotFound) {\\n    return null;\\n  }\\n  hookSite = new HookSite(object, property);\\n  HookSites.push(hookSite);\\n  return hookSite;\\n};\\n\\nHookSite = (function() {\\n  function HookSite(object, property) {\\n    var hookedFunction;\\n    this.object = object;\\n    this.property = property;\\n    this.target = object[property];\\n    this.hookss = [];\\n    if (typeof this.target === 'undefined') {\\n      return;\\n    } else {\\n      hookedFunction = getHookedFunction(this.target, this);\\n      if (!(navigator.userAgent.match(/MSIE/i) && (object === localStorage || object === sessionStorage))) {\\n        object[property] = hookedFunction;\\n      }\\n    }\\n  }\\n\\n  HookSite.prototype.addHooks = function(hooks) {\\n    return this.hookss.push(hooks);\\n  };\\n\\n  HookSite.prototype.removeHooks = function(hooks) {\\n    var i, _i, _ref;\\n    for (i = _i = 0, _ref = this.hookss.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\\n      if (this.hookss[i] === hooks) {\\n        this.hookss.splice(i, 1);\\n        return;\\n      }\\n    }\\n  };\\n\\n  return HookSite;\\n\\n})();\\n\\ngetHookedFunction = function(func, hookSite) {\\n  var hookedFunction;\\n  hookedFunction = function() {\\n    var e, result;\\n    callBeforeHooks(hookSite, this, arguments);\\n    try {\\n      result = func.apply(this, arguments);\\n    } catch (_error) {\\n      e = _error;\\n      callExceptHooks(hookSite, this, arguments, e);\\n      throw e;\\n    } finally {\\n      callAfterHooks(hookSite, this, arguments, result);\\n    }\\n    return result;\\n  };\\n  hookedFunction.displayName = func.displayName || func.name;\\n  return hookedFunction;\\n};\\n\\ncallBeforeHooks = function(hookSite, receiver, args) {\\n  var hooks, _i, _len, _ref, _results;\\n  if (IgnoreHooks > 0) {\\n    return;\\n  }\\n  _ref = hookSite.hookss;\\n  _results = [];\\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n    hooks = _ref[_i];\\n    if (hooks.before) {\\n      _results.push(hooks.before.call(hooks, receiver, args));\\n    } else {\\n      _results.push(void 0);\\n    }\\n  }\\n  return _results;\\n};\\n\\ncallAfterHooks = function(hookSite, receiver, args, result) {\\n  var hooks, _i, _len, _ref, _results;\\n  if (IgnoreHooks > 0) {\\n    return;\\n  }\\n  _ref = hookSite.hookss;\\n  _results = [];\\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n    hooks = _ref[_i];\\n    if (hooks.after) {\\n      _results.push(hooks.after.call(hooks, receiver, args, result));\\n    } else {\\n      _results.push(void 0);\\n    }\\n  }\\n  return _results;\\n};\\n\\ncallExceptHooks = function(hookSite, receiver, args, e) {\\n  var hooks, _i, _len, _ref, _results;\\n  if (IgnoreHooks > 0) {\\n    return;\\n  }\\n  _ref = hookSite.hookss;\\n  _results = [];\\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n    hooks = _ref[_i];\\n    if (hooks.except) {\\n      _results.push(hooks.except.call(hooks, receiver, args, e));\\n    } else {\\n      _results.push(void 0);\\n    }\\n  }\\n  return _results;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/HookLib.amd.js\")\n   28  ;eval(\";modjewel.define(\\\"weinre/common/IDGenerator\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar IDGenerator, idName, nextId, nextIdValue;\\n\\nnextIdValue = 1;\\n\\nidName = \\\"__weinre__id\\\";\\n\\nmodule.exports = IDGenerator = (function() {\\n  function IDGenerator() {}\\n\\n  IDGenerator.checkId = function(object) {\\n    return object[idName];\\n  };\\n\\n  IDGenerator.getId = function(object, map) {\\n    var id;\\n    id = IDGenerator.checkId(object);\\n    if (!id) {\\n      id = nextId();\\n      object[idName] = id;\\n    }\\n    if (map) {\\n      map[id] = object;\\n    }\\n    return id;\\n  };\\n\\n  IDGenerator.next = function() {\\n    return nextId();\\n  };\\n\\n  return IDGenerator;\\n\\n})();\\n\\nnextId = function() {\\n  var result;\\n  result = nextIdValue;\\n  nextIdValue += 1;\\n  return result;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/IDGenerator.amd.js\")\n   29  ;eval(\";modjewel.define(\\\"weinre/common/IDLTools\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Callback, Ex, IDLTools, IDLs, getProxyMethod;\\n\\nEx = require('./Ex');\\n\\nCallback = require('./Callback');\\n\\nIDLs = {};\\n\\nmodule.exports = IDLTools = (function() {\\n  function IDLTools() {\\n    throw new Ex(arguments, \\\"this class is not intended to be instantiated\\\");\\n  }\\n\\n  IDLTools.addIDLs = function(idls) {\\n    var idl, intf, _i, _len, _results;\\n    _results = [];\\n    for (_i = 0, _len = idls.length; _i < _len; _i++) {\\n      idl = idls[_i];\\n      _results.push((function() {\\n        var _j, _len1, _ref, _results1;\\n        _ref = idl.interfaces;\\n        _results1 = [];\\n        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\\n          intf = _ref[_j];\\n          IDLs[intf.name] = intf;\\n          _results1.push(intf.module = idl.name);\\n        }\\n        return _results1;\\n      })());\\n    }\\n    return _results;\\n  };\\n\\n  IDLTools.getIDL = function(name) {\\n    return IDLs[name];\\n  };\\n\\n  IDLTools.getIDLsMatching = function(regex) {\\n    var intf, intfName, results;\\n    results = [];\\n    for (intfName in IDLs) {\\n      intf = IDLs[intfName];\\n      if (intfName.match(regex)) {\\n        results.push(intf);\\n      }\\n    }\\n    return results;\\n  };\\n\\n  IDLTools.validateAgainstIDL = function(klass, interfaceName) {\\n    var classMethod, error, errors, intf, intfMethod, messagePrefix, printName, propertyName, _i, _j, _len, _len1, _ref, _results;\\n    intf = IDLTools.getIDL(interfaceName);\\n    messagePrefix = \\\"IDL validation for \\\" + interfaceName + \\\": \\\";\\n    if (null === intf) {\\n      throw new Ex(arguments, messagePrefix + (\\\"idl not found: '\\\" + interfaceName + \\\"'\\\"));\\n    }\\n    errors = [];\\n    _ref = intf.methods;\\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n      intfMethod = _ref[_i];\\n      classMethod = klass.prototype[intfMethod.name];\\n      printName = klass.name + \\\"::\\\" + intfMethod.name;\\n      if (null === classMethod) {\\n        errors.push(messagePrefix + (\\\"method not implemented: '\\\" + printName + \\\"'\\\"));\\n        continue;\\n      }\\n      if (classMethod.length !== intfMethod.parameters.length) {\\n        if (classMethod.length !== intfMethod.parameters.length + 1) {\\n          errors.push(messagePrefix + (\\\"wrong number of parameters: '\\\" + printName + \\\"'\\\"));\\n          continue;\\n        }\\n      }\\n    }\\n    for (propertyName in klass.prototype) {\\n      if (klass.prototype.hasOwnProperty(propertyName)) {\\n        continue;\\n      }\\n      if (propertyName.match(/^_.*/)) {\\n        continue;\\n      }\\n      printName = klass.name + \\\"::\\\" + propertyName;\\n      if (!intf.methods[propertyName]) {\\n        errors.push(messagePrefix + (\\\"method should not be implemented: '\\\" + printName + \\\"'\\\"));\\n        continue;\\n      }\\n    }\\n    if (!errors.length) {\\n      return;\\n    }\\n    _results = [];\\n    for (_j = 0, _len1 = errors.length; _j < _len1; _j++) {\\n      error = errors[_j];\\n      _results.push(require(\\\"./Weinre\\\").logError(error));\\n    }\\n    return _results;\\n  };\\n\\n  IDLTools.buildProxyForIDL = function(proxyObject, interfaceName) {\\n    var intf, intfMethod, messagePrefix, _i, _len, _ref, _results;\\n    intf = IDLTools.getIDL(interfaceName);\\n    messagePrefix = \\\"building proxy for IDL \\\" + interfaceName + \\\": \\\";\\n    if (null === intf) {\\n      throw new Ex(arguments, messagePrefix + (\\\"idl not found: '\\\" + interfaceName + \\\"'\\\"));\\n    }\\n    _ref = intf.methods;\\n    _results = [];\\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n      intfMethod = _ref[_i];\\n      _results.push(proxyObject[intfMethod.name] = getProxyMethod(intf, intfMethod));\\n    }\\n    return _results;\\n  };\\n\\n  return IDLTools;\\n\\n})();\\n\\ngetProxyMethod = function(intf, method) {\\n  var proxyMethod, result;\\n  result = proxyMethod = function() {\\n    var args, callbackId;\\n    callbackId = null;\\n    args = [].slice.call(arguments);\\n    if (args.length > 0) {\\n      if (typeof args[args.length - 1] === \\\"function\\\") {\\n        callbackId = Callback.register(args[args.length - 1]);\\n        args = args.slice(0, args.length - 1);\\n      }\\n    }\\n    while (args.length < method.parameters.length) {\\n      args.push(null);\\n    }\\n    args.push(callbackId);\\n    return this.__invoke(intf.name, method.name, args);\\n  };\\n  result.displayName = intf.name + \\\"__\\\" + method.name;\\n  return result;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/IDLTools.amd.js\")\n   30: ;eval(\";modjewel.define(\\\"weinre/common/MessageDispatcher\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Binding, Callback, Ex, IDLTools, InspectorBackend, MessageDispatcher, Verbose, WebSocketXhr, Weinre,\\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\\n\\nWeinre = require('./Weinre');\\n\\nWebSocketXhr = require('./WebSocketXhr');\\n\\nIDLTools = require('./IDLTools');\\n\\nBinding = require('./Binding');\\n\\nEx = require('./Ex');\\n\\nCallback = require('./Callback');\\n\\nVerbose = false;\\n\\nInspectorBackend = null;\\n\\nmodule.exports = MessageDispatcher = (function() {\\n  function MessageDispatcher(url, id) {\\n    if (!id) {\\n      id = \\\"anonymous\\\";\\n    }\\n    this._url = url;\\n    this._id = id;\\n    this.error = null;\\n    this._opening = false;\\n    this._opened = false;\\n    this._closed = false;\\n    this._interfaces = {};\\n    this._open();\\n  }\\n\\n  MessageDispatcher.setInspectorBackend = function(inspectorBackend) {\\n    return InspectorBackend = inspectorBackend;\\n  };\\n\\n  MessageDispatcher.verbose = function(value) {\\n    if (arguments.length >= 1) {\\n      Verbose = !!value;\\n    }\\n    return Verbose;\\n  };\\n\\n  MessageDispatcher.prototype._open = function() {\\n    if (this._opened || this._opening) {\\n      return;\\n    }\\n    if (this._closed) {\\n      throw new Ex(arguments, \\\"socket has already been closed\\\");\\n    }\\n    this._opening = true;\\n    this._socket = new WebSocketXhr(this._url, this._id);\\n    this._socket.addEventListener(\\\"open\\\", Binding(this, \\\"_handleOpen\\\"));\\n    this._socket.addEventListener(\\\"error\\\", Binding(this, \\\"_handleError\\\"));\\n    this._socket.addEventListener(\\\"message\\\", Binding(this, \\\"_handleMessage\\\"));\\n    return this._socket.addEventListener(\\\"close\\\", Binding(this, \\\"_handleClose\\\"));\\n  };\\n\\n  MessageDispatcher.prototype.close = function() {\\n    if (this._closed) {\\n      return;\\n    }\\n    this._opened = false;\\n    this._closed = true;\\n    return this._socket.close();\\n  };\\n\\n  MessageDispatcher.prototype.send = function(data) {\\n    return this._socket.send(data);\\n  };\\n\\n  MessageDispatcher.prototype.getWebSocket = function() {\\n    return this._socket;\\n  };\\n\\n  MessageDispatcher.prototype.registerInterface = function(intfName, intf, validate) {\\n    if (validate) {\\n      IDLTools.validateAgainstIDL(intf.constructor, intfName);\\n    }\\n    if (this._interfaces[intfName]) {\\n      throw new Ex(arguments, \\\"interface \\\" + intfName + \\\" has already been registered\\\");\\n    }\\n    return this._interfaces[intfName] = intf;\\n  };\\n\\n  MessageDispatcher.prototype.createProxy = function(intfName) {\\n    var proxy, self, __invoke;\\n    proxy = {};\\n    IDLTools.buildProxyForIDL(proxy, intfName);\\n    self = this;\\n    proxy.__invoke = __invoke = function(intfName, methodName, args) {\\n      return self._sendMethodInvocation(intfName, methodName, args);\\n    };\\n    return proxy;\\n  };\\n\\n  MessageDispatcher.prototype._sendMethodInvocation = function(intfName, methodName, args) {\\n    var data;\\n    if (typeof intfName !== \\\"string\\\") {\\n      throw new Ex(arguments, \\\"expecting intf parameter to be a string\\\");\\n    }\\n    if (typeof methodName !== \\\"string\\\") {\\n      throw new Ex(arguments, \\\"expecting method parameter to be a string\\\");\\n    }\\n    data = {\\n      \\\"interface\\\": intfName,\\n      method: methodName,\\n      args: args\\n    };\\n    data = JSON.stringify(data);\\n    this._socket.send(data);\\n    if (Verbose) {\\n      return Weinre.logDebug(this.constructor.name + (\\\"[\\\" + this._url + \\\"]: send \\\" + intfName + \\\".\\\" + methodName + \\\"(\\\" + (JSON.stringify(args)) + \\\")\\\"));\\n    }\\n  };\\n\\n  MessageDispatcher.prototype.getState = function() {\\n    if (this._opening) {\\n      return \\\"opening\\\";\\n    }\\n    if (this._opened) {\\n      return \\\"opened\\\";\\n    }\\n    if (this._closed) {\\n      return \\\"closed\\\";\\n    }\\n    return \\\"unknown\\\";\\n  };\\n\\n  MessageDispatcher.prototype.isOpen = function() {\\n    return this._opened === true;\\n  };\\n\\n  MessageDispatcher.prototype._handleOpen = function(event) {\\n    this._opening = false;\\n    this._opened = true;\\n    this.channel = event.channel;\\n    Callback.setConnectorChannel(this.channel);\\n    if (Verbose) {\\n      return Weinre.logDebug(this.constructor.name + (\\\"[\\\" + this._url + \\\"]: opened\\\"));\\n    }\\n  };\\n\\n  MessageDispatcher.prototype._handleError = function(message) {\\n    this.error = message;\\n    this.close();\\n    if (Verbose) {\\n      return Weinre.logDebug(this.constructor.name + (\\\"[\\\" + this._url + \\\"]: error: \\\") + message);\\n    }\\n  };\\n\\n  MessageDispatcher.prototype._handleMessage = function(message) {\\n    var args, data, e, intf, intfName, method, methodName, methodSignature, skipErrorForMethods;\\n    skipErrorForMethods = ['domContentEventFired', 'loadEventFired', 'childNodeRemoved'];\\n    try {\\n      data = JSON.parse(message.data);\\n    } catch (_error) {\\n      e = _error;\\n      throw new Ex(arguments, \\\"invalid JSON data received: \\\" + e + \\\": '\\\" + message.data + \\\"'\\\");\\n    }\\n    intfName = data[\\\"interface\\\"];\\n    methodName = data.method;\\n    args = data.args;\\n    methodSignature = \\\"\\\" + intfName + \\\".\\\" + methodName + \\\"()\\\";\\n    intf = this._interfaces.hasOwnProperty(intfName) && this._interfaces[intfName];\\n    if (!intf && InspectorBackend && intfName.match(/.*Notify/)) {\\n      intf = InspectorBackend.getRegisteredDomainDispatcher(intfName.substr(0, intfName.length - 6));\\n    }\\n    if (!intf) {\\n      Weinre.notImplemented(\\\"weinre: request for non-registered interface: \\\" + methodSignature);\\n      return;\\n    }\\n    methodSignature = intf.constructor.name + (\\\".\\\" + methodName + \\\"()\\\");\\n    method = intf[methodName];\\n    if (typeof method !== \\\"function\\\") {\\n      Weinre.notImplemented(methodSignature);\\n      return;\\n    }\\n    try {\\n      method.apply(intf, args);\\n    } catch (_error) {\\n      e = _error;\\n      if (__indexOf.call(skipErrorForMethods, methodName) < 0) {\\n        Weinre.logError((\\\"weinre: invocation exception on \\\" + methodSignature + \\\": \\\") + e);\\n      }\\n    }\\n    if (Verbose) {\\n      return Weinre.logDebug(this.constructor.name + (\\\"[\\\" + this._url + \\\"]: recv \\\" + intfName + \\\".\\\" + methodName + \\\"(\\\" + (JSON.stringify(args)) + \\\")\\\"));\\n    }\\n  };\\n\\n  MessageDispatcher.prototype._handleClose = function() {\\n    this._reallyClosed = true;\\n    if (Verbose) {\\n      return Weinre.logDebug(this.constructor.name + (\\\"[\\\" + this._url + \\\"]: closed\\\"));\\n    }\\n  };\\n\\n  return MessageDispatcher;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/MessageDispatcher.amd.js\")\n   31  ;eval(\";modjewel.define(\\\"weinre/common/MethodNamer\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar MethodNamer,\\n  __hasProp = {}.hasOwnProperty;\\n\\nmodule.exports = MethodNamer = (function() {\\n  function MethodNamer() {}\\n\\n  MethodNamer.setNamesForClass = function(aClass) {\\n    var key, val, _ref, _results;\\n    for (key in aClass) {\\n      if (!__hasProp.call(aClass, key)) continue;\\n      val = aClass[key];\\n      if (typeof val === \\\"function\\\") {\\n        val.signature = \\\"\\\" + aClass.name + \\\"::\\\" + key;\\n        val.displayName = key;\\n        val.name = key;\\n      }\\n    }\\n    _ref = aClass.prototype;\\n    _results = [];\\n    for (key in _ref) {\\n      if (!__hasProp.call(_ref, key)) continue;\\n      val = _ref[key];\\n      if (typeof val === \\\"function\\\") {\\n        val.signature = \\\"\\\" + aClass.name + \\\".\\\" + key;\\n        val.displayName = key;\\n        _results.push(val.name = key);\\n      } else {\\n        _results.push(void 0);\\n      }\\n    }\\n    return _results;\\n  };\\n\\n  return MethodNamer;\\n\\n})();\\n\\nMethodNamer.setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/MethodNamer.amd.js\")\n   32: ;eval(\";modjewel.define(\\\"weinre/common/StackTrace\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar StackTrace, getTrace;\\n\\nmodule.exports = StackTrace = (function() {\\n  function StackTrace(args) {\\n    if (!args || !args.callee) {\\n      throw Error(\\\"first parameter to \\\" + arguments.callee.signature + \\\" must be an Arguments object\\\");\\n    }\\n    this.trace = getTrace(args);\\n  }\\n\\n  StackTrace.dump = function(args) {\\n    var stackTrace;\\n    args = args || arguments;\\n    stackTrace = new StackTrace(args);\\n    return stackTrace.dump();\\n  };\\n\\n  StackTrace.prototype.dump = function() {\\n    var frame, _i, _len, _ref, _results;\\n    console.log(\\\"StackTrace:\\\");\\n    _ref = this.trace;\\n    _results = [];\\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n      frame = _ref[_i];\\n      _results.push(console.log(\\\"    \\\" + frame));\\n    }\\n    return _results;\\n  };\\n\\n  return StackTrace;\\n\\n})();\\n\\ngetTrace = function(args) {\\n  var err, func, result, visitedFuncs;\\n  result = [];\\n  visitedFuncs = [];\\n  func = args.callee;\\n  while (func) {\\n    if (func.signature) {\\n      result.push(func.signature);\\n    } else if (func.displayName) {\\n      result.push(func.displayName);\\n    } else if (func.name) {\\n      result.push(func.name);\\n    } else {\\n      result.push(\\\"<anonymous>\\\");\\n    }\\n    if (-1 !== visitedFuncs.indexOf(func)) {\\n      result.push(\\\"... recursion\\\");\\n      return result;\\n    }\\n    visitedFuncs.push(func);\\n    try {\\n      func = func.caller;\\n    } catch (_error) {\\n      err = _error;\\n      func = null;\\n    }\\n  }\\n  return result;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/StackTrace.amd.js\")\n   33: ;eval(\";modjewel.define(\\\"weinre/common/WebSocketXhr\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar EventListeners, Ex, HookLib, WebSocketXhr, Weinre, _xhrEventHandler;\\n\\nEx = require('./Ex');\\n\\nWeinre = require('./Weinre');\\n\\nHookLib = require('./HookLib');\\n\\nEventListeners = require('./EventListeners');\\n\\nmodule.exports = WebSocketXhr = (function() {\\n  WebSocketXhr.CONNECTING = 0;\\n\\n  WebSocketXhr.OPEN = 1;\\n\\n  WebSocketXhr.CLOSING = 2;\\n\\n  WebSocketXhr.CLOSED = 3;\\n\\n  function WebSocketXhr(url, id) {\\n    this.initialize(url, id);\\n  }\\n\\n  WebSocketXhr.prototype.initialize = function(url, id) {\\n    if (!id) {\\n      id = \\\"anonymous\\\";\\n    }\\n    this.readyState = WebSocketXhr.CONNECTING;\\n    this._url = url;\\n    this._id = id;\\n    this._urlChannel = null;\\n    this._queuedSends = [];\\n    this._sendInProgress = true;\\n    this._listeners = {\\n      open: new EventListeners(),\\n      message: new EventListeners(),\\n      error: new EventListeners(),\\n      close: new EventListeners()\\n    };\\n    return this._getChannel();\\n  };\\n\\n  WebSocketXhr.prototype._getChannel = function() {\\n    var body;\\n    body = JSON.stringify({\\n      id: this._id\\n    });\\n    return this._xhr(this._url, \\\"POST\\\", body, this._handleXhrResponseGetChannel);\\n  };\\n\\n  WebSocketXhr.prototype._handleXhrResponseGetChannel = function(xhr) {\\n    var e, object;\\n    if (xhr.status !== 200) {\\n      return this._handleXhrResponseError(xhr);\\n    }\\n    try {\\n      object = JSON.parse(xhr.responseText);\\n    } catch (_error) {\\n      e = _error;\\n      this._fireEventListeners(\\\"error\\\", {\\n        message: \\\"non-JSON response from channel open request\\\"\\n      });\\n      this.close();\\n      return;\\n    }\\n    if (!object.channel) {\\n      this._fireEventListeners(\\\"error\\\", {\\n        message: \\\"channel open request did not include a channel\\\"\\n      });\\n      this.close();\\n      return;\\n    }\\n    this._urlChannel = this._url + \\\"/\\\" + object.channel;\\n    this.readyState = WebSocketXhr.OPEN;\\n    this._fireEventListeners(\\\"open\\\", {\\n      message: \\\"open\\\",\\n      channel: object.channel\\n    });\\n    this._sendInProgress = false;\\n    this._sendQueued();\\n    return this._readLoop();\\n  };\\n\\n  WebSocketXhr.prototype._readLoop = function() {\\n    if (this.readyState === WebSocketXhr.CLOSED) {\\n      return;\\n    }\\n    if (this.readyState === WebSocketXhr.CLOSING) {\\n      return;\\n    }\\n    return this._xhr(this._urlChannel, \\\"GET\\\", \\\"\\\", this._handleXhrResponseGet);\\n  };\\n\\n  WebSocketXhr.prototype._handleXhrResponseGet = function(xhr) {\\n    var data, datum, e, self, _i, _len, _results;\\n    self = this;\\n    if (xhr.status !== 200) {\\n      return this._handleXhrResponseError(xhr);\\n    }\\n    try {\\n      datum = JSON.parse(xhr.responseText);\\n    } catch (_error) {\\n      e = _error;\\n      this.readyState = WebSocketXhr.CLOSED;\\n      this._fireEventListeners(\\\"error\\\", {\\n        message: \\\"non-JSON response from read request\\\"\\n      });\\n      return;\\n    }\\n    HookLib.ignoreHooks(function() {\\n      return setTimeout((function() {\\n        return self._readLoop();\\n      }), 0);\\n    });\\n    _results = [];\\n    for (_i = 0, _len = datum.length; _i < _len; _i++) {\\n      data = datum[_i];\\n      _results.push(self._fireEventListeners(\\\"message\\\", {\\n        data: data\\n      }));\\n    }\\n    return _results;\\n  };\\n\\n  WebSocketXhr.prototype.send = function(data) {\\n    if (typeof data !== \\\"string\\\") {\\n      throw new Ex(arguments, this.constructor.name + \\\".send\\\");\\n    }\\n    this._queuedSends.push(data);\\n    if (this._sendInProgress) {\\n      return;\\n    }\\n    return this._sendQueued();\\n  };\\n\\n  WebSocketXhr.prototype._sendQueued = function() {\\n    var datum;\\n    if (this._queuedSends.length === 0) {\\n      return;\\n    }\\n    if (this.readyState === WebSocketXhr.CLOSED) {\\n      return;\\n    }\\n    if (this.readyState === WebSocketXhr.CLOSING) {\\n      return;\\n    }\\n    datum = JSON.stringify(this._queuedSends);\\n    this._queuedSends = [];\\n    this._sendInProgress = true;\\n    return this._xhr(this._urlChannel, \\\"POST\\\", datum, this._handleXhrResponseSend);\\n  };\\n\\n  WebSocketXhr.prototype._handleXhrResponseSend = function(xhr) {\\n    var httpSocket;\\n    httpSocket = this;\\n    if (xhr.status !== 200) {\\n      return this._handleXhrResponseError(xhr);\\n    }\\n    this._sendInProgress = false;\\n    return HookLib.ignoreHooks(function() {\\n      return setTimeout((function() {\\n        return httpSocket._sendQueued();\\n      }), 0);\\n    });\\n  };\\n\\n  WebSocketXhr.prototype.close = function() {\\n    this._sendInProgress = true;\\n    this.readyState = WebSocketXhr.CLOSING;\\n    this._fireEventListeners(\\\"close\\\", {\\n      message: \\\"closing\\\",\\n      wasClean: true\\n    });\\n    return this.readyState = WebSocketXhr.CLOSED;\\n  };\\n\\n  WebSocketXhr.prototype.addEventListener = function(type, listener, useCapture) {\\n    return this._getListeners(type).add(listener, useCapture);\\n  };\\n\\n  WebSocketXhr.prototype.removeEventListener = function(type, listener, useCapture) {\\n    return this._getListeners(type).remove(listener, useCapture);\\n  };\\n\\n  WebSocketXhr.prototype._fireEventListeners = function(type, event) {\\n    if (this.readyState === WebSocketXhr.CLOSED) {\\n      return;\\n    }\\n    event.target = this;\\n    return this._getListeners(type).fire(event);\\n  };\\n\\n  WebSocketXhr.prototype._getListeners = function(type) {\\n    var listeners;\\n    listeners = this._listeners[type];\\n    if (null === listeners) {\\n      throw new Ex(arguments, \\\"invalid event listener type: '\\\" + type + \\\"'\\\");\\n    }\\n    return listeners;\\n  };\\n\\n  WebSocketXhr.prototype._handleXhrResponseError = function(xhr) {\\n    if (xhr.status === 404) {\\n      this.close();\\n      return;\\n    }\\n    this._fireEventListeners(\\\"error\\\", {\\n      target: this,\\n      status: xhr.status,\\n      message: \\\"error from XHR invocation: \\\" + xhr.statusText\\n    });\\n    return Weinre.logError((\\\"error from XHR invocation: \\\" + xhr.status + \\\": \\\") + xhr.statusText);\\n  };\\n\\n  WebSocketXhr.prototype._xhr = function(url, method, data, handler) {\\n    var xhr;\\n    if (null === handler) {\\n      throw new Ex(arguments, \\\"handler must not be null\\\");\\n    }\\n    xhr = (XMLHttpRequest.noConflict ? new XMLHttpRequest.noConflict() : new XMLHttpRequest());\\n    xhr.httpSocket = this;\\n    xhr.httpSocketHandler = handler;\\n    xhr.onreadystatechange = function() {\\n      return _xhrEventHandler(xhr);\\n    };\\n    HookLib.ignoreHooks(function() {\\n      return xhr.open(method, url, true);\\n    });\\n    xhr.setRequestHeader(\\\"Content-Type\\\", \\\"text/plain\\\");\\n    return HookLib.ignoreHooks(function() {\\n      return xhr.send(data);\\n    });\\n  };\\n\\n  return WebSocketXhr;\\n\\n})();\\n\\n_xhrEventHandler = function(xhr) {\\n  if (xhr.readyState !== 4) {\\n    return;\\n  }\\n  return xhr.httpSocketHandler.call(xhr.httpSocket, xhr);\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/WebSocketXhr.amd.js\")\n   34  ;eval(\";modjewel.define(\\\"weinre/common/Weinre\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar ConsoleLogger, Ex, IDLTools, StackTrace, Weinre, consoleLogger, getLogger, logger, _notImplemented, _showNotImplemented;\\n\\nEx = require('./Ex');\\n\\nIDLTools = require('./IDLTools');\\n\\nStackTrace = require('./StackTrace');\\n\\n_notImplemented = {};\\n\\n_showNotImplemented = false;\\n\\nlogger = null;\\n\\nmodule.exports = Weinre = (function() {\\n  function Weinre() {\\n    throw new Ex(arguments, \\\"this class is not intended to be instantiated\\\");\\n  }\\n\\n  Weinre.addIDLs = function(idls) {\\n    return IDLTools.addIDLs(idls);\\n  };\\n\\n  Weinre.deprecated = function() {\\n    return StackTrace.dump(arguments);\\n  };\\n\\n  Weinre.notImplemented = function(thing) {\\n    if (_notImplemented[thing]) {\\n      return;\\n    }\\n    _notImplemented[thing] = true;\\n    if (!_showNotImplemented) {\\n      return;\\n    }\\n    return Weinre.logWarning(thing + \\\" not implemented\\\");\\n  };\\n\\n  Weinre.showNotImplemented = function() {\\n    var key, _results;\\n    _showNotImplemented = true;\\n    _results = [];\\n    for (key in _notImplemented) {\\n      _results.push(Weinre.logWarning(key + \\\" not implemented\\\"));\\n    }\\n    return _results;\\n  };\\n\\n  Weinre.logError = function(message) {\\n    return getLogger().logError(message);\\n  };\\n\\n  Weinre.logWarning = function(message) {\\n    return getLogger().logWarning(message);\\n  };\\n\\n  Weinre.logInfo = function(message) {\\n    return getLogger().logInfo(message);\\n  };\\n\\n  Weinre.logDebug = function(message) {\\n    return getLogger().logDebug(message);\\n  };\\n\\n  return Weinre;\\n\\n})();\\n\\nConsoleLogger = (function() {\\n  function ConsoleLogger() {}\\n\\n  ConsoleLogger.prototype.logError = function(message) {\\n    return console.log(\\\"error: \\\" + message);\\n  };\\n\\n  ConsoleLogger.prototype.logWarning = function(message) {\\n    return console.log(\\\"warning: \\\" + message);\\n  };\\n\\n  ConsoleLogger.prototype.logInfo = function(message) {\\n    return console.log(\\\"info: \\\" + message);\\n  };\\n\\n  ConsoleLogger.prototype.logDebug = function(message) {\\n    return console.log(\\\"debug: \\\" + message);\\n  };\\n\\n  return ConsoleLogger;\\n\\n})();\\n\\nconsoleLogger = new ConsoleLogger();\\n\\ngetLogger = function() {\\n  if (logger) {\\n    return logger;\\n  }\\n  if (Weinre.client) {\\n    logger = Weinre.WeinreClientCommands;\\n    return logger;\\n  }\\n  if (Weinre.target) {\\n    logger = Weinre.WeinreTargetCommands;\\n    return logger;\\n  }\\n  return consoleLogger;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/common/Weinre.amd.js\")\n   35  ;eval(\";modjewel.define(\\\"weinre/target/BrowserHacks\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar BrowserHacks;\\n\\nBrowserHacks = function() {\\n  if (typeof document.addEventListener === \\\"undefined\\\") {\\n    alert(\\\"Oops. It seems the page runs in compatibility mode. Please fix it and try again.\\\");\\n    return;\\n  }\\n  if (typeof window.Element === \\\"undefined\\\") {\\n    window.Element = function() {};\\n  }\\n  if (typeof window.Node === \\\"undefined\\\") {\\n    window.Node = function() {};\\n  }\\n  if (!Object.getPrototypeOf) {\\n    Object.getPrototypeOf = function(object) {\\n      if (!object.__proto__) {\\n        throw new Error(\\\"This vm does not support __proto__ and getPrototypeOf. Script requires any of them to operate correctly.\\\");\\n      }\\n      return object.__proto__;\\n    };\\n  }\\n};\\n\\nBrowserHacks();\\n\\n});\\n\\n//@ sourceURL=weinre/target/BrowserHacks.amd.js\")\n   36  ;eval(\";modjewel.define(\\\"weinre/target/CheckForProblems\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar CheckForProblems, checkForOldPrototypeVersion;\\n\\nmodule.exports = CheckForProblems = (function() {\\n  function CheckForProblems() {}\\n\\n  CheckForProblems.check = function() {\\n    return checkForOldPrototypeVersion();\\n  };\\n\\n  return CheckForProblems;\\n\\n})();\\n\\ncheckForOldPrototypeVersion = function() {\\n  var badVersion;\\n  badVersion = false;\\n  if (typeof Prototype === \\\"undefined\\\") {\\n    return;\\n  }\\n  if (!Prototype.Version) {\\n    return;\\n  }\\n  if (Prototype.Version.match(/^1\\\\.5.*/)) {\\n    badVersion = true;\\n  }\\n  if (Prototype.Version.match(/^1\\\\.6.*/)) {\\n    badVersion = true;\\n  }\\n  if (badVersion) {\\n    return alert(\\\"Sorry, weinre is not support in versions of Prototype earlier than 1.7\\\");\\n  }\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/CheckForProblems.amd.js\")\n   37  ;eval(\";modjewel.define(\\\"weinre/target/Console\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Console, MessageLevel, MessageSource, MessageType, OriginalConsole, RemoteConsole, Timeline, UsingRemote, Weinre;\\n\\nWeinre = require('../common/Weinre');\\n\\nTimeline = require('../target/Timeline');\\n\\nUsingRemote = false;\\n\\nRemoteConsole = null;\\n\\nOriginalConsole = null;\\n\\nMessageSource = {\\n  HTML: 0,\\n  WML: 1,\\n  XML: 2,\\n  JS: 3,\\n  CSS: 4,\\n  Other: 5\\n};\\n\\nMessageType = {\\n  Log: 0,\\n  Object: 1,\\n  Trace: 2,\\n  StartGroup: 3,\\n  StartGroupCollapsed: 4,\\n  EndGroup: 5,\\n  Assert: 6,\\n  UncaughtException: 7,\\n  Result: 8\\n};\\n\\nMessageLevel = {\\n  Tip: 0,\\n  Log: 1,\\n  Warning: 2,\\n  Error: 3,\\n  Debug: 4\\n};\\n\\nmodule.exports = Console = (function() {\\n  function Console() {}\\n\\n  Object.defineProperty(Console, 'original', {\\n    get: function() {\\n      return OriginalConsole;\\n    }\\n  });\\n\\n  Console.useRemote = function(value) {\\n    var oldValue;\\n    if (arguments.length === 0) {\\n      return UsingRemote;\\n    }\\n    oldValue = UsingRemote;\\n    UsingRemote = !!value;\\n    if (UsingRemote) {\\n      window.console = RemoteConsole;\\n    } else {\\n      window.console = OriginalConsole;\\n    }\\n    return oldValue;\\n  };\\n\\n  Console.prototype._generic = function(level, messageParts) {\\n    var message, messagePart, parameters, payload, _i, _len;\\n    message = messageParts[0].toString();\\n    parameters = [];\\n    for (_i = 0, _len = messageParts.length; _i < _len; _i++) {\\n      messagePart = messageParts[_i];\\n      parameters.push(Weinre.injectedScript.wrapObjectForConsole(messagePart, true));\\n    }\\n    payload = {\\n      source: MessageSource.JS,\\n      type: MessageType.Log,\\n      level: level,\\n      message: message,\\n      parameters: parameters\\n    };\\n    return Weinre.wi.ConsoleNotify.addConsoleMessage(payload);\\n  };\\n\\n  Console.prototype.log = function() {\\n    return this._generic(MessageLevel.Log, [].slice.call(arguments));\\n  };\\n\\n  Console.prototype.debug = function() {\\n    return this._generic(MessageLevel.Debug, [].slice.call(arguments));\\n  };\\n\\n  Console.prototype.error = function() {\\n    return this._generic(MessageLevel.Error, [].slice.call(arguments));\\n  };\\n\\n  Console.prototype.info = function() {\\n    return this._generic(MessageLevel.Log, [].slice.call(arguments));\\n  };\\n\\n  Console.prototype.warn = function() {\\n    return this._generic(MessageLevel.Warning, [].slice.call(arguments));\\n  };\\n\\n  Console.prototype.dir = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.dirxml = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.trace = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.assert = function(condition) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.count = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.markTimeline = function(message) {\\n    return Timeline.addRecord_Mark(message);\\n  };\\n\\n  Console.prototype.lastWMLErrorMessage = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.profile = function(title) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.profileEnd = function(title) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.time = function(title) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.timeEnd = function(title) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.group = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.groupCollapsed = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  Console.prototype.groupEnd = function() {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  return Console;\\n\\n})();\\n\\nRemoteConsole = new Console();\\n\\nOriginalConsole = window.console || {};\\n\\nRemoteConsole.__original = OriginalConsole;\\n\\nOriginalConsole.__original = OriginalConsole;\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/Console.amd.js\")\n   38: ;eval(\";modjewel.define(\\\"weinre/target/CSSStore\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar CSSStore, IDGenerator, Weinre, _elementMatchesSelector, _fallbackMatchesSelector, _getMappableId, _getMappableObject, _mozMatchesSelector, _msMatchesSelector, _webkitMatchesSelector;\\n\\nIDGenerator = require('../common/IDGenerator');\\n\\nWeinre = require('../common/Weinre');\\n\\n_elementMatchesSelector = null;\\n\\nmodule.exports = CSSStore = (function() {\\n  function CSSStore() {\\n    this.styleSheetMap = {};\\n    this.styleRuleMap = {};\\n    this.styleDeclMap = {};\\n    this.testElement = document.createElement(\\\"div\\\");\\n  }\\n\\n  CSSStore.prototype.getInlineStyle = function(node) {\\n    var cssProperty, styleObject, _i, _len, _ref;\\n    styleObject = this._buildMirrorForStyle(node.style, true);\\n    _ref = styleObject.cssProperties;\\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n      cssProperty = _ref[_i];\\n      cssProperty.status = \\\"style\\\";\\n    }\\n    return styleObject;\\n  };\\n\\n  CSSStore.prototype.getComputedStyle = function(node) {\\n    var styleObject;\\n    if (!node) {\\n      return {};\\n    }\\n    if (node.nodeType !== Node.ELEMENT_NODE) {\\n      return {};\\n    }\\n    styleObject = this._buildMirrorForStyle(window.getComputedStyle(node), false);\\n    return styleObject;\\n  };\\n\\n  CSSStore.prototype.getMatchedCSSRules = function(node) {\\n    var cssRule, err, object, result, styleSheet, _i, _j, _len, _len1, _ref, _ref1;\\n    result = [];\\n    try {\\n      _ref = document.styleSheets;\\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n        styleSheet = _ref[_i];\\n        if (!styleSheet.cssRules) {\\n          continue;\\n        }\\n        _ref1 = styleSheet.cssRules;\\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\\n          cssRule = _ref1[_j];\\n          if (!_elementMatchesSelector(node, cssRule.selectorText)) {\\n            continue;\\n          }\\n          object = {};\\n          object.ruleId = this._getStyleRuleId(cssRule);\\n          object.selectorText = cssRule.selectorText;\\n          object.style = this._buildMirrorForStyle(cssRule.style, true);\\n          result.push(object);\\n        }\\n      }\\n    } catch (_error) {\\n      err = _error;\\n      return result;\\n    }\\n    return result;\\n  };\\n\\n  CSSStore.prototype.getStyleAttributes = function(node) {\\n    var result;\\n    result = {};\\n    return result;\\n  };\\n\\n  CSSStore.prototype.getPseudoElements = function(node) {\\n    var result;\\n    result = [];\\n    return result;\\n  };\\n\\n  CSSStore.prototype.setPropertyText = function(styleId, propertyIndex, text, overwrite) {\\n    var compare, i, key, mirror, properties, propertyIndices, propertyMirror, styleDecl;\\n    styleDecl = Weinre.cssStore._getStyleDecl(styleId);\\n    if (!styleDecl) {\\n      Weinre.logWarning(\\\"requested style not available: \\\" + styleId);\\n      return null;\\n    }\\n    mirror = styleDecl.__weinre__mirror;\\n    if (!mirror) {\\n      Weinre.logWarning(\\\"requested mirror not available: \\\" + styleId);\\n      return null;\\n    }\\n    properties = mirror.cssProperties;\\n    propertyMirror = this._parseProperty(text);\\n    if (null === propertyMirror) {\\n      this._removePropertyFromMirror(mirror, propertyIndex);\\n      properties = mirror.cssProperties;\\n    } else {\\n      this._removePropertyFromMirror(mirror, propertyIndex);\\n      properties = mirror.cssProperties;\\n      propertyIndices = {};\\n      i = 0;\\n      while (i < properties.length) {\\n        propertyIndices[properties[i].name] = i;\\n        i++;\\n      }\\n      i = 0;\\n      while (i < propertyMirror.cssProperties.length) {\\n        if (propertyIndices[propertyMirror.cssProperties[i].name] != null) {\\n          properties[propertyIndices[propertyMirror.cssProperties[i].name]] = propertyMirror.cssProperties[i];\\n        } else {\\n          properties.push(propertyMirror.cssProperties[i]);\\n        }\\n        i++;\\n      }\\n      for (key in propertyMirror.shorthandValues) {\\n        mirror.shorthandValues[key] = propertyMirror.shorthandValues[key];\\n      }\\n    }\\n    properties.sort(compare = function(p1, p2) {\\n      if (p1.name < p2.name) {\\n        return -1;\\n      } else if (p1.name > p2.name) {\\n        return 1;\\n      } else {\\n        return 0;\\n      }\\n    });\\n    this._setStyleFromMirror(styleDecl);\\n    return mirror;\\n  };\\n\\n  CSSStore.prototype._removePropertyFromMirror = function(mirror, index) {\\n    var i, newProperties, properties, property;\\n    properties = mirror.cssProperties;\\n    if (index >= properties.length) {\\n      return;\\n    }\\n    property = properties[index];\\n    properties[index] = null;\\n    if (mirror.shorthandValues[property.name]) {\\n      delete mirror.shorthandValues[property.name];\\n      i = 0;\\n      while (i < properties.length) {\\n        if (properties[i]) {\\n          if (properties[i].shorthandName === property.name) {\\n            properties[i] = null;\\n          }\\n        }\\n        i++;\\n      }\\n    }\\n    newProperties = [];\\n    i = 0;\\n    while (i < properties.length) {\\n      if (properties[i]) {\\n        newProperties.push(properties[i]);\\n      }\\n      i++;\\n    }\\n    return mirror.cssProperties = newProperties;\\n  };\\n\\n  CSSStore.prototype.toggleProperty = function(styleId, propertyIndex, disable) {\\n    var cssProperty, mirror, styleDecl;\\n    styleDecl = Weinre.cssStore._getStyleDecl(styleId);\\n    if (!styleDecl) {\\n      Weinre.logWarning(\\\"requested style not available: \\\" + styleId);\\n      return null;\\n    }\\n    mirror = styleDecl.__weinre__mirror;\\n    if (!mirror) {\\n      Weinre.logWarning(\\\"requested mirror not available: \\\" + styleId);\\n      return null;\\n    }\\n    cssProperty = mirror.cssProperties[propertyIndex];\\n    if (!cssProperty) {\\n      Weinre.logWarning((\\\"requested property not available: \\\" + styleId + \\\": \\\") + propertyIndex);\\n      return null;\\n    }\\n    if (disable) {\\n      cssProperty.status = \\\"disabled\\\";\\n    } else {\\n      cssProperty.status = \\\"active\\\";\\n    }\\n    this._setStyleFromMirror(styleDecl);\\n    return mirror;\\n  };\\n\\n  CSSStore.prototype._setStyleFromMirror = function(styleDecl) {\\n    var cssProperties, cssText, property, _i, _len;\\n    cssText = [];\\n    cssProperties = styleDecl.__weinre__mirror.cssProperties;\\n    cssText = \\\"\\\";\\n    for (_i = 0, _len = cssProperties.length; _i < _len; _i++) {\\n      property = cssProperties[_i];\\n      if (!property.parsedOk) {\\n        continue;\\n      }\\n      if (property.status === \\\"disabled\\\") {\\n        continue;\\n      }\\n      if (property.shorthandName) {\\n        continue;\\n      }\\n      cssText += property.name + \\\": \\\" + property.value;\\n      if (property.priority === \\\"important\\\") {\\n        cssText += \\\" !important; \\\";\\n      } else {\\n        cssText += \\\"; \\\";\\n      }\\n    }\\n    return styleDecl.cssText = cssText;\\n  };\\n\\n  CSSStore.prototype._buildMirrorForStyle = function(styleDecl, bind) {\\n    var i, name, properties, property, result, shorthandName;\\n    result = {\\n      properties: {},\\n      cssProperties: []\\n    };\\n    if (!styleDecl) {\\n      return result;\\n    }\\n    if (bind) {\\n      result.styleId = this._getStyleDeclId(styleDecl);\\n      styleDecl.__weinre__mirror = result;\\n    }\\n    result.properties.width = styleDecl.getPropertyValue(\\\"width\\\") || \\\"\\\";\\n    result.properties.height = styleDecl.getPropertyValue(\\\"height\\\") || \\\"\\\";\\n    result.cssText = styleDecl.cssText;\\n    result.shorthandValues = {};\\n    properties = [];\\n    if (styleDecl) {\\n      i = 0;\\n      while (i < styleDecl.length) {\\n        property = {};\\n        name = styleDecl.item(i);\\n        property.name = name;\\n        property.priority = styleDecl.getPropertyPriority(name);\\n        property.implicit = typeof styleDecl.isPropertyImplicit !== \\\"undefined\\\" ? styleDecl.isPropertyImplicit(name) : true;\\n        property.shorthandName = typeof styleDecl.getPropertyShorthand !== \\\"undefined\\\" ? styleDecl.getPropertyShorthand(name) || \\\"\\\" : \\\"\\\";\\n        property.status = (property.shorthandName ? \\\"style\\\" : \\\"active\\\");\\n        property.parsedOk = true;\\n        property.value = styleDecl.getPropertyValue(name);\\n        properties.push(property);\\n        if (property.shorthandName) {\\n          shorthandName = property.shorthandName;\\n          if (!result.shorthandValues[shorthandName]) {\\n            result.shorthandValues[shorthandName] = styleDecl.getPropertyValue(shorthandName);\\n            property = {};\\n            property.name = shorthandName;\\n            property.priority = styleDecl.getPropertyPriority(shorthandName);\\n            property.implicit = styleDecl.isPropertyImplicit(shorthandName);\\n            property.shorthandName = \\\"\\\";\\n            property.status = \\\"active\\\";\\n            property.parsedOk = true;\\n            property.value = styleDecl.getPropertyValue(name);\\n            properties.push(property);\\n          }\\n        }\\n        i++;\\n      }\\n    }\\n    properties.sort(function(p1, p2) {\\n      if (p1.name < p2.name) {\\n        return -1;\\n      } else if (p1.name > p2.name) {\\n        return 1;\\n      } else {\\n        return 0;\\n      }\\n    });\\n    result.cssProperties = properties;\\n    return result;\\n  };\\n\\n  CSSStore.prototype._parseProperty = function(string) {\\n    var match, property, propertyPattern, result, testStyleDecl;\\n    testStyleDecl = this.testElement.style;\\n    try {\\n      testStyleDecl.cssText = string;\\n      if (testStyleDecl.cssText !== \\\"\\\") {\\n        return this._buildMirrorForStyle(testStyleDecl, false);\\n      }\\n    } catch (_error) {}\\n    propertyPattern = /\\\\s*(.+)\\\\s*:\\\\s*(.+)\\\\s*(!important)?\\\\s*;/;\\n    match = propertyPattern.exec(string);\\n    if (!match) {\\n      return null;\\n    }\\n    match[3] = (match[3] === \\\"!important\\\" ? \\\"important\\\" : \\\"\\\");\\n    property = {};\\n    property.name = match[1];\\n    property.priority = match[3];\\n    property.implicit = true;\\n    property.shorthandName = \\\"\\\";\\n    property.status = \\\"inactive\\\";\\n    property.parsedOk = false;\\n    property.value = match[2];\\n    result = {};\\n    result.width = 0;\\n    result.height = 0;\\n    result.shorthandValues = 0;\\n    result.cssProperties = [property];\\n    return result;\\n  };\\n\\n  CSSStore.prototype._getStyleSheet = function(id) {\\n    return _getMappableObject(id, this.styleSheetMap);\\n  };\\n\\n  CSSStore.prototype._getStyleSheetId = function(styleSheet) {\\n    return _getMappableId(styleSheet, this.styleSheetMap);\\n  };\\n\\n  CSSStore.prototype._getStyleRule = function(id) {\\n    return _getMappableObject(id, this.styleRuleMap);\\n  };\\n\\n  CSSStore.prototype._getStyleRuleId = function(styleRule) {\\n    return _getMappableId(styleRule, this.styleRuleMap);\\n  };\\n\\n  CSSStore.prototype._getStyleDecl = function(id) {\\n    return _getMappableObject(id, this.styleDeclMap);\\n  };\\n\\n  CSSStore.prototype._getStyleDeclId = function(styleDecl) {\\n    return _getMappableId(styleDecl, this.styleDeclMap);\\n  };\\n\\n  return CSSStore;\\n\\n})();\\n\\n_getMappableObject = function(id, map) {\\n  return map[id];\\n};\\n\\n_getMappableId = function(object, map) {\\n  return IDGenerator.getId(object, map);\\n};\\n\\n_mozMatchesSelector = function(element, selector) {\\n  if (!element.mozMatchesSelector) {\\n    return false;\\n  }\\n  return element.mozMatchesSelector(selector);\\n};\\n\\n_webkitMatchesSelector = function(element, selector) {\\n  if (!element.webkitMatchesSelector) {\\n    return false;\\n  }\\n  return element.webkitMatchesSelector(selector);\\n};\\n\\n_msMatchesSelector = function(element, selector) {\\n  if (!element.msMatchesSelector) {\\n    return false;\\n  }\\n  return element.msMatchesSelector(selector);\\n};\\n\\n_fallbackMatchesSelector = function(element, selector) {\\n  return false;\\n};\\n\\nif (Element.prototype.webkitMatchesSelector) {\\n  _elementMatchesSelector = _webkitMatchesSelector;\\n} else if (Element.prototype.mozMatchesSelector) {\\n  _elementMatchesSelector = _mozMatchesSelector;\\n} else if (Element.prototype.msMatchesSelector) {\\n  _elementMatchesSelector = _msMatchesSelector;\\n} else {\\n  _elementMatchesSelector = _fallbackMatchesSelector;\\n}\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/CSSStore.amd.js\")\n   39  ;eval(\";modjewel.define(\\\"weinre/target/ElementHighlighter\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar ElementHighlighter, canvasAvailable, currentHighlighterElement, fromPx, getMetricsForElement, highlighterClass, supportsCanvas;\\n\\ncanvasAvailable = null;\\n\\nhighlighterClass = null;\\n\\ncurrentHighlighterElement = null;\\n\\nmodule.exports = ElementHighlighter = (function() {\\n  ElementHighlighter.create = function() {\\n    if (highlighterClass == null) {\\n      highlighterClass = require('./ElementHighlighterDivs2');\\n    }\\n    return new highlighterClass();\\n  };\\n\\n  function ElementHighlighter() {\\n    this.hElement = this.createHighlighterElement();\\n    this.hElement.__weinreHighlighter = true;\\n    this.hElement.style.display = \\\"none\\\";\\n    this.hElement.style.zIndex = 10 * 1000 * 1000;\\n    if (currentHighlighterElement) {\\n      document.body.removeChild(currentHighlighterElement);\\n    }\\n    currentHighlighterElement = this.hElement;\\n    document.body.appendChild(this.hElement);\\n  }\\n\\n  ElementHighlighter.prototype.on = function(element) {\\n    if (null === element) {\\n      return;\\n    }\\n    if (element.nodeType !== Node.ELEMENT_NODE) {\\n      return;\\n    }\\n    this.redraw(getMetricsForElement(element));\\n    return this.hElement.style.display = \\\"block\\\";\\n  };\\n\\n  ElementHighlighter.prototype.off = function() {\\n    return this.hElement.style.display = \\\"none\\\";\\n  };\\n\\n  return ElementHighlighter;\\n\\n})();\\n\\ngetMetricsForElement = function(element) {\\n  var cStyle, el, left, metrics, top;\\n  metrics = {};\\n  left = 0;\\n  top = 0;\\n  el = element;\\n  while (true) {\\n    left += el.offsetLeft;\\n    top += el.offsetTop;\\n    if (!(el = el.offsetParent)) {\\n      break;\\n    }\\n  }\\n  metrics.x = left;\\n  metrics.y = top;\\n  cStyle = document.defaultView.getComputedStyle(element);\\n  metrics.width = element.offsetWidth;\\n  metrics.height = element.offsetHeight;\\n  metrics.marginLeft = fromPx(cStyle[\\\"margin-left\\\"] || cStyle[\\\"marginLeft\\\"]);\\n  metrics.marginRight = fromPx(cStyle[\\\"margin-right\\\"] || cStyle[\\\"marginRight\\\"]);\\n  metrics.marginTop = fromPx(cStyle[\\\"margin-top\\\"] || cStyle[\\\"marginTop\\\"]);\\n  metrics.marginBottom = fromPx(cStyle[\\\"margin-bottom\\\"] || cStyle[\\\"marginBottom\\\"]);\\n  metrics.borderLeft = fromPx(cStyle[\\\"border-left-width\\\"] || cStyle[\\\"borderLeftWidth\\\"]);\\n  metrics.borderRight = fromPx(cStyle[\\\"border-right-width\\\"] || cStyle[\\\"borderRightWidth\\\"]);\\n  metrics.borderTop = fromPx(cStyle[\\\"border-top-width\\\"] || cStyle[\\\"borderTopWidth\\\"]);\\n  metrics.borderBottom = fromPx(cStyle[\\\"border-bottom-width\\\"] || cStyle[\\\"borderBottomWidth\\\"]);\\n  metrics.paddingLeft = fromPx(cStyle[\\\"padding-left\\\"] || cStyle[\\\"paddingLeft\\\"]);\\n  metrics.paddingRight = fromPx(cStyle[\\\"padding-right\\\"] || cStyle[\\\"paddingRight\\\"]);\\n  metrics.paddingTop = fromPx(cStyle[\\\"padding-top\\\"] || cStyle[\\\"paddingTop\\\"]);\\n  metrics.paddingBottom = fromPx(cStyle[\\\"padding-bottom\\\"] || cStyle[\\\"paddingBottom\\\"]);\\n  metrics.x -= metrics.marginLeft;\\n  metrics.y -= metrics.marginTop;\\n  return metrics;\\n};\\n\\nfromPx = function(string) {\\n  return parseInt(string.replace(/px$/, \\\"\\\"));\\n};\\n\\nsupportsCanvas = function() {\\n  var element;\\n  element = document.createElement('canvas');\\n  if (!element.getContext) {\\n    return false;\\n  }\\n  if (element.getContext('2d')) {\\n    return true;\\n  }\\n  return false;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/ElementHighlighter.amd.js\")\n   40  ;eval(\";modjewel.define(\\\"weinre/target/ElementHighlighterDivs2\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar ColorBorder, ColorContent, ColorMargin, ColorPadding, ElementHighlighter, ElementHighlighterDivs2, px,\\n  __hasProp = {}.hasOwnProperty,\\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\\n\\nElementHighlighter = require('./ElementHighlighter');\\n\\nColorMargin = 'rgba(246, 178, 107, 0.66)';\\n\\nColorBorder = 'rgba(255, 229, 153, 0.66)';\\n\\nColorPadding = 'rgba(147, 196, 125, 0.55)';\\n\\nColorContent = 'rgba(111, 168, 220, 0.66)';\\n\\nColorBorder = 'rgba(255, 255, 153, 0.40)';\\n\\nColorPadding = 'rgba(  0, 255,   0, 0.20)';\\n\\nColorContent = 'rgba(  0,   0, 255, 0.30)';\\n\\nmodule.exports = ElementHighlighterDivs2 = (function(_super) {\\n  __extends(ElementHighlighterDivs2, _super);\\n\\n  function ElementHighlighterDivs2() {\\n    return ElementHighlighterDivs2.__super__.constructor.apply(this, arguments);\\n  }\\n\\n  ElementHighlighterDivs2.prototype.createHighlighterElement = function() {\\n    this.hElement1 = document.createElement(\\\"weinreHighlighter\\\");\\n    this.hElement1.style.position = 'absolute';\\n    this.hElement1.style.overflow = 'hidden';\\n    this.hElement2 = document.createElement(\\\"weinreHighlighter\\\");\\n    this.hElement2.style.position = 'absolute';\\n    this.hElement2.style.display = 'block';\\n    this.hElement2.style.overflow = 'hidden';\\n    this.hElement1.appendChild(this.hElement2);\\n    this.hElement1.style.borderTopStyle = 'solid';\\n    this.hElement1.style.borderLeftStyle = 'solid';\\n    this.hElement1.style.borderBottomStyle = 'solid';\\n    this.hElement1.style.borderRightStyle = 'solid';\\n    this.hElement1.style.borderTopColor = ColorMargin;\\n    this.hElement1.style.borderLeftColor = ColorMargin;\\n    this.hElement1.style.borderBottomColor = ColorMargin;\\n    this.hElement1.style.borderRightColor = ColorMargin;\\n    this.hElement1.style.backgroundColor = ColorBorder;\\n    this.hElement2.style.borderTopStyle = 'solid';\\n    this.hElement2.style.borderLeftStyle = 'solid';\\n    this.hElement2.style.borderBottomStyle = 'solid';\\n    this.hElement2.style.borderRightStyle = 'solid';\\n    this.hElement2.style.borderTopColor = ColorPadding;\\n    this.hElement2.style.borderLeftColor = ColorPadding;\\n    this.hElement2.style.borderBottomColor = ColorPadding;\\n    this.hElement2.style.borderRightColor = ColorPadding;\\n    this.hElement2.style.backgroundColor = ColorContent;\\n    this.hElement1.style.outline = 'black solid thin';\\n    return this.hElement1;\\n  };\\n\\n  ElementHighlighterDivs2.prototype.redraw = function(metrics) {\\n    this.hElement1.style.top = px(metrics.y);\\n    this.hElement1.style.left = px(metrics.x);\\n    this.hElement1.style.height = px(metrics.height);\\n    this.hElement1.style.width = px(metrics.width);\\n    this.hElement1.style.borderTopWidth = px(metrics.marginTop);\\n    this.hElement1.style.borderLeftWidth = px(metrics.marginLeft);\\n    this.hElement1.style.borderBottomWidth = px(metrics.marginBottom);\\n    this.hElement1.style.borderRightWidth = px(metrics.marginRight);\\n    this.hElement2.style.top = px(metrics.borderTop);\\n    this.hElement2.style.left = px(metrics.borderLeft);\\n    this.hElement2.style.bottom = px(metrics.borderBottom);\\n    this.hElement2.style.right = px(metrics.borderRight);\\n    this.hElement2.style.borderTopWidth = px(metrics.paddingTop);\\n    this.hElement2.style.borderLeftWidth = px(metrics.paddingLeft);\\n    this.hElement2.style.borderBottomWidth = px(metrics.paddingBottom);\\n    return this.hElement2.style.borderRightWidth = px(metrics.paddingRight);\\n  };\\n\\n  return ElementHighlighterDivs2;\\n\\n})(ElementHighlighter);\\n\\npx = function(value) {\\n  return \\\"\\\" + value + \\\"px\\\";\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/ElementHighlighterDivs2.amd.js\")\n   41  ;eval(\";modjewel.define(\\\"weinre/target/HookSites\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar HookLib, HookSites;\\n\\nHookLib = require('../common/HookLib');\\n\\nmodule.exports = HookSites = (function() {\\n  function HookSites() {}\\n\\n  return HookSites;\\n\\n})();\\n\\nHookSites.window_clearInterval = HookLib.addHookSite(window, \\\"clearInterval\\\");\\n\\nHookSites.window_clearTimeout = HookLib.addHookSite(window, \\\"clearTimeout\\\");\\n\\nHookSites.window_setInterval = HookLib.addHookSite(window, \\\"setInterval\\\");\\n\\nHookSites.window_setTimeout = HookLib.addHookSite(window, \\\"setTimeout\\\");\\n\\nHookSites.window_addEventListener = HookLib.addHookSite(window, \\\"addEventListener\\\");\\n\\nHookSites.Node_addEventListener = HookLib.addHookSite(Node.prototype, \\\"addEventListener\\\");\\n\\nHookSites.XMLHttpRequest_open = HookLib.addHookSite(XMLHttpRequest.prototype, \\\"open\\\");\\n\\nHookSites.XMLHttpRequest_send = HookLib.addHookSite(XMLHttpRequest.prototype, \\\"send\\\");\\n\\nHookSites.XMLHttpRequest_addEventListener = HookLib.addHookSite(XMLHttpRequest.prototype, \\\"addEventListener\\\");\\n\\nif (window.openDatabase) {\\n  HookSites.window_openDatabase = HookLib.addHookSite(window, \\\"openDatabase\\\");\\n}\\n\\nif (window.localStorage) {\\n  HookSites.LocalStorage_setItem = HookLib.addHookSite(window.localStorage, \\\"setItem\\\");\\n  HookSites.LocalStorage_removeItem = HookLib.addHookSite(window.localStorage, \\\"removeItem\\\");\\n  HookSites.LocalStorage_clear = HookLib.addHookSite(window.localStorage, \\\"clear\\\");\\n}\\n\\nif (window.sessionStorage) {\\n  HookSites.SessionStorage_setItem = HookLib.addHookSite(window.sessionStorage, \\\"setItem\\\");\\n  HookSites.SessionStorage_removeItem = HookLib.addHookSite(window.sessionStorage, \\\"removeItem\\\");\\n  HookSites.SessionStorage_clear = HookLib.addHookSite(window.sessionStorage, \\\"clear\\\");\\n}\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/HookSites.amd.js\")\n   42: ;eval(\"var injectedScriptConstructor = \\n/*\\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions\\n * are met:\\n *\\n * 1.  Redistributions of source code must retain the above copyright\\n *     notice, this list of conditions and the following disclaimer.\\n * 2.  Redistributions in binary form must reproduce the above copyright\\n *     notice, this list of conditions and the following disclaimer in the\\n *     documentation and/or other materials provided with the distribution.\\n * 3.  Neither the name of Apple Computer, Inc. (\\\"Apple\\\") nor the names of\\n *     its contributors may be used to endorse or promote products derived\\n *     from this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \\\"AS IS\\\" AND ANY\\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n(function (InjectedScriptHost, inspectedWindow, injectedScriptId) {\\n\\nfunction bind(thisObject, memberFunction)\\n{\\n    var func = memberFunction;\\n    var args = Array.prototype.slice.call(arguments, 2);\\n    function bound()\\n    {\\n        return func.apply(thisObject, args.concat(Array.prototype.slice.call(arguments, 0)));\\n    }\\n    bound.toString = function() {\\n        return \\\"bound: \\\" + func;\\n    };\\n    return bound;\\n}\\n\\nvar InjectedScript = function()\\n{\\n    this._lastBoundObjectId = 1;\\n    this._idToWrappedObject = {};\\n    this._objectGroups = {};\\n}\\n\\nInjectedScript.prototype = {\\n    wrapObjectForConsole: function(object, canAccessInspectedWindow)\\n    {\\n        if (canAccessInspectedWindow)\\n            return this._wrapObject(object, \\\"console\\\");\\n        var result = {};\\n        result.type = typeof object;\\n        result.description = this._toString(object);\\n        return result;\\n    },\\n\\n    _wrapObject: function(object, objectGroupName, abbreviate)\\n    {\\n        try {\\n            var objectId;\\n            if (typeof object === \\\"object\\\" || typeof object === \\\"function\\\" || this._isHTMLAllCollection(object)) {\\n                var id = this._lastBoundObjectId++;\\n                this._idToWrappedObject[id] = object;\\n    \\n                var group = this._objectGroups[objectGroupName];\\n                if (!group) {\\n                    group = [];\\n                    this._objectGroups[objectGroupName] = group;\\n                }\\n                group.push(id);\\n                objectId = { injectedScriptId: injectedScriptId,\\n                             id: id,\\n                             groupName: objectGroupName };\\n            }\\n            return InjectedScript.RemoteObject.fromObject(object, objectId, abbreviate);\\n        } catch (e) {\\n            return InjectedScript.RemoteObject.fromObject(\\\"[ Exception: \\\" + e.toString() + \\\" ]\\\");\\n        }\\n    },\\n\\n    _parseObjectId: function(objectId)\\n    {\\n        return eval(\\\"(\\\" + objectId + \\\")\\\");\\n    },\\n\\n    releaseWrapperObjectGroup: function(objectGroupName)\\n    {\\n        var group = this._objectGroups[objectGroupName];\\n        if (!group)\\n            return;\\n        for (var i = 0; i < group.length; i++)\\n            delete this._idToWrappedObject[group[i]];\\n        delete this._objectGroups[objectGroupName];\\n    },\\n\\n    dispatch: function(methodName, args)\\n    {\\n        var argsArray = eval(\\\"(\\\" + args + \\\")\\\");\\n        var result = this[methodName].apply(this, argsArray);\\n        if (typeof result === \\\"undefined\\\") {\\n            inspectedWindow.console.error(\\\"Web Inspector error: InjectedScript.%s returns undefined\\\", methodName);\\n            result = null;\\n        }\\n        return result;\\n    },\\n\\n    getProperties: function(objectId, ignoreHasOwnProperty, abbreviate)\\n    {\\n        var parsedObjectId = this._parseObjectId(objectId);\\n        var object = this._objectForId(parsedObjectId);\\n\\n        if (!this._isDefined(object))\\n            return false;\\n        var properties = [];\\n        var propertyNames;\\n\\n        // IE returns 'Invalid calling object' for some of the prototypes, so return the object itself\\n        if (window.navigator.userAgent.indexOf(\\\"MSIE\\\") != -1 ) {\\n            propertyNames = this._getPropertyNames(object);\\n        } else\\n            propertyNames = ignoreHasOwnProperty ? this._getPropertyNames(object) : Object.getOwnPropertyNames(object);\\n\\n\\n        if (!ignoreHasOwnProperty && object.__proto__)\\n            propertyNames.push(\\\"__proto__\\\");\\n    \\n        // Go over properties, prepare results.\\n        for (var i = 0; i < propertyNames.length; ++i) {\\n            var propertyName = propertyNames[i];\\n    \\n            var property = {};\\n            property.name = propertyName + \\\"\\\";\\n            var isGetter = object[\\\"__lookupGetter__\\\"] && object.__lookupGetter__(propertyName);\\n            if (!isGetter) {\\n                try {\\n                    property.value = this._wrapObject(object[propertyName], parsedObjectId.groupName, abbreviate);\\n                } catch(e) {\\n                    property.value = new InjectedScript.RemoteObject.fromException(e);\\n                }\\n            } else {\\n                // FIXME: this should show something like \\\"getter\\\" (bug 16734).\\n                property.value = new InjectedScript.RemoteObject.fromObject(\\\"\\\\u2014\\\"); // em dash\\n                property.isGetter = true;\\n            }\\n            properties.push(property);\\n        }\\n        return properties;\\n    },\\n\\n    setPropertyValue: function(objectId, propertyName, expression)\\n    {\\n        var parsedObjectId = this._parseObjectId(objectId);\\n        var object = this._objectForId(parsedObjectId);\\n        if (!this._isDefined(object))\\n            return false;\\n    \\n        var expressionLength = expression.length;\\n        if (!expressionLength) {\\n            delete object[propertyName];\\n            return !(propertyName in object);\\n        }\\n    \\n        try {\\n            // Surround the expression in parenthesis so the result of the eval is the result\\n            // of the whole expression not the last potential sub-expression.\\n    \\n            // There is a regression introduced here: eval is now happening against global object,\\n            // not call frame while on a breakpoint.\\n            // TODO: bring evaluation against call frame back.\\n            var result = inspectedWindow.eval(\\\"(\\\" + expression + \\\")\\\");\\n            // Store the result in the property.\\n            object[propertyName] = result;\\n            return true;\\n        } catch(e) {\\n            try {\\n                var result = inspectedWindow.eval(\\\"\\\\\\\"\\\" + expression.replace(/\\\"/g, \\\"\\\\\\\\\\\\\\\"\\\") + \\\"\\\\\\\"\\\");\\n                object[propertyName] = result;\\n                return true;\\n            } catch(e) {\\n                return false;\\n            }\\n        }\\n    },\\n\\n    _populatePropertyNames: function(object, resultSet)\\n    {\\n        for (var o = object; o; o = Object.getPrototypeOf(o)) {\\n            try {\\n                var names = Object.getOwnPropertyNames(o);\\n                for (var i = 0; i < names.length; ++i)\\n                    resultSet[names[i]] = true;\\n            } catch (e) {\\n            }\\n        }\\n    },\\n\\n    _getPropertyNames: function(object, resultSet)\\n    {\\n        var propertyNameSet = {};\\n        this._populatePropertyNames(object, propertyNameSet);\\n        return Object.keys(propertyNameSet);\\n    },\\n\\n    getCompletions: function(expression, includeCommandLineAPI)\\n    {\\n        var props = {};\\n        try {\\n            if (!expression)\\n                expression = \\\"this\\\";\\n            var expressionResult = this._evaluateOn(inspectedWindow.eval, inspectedWindow, expression, false, false);\\n\\n            if (typeof expressionResult === \\\"object\\\")\\n                this._populatePropertyNames(expressionResult, props);\\n\\n            if (includeCommandLineAPI) {\\n                for (var prop in CommandLineAPI.members_)\\n                    props[CommandLineAPI.members_[prop]] = true;\\n            }\\n        } catch(e) {\\n        }\\n        return props;\\n    },\\n\\n    getCompletionsOnCallFrame: function(callFrameId, expression, includeCommandLineAPI)\\n    {\\n        var props = {};\\n        try {\\n            var callFrame = this._callFrameForId(callFrameId);\\n            if (!callFrame)\\n                return props;\\n\\n            if (expression) {\\n                var expressionResult = this._evaluateOn(callFrame.evaluate, callFrame, expression, true, false);\\n                if (typeof expressionResult === \\\"object\\\")\\n                    this._populatePropertyNames(expressionResult, props);\\n            } else {\\n                // Evaluate into properties in scope of the selected call frame.\\n                var scopeChain = callFrame.scopeChain;\\n                for (var i = 0; i < scopeChain.length; ++i)\\n                    this._populatePropertyNames(scopeChain[i], props);\\n            }\\n    \\n            if (includeCommandLineAPI) {\\n                for (var prop in CommandLineAPI.members_)\\n                    props[CommandLineAPI.members_[prop]] = true;\\n            }\\n        } catch(e) {\\n        }\\n        return props;\\n    },\\n\\n    evaluate: function(expression, objectGroup, injectCommandLineAPI)\\n    {\\n        return this._evaluateAndWrap(inspectedWindow.eval, inspectedWindow, expression, objectGroup, false, injectCommandLineAPI);\\n    },\\n\\n    _evaluateAndWrap: function(evalFunction, object, expression, objectGroup, isEvalOnCallFrame, injectCommandLineAPI)\\n    {\\n        try {\\n            return this._wrapObject(this._evaluateOn(evalFunction, object, expression, isEvalOnCallFrame, injectCommandLineAPI), objectGroup);\\n        } catch (e) {\\n            return InjectedScript.RemoteObject.fromException(e);\\n        }\\n    },\\n\\n    _evaluateOn: function(evalFunction, object, expression, isEvalOnCallFrame, injectCommandLineAPI)\\n    {\\n        // Only install command line api object for the time of evaluation.\\n        // Surround the expression in with statements to inject our command line API so that\\n        // the window object properties still take more precedent than our API functions.\\n\\n        try {\\n            if (injectCommandLineAPI && inspectedWindow.console) {\\n                inspectedWindow.console._commandLineAPI = new CommandLineAPI(this._commandLineAPIImpl, isEvalOnCallFrame ? object : null);\\n                expression = \\\"with ((window && window.console && window.console._commandLineAPI) || {}) {\\\\n\\\" + expression + \\\"\\\\n}\\\";\\n            }\\n\\n            var value = evalFunction.call(object, expression);\\n\\n            // When evaluating on call frame error is not thrown, but returned as a value.\\n            if (this._type(value) === \\\"error\\\")\\n                throw value.toString();\\n\\n            return value;\\n        } finally {\\n            if (injectCommandLineAPI && inspectedWindow.console)\\n                delete inspectedWindow.console._commandLineAPI;\\n        }\\n    },\\n\\n    getNodeId: function(node)\\n    {\\n        return InjectedScriptHost.pushNodePathToFrontend(node, false, false);\\n    },\\n\\n    callFrames: function()\\n    {\\n        var callFrame = InjectedScriptHost.currentCallFrame();\\n        if (!callFrame)\\n            return false;\\n    \\n        injectedScript.releaseWrapperObjectGroup(\\\"backtrace\\\");\\n        var result = [];\\n        var depth = 0;\\n        do {\\n            result.push(new InjectedScript.CallFrameProxy(depth++, callFrame));\\n            callFrame = callFrame.caller;\\n        } while (callFrame);\\n        return result;\\n    },\\n\\n    evaluateOnCallFrame: function(callFrameId, expression, objectGroup, injectCommandLineAPI)\\n    {\\n        var callFrame = this._callFrameForId(callFrameId);\\n        if (!callFrame)\\n            return false;\\n        return this._evaluateAndWrap(callFrame.evaluate, callFrame, expression, objectGroup, true, injectCommandLineAPI);\\n    },\\n\\n    _callFrameForId: function(callFrameId)\\n    {\\n        var parsedCallFrameId = eval(\\\"(\\\" + callFrameId + \\\")\\\");\\n        var ordinal = parsedCallFrameId.ordinal;\\n        var callFrame = InjectedScriptHost.currentCallFrame();\\n        while (--ordinal >= 0 && callFrame)\\n            callFrame = callFrame.caller;\\n        return callFrame;\\n    },\\n\\n    _nodeForId: function(nodeId)\\n    {\\n        if (!nodeId)\\n            return null;\\n        return InjectedScriptHost.nodeForId(nodeId);\\n    },\\n\\n    _objectForId: function(objectId)\\n    {\\n        return this._idToWrappedObject[objectId.id];\\n    },\\n\\n    resolveNode: function(nodeId)\\n    {\\n        var node = this._nodeForId(nodeId);\\n        if (!node)\\n            return false;\\n        // FIXME: receive the object group from client.\\n        return this._wrapObject(node, \\\"prototype\\\");\\n    },\\n\\n    getNodeProperties: function(nodeId, properties)\\n    {\\n        var node = this._nodeForId(nodeId);\\n        if (!node)\\n            return false;\\n        properties = eval(\\\"(\\\" + properties + \\\")\\\");\\n        var result = {};\\n        for (var i = 0; i < properties.length; ++i)\\n            result[properties[i]] = node[properties[i]];\\n        return result;\\n    },\\n\\n    getNodePrototypes: function(nodeId)\\n    {\\n        this.releaseWrapperObjectGroup(\\\"prototypes\\\");\\n        var node = this._nodeForId(nodeId);\\n        if (!node)\\n            return false;\\n\\n        var result = [];\\n        var prototype = node;\\n\\n//        if (window.navigator.userAgent.indexOf(\\\"MSIE\\\") != -1 )\\n//        {\\n//            result.push(this._wrapObject(prototype, \\\"prototypes\\\"));\\n//            return result;\\n//        }\\n\\n        do {\\n            result.push(this._wrapObject(prototype, \\\"prototypes\\\"));\\n            prototype = Object.getPrototypeOf(prototype);\\n        } while (prototype)\\n        return result;\\n    },\\n\\n    pushNodeToFrontend: function(objectId)\\n    {\\n        var parsedObjectId = this._parseObjectId(objectId);\\n        var object = this._objectForId(parsedObjectId);\\n        if (!object || this._type(object) !== \\\"node\\\")\\n            return false;\\n        return InjectedScriptHost.pushNodePathToFrontend(object, false, false);\\n    },\\n\\n    evaluateOnSelf: function(funcBody, args)\\n    {\\n        var func = eval(\\\"(\\\" + funcBody + \\\")\\\");\\n        return func.apply(this, eval(\\\"(\\\" + args + \\\")\\\") || []);\\n    },\\n\\n    _isDefined: function(object)\\n    {\\n        return object || this._isHTMLAllCollection(object);\\n    },\\n\\n    _isHTMLAllCollection: function(object)\\n    {\\n        // document.all is reported as undefined, but we still want to process it.\\n        return (typeof object === \\\"undefined\\\") && inspectedWindow.HTMLAllCollection && object instanceof inspectedWindow.HTMLAllCollection;\\n    },\\n\\n    _type: function(obj)\\n    {\\n        if (obj === null)\\n            return \\\"null\\\";\\n\\n        var type = typeof obj;\\n        if (type !== \\\"object\\\" && type !== \\\"function\\\") {\\n            // FIXME(33716): typeof document.all is always 'undefined'.\\n            if (this._isHTMLAllCollection(obj))\\n                return \\\"array\\\";\\n            return type;\\n        }\\n\\n        // If owning frame has navigated to somewhere else window properties will be undefined.\\n        // In this case just return result of the typeof.\\n        if (!inspectedWindow.document)\\n            return type;\\n\\n        if (obj instanceof inspectedWindow.Node) {\\n\\n            try {\\n                return (obj.nodeType === undefined ? type : \\\"node\\\");\\n            } catch (ex) {} // for IE there could be 'Invalid calling object' exception\\n\\n            return obj.toString();\\n        }\\n\\n        if (obj instanceof inspectedWindow.String)\\n            return \\\"string\\\";\\n        if (obj instanceof inspectedWindow.Array)\\n            return \\\"array\\\";\\n        if (obj instanceof inspectedWindow.Boolean)\\n            return \\\"boolean\\\";\\n        if (obj instanceof inspectedWindow.Number)\\n            return \\\"number\\\";\\n        if (obj instanceof inspectedWindow.Date)\\n            return \\\"date\\\";\\n        if (obj instanceof inspectedWindow.RegExp)\\n            return \\\"regexp\\\";\\n        // FireBug's array detection.\\n        if (isFinite(obj.length) && typeof obj.splice === \\\"function\\\")\\n            return \\\"array\\\";\\n        if (isFinite(obj.length) && typeof obj.callee === \\\"function\\\") // arguments.\\n            return \\\"array\\\";\\n        if (obj instanceof inspectedWindow.NodeList)\\n            return \\\"array\\\";\\n        if (obj instanceof inspectedWindow.HTMLCollection)\\n            return \\\"array\\\";\\n        if (obj instanceof inspectedWindow.Error)\\n            return \\\"error\\\";\\n        return type;\\n    },\\n\\n    _describe: function(obj, abbreviated)\\n    {\\n        var type = this._type(obj);\\n\\n        switch (type) {\\n        case \\\"object\\\":\\n        case \\\"node\\\":\\n            var result = InjectedScriptHost.internalConstructorName(obj);\\n            if (result === \\\"Object\\\") {\\n                // In Chromium DOM wrapper prototypes will have Object as their constructor name,\\n                // get the real DOM wrapper name from the constructor property.\\n                var constructorName = obj.constructor && obj.constructor.name;\\n                if (constructorName)\\n                    return constructorName;\\n            }\\n            return result;\\n        case \\\"array\\\":\\n            var className = InjectedScriptHost.internalConstructorName(obj);\\n            if (typeof obj.length === \\\"number\\\")\\n                className += \\\"[\\\" + obj.length + \\\"]\\\";\\n            return className;\\n        case \\\"string\\\":\\n            if (!abbreviated)\\n                return obj;\\n            if (obj.length > 100)\\n                return \\\"\\\\\\\"\\\" + obj.substring(0, 100) + \\\"\\\\u2026\\\\\\\"\\\";\\n            return \\\"\\\\\\\"\\\" + obj + \\\"\\\\\\\"\\\";\\n        case \\\"function\\\":\\n            var objectText = this._toString(obj);\\n            if (abbreviated)\\n                objectText = /.*/.exec(objectText)[0].replace(/ +$/g, \\\"\\\");\\n            return objectText;\\n        default:\\n            return this._toString(obj);\\n        }\\n    },\\n\\n    _toString: function(obj)\\n    {\\n        // We don't use String(obj) because inspectedWindow.String is undefined if owning frame navigated to another page.\\n        return \\\"\\\" + obj;\\n    }\\n}\\n\\nvar injectedScript = new InjectedScript();\\n\\nInjectedScript.RemoteObject = function(objectId, type, description, hasChildren)\\n{\\n    this.objectId = objectId;\\n    this.type = type;\\n    this.description = description;\\n    this.hasChildren = hasChildren;\\n}\\n\\nInjectedScript.RemoteObject.fromException = function(e)\\n{\\n    return new InjectedScript.RemoteObject(null, \\\"error\\\", e.toString());\\n}\\n\\nInjectedScript.RemoteObject.fromObject = function(object, objectId, abbreviate)\\n{\\n    var type = injectedScript._type(object);\\n    var rawType = typeof object;\\n    var hasChildren = (rawType === \\\"object\\\" && object !== null && (Object.getOwnPropertyNames(object).length || !!Object.getPrototypeOf(object))) || rawType === \\\"function\\\";\\n    var description = \\\"\\\";\\n    try {\\n        var description = injectedScript._describe(object, abbreviate);\\n        return new InjectedScript.RemoteObject(objectId, type, description, hasChildren);\\n    } catch (e) {\\n        return InjectedScript.RemoteObject.fromException(e);\\n    }\\n}\\n\\nInjectedScript.CallFrameProxy = function(ordinal, callFrame)\\n{\\n    this.id = { ordinal: ordinal, injectedScriptId: injectedScriptId };\\n    this.type = callFrame.type;\\n    this.functionName = (this.type === \\\"function\\\" ? callFrame.functionName : \\\"\\\");\\n    this.sourceID = callFrame.sourceID;\\n    this.line = callFrame.line;\\n    this.column = callFrame.column;\\n    this.scopeChain = this._wrapScopeChain(callFrame);\\n}\\n\\nInjectedScript.CallFrameProxy.prototype = {\\n    _wrapScopeChain: function(callFrame)\\n    {\\n        var GLOBAL_SCOPE = 0;\\n        var LOCAL_SCOPE = 1;\\n        var WITH_SCOPE = 2;\\n        var CLOSURE_SCOPE = 3;\\n        var CATCH_SCOPE = 4;\\n    \\n        var scopeChain = callFrame.scopeChain;\\n        var scopeChainProxy = [];\\n        var foundLocalScope = false;\\n        for (var i = 0; i < scopeChain.length; i++) {\\n            var scopeType = callFrame.scopeType(i);\\n            var scopeObject = scopeChain[i];\\n            var scopeObjectProxy = injectedScript._wrapObject(scopeObject, \\\"backtrace\\\", true);\\n\\n            switch(scopeType) {\\n                case LOCAL_SCOPE: {\\n                    foundLocalScope = true;\\n                    scopeObjectProxy.isLocal = true;\\n                    scopeObjectProxy.thisObject = injectedScript._wrapObject(callFrame.thisObject, \\\"backtrace\\\", true);\\n                    break;\\n                }\\n                case CLOSURE_SCOPE: {\\n                    scopeObjectProxy.isClosure = true;\\n                    break;\\n                }\\n                case WITH_SCOPE:\\n                case CATCH_SCOPE: {\\n                    if (foundLocalScope && scopeObject instanceof inspectedWindow.Element)\\n                        scopeObjectProxy.isElement = true;\\n                    else if (foundLocalScope && scopeObject instanceof inspectedWindow.Document)\\n                        scopeObjectProxy.isDocument = true;\\n                    else\\n                        scopeObjectProxy.isWithBlock = true;\\n                    break;\\n                }\\n            }\\n            scopeChainProxy.push(scopeObjectProxy);\\n        }\\n        return scopeChainProxy;\\n    }\\n}\\n\\nfunction CommandLineAPI(commandLineAPIImpl, callFrame)\\n{\\n    function inScopeVariables(member)\\n    {\\n        if (!callFrame)\\n            return false;\\n\\n        var scopeChain = callFrame.scopeChain;\\n        for (var i = 0; i < scopeChain.length; ++i) {\\n            if (member in scopeChain[i])\\n                return true;\\n        }\\n        return false;\\n    }\\n\\n    for (var i = 0; i < CommandLineAPI.members_.length; ++i) {\\n        var member = CommandLineAPI.members_[i];\\n        if (member in inspectedWindow || inScopeVariables(member))\\n            continue;\\n\\n        this[member] = bind(commandLineAPIImpl, commandLineAPIImpl[member]);\\n    }\\n\\n    for (var i = 0; i < 5; ++i) {\\n        var member = \\\"$\\\" + i;\\n        if (member in inspectedWindow || inScopeVariables(member))\\n            continue;\\n\\n        // fix for non-webkit browsers\\n        //this.__defineGetter__(\\\"$\\\" + i, bind(commandLineAPIImpl, commandLineAPIImpl._inspectedNode, i));\\n        Object.defineProperty(this, \\\"$\\\" + i, {\\n            get: bind(commandLineAPIImpl, commandLineAPIImpl._inspectedNode, i)\\n        });\\n    }\\n}\\n\\nCommandLineAPI.members_ = [\\n    \\\"$\\\", \\\"$$\\\", \\\"$x\\\", \\\"dir\\\", \\\"dirxml\\\", \\\"keys\\\", \\\"values\\\", \\\"profile\\\", \\\"profileEnd\\\",\\n    \\\"monitorEvents\\\", \\\"unmonitorEvents\\\", \\\"inspect\\\", \\\"copy\\\", \\\"clear\\\"\\n];\\n\\nfunction CommandLineAPIImpl()\\n{\\n}\\n\\nCommandLineAPIImpl.prototype = {\\n    $: function()\\n    {\\n        return document.getElementById.apply(document, arguments)\\n    },\\n\\n    $$: function()\\n    {\\n        return document.querySelectorAll.apply(document, arguments)\\n    },\\n\\n    $x: function(xpath, context)\\n    {\\n        var nodes = [];\\n        try {\\n            var doc = (context && context.ownerDocument) || inspectedWindow.document;\\n            var results = doc.evaluate(xpath, context || doc, null, XPathResult.ANY_TYPE, null);\\n            var node;\\n            while (node = results.iterateNext())\\n                nodes.push(node);\\n        } catch (e) {\\n        }\\n        return nodes;\\n    },\\n\\n    dir: function()\\n    {\\n        return console.dir.apply(console, arguments)\\n    },\\n\\n    dirxml: function()\\n    {\\n        return console.dirxml.apply(console, arguments)\\n    },\\n\\n    keys: function(object)\\n    {\\n        return Object.keys(object);\\n    },\\n\\n    values: function(object)\\n    {\\n        var result = [];\\n        for (var key in object)\\n            result.push(object[key]);\\n        return result;\\n    },\\n\\n    profile: function()\\n    {\\n        return console.profile.apply(console, arguments)\\n    },\\n\\n    profileEnd: function()\\n    {\\n        return console.profileEnd.apply(console, arguments)\\n    },\\n\\n    monitorEvents: function(object, types)\\n    {\\n        if (!object || !object.addEventListener || !object.removeEventListener)\\n            return;\\n        types = this._normalizeEventTypes(types);\\n        for (var i = 0; i < types.length; ++i) {\\n            object.removeEventListener(types[i], this._logEvent, false);\\n            object.addEventListener(types[i], this._logEvent, false);\\n        }\\n    },\\n\\n    unmonitorEvents: function(object, types)\\n    {\\n        if (!object || !object.addEventListener || !object.removeEventListener)\\n            return;\\n        types = this._normalizeEventTypes(types);\\n        for (var i = 0; i < types.length; ++i)\\n            object.removeEventListener(types[i], this._logEvent, false);\\n    },\\n\\n    inspect: function(object)\\n    {\\n        if (arguments.length === 0)\\n            return;\\n\\n        inspectedWindow.console.log(object);\\n        if (injectedScript._type(object) === \\\"node\\\")\\n            InjectedScriptHost.pushNodePathToFrontend(object, false, true);\\n        else {\\n            switch (injectedScript._describe(object)) {\\n                case \\\"Database\\\":\\n                    InjectedScriptHost.selectDatabase(object);\\n                    break;\\n                case \\\"Storage\\\":\\n                    InjectedScriptHost.selectDOMStorage(object);\\n                    break;\\n            }\\n        }\\n    },\\n\\n    copy: function(object)\\n    {\\n        if (injectedScript._type(object) === \\\"node\\\")\\n            object = object.outerHTML;\\n        InjectedScriptHost.copyText(object);\\n    },\\n\\n    clear: function()\\n    {\\n        InjectedScriptHost.clearConsoleMessages();\\n    },\\n\\n    _inspectedNode: function(num)\\n    {\\n        var nodeId = InjectedScriptHost.inspectedNode(num);\\n        return injectedScript._nodeForId(nodeId);\\n    },\\n\\n    _normalizeEventTypes: function(types)\\n    {\\n        if (typeof types === \\\"undefined\\\")\\n            types = [ \\\"mouse\\\", \\\"key\\\", \\\"load\\\", \\\"unload\\\", \\\"abort\\\", \\\"error\\\", \\\"select\\\", \\\"change\\\", \\\"submit\\\", \\\"reset\\\", \\\"focus\\\", \\\"blur\\\", \\\"resize\\\", \\\"scroll\\\" ];\\n        else if (typeof types === \\\"string\\\")\\n            types = [ types ];\\n\\n        var result = [];\\n        for (var i = 0; i < types.length; i++) {\\n            if (types[i] === \\\"mouse\\\")\\n                result.splice(0, 0, \\\"mousedown\\\", \\\"mouseup\\\", \\\"click\\\", \\\"dblclick\\\", \\\"mousemove\\\", \\\"mouseover\\\", \\\"mouseout\\\");\\n            else if (types[i] === \\\"key\\\")\\n                result.splice(0, 0, \\\"keydown\\\", \\\"keyup\\\", \\\"keypress\\\");\\n            else\\n                result.push(types[i]);\\n        }\\n        return result;\\n    },\\n\\n    _logEvent: function(event)\\n    {\\n        console.log(event.type, event);\\n    }\\n}\\n\\ninjectedScript._commandLineAPIImpl = new CommandLineAPIImpl();\\nreturn injectedScript;\\n})\\n//@ sourceURL=weinre/target/InjectedScript.js\")\n   43  ;eval(\";modjewel.define(\\\"weinre/target/InjectedScriptHostImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar InjectedScriptHostImpl, Weinre;\\n\\nWeinre = require('../common/Weinre');\\n\\nmodule.exports = InjectedScriptHostImpl = (function() {\\n  function InjectedScriptHostImpl() {}\\n\\n  InjectedScriptHostImpl.prototype.clearConsoleMessages = function(callback) {\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  InjectedScriptHostImpl.prototype.nodeForId = function(nodeId, callback) {\\n    return Weinre.nodeStore.getNode(nodeId);\\n  };\\n\\n  InjectedScriptHostImpl.prototype.pushNodePathToFrontend = function(node, withChildren, selectInUI, callback) {\\n    var children, nodeId;\\n    nodeId = Weinre.nodeStore.getNodeId(node);\\n    children = Weinre.nodeStore.serializeNode(node, 1);\\n    Weinre.wi.DOMNotify.setChildNodes(nodeId, children);\\n    if (callback) {\\n      Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n    if (selectInUI) {\\n      return Weinre.wi.InspectorNotify.updateFocusedNode(nodeId);\\n    }\\n  };\\n\\n  InjectedScriptHostImpl.prototype.inspectedNode = function(num, callback) {\\n    var nodeId;\\n    nodeId = Weinre.nodeStore.getInspectedNode(num);\\n    return nodeId;\\n  };\\n\\n  InjectedScriptHostImpl.prototype.internalConstructorName = function(object) {\\n    var ctor, ctorName, match, pattern;\\n    ctor = object.constructor;\\n    ctorName = ctor.fullClassName || ctor.displayName || ctor.name;\\n    if (ctorName && (ctorName !== \\\"Object\\\")) {\\n      return ctorName;\\n    }\\n    pattern = /\\\\[object (.*)\\\\]/;\\n    match = pattern.exec(object.toString());\\n    if (match) {\\n      return match[1];\\n    }\\n    return \\\"Object\\\";\\n  };\\n\\n  return InjectedScriptHostImpl;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/InjectedScriptHostImpl.amd.js\")\n   44: ;eval(\";modjewel.define(\\\"weinre/target/NetworkRequest\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Ex, HookLib, HookSites, IDGenerator, Loader, NetworkRequest, StackTrace, Weinre, getFormData, getHeaders, getRequest, getResponse, getXhrEventHandler, splitContentType, trim;\\n\\nStackTrace = require('../common/StackTrace');\\n\\nIDGenerator = require('../common/IDGenerator');\\n\\nHookLib = require('../common/HookLib');\\n\\nWeinre = require('../common/Weinre');\\n\\nEx = require('../common/Ex');\\n\\nHookSites = require('./HookSites');\\n\\nLoader = {\\n  url: window.location.href,\\n  frameId: 0,\\n  loaderId: 0\\n};\\n\\nmodule.exports = NetworkRequest = (function() {\\n  function NetworkRequest(xhr, id, method, url, stackTrace) {\\n    this.xhr = xhr;\\n    this.id = id;\\n    this.method = method;\\n    this.url = url;\\n    this.stackTrace = stackTrace;\\n  }\\n\\n  NetworkRequest.prototype.handleSend = function(data) {\\n    var redirectResponse, request, time;\\n    Weinre.wi.NetworkNotify.identifierForInitialRequest(this.id, this.url, Loader, this.stackTrace);\\n    time = Date.now() / 1000.0;\\n    request = getRequest(this.url, this.method, this.xhr, data);\\n    redirectResponse = {\\n      isNull: true\\n    };\\n    return Weinre.wi.NetworkNotify.willSendRequest(this.id, time, request, redirectResponse);\\n  };\\n\\n  NetworkRequest.prototype.handleHeadersReceived = function() {\\n    var response, time;\\n    time = Date.now() / 1000.0;\\n    response = getResponse(this.xhr);\\n    return Weinre.wi.NetworkNotify.didReceiveResponse(this.id, time, \\\"XHR\\\", response);\\n  };\\n\\n  NetworkRequest.prototype.handleLoading = function() {};\\n\\n  NetworkRequest.prototype.handleDone = function() {\\n    var description, e, sourceString, status, statusText, success, time;\\n    sourceString = \\\"\\\";\\n    try {\\n      sourceString = this.xhr.responseText;\\n    } catch (_error) {\\n      e = _error;\\n    }\\n    Weinre.wi.NetworkNotify.setInitialContent(this.id, sourceString, \\\"XHR\\\");\\n    time = Date.now() / 1000.0;\\n    status = this.xhr.status;\\n    if (status === 0) {\\n      status = 200;\\n    }\\n    statusText = this.xhr.statusText;\\n    success = status >= 200 && status < 300;\\n    if (success) {\\n      return Weinre.wi.NetworkNotify.didFinishLoading(this.id, time);\\n    } else {\\n      description = \\\"\\\" + status + \\\" - \\\" + statusText;\\n      return Weinre.wi.NetworkNotify.didFailLoading(this.id, time, description);\\n    }\\n  };\\n\\n  NetworkRequest.installNativeHooks = function() {\\n    HookSites.XMLHttpRequest_open.addHooks({\\n      before: function(receiver, args) {\\n        var frame, id, method, rawStackTrace, stackTrace, url, xhr, _i, _len;\\n        xhr = receiver;\\n        method = args[0];\\n        url = args[1];\\n        id = IDGenerator.next();\\n        rawStackTrace = new StackTrace(args).trace.slice(1);\\n        stackTrace = [];\\n        for (_i = 0, _len = rawStackTrace.length; _i < _len; _i++) {\\n          frame = rawStackTrace[_i];\\n          stackTrace.push({\\n            functionName: frame\\n          });\\n        }\\n        xhr.__weinreNetworkRequest__ = new NetworkRequest(xhr, id, method, url, stackTrace);\\n        return HookLib.ignoreHooks(function() {\\n          return xhr.addEventListener(\\\"readystatechange\\\", getXhrEventHandler(xhr), false);\\n        });\\n      }\\n    });\\n    return HookSites.XMLHttpRequest_send.addHooks({\\n      before: function(receiver, args) {\\n        var data, nr, xhr;\\n        xhr = receiver;\\n        data = args[0];\\n        nr = xhr.__weinreNetworkRequest__;\\n        if (!nr) {\\n          return;\\n        }\\n        return nr.handleSend(data);\\n      }\\n    });\\n  };\\n\\n  return NetworkRequest;\\n\\n})();\\n\\ngetRequest = function(url, method, xhr, data) {\\n  return {\\n    url: url,\\n    httpMethod: method,\\n    httpHeaderFields: {},\\n    requestFormData: getFormData(url, data)\\n  };\\n};\\n\\ngetResponse = function(xhr) {\\n  var contentLength, contentType, encoding, headers, result, _ref;\\n  contentType = xhr.getResponseHeader(\\\"Content-Type\\\");\\n  contentType || (contentType = 'application/octet-stream');\\n  _ref = splitContentType(contentType), contentType = _ref[0], encoding = _ref[1];\\n  headers = getHeaders(xhr);\\n  result = {\\n    mimeType: contentType,\\n    textEncodingName: encoding,\\n    httpStatusCode: xhr.status,\\n    httpStatusText: xhr.statusText,\\n    httpHeaderFields: headers,\\n    connectionReused: false,\\n    connectionID: 0,\\n    wasCached: false\\n  };\\n  contentLength = xhr.getResponseHeader(\\\"Content-Length\\\");\\n  contentLength = parseInt(contentLength);\\n  if (!isNaN(contentLength)) {\\n    result.expectedContentLength = contentLength;\\n  }\\n  return result;\\n};\\n\\ngetHeaders = function(xhr) {\\n  var key, line, lines, result, string, val, _i, _len, _ref;\\n  string = xhr.getAllResponseHeaders();\\n  lines = string.split('\\\\r\\\\n');\\n  result = {};\\n  for (_i = 0, _len = lines.length; _i < _len; _i++) {\\n    line = lines[_i];\\n    line = trim(line);\\n    if (line === \\\"\\\") {\\n      break;\\n    }\\n    _ref = line.split(':', 2), key = _ref[0], val = _ref[1];\\n    result[trim(key)] = trim(val);\\n  }\\n  return result;\\n};\\n\\ntrim = function(string) {\\n  return string.replace(/^\\\\s+|\\\\s+$/g, '');\\n};\\n\\ngetFormData = function(url, data) {\\n  var match, pattern;\\n  if (data) {\\n    return data;\\n  }\\n  pattern = /.*?\\\\?(.*?)(#.*)?$/;\\n  match = url.match(pattern);\\n  if (match) {\\n    return match[1];\\n  }\\n  return \\\"\\\";\\n};\\n\\nsplitContentType = function(contentType) {\\n  var match, pattern;\\n  pattern = /\\\\s*(.*?)\\\\s*(;\\\\s*(.*))?\\\\s*$/;\\n  match = contentType.match(pattern);\\n  if (!match) {\\n    return [contentType, \\\"\\\"];\\n  }\\n  return [match[1], match[3]];\\n};\\n\\ngetXhrEventHandler = function(xhr) {\\n  return function() {\\n    var e, nr;\\n    nr = xhr.__weinreNetworkRequest__;\\n    if (!nr) {\\n      return;\\n    }\\n    try {\\n      switch (xhr.readyState) {\\n        case 2:\\n          return nr.handleHeadersReceived();\\n        case 3:\\n          return nr.handleLoading();\\n        case 4:\\n          return nr.handleDone();\\n      }\\n    } catch (_error) {\\n      e = _error;\\n    }\\n  };\\n};\\n\\n});\\n\\n//@ sourceURL=weinre/target/NetworkRequest.amd.js\")\n   45  ;eval(\";modjewel.define(\\\"weinre/target/NodeStore\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Debug, IDGenerator, NodeStore, Weinre, handleDOMAttrModified, handleDOMCharacterDataModified, handleDOMNodeInserted, handleDOMNodeRemoved, handleDOMSubtreeModified;\\n\\nWeinre = require('../common/Weinre');\\n\\nIDGenerator = require('../common/IDGenerator');\\n\\nDebug = require('../common/Debug');\\n\\nmodule.exports = NodeStore = (function() {\\n  function NodeStore() {\\n    this._nodeMap = {};\\n    this._childrenSent = {};\\n    this._inspectedNodes = [];\\n    document.addEventListener(\\\"DOMSubtreeModified\\\", handleDOMSubtreeModified, false);\\n    document.addEventListener(\\\"DOMNodeInserted\\\", handleDOMNodeInserted, false);\\n    document.addEventListener(\\\"DOMNodeRemoved\\\", handleDOMNodeRemoved, false);\\n    document.addEventListener(\\\"DOMAttrModified\\\", handleDOMAttrModified, false);\\n    document.addEventListener(\\\"DOMCharacterDataModified\\\", handleDOMCharacterDataModified, false);\\n  }\\n\\n  NodeStore.prototype.addInspectedNode = function(nodeId) {\\n    this._inspectedNodes.unshift(nodeId);\\n    if (this._inspectedNodes.length > 5) {\\n      return this._inspectedNodes = this._inspectedNodes.slice(0, 5);\\n    }\\n  };\\n\\n  NodeStore.prototype.getInspectedNode = function(index) {\\n    return this._inspectedNodes[index];\\n  };\\n\\n  NodeStore.prototype.getNode = function(nodeId) {\\n    return this._nodeMap[nodeId];\\n  };\\n\\n  NodeStore.prototype.checkNodeId = function(node) {\\n    return IDGenerator.checkId(node);\\n  };\\n\\n  NodeStore.prototype.getNodeId = function(node) {\\n    var id;\\n    id = this.checkNodeId(node);\\n    if (id) {\\n      return id;\\n    }\\n    return IDGenerator.getId(node, this._nodeMap);\\n  };\\n\\n  NodeStore.prototype.getNodeData = function(nodeId, depth) {\\n    return this.serializeNode(this.getNode(nodeId), depth);\\n  };\\n\\n  NodeStore.prototype.getPreviousSiblingId = function(node) {\\n    var id, sib;\\n    while (true) {\\n      sib = node.previousSibling;\\n      if (!sib) {\\n        return 0;\\n      }\\n      id = this.checkNodeId(sib);\\n      if (id) {\\n        return id;\\n      }\\n      node = sib;\\n    }\\n  };\\n\\n  NodeStore.prototype.nextNodeId = function() {\\n    return \\\"\\\" + IDGenerator.next();\\n  };\\n\\n  NodeStore.prototype.serializeNode = function(node, depth) {\\n    var children, i, id, localName, nodeData, nodeName, nodeValue;\\n    nodeName = \\\"\\\";\\n    nodeValue = null;\\n    localName = null;\\n    id = this.getNodeId(node);\\n    switch (node.nodeType) {\\n      case Node.TEXT_NODE:\\n      case Node.COMMENT_NODE:\\n      case Node.CDATA_SECTION_NODE:\\n        nodeValue = node.nodeValue;\\n        break;\\n      case Node.ATTRIBUTE_NODE:\\n        localName = node.localName;\\n        break;\\n      case Node.DOCUMENT_FRAGMENT_NODE:\\n        break;\\n      default:\\n        nodeName = node.nodeName;\\n        localName = node.localName;\\n    }\\n    nodeData = {\\n      id: id,\\n      nodeType: node.nodeType,\\n      nodeName: nodeName,\\n      localName: localName,\\n      nodeValue: nodeValue\\n    };\\n    if (node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\\n      nodeData.childNodeCount = this.childNodeCount(node);\\n      children = this.serializeNodeChildren(node, depth);\\n      if (children.length) {\\n        nodeData.children = children;\\n      }\\n      if (node.nodeType === Node.ELEMENT_NODE) {\\n        nodeData.attributes = [];\\n        i = 0;\\n        while (i < node.attributes.length) {\\n          nodeData.attributes.push(node.attributes[i].nodeName);\\n          nodeData.attributes.push(node.attributes[i].nodeValue);\\n          i++;\\n        }\\n      } else {\\n        if (node.nodeType === Node.DOCUMENT_NODE) {\\n          nodeData.documentURL = window.location.href;\\n        }\\n      }\\n    } else if (node.nodeType === Node.DOCUMENT_TYPE_NODE) {\\n      nodeData.publicId = node.publicId;\\n      nodeData.systemId = node.systemId;\\n      nodeData.internalSubset = node.internalSubset;\\n    } else if (node.nodeType === Node.ATTRIBUTE_NODE) {\\n      nodeData.name = node.nodeName;\\n      nodeData.value = node.nodeValue;\\n    }\\n    return nodeData;\\n  };\\n\\n  NodeStore.prototype.serializeNodeChildren = function(node, depth) {\\n    var childIds, childNode, i, result;\\n    result = [];\\n    childIds = this.childNodeIds(node);\\n    if (depth === 0) {\\n      if (childIds.length === 1) {\\n        childNode = this.getNode(childIds[0]);\\n        if (childNode.nodeType === Node.TEXT_NODE) {\\n          result.push(this.serializeNode(childNode));\\n        }\\n      }\\n      return result;\\n    }\\n    depth--;\\n    i = 0;\\n    while (i < childIds.length) {\\n      result.push(this.serializeNode(this.getNode(childIds[i]), depth));\\n      i++;\\n    }\\n    return result;\\n  };\\n\\n  NodeStore.prototype.childNodeCount = function(node) {\\n    return this.childNodeIds(node).length;\\n  };\\n\\n  NodeStore.prototype.childNodeIds = function(node) {\\n    var childNode, i, ids, _i, _len, _ref;\\n    ids = [];\\n    i = 0;\\n    _ref = node.childNodes;\\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n      childNode = _ref[_i];\\n      if (this.isToBeSkipped(childNode)) {\\n        continue;\\n      }\\n      ids.push(this.getNodeId(childNode));\\n    }\\n    return ids;\\n  };\\n\\n  NodeStore.prototype.isToBeSkipped = function(node) {\\n    if (!node) {\\n      return true;\\n    }\\n    if (node.__weinreHighlighter) {\\n      return true;\\n    }\\n    if (node.nodeType !== Node.TEXT_NODE) {\\n      return false;\\n    }\\n    return !!node.nodeValue.match(/^\\\\s*$/);\\n  };\\n\\n  return NodeStore;\\n\\n})();\\n\\nhandleDOMSubtreeModified = function(event) {\\n  if (!event.attrChange) {\\n    return;\\n  }\\n  return NodeStore.handleDOMAttrModified(event);\\n};\\n\\nhandleDOMNodeInserted = function(event) {\\n  var child, parentId, previous, targetId;\\n  targetId = Weinre.nodeStore.checkNodeId(event.target);\\n  parentId = Weinre.nodeStore.checkNodeId(event.relatedNode);\\n  if (!parentId) {\\n    return;\\n  }\\n  child = Weinre.nodeStore.serializeNode(event.target, 0);\\n  previous = Weinre.nodeStore.getPreviousSiblingId(event.target);\\n  return Weinre.wi.DOMNotify.childNodeInserted(parentId, previous, child);\\n};\\n\\nhandleDOMNodeRemoved = function(event) {\\n  var childCount, parentId, targetId;\\n  targetId = Weinre.nodeStore.checkNodeId(event.target);\\n  parentId = Weinre.nodeStore.checkNodeId(event.relatedNode);\\n  if (!parentId) {\\n    return;\\n  }\\n  if (targetId) {\\n    if (parentId) {\\n      return Weinre.wi.DOMNotify.childNodeRemoved(parentId, targetId);\\n    }\\n  } else {\\n    childCount = Weinre.nodeStore.childNodeCount(event.relatedNode);\\n    return Weinre.wi.DOMNotify.childNodeCountUpdated(parentId, childCount);\\n  }\\n};\\n\\nhandleDOMAttrModified = function(event) {\\n  var attrs, i, targetId;\\n  targetId = Weinre.nodeStore.checkNodeId(event.target);\\n  if (!targetId) {\\n    return;\\n  }\\n  attrs = [];\\n  i = 0;\\n  while (i < event.target.attributes.length) {\\n    attrs.push(event.target.attributes[i].name);\\n    attrs.push(event.target.attributes[i].value);\\n    i++;\\n  }\\n  return Weinre.wi.DOMNotify.attributesUpdated(targetId, attrs);\\n};\\n\\nhandleDOMCharacterDataModified = function(event) {\\n  var targetId;\\n  targetId = Weinre.nodeStore.checkNodeId(event.target);\\n  if (!targetId) {\\n    return;\\n  }\\n  return Weinre.wi.DOMNotify.characterDataModified(targetId, event.newValue);\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/NodeStore.amd.js\")\n   46  ;eval(\";modjewel.define(\\\"weinre/target/SqlStepper\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Binding, SqlStepper, executeSql, ourErrorCallback, runStep;\\n\\nBinding = require('../common/Binding');\\n\\nmodule.exports = SqlStepper = (function() {\\n  function SqlStepper(steps) {\\n    var context;\\n    if (!(this instanceof SqlStepper)) {\\n      return new SqlStepper(steps);\\n    }\\n    this.__context = {};\\n    context = this.__context;\\n    context.steps = steps;\\n  }\\n\\n  SqlStepper.prototype.run = function(db, errorCallback) {\\n    var context;\\n    context = this.__context;\\n    if (context.hasBeenRun) {\\n      throw new Ex(arguments, \\\"stepper has already been run\\\");\\n    }\\n    context.hasBeenRun = true;\\n    context.db = db;\\n    context.errorCallback = errorCallback;\\n    context.nextStep = 0;\\n    context.ourErrorCallback = new Binding(this, ourErrorCallback);\\n    context.runStep = new Binding(this, runStep);\\n    this.executeSql = new Binding(this, executeSql);\\n    return db.transaction(context.runStep);\\n  };\\n\\n  SqlStepper.example = function(db, id) {\\n    var errorCb, step1, step2, stepper;\\n    step1 = function() {\\n      return this.executeSql(\\\"SELECT name FROM sqlite_master WHERE type='table'\\\");\\n    };\\n    step2 = function(resultSet) {\\n      var i, name, result, rows;\\n      rows = resultSet.rows;\\n      result = [];\\n      i = 0;\\n      while (i < rows.length) {\\n        name = rows.item(i).name;\\n        if (name === \\\"__WebKitDatabaseInfoTable__\\\") {\\n          i++;\\n          continue;\\n        }\\n        result.push(name);\\n        i++;\\n      }\\n      return console.log((\\\"[\\\" + this.id + \\\"] table names: \\\") + result.join(\\\", \\\"));\\n    };\\n    errorCb = function(sqlError) {\\n      return console.log((\\\"[\\\" + this.id + \\\"] sql error:\\\" + sqlError.code + \\\": \\\") + sqlError.message);\\n    };\\n    stepper = new SqlStepper([step1, step2]);\\n    stepper.id = id;\\n    return stepper.run(db, errorCb);\\n  };\\n\\n  return SqlStepper;\\n\\n})();\\n\\nexecuteSql = function(statement, data) {\\n  var context;\\n  context = this.__context;\\n  return context.tx.executeSql(statement, data, context.runStep, context.ourErrorCallback);\\n};\\n\\nourErrorCallback = function(tx, sqlError) {\\n  var context;\\n  context = this.__context;\\n  return context.errorCallback.call(this, sqlError);\\n};\\n\\nrunStep = function(tx, resultSet) {\\n  var context, step;\\n  context = this.__context;\\n  if (context.nextStep >= context.steps.length) {\\n    return;\\n  }\\n  context.tx = tx;\\n  context.currentStep = context.nextStep;\\n  context.nextStep++;\\n  step = context.steps[context.currentStep];\\n  return step.call(this, resultSet);\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/SqlStepper.amd.js\")\n   47  ;eval(\";modjewel.define(\\\"weinre/target/Target\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Binding, CSSStore, Callback, CheckForProblems, ElementHighlighter, Ex, HookLib, InjectedScriptHostImpl, MessageDispatcher, NetworkRequest, NodeStore, Target, Weinre, WeinreExtraClientCommandsImpl, WeinreTargetEventsImpl, WiCSSImpl, WiConsoleImpl, WiDOMImpl, WiDOMStorageImpl, WiDatabaseImpl, WiInspectorImpl, WiRuntimeImpl, currentTime;\\n\\nrequire('./BrowserHacks');\\n\\nEx = require('../common/Ex');\\n\\nBinding = require('../common/Binding');\\n\\nCallback = require('../common/Callback');\\n\\nMessageDispatcher = require('../common/MessageDispatcher');\\n\\nWeinre = require('../common/Weinre');\\n\\nHookLib = require('../common/HookLib');\\n\\nCheckForProblems = require('./CheckForProblems');\\n\\nNodeStore = require('./NodeStore');\\n\\nCSSStore = require('./CSSStore');\\n\\nElementHighlighter = require('./ElementHighlighter');\\n\\nInjectedScriptHostImpl = require('./InjectedScriptHostImpl');\\n\\nNetworkRequest = require('./NetworkRequest');\\n\\nWeinreTargetEventsImpl = require('./WeinreTargetEventsImpl');\\n\\nWeinreExtraClientCommandsImpl = require('./WeinreExtraClientCommandsImpl');\\n\\nWiConsoleImpl = require('./WiConsoleImpl');\\n\\nWiCSSImpl = require('./WiCSSImpl');\\n\\nWiDatabaseImpl = require('./WiDatabaseImpl');\\n\\nWiDOMImpl = require('./WiDOMImpl');\\n\\nWiDOMStorageImpl = require('./WiDOMStorageImpl');\\n\\nWiInspectorImpl = require('./WiInspectorImpl');\\n\\nWiRuntimeImpl = require('./WiRuntimeImpl');\\n\\nmodule.exports = Target = (function() {\\n  function Target() {}\\n\\n  Target.main = function() {\\n    CheckForProblems.check();\\n    Weinre.target = new Target();\\n    return Weinre.target.initialize();\\n  };\\n\\n  Target.prototype.setWeinreServerURLFromScriptSrc = function(element) {\\n    var match, message, pattern;\\n    if (window.WeinreServerURL) {\\n      return;\\n    }\\n    if (element) {\\n      pattern = /((https?:)?\\\\/\\\\/(.*?)\\\\/)/;\\n      match = pattern.exec(element.src);\\n      if (match) {\\n        window.WeinreServerURL = match[1];\\n        return;\\n      }\\n    }\\n    message = \\\"unable to calculate the weinre server url; explicity set the variable window.WeinreServerURL instead\\\";\\n    alert(message);\\n    throw new Ex(arguments, message);\\n  };\\n\\n  Target.prototype.setWeinreServerIdFromScriptSrc = function(element) {\\n    var attempt, hash;\\n    if (window.WeinreServerId) {\\n      return;\\n    }\\n    element = this.getTargetScriptElement();\\n    hash = \\\"anonymous\\\";\\n    if (element) {\\n      attempt = element.src.split(\\\"#\\\")[1];\\n      if (attempt) {\\n        hash = attempt;\\n      } else {\\n        attempt = location.hash.split(\\\"#\\\")[1];\\n        if (attempt) {\\n          hash = attempt;\\n        }\\n      }\\n    }\\n    return window.WeinreServerId = hash;\\n  };\\n\\n  Target.prototype.getTargetScriptElement = function() {\\n    var element, elements, i, j, scripts;\\n    elements = document.getElementsByTagName(\\\"script\\\");\\n    scripts = [\\\"target-script.js\\\", \\\"target-script-min.js\\\"];\\n    i = 0;\\n    while (i < elements.length) {\\n      element = elements[i];\\n      j = 0;\\n      while (j < scripts.length) {\\n        if (-1 !== element.src.indexOf(\\\"/\\\" + scripts[j])) {\\n          return element;\\n        }\\n        j++;\\n      }\\n      i++;\\n    }\\n  };\\n\\n  Target.prototype.initialize = function() {\\n    var element, injectedScriptHost, messageDispatcher;\\n    element = this.getTargetScriptElement();\\n    this.setWeinreServerURLFromScriptSrc(element);\\n    this.setWeinreServerIdFromScriptSrc(element);\\n    if (window.WeinreServerURL[window.WeinreServerURL.length - 1] !== \\\"/\\\") {\\n      window.WeinreServerURL += \\\"/\\\";\\n    }\\n    injectedScriptHost = new InjectedScriptHostImpl();\\n    Weinre.injectedScript = injectedScriptConstructor(injectedScriptHost, window, 0, \\\"?\\\");\\n    window.addEventListener(\\\"load\\\", Binding(this, \\\"onLoaded\\\"), false);\\n    document.addEventListener(\\\"DOMContentLoaded\\\", Binding(this, \\\"onDOMContent\\\"), false);\\n    this._startTime = currentTime();\\n    if (document.readyState === \\\"loaded\\\") {\\n      HookLib.ignoreHooks((function(_this) {\\n        return function() {\\n          return setTimeout((function() {\\n            return _this.onDOMContent();\\n          }), 10);\\n        };\\n      })(this));\\n    }\\n    if (document.readyState === \\\"complete\\\") {\\n      HookLib.ignoreHooks((function(_this) {\\n        return function() {\\n          setTimeout((function() {\\n            return _this.onDOMContent();\\n          }), 10);\\n          return setTimeout((function() {\\n            return _this.onLoaded();\\n          }), 20);\\n        };\\n      })(this));\\n    }\\n    messageDispatcher = new MessageDispatcher(window.WeinreServerURL + \\\"ws/target\\\", window.WeinreServerId);\\n    Weinre.messageDispatcher = messageDispatcher;\\n    Weinre.wi = {};\\n    Weinre.wi.Console = new WiConsoleImpl();\\n    Weinre.wi.CSS = new WiCSSImpl();\\n    Weinre.wi.Database = new WiDatabaseImpl();\\n    Weinre.wi.DOM = new WiDOMImpl();\\n    Weinre.wi.DOMStorage = new WiDOMStorageImpl();\\n    Weinre.wi.Inspector = new WiInspectorImpl();\\n    Weinre.wi.Runtime = new WiRuntimeImpl();\\n    messageDispatcher.registerInterface(\\\"Console\\\", Weinre.wi.Console, false);\\n    messageDispatcher.registerInterface(\\\"CSS\\\", Weinre.wi.CSS, false);\\n    messageDispatcher.registerInterface(\\\"Database\\\", Weinre.wi.Database, false);\\n    messageDispatcher.registerInterface(\\\"DOM\\\", Weinre.wi.DOM, false);\\n    messageDispatcher.registerInterface(\\\"DOMStorage\\\", Weinre.wi.DOMStorage, false);\\n    messageDispatcher.registerInterface(\\\"Inspector\\\", Weinre.wi.Inspector, false);\\n    messageDispatcher.registerInterface(\\\"Runtime\\\", Weinre.wi.Runtime, false);\\n    messageDispatcher.registerInterface(\\\"WeinreExtraClientCommands\\\", new WeinreExtraClientCommandsImpl(), true);\\n    messageDispatcher.registerInterface(\\\"WeinreTargetEvents\\\", new WeinreTargetEventsImpl(), true);\\n    Weinre.wi.ApplicationCacheNotify = messageDispatcher.createProxy(\\\"ApplicationCacheNotify\\\");\\n    Weinre.wi.ConsoleNotify = messageDispatcher.createProxy(\\\"ConsoleNotify\\\");\\n    Weinre.wi.DOMNotify = messageDispatcher.createProxy(\\\"DOMNotify\\\");\\n    Weinre.wi.DOMStorageNotify = messageDispatcher.createProxy(\\\"DOMStorageNotify\\\");\\n    Weinre.wi.DatabaseNotify = messageDispatcher.createProxy(\\\"DatabaseNotify\\\");\\n    Weinre.wi.InspectorNotify = messageDispatcher.createProxy(\\\"InspectorNotify\\\");\\n    Weinre.wi.TimelineNotify = messageDispatcher.createProxy(\\\"TimelineNotify\\\");\\n    Weinre.wi.NetworkNotify = messageDispatcher.createProxy(\\\"NetworkNotify\\\");\\n    Weinre.WeinreTargetCommands = messageDispatcher.createProxy(\\\"WeinreTargetCommands\\\");\\n    Weinre.WeinreExtraTargetEvents = messageDispatcher.createProxy(\\\"WeinreExtraTargetEvents\\\");\\n    messageDispatcher.getWebSocket().addEventListener(\\\"open\\\", Binding(this, this.cb_webSocketOpened));\\n    Weinre.nodeStore = new NodeStore();\\n    Weinre.cssStore = new CSSStore();\\n    return NetworkRequest.installNativeHooks();\\n  };\\n\\n  Target.prototype.cb_webSocketOpened = function() {\\n    return Weinre.WeinreTargetCommands.registerTarget(window.location.href, Binding(this, this.cb_registerTarget));\\n  };\\n\\n  Target.prototype.cb_registerTarget = function(targetDescription) {\\n    return Weinre.targetDescription = targetDescription;\\n  };\\n\\n  Target.prototype.onLoaded = function() {\\n    if (!Weinre.wi.InspectorNotify) {\\n      HookLib.ignoreHooks((function(_this) {\\n        return function() {\\n          return setTimeout((function() {\\n            return _this.onLoaded();\\n          }), 10);\\n        };\\n      })(this));\\n      return;\\n    }\\n    return Weinre.wi.InspectorNotify.loadEventFired(currentTime() - this._startTime);\\n  };\\n\\n  Target.prototype.onDOMContent = function() {\\n    if (!Weinre.wi.InspectorNotify) {\\n      HookLib.ignoreHooks((function(_this) {\\n        return function() {\\n          return setTimeout((function() {\\n            return _this.onDOMContent();\\n          }), 10);\\n        };\\n      })(this));\\n      return;\\n    }\\n    return Weinre.wi.InspectorNotify.domContentEventFired(currentTime() - this._startTime);\\n  };\\n\\n  Target.prototype.setDocument = function() {\\n    var nodeData, nodeId;\\n    if (!Weinre.elementHighlighter) {\\n      Weinre.elementHighlighter = ElementHighlighter.create();\\n    }\\n    nodeId = Weinre.nodeStore.getNodeId(document);\\n    nodeData = Weinre.nodeStore.getNodeData(nodeId, 2);\\n    return Weinre.wi.DOMNotify.setDocument(nodeData);\\n  };\\n\\n  Target.prototype.whenBodyReady = function(receiver, args, func) {\\n    if (document.body) {\\n      func.apply(receiver, args);\\n      return;\\n    }\\n    return document.addEventListener(\\\"DOMContentLoaded\\\", function() {\\n      return func.apply(receiver, args);\\n    }, false);\\n  };\\n\\n  return Target;\\n\\n})();\\n\\ncurrentTime = function() {\\n  return (new Date().getMilliseconds()) / 1000.0;\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/Target.amd.js\")\n   48: ;eval(\";modjewel.define(\\\"weinre/target/Timeline\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Ex, HookLib, HookSites, IDGenerator, Running, StackTrace, Timeline, TimelineRecordType, TimerIntervals, TimerTimeouts, Weinre, addStackTrace, addTimer, getXhrEventHandler, instrumentedTimerCode, removeTimer;\\n\\nEx = require('../common/Ex');\\n\\nWeinre = require('../common/Weinre');\\n\\nIDGenerator = require('../common/IDGenerator');\\n\\nStackTrace = require('../common/StackTrace');\\n\\nHookLib = require('../common/HookLib');\\n\\nHookSites = require('./HookSites');\\n\\nRunning = false;\\n\\nTimerTimeouts = {};\\n\\nTimerIntervals = {};\\n\\nTimelineRecordType = {\\n  EventDispatch: 0,\\n  Layout: 1,\\n  RecalculateStyles: 2,\\n  Paint: 3,\\n  ParseHTML: 4,\\n  TimerInstall: 5,\\n  TimerRemove: 6,\\n  TimerFire: 7,\\n  XHRReadyStateChange: 8,\\n  XHRLoad: 9,\\n  EvaluateScript: 10,\\n  Mark: 11,\\n  ResourceSendRequest: 12,\\n  ResourceReceiveResponse: 13,\\n  ResourceFinish: 14,\\n  FunctionCall: 15,\\n  ReceiveResourceData: 16,\\n  GCEvent: 17,\\n  MarkDOMContent: 18,\\n  MarkLoad: 19,\\n  ScheduleResourceRequest: 20\\n};\\n\\nmodule.exports = Timeline = (function() {\\n  function Timeline() {}\\n\\n  Timeline.start = function() {\\n    return Running = true;\\n  };\\n\\n  Timeline.stop = function() {\\n    return Running = false;\\n  };\\n\\n  Timeline.isRunning = function() {\\n    return Running;\\n  };\\n\\n  Timeline.addRecord_Mark = function(message) {\\n    var record;\\n    if (!Timeline.isRunning()) {\\n      return;\\n    }\\n    record = {};\\n    record.type = TimelineRecordType.Mark;\\n    record.category = {\\n      name: \\\"scripting\\\"\\n    };\\n    record.startTime = Date.now();\\n    record.data = {\\n      message: message\\n    };\\n    addStackTrace(record, 3);\\n    return Weinre.wi.TimelineNotify.addRecordToTimeline(record);\\n  };\\n\\n  Timeline.addRecord_EventDispatch = function(event, name, category) {\\n    var record;\\n    if (!Timeline.isRunning()) {\\n      return;\\n    }\\n    if (!category) {\\n      category = \\\"scripting\\\";\\n    }\\n    record = {};\\n    record.type = TimelineRecordType.EventDispatch;\\n    record.category = {\\n      name: category\\n    };\\n    record.startTime = Date.now();\\n    record.data = {\\n      type: event.type\\n    };\\n    return Weinre.wi.TimelineNotify.addRecordToTimeline(record);\\n  };\\n\\n  Timeline.addRecord_TimerInstall = function(id, timeout, singleShot) {\\n    var record;\\n    if (!Timeline.isRunning()) {\\n      return;\\n    }\\n    record = {};\\n    record.type = TimelineRecordType.TimerInstall;\\n    record.category = {\\n      name: \\\"scripting\\\"\\n    };\\n    record.startTime = Date.now();\\n    record.data = {\\n      timerId: id,\\n      timeout: timeout,\\n      singleShot: singleShot\\n    };\\n    addStackTrace(record, 4);\\n    return Weinre.wi.TimelineNotify.addRecordToTimeline(record);\\n  };\\n\\n  Timeline.addRecord_TimerRemove = function(id, timeout, singleShot) {\\n    var record;\\n    if (!Timeline.isRunning()) {\\n      return;\\n    }\\n    record = {};\\n    record.type = TimelineRecordType.TimerRemove;\\n    record.category = {\\n      name: \\\"scripting\\\"\\n    };\\n    record.startTime = Date.now();\\n    record.data = {\\n      timerId: id,\\n      timeout: timeout,\\n      singleShot: singleShot\\n    };\\n    addStackTrace(record, 4);\\n    return Weinre.wi.TimelineNotify.addRecordToTimeline(record);\\n  };\\n\\n  Timeline.addRecord_TimerFire = function(id, timeout, singleShot) {\\n    var record;\\n    if (!Timeline.isRunning()) {\\n      return;\\n    }\\n    record = {};\\n    record.type = TimelineRecordType.TimerFire;\\n    record.category = {\\n      name: \\\"scripting\\\"\\n    };\\n    record.startTime = Date.now();\\n    record.data = {\\n      timerId: id,\\n      timeout: timeout,\\n      singleShot: singleShot\\n    };\\n    return Weinre.wi.TimelineNotify.addRecordToTimeline(record);\\n  };\\n\\n  Timeline.addRecord_XHRReadyStateChange = function(method, url, id, xhr) {\\n    var contentLength, contentType, e, record;\\n    if (!Timeline.isRunning()) {\\n      return;\\n    }\\n    try {\\n      contentLength = xhr.getResponseHeader(\\\"Content-Length\\\");\\n      contentLength = parseInt(contentLength);\\n      contentType = xhr.getResponseHeader(\\\"Content-Type\\\");\\n    } catch (_error) {\\n      e = _error;\\n      contentLength = 0;\\n      contentType = \\\"unknown\\\";\\n    }\\n    record = {};\\n    record.startTime = Date.now();\\n    record.category = {\\n      name: \\\"loading\\\"\\n    };\\n    if (xhr.readyState === XMLHttpRequest.OPENED) {\\n      record.type = TimelineRecordType.ResourceSendRequest;\\n      record.data = {\\n        identifier: id,\\n        url: url,\\n        requestMethod: method\\n      };\\n    } else if (xhr.readyState === XMLHttpRequest.DONE) {\\n      record.type = TimelineRecordType.ResourceReceiveResponse;\\n      record.data = {\\n        identifier: id,\\n        statusCode: xhr.status,\\n        mimeType: contentType,\\n        url: url\\n      };\\n      if (!isNaN(contentLength)) {\\n        record.data.expectedContentLength = contentLength;\\n      }\\n    } else {\\n      return;\\n    }\\n    return Weinre.wi.TimelineNotify.addRecordToTimeline(record);\\n  };\\n\\n  Timeline.installGlobalListeners = function() {\\n    if (window.applicationCache) {\\n      applicationCache.addEventListener(\\\"checking\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.checking\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"error\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.error\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"noupdate\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.noupdate\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"downloading\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.downloading\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"progress\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.progress\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"updateready\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.updateready\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"cached\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.cached\\\", \\\"loading\\\");\\n      }), false);\\n      applicationCache.addEventListener(\\\"obsolete\\\", (function(e) {\\n        return Timeline.addRecord_EventDispatch(e, \\\"applicationCache.obsolete\\\", \\\"loading\\\");\\n      }), false);\\n    }\\n    window.addEventListener(\\\"error\\\", (function(e) {\\n      return Timeline.addRecord_EventDispatch(e, \\\"window.error\\\");\\n    }), false);\\n    window.addEventListener(\\\"hashchange\\\", (function(e) {\\n      return Timeline.addRecord_EventDispatch(e, \\\"window.hashchange\\\");\\n    }), false);\\n    window.addEventListener(\\\"message\\\", (function(e) {\\n      return Timeline.addRecord_EventDispatch(e, \\\"window.message\\\");\\n    }), false);\\n    window.addEventListener(\\\"offline\\\", (function(e) {\\n      return Timeline.addRecord_EventDispatch(e, \\\"window.offline\\\");\\n    }), false);\\n    window.addEventListener(\\\"online\\\", (function(e) {\\n      return Timeline.addRecord_EventDispatch(e, \\\"window.online\\\");\\n    }), false);\\n    return window.addEventListener(\\\"scroll\\\", (function(e) {\\n      return Timeline.addRecord_EventDispatch(e, \\\"window.scroll\\\");\\n    }), false);\\n  };\\n\\n  Timeline.installNativeHooks = function() {\\n    HookSites.window_setInterval.addHooks({\\n      before: function(receiver, args) {\\n        var code, interval;\\n        code = args[0];\\n        if (typeof code !== \\\"function\\\") {\\n          return;\\n        }\\n        interval = args[1];\\n        code = instrumentedTimerCode(code, interval, false);\\n        args[0] = code;\\n        this.userData = {};\\n        this.userData.code = code;\\n        return this.userData.interval = interval;\\n      },\\n      after: function(receiver, args, result) {\\n        var code, id;\\n        if (!this.userData) {\\n          return;\\n        }\\n        code = this.userData.code;\\n        if (typeof code !== \\\"function\\\") {\\n          return;\\n        }\\n        id = result;\\n        code.__timerId = id;\\n        return addTimer(id, this.userData.interval, false);\\n      }\\n    });\\n    HookSites.window_clearInterval.addHooks({\\n      before: function(receiver, args) {\\n        var id;\\n        id = args[0];\\n        return removeTimer(id, false);\\n      }\\n    });\\n    HookSites.window_setTimeout.addHooks({\\n      before: function(receiver, args) {\\n        var code, interval;\\n        code = args[0];\\n        if (typeof code !== \\\"function\\\") {\\n          return;\\n        }\\n        interval = args[1];\\n        code = instrumentedTimerCode(code, interval, true);\\n        args[0] = code;\\n        this.userData = {};\\n        this.userData.code = code;\\n        return this.userData.interval = interval;\\n      },\\n      after: function(receiver, args, result) {\\n        var code, id;\\n        if (!this.userData) {\\n          return;\\n        }\\n        code = this.userData.code;\\n        if (typeof code !== \\\"function\\\") {\\n          return;\\n        }\\n        id = result;\\n        code.__timerId = id;\\n        return addTimer(id, this.userData.interval, true);\\n      }\\n    });\\n    HookSites.window_clearTimeout.addHooks({\\n      before: function(receiver, args) {\\n        var id;\\n        id = args[0];\\n        return removeTimer(id, true);\\n      }\\n    });\\n    return HookSites.XMLHttpRequest_open.addHooks({\\n      before: function(receiver, args) {\\n        var xhr;\\n        xhr = receiver;\\n        IDGenerator.getId(xhr);\\n        xhr.__weinre_method = args[0];\\n        xhr.__weinre_url = args[1];\\n        return xhr.addEventListener(\\\"readystatechange\\\", getXhrEventHandler(xhr), false);\\n      }\\n    });\\n  };\\n\\n  return Timeline;\\n\\n})();\\n\\ngetXhrEventHandler = function(xhr) {\\n  return function(event) {\\n    return Timeline.addRecord_XHRReadyStateChange(xhr.__weinre_method, xhr.__weinre_url, IDGenerator.getId(xhr), xhr);\\n  };\\n};\\n\\naddTimer = function(id, timeout, singleShot) {\\n  var timerSet;\\n  timerSet = (singleShot ? TimerTimeouts : TimerIntervals);\\n  timerSet[id] = {\\n    id: id,\\n    timeout: timeout,\\n    singleShot: singleShot\\n  };\\n  return Timeline.addRecord_TimerInstall(id, timeout, singleShot);\\n};\\n\\nremoveTimer = function(id, singleShot) {\\n  var timer, timerSet;\\n  timerSet = (singleShot ? TimerTimeouts : TimerIntervals);\\n  timer = timerSet[id];\\n  if (!timer) {\\n    return;\\n  }\\n  Timeline.addRecord_TimerRemove(id, timer.timeout, singleShot);\\n  return delete timerSet[id];\\n};\\n\\ninstrumentedTimerCode = function(code, timeout, singleShot) {\\n  var instrumentedCode;\\n  if (typeof code !== \\\"function\\\") {\\n    return code;\\n  }\\n  instrumentedCode = function() {\\n    var id, result;\\n    result = code.apply(this, arguments);\\n    id = arguments.callee.__timerId;\\n    Timeline.addRecord_TimerFire(id, timeout, singleShot);\\n    return result;\\n  };\\n  instrumentedCode.displayName = code.name || code.displayName;\\n  return instrumentedCode;\\n};\\n\\naddStackTrace = function(record, skip) {\\n  var i, trace, _results;\\n  if (!skip) {\\n    skip = 1;\\n  }\\n  trace = new StackTrace(arguments).trace;\\n  record.stackTrace = [];\\n  i = skip;\\n  _results = [];\\n  while (i < trace.length) {\\n    record.stackTrace.push({\\n      functionName: trace[i],\\n      scriptName: \\\"\\\",\\n      lineNumber: \\\"\\\"\\n    });\\n    _results.push(i++);\\n  }\\n  return _results;\\n};\\n\\nTimeline.installGlobalListeners();\\n\\nTimeline.installNativeHooks();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/Timeline.amd.js\")\n   49  ;eval(\";modjewel.define(\\\"weinre/target/WeinreExtraClientCommandsImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Console, Weinre, WeinreExtraClientCommandsImpl, WiDatabaseImpl;\\n\\nWeinre = require('../common/Weinre');\\n\\nWiDatabaseImpl = require('./WiDatabaseImpl');\\n\\nConsole = require('./Console');\\n\\nmodule.exports = WeinreExtraClientCommandsImpl = (function() {\\n  function WeinreExtraClientCommandsImpl() {}\\n\\n  WeinreExtraClientCommandsImpl.prototype.getDatabases = function(callback) {\\n    var result;\\n    if (!callback) {\\n      return;\\n    }\\n    result = WiDatabaseImpl.getDatabases();\\n    return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n  };\\n\\n  return WeinreExtraClientCommandsImpl;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WeinreExtraClientCommandsImpl.amd.js\")\n   50  ;eval(\";modjewel.define(\\\"weinre/target/WeinreTargetEventsImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Callback, Console, Weinre, WeinreTargetEventsImpl;\\n\\nWeinre = require('../common/Weinre');\\n\\nCallback = require('../common/Callback');\\n\\nConsole = require('./Console');\\n\\nmodule.exports = WeinreTargetEventsImpl = (function() {\\n  function WeinreTargetEventsImpl() {}\\n\\n  WeinreTargetEventsImpl.prototype.connectionCreated = function(clientChannel, targetChannel) {\\n    var message;\\n    message = (\\\"weinre: target \\\" + targetChannel + \\\" connected to client \\\") + clientChannel;\\n    Weinre.logInfo(message);\\n    return Weinre.target.whenBodyReady(this, [], function() {\\n      var oldValue;\\n      oldValue = Console.useRemote(true);\\n      Weinre.target.setDocument();\\n      Weinre.wi.TimelineNotify.timelineProfilerWasStopped();\\n      return Weinre.wi.DOMStorage.initialize();\\n    });\\n  };\\n\\n  WeinreTargetEventsImpl.prototype.connectionDestroyed = function(clientChannel, targetChannel) {\\n    var message, oldValue;\\n    message = (\\\"weinre: target \\\" + targetChannel + \\\" disconnected from client \\\") + clientChannel;\\n    Weinre.logInfo(message);\\n    return oldValue = Console.useRemote(false);\\n  };\\n\\n  WeinreTargetEventsImpl.prototype.sendCallback = function(callbackId, result) {\\n    return Callback.invoke(callbackId, result);\\n  };\\n\\n  return WeinreTargetEventsImpl;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WeinreTargetEventsImpl.amd.js\")\n   ..\n   53  ;eval(\";modjewel.define(\\\"weinre/target/WiDatabaseImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar HookSites, IDGenerator, SqlStepper, Weinre, WiDatabaseImpl, dbAdd, dbById, dbRecordById, dbRecordByName, executeSQL_error, executeSQL_step_1, executeSQL_step_2, getTableNames_step_1, getTableNames_step_2, id2db, logSqlError, name2db;\\n\\nWeinre = require('../common/Weinre');\\n\\nIDGenerator = require('../common/IDGenerator');\\n\\nHookSites = require('./HookSites');\\n\\nSqlStepper = require('./SqlStepper');\\n\\nid2db = {};\\n\\nname2db = {};\\n\\nmodule.exports = WiDatabaseImpl = (function() {\\n  function WiDatabaseImpl() {\\n    if (!window.openDatabase) {\\n      return;\\n    }\\n    HookSites.window_openDatabase.addHooks({\\n      after: function(receiver, args, db) {\\n        var name, version;\\n        if (!db) {\\n          return;\\n        }\\n        name = args[0];\\n        version = args[1];\\n        return dbAdd(db, name, version);\\n      }\\n    });\\n  }\\n\\n  WiDatabaseImpl.getDatabases = function() {\\n    var id, result;\\n    result = [];\\n    for (id in id2db) {\\n      result.push(id2db[id]);\\n    }\\n    return result;\\n  };\\n\\n  WiDatabaseImpl.prototype.getDatabaseTableNames = function(databaseId, callback) {\\n    var db, stepper;\\n    db = dbById(databaseId);\\n    if (!db) {\\n      return;\\n    }\\n    stepper = SqlStepper([getTableNames_step_1, getTableNames_step_2]);\\n    stepper.callback = callback;\\n    return stepper.run(db, logSqlError);\\n  };\\n\\n  WiDatabaseImpl.prototype.executeSQL = function(databaseId, query, callback) {\\n    var db, stepper, txid;\\n    db = dbById(databaseId);\\n    if (!db) {\\n      return;\\n    }\\n    txid = Weinre.targetDescription.channel + \\\"-\\\" + IDGenerator.next();\\n    stepper = SqlStepper([executeSQL_step_1, executeSQL_step_2]);\\n    stepper.txid = txid;\\n    stepper.query = query;\\n    stepper.callback = callback;\\n    stepper.run(db, executeSQL_error);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [true, txid]);\\n    }\\n  };\\n\\n  return WiDatabaseImpl;\\n\\n})();\\n\\nlogSqlError = function(sqlError) {\\n  return console.log((\\\"SQL Error \\\" + sqlError.code + \\\": \\\") + sqlError.message);\\n};\\n\\ngetTableNames_step_1 = function() {\\n  return this.executeSql(\\\"SELECT name FROM sqlite_master WHERE type='table'\\\");\\n};\\n\\ngetTableNames_step_2 = function(resultSet) {\\n  var i, name, result, rows;\\n  rows = resultSet.rows;\\n  result = [];\\n  i = 0;\\n  while (i < rows.length) {\\n    name = rows.item(i).name;\\n    if (name === \\\"__WebKitDatabaseInfoTable__\\\") {\\n      i++;\\n      continue;\\n    }\\n    result.push(name);\\n    i++;\\n  }\\n  return Weinre.WeinreTargetCommands.sendClientCallback(this.callback, [result]);\\n};\\n\\nexecuteSQL_step_1 = function() {\\n  return this.executeSql(this.query);\\n};\\n\\nexecuteSQL_step_2 = function(resultSet) {\\n  var columnNames, i, j, propName, row, rows, values;\\n  columnNames = [];\\n  values = [];\\n  rows = resultSet.rows;\\n  i = 0;\\n  while (i < rows.length) {\\n    row = rows.item(i);\\n    if (i === 0) {\\n      for (propName in row) {\\n        columnNames.push(propName);\\n      }\\n    }\\n    j = 0;\\n    while (j < columnNames.length) {\\n      values.push(row[columnNames[j]]);\\n      j++;\\n    }\\n    i++;\\n  }\\n  return Weinre.wi.DatabaseNotify.sqlTransactionSucceeded(this.txid, columnNames, values);\\n};\\n\\nexecuteSQL_error = function(sqlError) {\\n  var error;\\n  error = {\\n    code: sqlError.code,\\n    message: sqlError.message\\n  };\\n  return Weinre.wi.DatabaseNotify.sqlTransactionFailed(this.txid, error);\\n};\\n\\ndbById = function(id) {\\n  var record;\\n  record = id2db[id];\\n  if (!record) {\\n    return null;\\n  }\\n  return record.db;\\n};\\n\\ndbRecordById = function(id) {\\n  return id2db[id];\\n};\\n\\ndbRecordByName = function(name) {\\n  return name2db[name];\\n};\\n\\ndbAdd = function(db, name, version) {\\n  var payload, record;\\n  record = dbRecordByName(name);\\n  if (record) {\\n    return record;\\n  }\\n  record = {};\\n  record.id = IDGenerator.next();\\n  record.domain = window.location.origin;\\n  record.name = name;\\n  record.version = version;\\n  record.db = db;\\n  id2db[record.id] = record;\\n  name2db[name] = record;\\n  payload = {};\\n  payload.id = record.id;\\n  payload.domain = record.domain;\\n  payload.name = name;\\n  payload.version = version;\\n  return Weinre.WeinreExtraTargetEvents.databaseOpened(payload);\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WiDatabaseImpl.amd.js\")\n   54  ;eval(\";modjewel.define(\\\"weinre/target/WiDOMImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Weinre, WiDOMImpl;\\n\\nWeinre = require('../common/Weinre');\\n\\nmodule.exports = WiDOMImpl = (function() {\\n  function WiDOMImpl() {}\\n\\n  WiDOMImpl.prototype.getChildNodes = function(nodeId, callback) {\\n    var children, node;\\n    node = Weinre.nodeStore.getNode(nodeId);\\n    if (!node) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid nodeId: \\\" + nodeId);\\n      return;\\n    }\\n    children = Weinre.nodeStore.serializeNodeChildren(node, 1);\\n    Weinre.wi.DOMNotify.setChildNodes(nodeId, children);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.setAttribute = function(elementId, name, value, callback) {\\n    var element;\\n    element = Weinre.nodeStore.getNode(elementId);\\n    if (!element) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid elementId: \\\" + elementId);\\n      return;\\n    }\\n    element.setAttribute(name, value);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.removeAttribute = function(elementId, name, callback) {\\n    var element;\\n    element = Weinre.nodeStore.getNode(elementId);\\n    if (!element) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid elementId: \\\" + elementId);\\n      return;\\n    }\\n    element.removeAttribute(name);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.setTextNodeValue = function(nodeId, value, callback) {\\n    var node;\\n    node = Weinre.nodeStore.getNode(nodeId);\\n    if (!node) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid nodeId: \\\" + nodeId);\\n      return;\\n    }\\n    node.nodeValue = value;\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.getEventListenersForNode = function(nodeId, callback) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  WiDOMImpl.prototype.copyNode = function(nodeId, callback) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  WiDOMImpl.prototype.removeNode = function(nodeId, callback) {\\n    var node;\\n    node = Weinre.nodeStore.getNode(nodeId);\\n    if (!node) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid nodeId: \\\" + nodeId);\\n      return;\\n    }\\n    if (!node.parentNode) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed a parentless node: \\\" + node);\\n      return;\\n    }\\n    node.parentNode.removeChild(node);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.changeTagName = function(nodeId, newTagName, callback) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  WiDOMImpl.prototype.getOuterHTML = function(nodeId, callback) {\\n    var node, value;\\n    node = Weinre.nodeStore.getNode(nodeId);\\n    if (!node) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid nodeId: \\\" + nodeId);\\n      return;\\n    }\\n    value = node.outerHTML;\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [value]);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.setOuterHTML = function(nodeId, outerHTML, callback) {\\n    var node;\\n    node = Weinre.nodeStore.getNode(nodeId);\\n    if (!node) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid nodeId: \\\" + nodeId);\\n      return;\\n    }\\n    node.outerHTML = outerHTML;\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.addInspectedNode = function(nodeId, callback) {\\n    Weinre.nodeStore.addInspectedNode(nodeId);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.performSearch = function(query, runSynchronously, callback) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  WiDOMImpl.prototype.searchCanceled = function(callback) {\\n    return Weinre.notImplemented(arguments.callee.signature);\\n  };\\n\\n  WiDOMImpl.prototype.pushNodeByPathToFrontend = function(path, callback) {\\n    var childNodeIds, curr, currId, i, index, nodeId, nodeName, parts, _i, _ref;\\n    parts = path.split(\\\",\\\");\\n    curr = document;\\n    currId = null;\\n    nodeId = Weinre.nodeStore.getNodeId(curr);\\n    this.getChildNodes(nodeId);\\n    for (i = _i = 0, _ref = parts.length; _i < _ref; i = _i += 2) {\\n      index = parseInt(parts[i]);\\n      nodeName = parts[i + 1];\\n      if (isNaN(index)) {\\n        return;\\n      }\\n      childNodeIds = Weinre.nodeStore.childNodeIds(curr);\\n      currId = childNodeIds[index];\\n      if (!currId) {\\n        return;\\n      }\\n      this.getChildNodes(currId);\\n      curr = Weinre.nodeStore.getNode(currId);\\n      if (curr.nodeName !== nodeName) {\\n        return;\\n      }\\n    }\\n    if (callback && currId) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [currId]);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.resolveNode = function(nodeId, callback) {\\n    var result;\\n    result = Weinre.injectedScript.resolveNode(nodeId);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.getNodeProperties = function(nodeId, propertiesArray, callback) {\\n    var result;\\n    propertiesArray = JSON.stringify(propertiesArray);\\n    result = Weinre.injectedScript.getNodeProperties(nodeId, propertiesArray);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.getNodePrototypes = function(nodeId, callback) {\\n    var result;\\n    result = Weinre.injectedScript.getNodePrototypes(nodeId);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiDOMImpl.prototype.pushNodeToFrontend = function(objectId, callback) {\\n    var result;\\n    objectId = JSON.stringify(objectId);\\n    result = Weinre.injectedScript.pushNodeToFrontend(objectId);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  return WiDOMImpl;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WiDOMImpl.amd.js\")\n   55: ;eval(\";modjewel.define(\\\"weinre/target/WiDOMStorageImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar HookSites, Weinre, WiDOMStorageImpl, _getStorageArea, _storageEventHandler;\\n\\nWeinre = require('../common/Weinre');\\n\\nHookSites = require('./HookSites');\\n\\nmodule.exports = WiDOMStorageImpl = (function() {\\n  function WiDOMStorageImpl() {}\\n\\n  WiDOMStorageImpl.prototype.getDOMStorageEntries = function(storageId, callback) {\\n    var i, key, length, result, storageArea, val;\\n    storageArea = _getStorageArea(storageId);\\n    if (!storageArea) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid storageId: \\\" + storageId);\\n      return;\\n    }\\n    result = [];\\n    length = storageArea.length;\\n    i = 0;\\n    while (i < length) {\\n      key = storageArea.key(i);\\n      val = storageArea.getItem(key);\\n      result.push([key, val]);\\n      i++;\\n    }\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiDOMStorageImpl.prototype.setDOMStorageItem = function(storageId, key, value, callback) {\\n    var e, result, storageArea;\\n    storageArea = _getStorageArea(storageId);\\n    if (!storageArea) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid storageId: \\\" + storageId);\\n      return;\\n    }\\n    result = true;\\n    try {\\n      HookLib.ignoreHooks(function() {\\n        if (storageArea === window.localStorage) {\\n          return localStorage.setItem(key, value);\\n        } else if (storageArea === window.sessionStorage) {\\n          return sessionStorage.setItem(key, value);\\n        }\\n      });\\n    } catch (_error) {\\n      e = _error;\\n      result = false;\\n    }\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiDOMStorageImpl.prototype.removeDOMStorageItem = function(storageId, key, callback) {\\n    var e, result, storageArea;\\n    storageArea = _getStorageArea(storageId);\\n    if (!storageArea) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid storageId: \\\" + storageId);\\n      return;\\n    }\\n    result = true;\\n    try {\\n      HookLib.ignoreHooks(function() {\\n        if (storageArea === window.localStorage) {\\n          return localStorage.removeItem(key);\\n        } else if (storageArea === window.sessionStorage) {\\n          return sessionStorage.removeItem(key);\\n        }\\n      });\\n    } catch (_error) {\\n      e = _error;\\n      result = false;\\n    }\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiDOMStorageImpl.prototype.initialize = function() {\\n    if (window.localStorage) {\\n      Weinre.wi.DOMStorageNotify.addDOMStorage({\\n        id: 1,\\n        host: window.location.host,\\n        isLocalStorage: true\\n      });\\n      HookSites.LocalStorage_setItem.addHooks({\\n        after: function() {\\n          return _storageEventHandler({\\n            storageArea: window.localStorage\\n          });\\n        }\\n      });\\n      HookSites.LocalStorage_removeItem.addHooks({\\n        after: function() {\\n          return _storageEventHandler({\\n            storageArea: window.localStorage\\n          });\\n        }\\n      });\\n      HookSites.LocalStorage_clear.addHooks({\\n        after: function() {\\n          return _storageEventHandler({\\n            storageArea: window.localStorage\\n          });\\n        }\\n      });\\n    }\\n    if (window.sessionStorage) {\\n      Weinre.wi.DOMStorageNotify.addDOMStorage({\\n        id: 2,\\n        host: window.location.host,\\n        isLocalStorage: false\\n      });\\n      HookSites.SessionStorage_setItem.addHooks({\\n        after: function() {\\n          return _storageEventHandler({\\n            storageArea: window.sessionStorage\\n          });\\n        }\\n      });\\n      HookSites.SessionStorage_removeItem.addHooks({\\n        after: function() {\\n          return _storageEventHandler({\\n            storageArea: window.sessionStorage\\n          });\\n        }\\n      });\\n      HookSites.SessionStorage_clear.addHooks({\\n        after: function() {\\n          return _storageEventHandler({\\n            storageArea: window.sessionStorage\\n          });\\n        }\\n      });\\n    }\\n    return document.addEventListener(\\\"storage\\\", _storageEventHandler, false);\\n  };\\n\\n  return WiDOMStorageImpl;\\n\\n})();\\n\\n_getStorageArea = function(storageId) {\\n  if (storageId === 1) {\\n    return window.localStorage;\\n  } else if (storageId === 2) {\\n    return window.sessionStorage;\\n  }\\n  return null;\\n};\\n\\n_storageEventHandler = function(event) {\\n  var storageId;\\n  if (event.storageArea === window.localStorage) {\\n    storageId = 1;\\n  } else if (event.storageArea === window.sessionStorage) {\\n    storageId = 2;\\n  } else {\\n    return;\\n  }\\n  return Weinre.wi.DOMStorageNotify.updateDOMStorage(storageId);\\n};\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WiDOMStorageImpl.amd.js\")\n   56  ;eval(\";modjewel.define(\\\"weinre/target/WiInspectorImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Timeline, Weinre, WiInspectorImpl;\\n\\nWeinre = require('../common/Weinre');\\n\\nTimeline = require('../target/Timeline');\\n\\nmodule.exports = WiInspectorImpl = (function() {\\n  function WiInspectorImpl() {}\\n\\n  WiInspectorImpl.prototype.reloadPage = function(callback) {\\n    if (callback) {\\n      Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n    return window.location.reload();\\n  };\\n\\n  WiInspectorImpl.prototype.highlightDOMNode = function(nodeId, callback) {\\n    var node;\\n    node = Weinre.nodeStore.getNode(nodeId);\\n    if (!node) {\\n      Weinre.logWarning(arguments.callee.signature + \\\" passed an invalid nodeId: \\\" + nodeId);\\n      return;\\n    }\\n    Weinre.elementHighlighter.on(node);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiInspectorImpl.prototype.hideDOMNodeHighlight = function(callback) {\\n    Weinre.elementHighlighter.off();\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiInspectorImpl.prototype.startTimelineProfiler = function(callback) {\\n    Timeline.start();\\n    Weinre.wi.TimelineNotify.timelineProfilerWasStarted();\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  WiInspectorImpl.prototype.stopTimelineProfiler = function(callback) {\\n    Timeline.stop();\\n    Weinre.wi.TimelineNotify.timelineProfilerWasStopped();\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback);\\n    }\\n  };\\n\\n  return WiInspectorImpl;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WiInspectorImpl.amd.js\")\n   57  ;eval(\";modjewel.define(\\\"weinre/target/WiRuntimeImpl\\\", function(require, exports, module) { // Generated by CoffeeScript 1.8.0\\nvar Weinre, WiRuntimeImpl;\\n\\nWeinre = require('../common/Weinre');\\n\\nmodule.exports = WiRuntimeImpl = (function() {\\n  function WiRuntimeImpl() {}\\n\\n  WiRuntimeImpl.prototype.evaluate = function(expression, objectGroup, includeCommandLineAPI, callback) {\\n    var result;\\n    result = Weinre.injectedScript.evaluate(expression, objectGroup, includeCommandLineAPI);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiRuntimeImpl.prototype.getCompletions = function(expression, includeCommandLineAPI, callback) {\\n    var result;\\n    result = Weinre.injectedScript.getCompletions(expression, includeCommandLineAPI);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiRuntimeImpl.prototype.getProperties = function(objectId, ignoreHasOwnProperty, abbreviate, callback) {\\n    var result;\\n    objectId = JSON.stringify(objectId);\\n    result = Weinre.injectedScript.getProperties(objectId, ignoreHasOwnProperty, abbreviate);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiRuntimeImpl.prototype.setPropertyValue = function(objectId, propertyName, expression, callback) {\\n    var result;\\n    objectId = JSON.stringify(objectId);\\n    result = Weinre.injectedScript.setPropertyValue(objectId, propertyName, expression);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  WiRuntimeImpl.prototype.releaseWrapperObjectGroup = function(injectedScriptId, objectGroup, callback) {\\n    var result;\\n    result = Weinre.injectedScript.releaseWrapperObjectGroup(objectGroup);\\n    if (callback) {\\n      return Weinre.WeinreTargetCommands.sendClientCallback(callback, [result]);\\n    }\\n  };\\n\\n  return WiRuntimeImpl;\\n\\n})();\\n\\nrequire(\\\"../common/MethodNamer\\\").setNamesForClass(module.exports);\\n\\n});\\n\\n//@ sourceURL=weinre/target/WiRuntimeImpl.amd.js\")\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\tests\\element-highlighter.html:\n   22  <head>\n   23  <title>weinre.web/tests/element-highlighter.html</title>\n   24: <script>try {window.WeinreServerId = location.hash.split(\"#\")[1]} catch(e) {window.WeinreServerId = \"anonymous\"}</script>\n   25  <script src=\"/target/target-script.js\"></script>\n   26  </head>\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\Callback.amd.js:\n   58      func = callback[1];\n   59      args = callback[2].concat(args);\n   60:     try {\n   61        return func.apply(receiver, args);\n   62      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\EventListeners.amd.js:\n   39        listener = listener[0];\n   40        if (typeof listener === \"function\") {\n   41:         try {\n   42            listener.call(null, event);\n   43          } catch (_error) {\n   ..\n   50          throw new Ex(arguments, \"listener does not implement the handleEvent() method\");\n   51        }\n   52:       try {\n   53          _results.push(listener.handleEvent.call(listener, event));\n   54        } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\Ex.amd.js:\n    7    Ex.catching = function(func) {\n    8      var e;\n    9:     try {\n   10        return func.call(this);\n   11      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\HookLib.amd.js:\n   21    HookLib.ignoreHooks = function(func) {\n   22      var result;\n   23:     try {\n   24        IgnoreHooks++;\n   25        result = func.call();\n   ..\n   95      var e, result;\n   96      callBeforeHooks(hookSite, this, arguments);\n   97:     try {\n   98        result = func.apply(this, arguments);\n   99      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\MessageDispatcher.amd.js:\n  156      var args, data, e, intf, intfName, method, methodName, methodSignature, skipErrorForMethods;\n  157      skipErrorForMethods = ['domContentEventFired', 'loadEventFired', 'childNodeRemoved'];\n  158:     try {\n  159        data = JSON.parse(message.data);\n  160      } catch (_error) {\n  ...\n  180        return;\n  181      }\n  182:     try {\n  183        method.apply(intf, args);\n  184      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\StackTrace.amd.js:\n   53      }\n   54      visitedFuncs.push(func);\n   55:     try {\n   56        func = func.caller;\n   57      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\common\\WebSocketXhr.amd.js:\n   55        return this._handleXhrResponseError(xhr);\n   56      }\n   57:     try {\n   58        object = JSON.parse(xhr.responseText);\n   59      } catch (_error) {\n   ..\n   99        return this._handleXhrResponseError(xhr);\n  100      }\n  101:     try {\n  102        datum = JSON.parse(xhr.responseText);\n  103      } catch (_error) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\target\\CSSStore.amd.js:\n   42      var cssRule, err, object, result, styleSheet, _i, _j, _len, _len1, _ref, _ref1;\n   43      result = [];\n   44:     try {\n   45        _ref = document.styleSheets;\n   46        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n   ..\n  281      var match, property, propertyPattern, result, testStyleDecl;\n  282      testStyleDecl = this.testElement.style;\n  283:     try {\n  284        testStyleDecl.cssText = string;\n  285        if (testStyleDecl.cssText !== \"\") {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\target\\InjectedScript.js:\n   64      _wrapObject: function(object, objectGroupName, abbreviate)\n   65      {\n   66:         try {\n   67              var objectId;\n   68              if (typeof object === \"object\" || typeof object === \"function\" || this._isHTMLAllCollection(object)) {\n   ..\n  140              var isGetter = object[\"__lookupGetter__\"] && object.__lookupGetter__(propertyName);\n  141              if (!isGetter) {\n  142:                 try {\n  143                      property.value = this._wrapObject(object[propertyName], parsedObjectId.groupName, abbreviate);\n  144                  } catch(e) {\n  ...\n  168          }\n  169      \n  170:         try {\n  171              // Surround the expression in parenthesis so the result of the eval is the result\n  172              // of the whole expression not the last potential sub-expression.\n  ...\n  180              return true;\n  181          } catch(e) {\n  182:             try {\n  183                  var result = inspectedWindow.eval(\"\\\"\" + expression.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\");\n  184                  object[propertyName] = result;\n  ...\n  193      {\n  194          for (var o = object; o; o = Object.getPrototypeOf(o)) {\n  195:             try {\n  196                  var names = Object.getOwnPropertyNames(o);\n  197                  for (var i = 0; i < names.length; ++i)\n  ...\n  212      {\n  213          var props = {};\n  214:         try {\n  215              if (!expression)\n  216                  expression = \"this\";\n  ...\n  232      {\n  233          var props = {};\n  234:         try {\n  235              var callFrame = this._callFrameForId(callFrameId);\n  236              if (!callFrame)\n  ...\n  264      _evaluateAndWrap: function(evalFunction, object, expression, objectGroup, isEvalOnCallFrame, injectCommandLineAPI)\n  265      {\n  266:         try {\n  267              return this._wrapObject(this._evaluateOn(evalFunction, object, expression, isEvalOnCallFrame, injectCommandLineAPI), objectGroup);\n  268          } catch (e) {\n  ...\n  277          // the window object properties still take more precedent than our API functions.\n  278  \n  279:         try {\n  280              if (injectCommandLineAPI && inspectedWindow.console) {\n  281                  inspectedWindow.console._commandLineAPI = new CommandLineAPI(this._commandLineAPIImpl, isEvalOnCallFrame ? object : null);\n  ...\n  437          if (obj instanceof inspectedWindow.Node) {\n  438  \n  439:             try {\n  440                  return (obj.nodeType === undefined ? type : \"node\");\n  441              } catch (ex) {} // for IE there could be 'Invalid calling object' exception\n  ...\n  535      var hasChildren = (rawType === \"object\" && object !== null && (Object.getOwnPropertyNames(object).length || !!Object.getPrototypeOf(object))) || rawType === \"function\";\n  536      var description = \"\";\n  537:     try {\n  538          var description = injectedScript._describe(object, abbreviate);\n  539          return new InjectedScript.RemoteObject(objectId, type, description, hasChildren);\n  ...\n  658      {\n  659          var nodes = [];\n  660:         try {\n  661              var doc = (context && context.ownerDocument) || inspectedWindow.document;\n  662              var results = doc.evaluate(xpath, context || doc, null, XPathResult.ANY_TYPE, null);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\target\\NetworkRequest.amd.js:\n   52      var description, e, sourceString, status, statusText, success, time;\n   53      sourceString = \"\";\n   54:     try {\n   55        sourceString = this.xhr.responseText;\n   56      } catch (_error) {\n   ..\n  197        return;\n  198      }\n  199:     try {\n  200        switch (xhr.readyState) {\n  201          case 2:\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\target\\Timeline.amd.js:\n  161        return;\n  162      }\n  163:     try {\n  164        contentLength = xhr.getResponseHeader(\"Content-Length\");\n  165        contentLength = parseInt(contentLength);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\weinre\\web\\weinre\\target\\WiDOMStorageImpl.amd.js:\n   38      }\n   39      result = true;\n   40:     try {\n   41        HookLib.ignoreHooks(function() {\n   42          if (storageArea === window.localStorage) {\n   ..\n   63      }\n   64      result = true;\n   65:     try {\n   66        HookLib.ignoreHooks(function() {\n   67          if (storageArea === window.localStorage) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\which\\which.js:\n  114        var cur = p + pathExt[j]\n  115        var is\n  116:       try {\n  117          is = isexe.sync(cur, { pathExt: pathExtExe })\n  118          if (is) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\which\\bin\\which:\n   40  \n   41  process.exit(args.reduce(function (pv, current) {\n   42:   try {\n   43      var f = which.sync(current, { all: all })\n   44      if (all)\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\README.md:\n  153  // since sends are inherently asynchronous, socket write failures will *not* be\n  154  // captured when this technique is used.\n  155: try { ws.send('something'); }\n  156  catch (e) { /* handle error */ }\n  157  ```\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\lib\\BufferUtil.js:\n    7   */\n    8  \n    9: try {\n   10    module.exports = require('bufferutil');\n   11  } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\lib\\Sender.hixie.js:\n   73    else this.continuationFrame = true;\n   74  \n   75:   try {\n   76      this.socket.write(buffer, 'binary', cb);\n   77    } catch (e) {\n   ..\n   89    if (this.isClosed) return;\n   90    this.isClosed = true;\n   91:   try {\n   92      if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));\n   93      this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\lib\\Sender.js:\n  141  \n  142    if (!data) {\n  143:     try {\n  144        this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);\n  145      }\n  ...\n  205      if (mergeBuffers) {\n  206        bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);\n  207:       try {\n  208          this._socket.write(outputBuffer, 'binary', cb);\n  209        }\n  ...\n  215      else {\n  216        bufferUtil.mask(data, mask, data, 0, dataLength);\n  217:       try {\n  218          this._socket.write(outputBuffer, 'binary');\n  219          this._socket.write(data, 'binary', cb);\n  ...\n  229      if (mergeBuffers) {\n  230        data.copy(outputBuffer, dataOffset);\n  231:       try {\n  232          this._socket.write(outputBuffer, 'binary', cb);\n  233        }\n  ...\n  238      }\n  239      else {\n  240:       try {\n  241          this._socket.write(outputBuffer, 'binary');\n  242          this._socket.write(data, 'binary', cb);\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\lib\\Validation.js:\n    7   */\n    8  \n    9: try {\n   10    module.exports = require('utf-8-validate');\n   11  } catch (e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\lib\\WebSocket.js:\n  115  \n  116    var self = this;\n  117:   try {\n  118      this.readyState = WebSocket.CLOSING;\n  119      this._closeCode = code;\n  ...\n  308  \n  309    function send(data, final) {\n  310:     try {\n  311        if (self.readyState !== WebSocket.OPEN) throw new Error('not opened');\n  312        options.fin = final === true;\n  ...\n  338  \n  339      // End the connection\n  340:     try { this._socket.end(); }\n  341      catch (e) {\n  342        // Socket error during end() call, so just destroy it right now\n  ...\n  765      var serverExtensions = Extensions.parse(res.headers['sec-websocket-extensions']);\n  766      if (perMessageDeflate && serverExtensions[PerMessageDeflate.extensionName]) {\n  767:       try {\n  768          perMessageDeflate.accept(serverExtensions[PerMessageDeflate.extensionName]);\n  769        } catch (err) {\n  ...\n  953      if (this._ultron) this._ultron.destroy();\n  954      this._socket.on('error', function onerror() {\n  955:       try { this.destroy(); }\n  956        catch (e) {}\n  957      });\n  958  \n  959:     try {\n  960        if (!error) this._socket.end();\n  961        else this._socket.destroy();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\ws\\lib\\WebSocketServer.js:\n  115    // terminate all associated clients\n  116    var error = null;\n  117:   try {\n  118      for (var i = 0, l = this.clients.length; i < l; ++i) {\n  119        this.clients[i].terminate();\n  ...\n  133  \n  134    // close the http server if it was internally created\n  135:   try {\n  136      if (typeof this._closeServer !== 'undefined') {\n  137        this._closeServer();\n  ...\n  184    // handle premature socket errors\n  185    var errorHandler = function() {\n  186:     try { socket.destroy(); } catch (e) {}\n  187    }\n  188    socket.on('error', errorHandler);\n  ...\n  234  \n  235      var extensions = {};\n  236:     try {\n  237        extensions = acceptExtensions.call(self, extensionsOffer);\n  238      } catch (err) {\n  ...\n  254      socket.setTimeout(0);\n  255      socket.setNoDelay(true);\n  256:     try {\n  257        socket.write(headers.concat('', '').join('\\r\\n'));\n  258      }\n  259      catch (e) {\n  260        // if the upgrade write fails, shut the connection down hard\n  261:       try { socket.destroy(); } catch (e) {}\n  262        return;\n  263      }\n  ...\n  341    // handle premature socket errors\n  342    var errorHandler = function() {\n  343:     try { socket.destroy(); } catch (e) {}\n  344    }\n  345    socket.on('error', errorHandler);\n  ...\n  392        var headerBuffer = buildResponseHeader();\n  393  \n  394:       try {\n  395          socket.write(headerBuffer, 'binary', function(err) {\n  396            // remove listener if there was an error\n  ...\n  399          });\n  400        } catch (e) {\n  401:         try { socket.destroy(); } catch (e) {}\n  402          return;\n  403        };\n  ...\n  430        socket.setNoDelay(true);\n  431  \n  432:       try {\n  433          var hashBuffer = new Buffer(md5.digest('binary'), 'binary');\n  434          var handshakeBuffer = new Buffer(headerBuffer.length + hashBuffer.length);\n  ...\n  459        }\n  460        catch (e) {\n  461:         try { socket.destroy(); } catch (e) {}\n  462          return;\n  463        }\n  ...\n  540  \n  541  function abortConnection(socket, code, name) {\n  542:   try {\n  543      var response = [\n  544        'HTTP/1.1 ' + code + ' ' + name,\n  ...\n  550    finally {\n  551      // ensure that an early aborted connection is shut down completely\n  552:     try { socket.destroy(); } catch (e) {}\n  553    }\n  554  }\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\xmlhttprequest-ssl\\lib\\XMLHttpRequest.js:\n  331          });\n  332        } else {\n  333:         try {\n  334            this.responseText = fs.readFileSync(url.pathname, 'utf8');\n  335            this.status = 200;\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\xmlhttprequest-ssl\\tests\\test-exceptions.js:\n    5  \n    6  // Test request methods that aren't allowed\n    7: try {\n    8    xhr.open(\"TRACK\", \"http://localhost:8000/\");\n    9    console.log(\"ERROR: TRACK should have thrown exception\");\n   10  } catch(e) {}\n   11: try {\n   12    xhr.open(\"TRACE\", \"http://localhost:8000/\");\n   13    console.log(\"ERROR: TRACE should have thrown exception\");\n   14  } catch(e) {}\n   15: try {\n   16    xhr.open(\"CONNECT\", \"http://localhost:8000/\");\n   17    console.log(\"ERROR: CONNECT should have thrown exception\");\n   18  } catch(e) {}\n   19  // Test valid request method\n   20: try {\n   21    xhr.open(\"GET\", \"http://localhost:8000/\");\n   22  } catch(e) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\xmlhttprequest-ssl\\tests\\test-headers.js:\n   53  \n   54  assert.equal(null, xhr.getResponseHeader(\"Content-Type\"));\n   55: try {\n   56    xhr.open(\"GET\", \"http://localhost:8000/\");\n   57    // Valid header\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\xmlhttprequest-ssl\\tests\\test-redirect-302.js:\n   34  };\n   35  \n   36: try {\n   37    xhr.open(\"GET\", \"http://localhost:8000/redirectingResource\");\n   38    xhr.send();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\xmlhttprequest-ssl\\tests\\test-redirect-303.js:\n   34  };\n   35  \n   36: try {\n   37    xhr.open(\"POST\", \"http://localhost:8000/redirectingResource\");\n   38    xhr.send();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\xmlhttprequest-ssl\\tests\\test-redirect-307.js:\n   36  };\n   37  \n   38: try {\n   39    xhr.open(\"POST\", \"http://localhost:8000/redirectingResource\");\n   40    xhr.send();\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\y18n\\index.js:\n   69    var languageFile = this._resolveLocaleFile(this.directory, this.locale)\n   70  \n   71:   try {\n   72      localeLookup = JSON.parse(fs.readFileSync(languageFile, 'utf-8'))\n   73    } catch (err) {\n   ..\n   96  // see https://nodejs.org/api/fs.html#fs_fs_existssync_path\n   97  Y18N.prototype._fileExistsSync = function (file) {\n   98:   try {\n   99      return fs.statSync(file).isFile()\n  100    } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\yargs\\yargs.js:\n  415  \n  416      var obj = {}\n  417:     try {\n  418        obj = readPkgUp.sync({\n  419          cwd: path || require('require-main-filename')(parentRequire || require),\n  ...\n  810        var args = null\n  811  \n  812:       try {\n  813          args = parseArgs(processArgs)\n  814        } catch (err) {\n  ...\n  960      if (!detectLocale) return\n  961  \n  962:     try {\n  963        const osLocale = require('os-locale')\n  964        self.locale(osLocale.sync({ spawn: false }))\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\yargs\\lib\\command.js:\n  209      var coerce = yargs.getOptions().coerce[key]\n  210      if (typeof coerce === 'function') {\n  211:       try {\n  212          argv[key] = coerce(argv[key])\n  213        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\yargs\\lib\\validation.js:\n  190      for (var i = 0, f; (f = checks[i]) !== undefined; i++) {\n  191        var result = null\n  192:       try {\n  193          result = f(argv, aliases)\n  194        } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\node_modules\\yargs-parser\\index.js:\n  427        var configPath = argv[configKey] || configLookup[configKey]\n  428        if (configPath) {\n  429:         try {\n  430            var config = null\n  431            var resolvedConfigPath = path.resolve(process.cwd(), configPath)\n  432  \n  433            if (typeof flags.configs[configKey] === 'function') {\n  434:             try {\n  435                config = flags.configs[configKey](resolvedConfigPath)\n  436              } catch (e) {\n  ...\n  510        coerce = checkAllAliases(key, flags.coercions)\n  511        if (typeof coerce === 'function') {\n  512:         try {\n  513            argv[key] = coerce(argv[key])\n  514          } catch (err) {\n\nC:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\src\\scripts\\RideStylerShowcase.api.settings.ts:\n   67          if (!suspensionRangesSetting) return defaultSettings.SuspensionRanges;\n   68  \n   69:         try {\n   70              let suspensionRanges:RideStylerShowcaseSettingsFromAPI[\"SuspensionRanges\"] = JSON.parse(suspensionRangesSetting);\n   71  \n\n2511 matches across 794 files\n",
			"settings":
			{
				"buffer_size": 2363102,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "inst",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"defa",
				"Preferences: Package Control Settings – Default"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape"
	],
	"file_history":
	[
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop-xl/_pagination.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/VehicleDetails.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseVehicleVisualization.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop-xl/_tab-bar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_pagination.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_showcase-table.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RIdeStylerShowcaseShareModal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseTable.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_showcase-table.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseTable.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseToggleButton.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcasePaginationComponent.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/vehicle-renderer/js/rsvr.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseVehicleVisualization.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/VehicleDetails.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseWheelSelector.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/ridestyler.showcase.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.state.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/strings/RideStylerShowcase.strings.en.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseProductSelector.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/WheelDetails.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_vehicle-visualization.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseButtonPicker.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseToggleButton.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_filter-modal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_vehicle-visualization.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_suspension-selector.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/_buttons.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseTabBar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseShareButton.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseButtonPicker.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseChangeWheelSize.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/index.html",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseChangeWheelSize.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/ComponentBase.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_share-modal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_share-modal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_pagination.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_pagination.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tv/_pagination.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_pagination.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/gulpfile.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tv/_showcase-table.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/package.json",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/layer-builder/package.json",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/index.html",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcasePaginationComponent.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/PromiseHelper.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/layer-builder/src/js/layerBuilder.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/layer-builder/dist/js/layerBuilder.min.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.events.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/layer-builder/gulpfile.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/ridestyler.showcase.css",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseVehicleSelection.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseFilterModal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseProductModal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/RideStylerShowcaseButton.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/vehicle-selection-modal/scss/rsvsm.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/vehicle-selection-modal/scripts/rsvsm.js",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/vehicle-selection-modal/scss/_variables.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_vehicle-selection.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/RideStylerShowcase.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_share-modal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.styles.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_tv.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_showcase-table.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_showcase-table.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop-xl/_showcase-table.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-portrait/_tab-bar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseModal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_tablet.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_responsive-mixins.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_phone-landscape.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_phone-portrait.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_desktop.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/_desktop-xl.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/_shared.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_share-modal.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/_modals.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tv/_tab-bar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_tab-bar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_tab-bar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_tab-bar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_vehicle-selection.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/RideStylerShowcaseTabBar.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseTabBar.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tv/_vehicle-visualization.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_vehicle-visualization.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/RideStylerShowcaseResponsive.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.css.d.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/ridestyler.showcase.d.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseOptionMenu.ts",
		"/C/Users/Tyler/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/VisibilityHelper.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/StyleHelper.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop-xl/_vehicle-visualization.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.api.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.api.settings.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.api.auth.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/_sprites.scss",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/vehicle-renderer/rsvr.d.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.data.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/MainComponentBase.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseSuspensionSelector.ts",
		"/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseWheelModal.ts",
		"/C/Users/Tyler/.zshrc",
		"/C/Users/Tyler/.babun/cygwin/home/Tyler/.babunrc",
		"/C/Users/Tyler/.bash_history",
		"/C/Users/Tyler/.babun/cygwin/home/Tyler/.bashrc",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseVehicleVisualization.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/MainComponentBase.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseProductModal.scss",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseFilterModal.scss",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcasePaginationComponent.scss",
		"/C/cygwin64/Users/Tyler/bin/zsh/.zshrc",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseOptionMenu.scss",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/BoxHelper.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseVehicleSelection.scss",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/ArrayHelper.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/dist/ridestyler.showcase.css",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/RideStylerShowcase.scss",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/index.html",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/modals/RideStylerShowcaseFilterModal.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcasePopover.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.filters.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.state.ts",
		"/C/cygwin64/home/Tyler/RS/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.styles.ts"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
			"",
			"C:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"try {",
			"try",
			"tab",
			"}",
			"specifications",
			"summary",
			"optionClass",
			"this.Render",
			"activeimage",
			"retiredImage",
			"change-vehicle",
			"promise",
			"hideLoaderElement",
			"States.ChooseVehicle",
			"States",
			"ChooseVehicle",
			"change-vehicle",
			"removedImages",
			"loader",
			"Loader",
			"loader",
			"Loader",
			"loader",
			"ImageUrl",
			"Container",
			"container",
			"Container",
			"container",
			"initializeMainComponent",
			"onVehicleSelected",
			"wrap",
			"updateTabs",
			"vehicle",
			"thi",
			"(",
			"( (",
			",",
			";",
			"onVehicleSelected",
			"11.",
			"'11.5em",
			"left",
			"this.component.style.width",
			"'\n",
			"margin",
			"1",
			"padding",
			"height",
			"2.5",
			"3.5",
			"height",
			"ridestyler-showcase-change-wheel-siz",
			"container",
			"change wheel size",
			"chnage wheel size",
			".8em",
			";\n",
			"-icon",
			"-icon-wheel",
			"1.5",
			"1em",
			"er-",
			"-specs",
			"-features-specs",
			"1px",
			"0",
			" this.optionContainer.style.opacity = this.optionContainer.style.opacity == '0' ? '1' : '0';\n                                    this.optionContainer.style.transform = this.optionContainer.style.transform == 'scaleY(0)' ? 'scaleY(1)' : 'scaleY(0)';\n                                    this.optionContainer.style.height = this.optionContainer.style.height == '0px' ? 'auto' : '0px';",
			"cell",
			"optionContainer",
			"paginationComponent",
			"DOMNodeInserted",
			"'2.5em'",
			"x",
			"optionContainer",
			"title",
			"background",
			"2.5em",
			"height",
			"containerGrowHeight",
			"count",
			"optionClass",
			"optionContainerCount",
			"%;\n",
			"hasnoresults",
			"updatepanel",
			"Update()",
			"IsLoading",
			"isLoading",
			"NoCache",
			"\"noCache\": false",
			"rejected",
			"isRejected",
			"rejected",
			"Rejected",
			"rejected",
			"resized data",
			"resized Data:",
			"Name:resized Data:",
			"Unable to get property 'length' of undefined or null reference",
			"loading",
			"rejected",
			"loadMore",
			"states",
			"changeState",
			"LBUtil",
			"promise",
			"when promise is finalized.",
			"cannot changeState",
			"xhr.",
			"();\n",
			"classlist-polyfill",
			"/>\n",
			"entry",
			"runTime",
			"runtime",
			"babelPolyfill",
			"browsers",
			"polyfillStream",
			"polyfills",
			"polyfill",
			"impetus",
			"-webkit-text-stroke",
			"webkit-text",
			"generateVehiclePreviewSettings",
			"RideStylerVehicleSelectionModal",
			"modal",
			"bestConfiguration",
			"imagesetting"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/components/RideStylerShowcaseVehicleSelection.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6330,
						"regions":
						{
						},
						"selection":
						[
							[
								907,
								907
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										109,
										110
									]
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										109,
										110
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 1092.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/helpers/PromiseHelper.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4060,
						"regions":
						{
						},
						"selection":
						[
							[
								2489,
								2489
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 37,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										2488,
										2489
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2329,
										2330
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/scripts/RideStylerShowcase.api.settings.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2574,
						"regions":
						{
						},
						"selection":
						[
							[
								2000,
								2000
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										2063,
										2064
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1648,
										1649
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2063,
										2064
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1648,
										1649
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 443.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 979,
						"regions":
						{
						},
						"selection":
						[
							[
								979,
								979
							]
						],
						"settings":
						{
							"SL.58.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 58,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										974,
										978
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										17,
										21
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 2,
								"tabSize": 2
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcaseProductModal.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1157,
						"regions":
						{
						},
						"selection":
						[
							[
								1000,
								1000
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 60,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										1052,
										1053
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										938,
										939
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop-xl/_showcase-table.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 170,
						"regions":
						{
						},
						"selection":
						[
							[
								170,
								101
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										167,
										168
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										143,
										144
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										169,
										170
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										136,
										137
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/desktop/_showcase-table.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 168,
						"regions":
						{
						},
						"selection":
						[
							[
								160,
								160
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										165,
										166
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										142,
										143
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/tablet/_showcase-table.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 169,
						"regions":
						{
						},
						"selection":
						[
							[
								161,
								161
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										166,
										167
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										142,
										143
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										166,
										167
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										142,
										143
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/responsive/phone-landscape/_showcase-table.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 169,
						"regions":
						{
						},
						"selection":
						[
							[
								136,
								136
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										166,
										167
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										142,
										143
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										168,
										169
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										135,
										136
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/gulpfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10531,
						"regions":
						{
						},
						"selection":
						[
							[
								3020,
								3020
							]
						],
						"settings":
						{
							"SL.41.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3064,
										3065
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										3019,
										3020
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3064,
										3065
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										3019,
										3020
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 819.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/dist/ridestyler.showcase.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3002845,
						"regions":
						{
						},
						"selection":
						[
							[
								477452,
								477478
							]
						],
						"settings":
						{
							"SL.55.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										477520,
										477521
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										475903,
										475904
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 177125.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/RideStylerShowcasePaginationComponent.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3268,
						"regions":
						{
						},
						"selection":
						[
							[
								2049,
								1586
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										2048,
										2049
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1610,
										1611
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2244,
										2245
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										392,
										393
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 624.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1081,
						"regions":
						{
						},
						"selection":
						[
							[
								827,
								827
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										988,
										989
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										78,
										79
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										988,
										989
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										78,
										79
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/Users/Tyler/rideStyler/widgets/com.burkson.ridestyler.widgets/widgets/showcase/src/styles/components/VehicleDetails.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 465,
						"regions":
						{
						},
						"selection":
						[
							[
								463,
								463
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 42,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										464,
										465
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										302,
										303
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Darker.tmTheme",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Sass/Syntaxes/SCSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 14,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2363102,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										236,
										241
									],
									[
										593,
										598
									],
									[
										874,
										879
									],
									[
										1089,
										1094
									],
									[
										1428,
										1433
									],
									[
										1787,
										1792
									],
									[
										2120,
										2125
									],
									[
										2356,
										2361
									],
									[
										2672,
										2677
									],
									[
										2830,
										2835
									],
									[
										3010,
										3015
									],
									[
										3194,
										3199
									],
									[
										3318,
										3323
									],
									[
										3527,
										3532
									],
									[
										3741,
										3746
									],
									[
										3982,
										3987
									],
									[
										4049,
										4054
									],
									[
										4201,
										4206
									],
									[
										4322,
										4327
									],
									[
										4506,
										4511
									],
									[
										4705,
										4710
									],
									[
										4851,
										4856
									],
									[
										4995,
										5000
									],
									[
										5205,
										5210
									],
									[
										5364,
										5369
									],
									[
										5617,
										5622
									],
									[
										5821,
										5826
									],
									[
										6031,
										6036
									],
									[
										6226,
										6231
									],
									[
										6448,
										6453
									],
									[
										6618,
										6623
									],
									[
										6826,
										6831
									],
									[
										6977,
										6982
									],
									[
										7160,
										7165
									],
									[
										7332,
										7337
									],
									[
										7519,
										7524
									],
									[
										7684,
										7689
									],
									[
										7881,
										7886
									],
									[
										8043,
										8048
									],
									[
										8331,
										8336
									],
									[
										8489,
										8494
									],
									[
										8669,
										8674
									],
									[
										8853,
										8858
									],
									[
										9002,
										9007
									],
									[
										9069,
										9074
									],
									[
										9198,
										9203
									],
									[
										9407,
										9412
									],
									[
										9555,
										9560
									],
									[
										9676,
										9681
									],
									[
										9876,
										9881
									],
									[
										10165,
										10170
									],
									[
										10364,
										10369
									],
									[
										10499,
										10504
									],
									[
										10709,
										10714
									],
									[
										10868,
										10873
									],
									[
										11121,
										11126
									],
									[
										11325,
										11330
									],
									[
										11535,
										11540
									],
									[
										11730,
										11735
									],
									[
										11952,
										11957
									],
									[
										12122,
										12127
									],
									[
										12330,
										12335
									],
									[
										12481,
										12486
									],
									[
										12664,
										12669
									],
									[
										12836,
										12841
									],
									[
										13023,
										13028
									],
									[
										13188,
										13193
									],
									[
										13385,
										13390
									],
									[
										13547,
										13552
									],
									[
										13832,
										13837
									],
									[
										13990,
										13995
									],
									[
										14170,
										14175
									],
									[
										14354,
										14359
									],
									[
										14478,
										14483
									],
									[
										14687,
										14692
									],
									[
										14901,
										14906
									],
									[
										15142,
										15147
									],
									[
										15209,
										15214
									],
									[
										15361,
										15366
									],
									[
										15482,
										15487
									],
									[
										15666,
										15671
									],
									[
										15865,
										15870
									],
									[
										16011,
										16016
									],
									[
										16155,
										16160
									],
									[
										16365,
										16370
									],
									[
										16524,
										16529
									],
									[
										16777,
										16782
									],
									[
										16981,
										16986
									],
									[
										17191,
										17196
									],
									[
										17386,
										17391
									],
									[
										17608,
										17613
									],
									[
										17778,
										17783
									],
									[
										17986,
										17991
									],
									[
										18137,
										18142
									],
									[
										18320,
										18325
									],
									[
										18492,
										18497
									],
									[
										18679,
										18684
									],
									[
										18844,
										18849
									],
									[
										19041,
										19046
									],
									[
										19203,
										19208
									],
									[
										19547,
										19552
									],
									[
										19836,
										19841
									],
									[
										19903,
										19908
									],
									[
										20165,
										20170
									],
									[
										20484,
										20489
									],
									[
										20808,
										20813
									],
									[
										21017,
										21022
									],
									[
										21299,
										21304
									],
									[
										21588,
										21593
									],
									[
										21904,
										21909
									],
									[
										22184,
										22189
									],
									[
										22430,
										22435
									],
									[
										22779,
										22784
									],
									[
										23135,
										23140
									],
									[
										23345,
										23350
									],
									[
										23504,
										23509
									],
									[
										23757,
										23762
									],
									[
										23961,
										23966
									],
									[
										24322,
										24327
									],
									[
										24671,
										24676
									],
									[
										25045,
										25050
									],
									[
										25353,
										25358
									],
									[
										25561,
										25566
									],
									[
										25712,
										25717
									],
									[
										25895,
										25900
									],
									[
										26067,
										26072
									],
									[
										26254,
										26259
									],
									[
										26419,
										26424
									],
									[
										26616,
										26621
									],
									[
										26778,
										26783
									],
									[
										27114,
										27119
									],
									[
										27395,
										27400
									],
									[
										27462,
										27467
									],
									[
										27716,
										27721
									],
									[
										28027,
										28032
									],
									[
										28343,
										28348
									],
									[
										28552,
										28557
									],
									[
										28826,
										28831
									],
									[
										29107,
										29112
									],
									[
										29415,
										29420
									],
									[
										29687,
										29692
									],
									[
										29925,
										29930
									],
									[
										30266,
										30271
									],
									[
										30631,
										30636
									],
									[
										30902,
										30907
									],
									[
										31112,
										31117
									],
									[
										31271,
										31276
									],
									[
										31524,
										31529
									],
									[
										31728,
										31733
									],
									[
										32081,
										32086
									],
									[
										32422,
										32427
									],
									[
										32788,
										32793
									],
									[
										33088,
										33093
									],
									[
										33296,
										33301
									],
									[
										33447,
										33452
									],
									[
										33630,
										33635
									],
									[
										33802,
										33807
									],
									[
										33989,
										33994
									],
									[
										34154,
										34159
									],
									[
										34351,
										34356
									],
									[
										34513,
										34518
									],
									[
										34833,
										34838
									],
									[
										35105,
										35110
									],
									[
										35231,
										35236
									],
									[
										35380,
										35385
									],
									[
										35503,
										35508
									],
									[
										35774,
										35779
									],
									[
										35941,
										35946
									],
									[
										36099,
										36104
									],
									[
										36246,
										36251
									],
									[
										36535,
										36540
									],
									[
										36648,
										36653
									],
									[
										36926,
										36931
									],
									[
										37230,
										37235
									],
									[
										37512,
										37517
									],
									[
										37731,
										37736
									],
									[
										37894,
										37899
									],
									[
										38268,
										38273
									],
									[
										38431,
										38436
									],
									[
										38532,
										38537
									],
									[
										38687,
										38692
									],
									[
										38826,
										38831
									],
									[
										39072,
										39077
									],
									[
										39236,
										39241
									],
									[
										39552,
										39557
									],
									[
										39865,
										39870
									],
									[
										40003,
										40008
									],
									[
										40282,
										40287
									],
									[
										40486,
										40491
									],
									[
										40611,
										40616
									],
									[
										40721,
										40726
									],
									[
										40859,
										40864
									],
									[
										41020,
										41025
									],
									[
										41173,
										41178
									],
									[
										41487,
										41492
									],
									[
										41796,
										41801
									],
									[
										42059,
										42064
									],
									[
										42368,
										42373
									],
									[
										42493,
										42498
									],
									[
										42603,
										42608
									],
									[
										42741,
										42746
									],
									[
										42902,
										42907
									],
									[
										43055,
										43060
									],
									[
										43377,
										43382
									],
									[
										43681,
										43686
									],
									[
										44032,
										44037
									],
									[
										44335,
										44340
									],
									[
										44636,
										44641
									],
									[
										44965,
										44970
									],
									[
										45300,
										45305
									],
									[
										45388,
										45393
									],
									[
										45671,
										45676
									],
									[
										45996,
										46001
									],
									[
										46188,
										46193
									],
									[
										46363,
										46368
									],
									[
										46546,
										46551
									],
									[
										46646,
										46651
									],
									[
										46813,
										46818
									],
									[
										47083,
										47088
									],
									[
										47435,
										47440
									],
									[
										47656,
										47661
									],
									[
										47945,
										47950
									],
									[
										48284,
										48289
									],
									[
										48534,
										48539
									],
									[
										48856,
										48861
									],
									[
										49127,
										49132
									],
									[
										49445,
										49450
									],
									[
										49713,
										49718
									],
									[
										50006,
										50011
									],
									[
										50432,
										50437
									],
									[
										50759,
										50764
									],
									[
										51059,
										51064
									],
									[
										51290,
										51295
									],
									[
										51520,
										51525
									],
									[
										51755,
										51760
									],
									[
										51970,
										51975
									],
									[
										52125,
										52130
									],
									[
										52373,
										52378
									],
									[
										52588,
										52593
									],
									[
										52743,
										52748
									],
									[
										52989,
										52994
									],
									[
										53157,
										53162
									],
									[
										53431,
										53436
									],
									[
										53703,
										53708
									],
									[
										53982,
										53987
									],
									[
										54161,
										54166
									],
									[
										54299,
										54304
									],
									[
										54541,
										54546
									],
									[
										54782,
										54787
									],
									[
										55048,
										55053
									],
									[
										55337,
										55342
									],
									[
										55619,
										55624
									],
									[
										55903,
										55908
									],
									[
										56249,
										56254
									],
									[
										56581,
										56586
									],
									[
										56904,
										56909
									],
									[
										57235,
										57240
									],
									[
										57491,
										57496
									],
									[
										57813,
										57818
									],
									[
										58109,
										58114
									],
									[
										58263,
										58268
									],
									[
										58475,
										58480
									],
									[
										58814,
										58819
									],
									[
										58999,
										59004
									],
									[
										59154,
										59159
									],
									[
										59469,
										59474
									],
									[
										59544,
										59549
									],
									[
										59847,
										59852
									],
									[
										60090,
										60095
									],
									[
										60200,
										60205
									],
									[
										60413,
										60418
									],
									[
										60585,
										60590
									],
									[
										60869,
										60874
									],
									[
										60979,
										60984
									],
									[
										61192,
										61197
									],
									[
										61364,
										61369
									],
									[
										61699,
										61704
									],
									[
										61889,
										61894
									],
									[
										62074,
										62079
									],
									[
										62246,
										62251
									],
									[
										62435,
										62440
									],
									[
										62627,
										62632
									],
									[
										62941,
										62946
									],
									[
										63141,
										63146
									],
									[
										63316,
										63321
									],
									[
										63478,
										63483
									],
									[
										63677,
										63682
									],
									[
										63859,
										63864
									],
									[
										64251,
										64256
									],
									[
										64535,
										64540
									],
									[
										64814,
										64819
									],
									[
										64980,
										64985
									],
									[
										65297,
										65302
									],
									[
										65489,
										65494
									],
									[
										65654,
										65659
									],
									[
										65845,
										65850
									],
									[
										66148,
										66153
									],
									[
										66364,
										66369
									],
									[
										66725,
										66730
									],
									[
										67066,
										67071
									],
									[
										67254,
										67259
									],
									[
										67591,
										67596
									],
									[
										67887,
										67892
									],
									[
										68113,
										68118
									],
									[
										68410,
										68415
									],
									[
										68784,
										68789
									],
									[
										69079,
										69084
									],
									[
										69265,
										69270
									],
									[
										69416,
										69421
									],
									[
										69779,
										69784
									],
									[
										70044,
										70049
									],
									[
										70387,
										70392
									],
									[
										70671,
										70676
									],
									[
										70917,
										70922
									],
									[
										71065,
										71070
									],
									[
										71299,
										71304
									],
									[
										71448,
										71453
									],
									[
										71515,
										71520
									],
									[
										71707,
										71712
									],
									[
										71879,
										71884
									],
									[
										72067,
										72072
									],
									[
										72276,
										72281
									],
									[
										72424,
										72429
									],
									[
										72579,
										72584
									],
									[
										72759,
										72764
									],
									[
										72899,
										72904
									],
									[
										73071,
										73076
									],
									[
										73286,
										73291
									],
									[
										73498,
										73503
									],
									[
										73642,
										73647
									],
									[
										73844,
										73849
									],
									[
										74003,
										74008
									],
									[
										74256,
										74261
									],
									[
										74460,
										74465
									],
									[
										74670,
										74675
									],
									[
										74865,
										74870
									],
									[
										75087,
										75092
									],
									[
										75260,
										75265
									],
									[
										75474,
										75479
									],
									[
										75629,
										75634
									],
									[
										75818,
										75823
									],
									[
										75995,
										76000
									],
									[
										76188,
										76193
									],
									[
										76357,
										76362
									],
									[
										76560,
										76565
									],
									[
										76728,
										76733
									],
									[
										76972,
										76977
									],
									[
										77275,
										77280
									],
									[
										77526,
										77531
									],
									[
										77943,
										77948
									],
									[
										78203,
										78208
									],
									[
										78602,
										78607
									],
									[
										78863,
										78868
									],
									[
										79271,
										79276
									],
									[
										79535,
										79540
									],
									[
										79948,
										79953
									],
									[
										80196,
										80201
									],
									[
										80583,
										80588
									],
									[
										80815,
										80820
									],
									[
										81193,
										81198
									],
									[
										81440,
										81445
									],
									[
										81846,
										81851
									],
									[
										82107,
										82112
									],
									[
										82523,
										82528
									],
									[
										82787,
										82792
									],
									[
										83215,
										83220
									],
									[
										83479,
										83484
									],
									[
										83886,
										83891
									],
									[
										84150,
										84155
									],
									[
										84557,
										84562
									],
									[
										84821,
										84826
									],
									[
										85233,
										85238
									],
									[
										85488,
										85493
									],
									[
										85873,
										85878
									],
									[
										86118,
										86123
									],
									[
										86511,
										86516
									],
									[
										100704,
										100709
									],
									[
										100903,
										100908
									],
									[
										101618,
										101623
									],
									[
										102000,
										102005
									],
									[
										102244,
										102249
									],
									[
										102613,
										102618
									],
									[
										102874,
										102879
									],
									[
										103367,
										103372
									],
									[
										103630,
										103635
									],
									[
										104001,
										104006
									],
									[
										104245,
										104250
									],
									[
										104614,
										104619
									],
									[
										104858,
										104863
									],
									[
										105227,
										105232
									],
									[
										105487,
										105492
									],
									[
										105898,
										105903
									],
									[
										106158,
										106163
									],
									[
										106527,
										106532
									],
									[
										106779,
										106784
									],
									[
										107171,
										107176
									],
									[
										107424,
										107429
									],
									[
										107802,
										107807
									],
									[
										108049,
										108054
									],
									[
										108420,
										108425
									],
									[
										108664,
										108669
									],
									[
										109048,
										109053
									],
									[
										109293,
										109298
									],
									[
										109685,
										109690
									],
									[
										109933,
										109938
									],
									[
										110325,
										110330
									],
									[
										110572,
										110577
									],
									[
										110940,
										110945
									],
									[
										111185,
										111190
									],
									[
										111556,
										111561
									],
									[
										111804,
										111809
									],
									[
										112180,
										112185
									],
									[
										112428,
										112433
									],
									[
										112804,
										112809
									],
									[
										113051,
										113056
									],
									[
										113425,
										113430
									],
									[
										113670,
										113675
									],
									[
										114052,
										114057
									],
									[
										114300,
										114305
									],
									[
										114671,
										114676
									],
									[
										114918,
										114923
									],
									[
										115287,
										115292
									],
									[
										115539,
										115544
									],
									[
										115936,
										115941
									],
									[
										116189,
										116194
									],
									[
										116564,
										116569
									],
									[
										116811,
										116816
									],
									[
										117191,
										117196
									],
									[
										117436,
										117441
									],
									[
										117835,
										117840
									],
									[
										118091,
										118096
									],
									[
										118505,
										118510
									],
									[
										118761,
										118766
									],
									[
										119218,
										119223
									],
									[
										119465,
										119470
									],
									[
										119836,
										119841
									],
									[
										120081,
										120086
									],
									[
										120483,
										120488
									],
									[
										120730,
										120735
									],
									[
										121126,
										121131
									],
									[
										121371,
										121376
									],
									[
										121750,
										121755
									],
									[
										121989,
										121994
									],
									[
										122393,
										122398
									],
									[
										122638,
										122643
									],
									[
										123048,
										123053
									],
									[
										123296,
										123301
									],
									[
										123651,
										123656
									],
									[
										123882,
										123887
									],
									[
										124237,
										124242
									],
									[
										124465,
										124470
									],
									[
										124830,
										124835
									],
									[
										125067,
										125072
									],
									[
										125444,
										125449
									],
									[
										125684,
										125689
									],
									[
										126044,
										126049
									],
									[
										126401,
										126406
									],
									[
										126733,
										126738
									],
									[
										126906,
										126911
									],
									[
										127215,
										127220
									],
									[
										127388,
										127393
									],
									[
										127660,
										127665
									],
									[
										127889,
										127894
									],
									[
										128323,
										128328
									],
									[
										128560,
										128565
									],
									[
										129045,
										129050
									],
									[
										129235,
										129240
									],
									[
										129425,
										129430
									],
									[
										129765,
										129770
									],
									[
										129955,
										129960
									],
									[
										130145,
										130150
									],
									[
										130410,
										130415
									],
									[
										130648,
										130653
									],
									[
										130990,
										130995
									],
									[
										131262,
										131267
									],
									[
										131497,
										131502
									],
									[
										131724,
										131729
									],
									[
										132062,
										132067
									],
									[
										132297,
										132302
									],
									[
										132680,
										132685
									],
									[
										132864,
										132869
									],
									[
										133048,
										133053
									],
									[
										133336,
										133341
									],
									[
										133520,
										133525
									],
									[
										133704,
										133709
									],
									[
										134000,
										134005
									],
									[
										134247,
										134252
									],
									[
										134485,
										134490
									],
									[
										134813,
										134818
									],
									[
										135028,
										135033
									],
									[
										135399,
										135404
									],
									[
										135583,
										135588
									],
									[
										135767,
										135772
									],
									[
										136071,
										136076
									],
									[
										136252,
										136257
									],
									[
										136423,
										136428
									],
									[
										136591,
										136596
									],
									[
										136722,
										136727
									],
									[
										136903,
										136908
									],
									[
										137154,
										137159
									],
									[
										137287,
										137292
									],
									[
										137438,
										137443
									],
									[
										137593,
										137598
									],
									[
										137805,
										137810
									],
									[
										138058,
										138063
									],
									[
										138526,
										138531
									],
									[
										138697,
										138702
									],
									[
										138845,
										138850
									],
									[
										139006,
										139011
									],
									[
										139197,
										139202
									],
									[
										177846,
										177851
									],
									[
										209287,
										209292
									],
									[
										296884,
										296889
									],
									[
										311984,
										311989
									],
									[
										312538,
										312543
									],
									[
										387647,
										387652
									],
									[
										387838,
										387843
									],
									[
										388190,
										388195
									],
									[
										388371,
										388376
									],
									[
										388542,
										388547
									],
									[
										388710,
										388715
									],
									[
										388841,
										388846
									],
									[
										389022,
										389027
									],
									[
										389273,
										389278
									],
									[
										389524,
										389529
									],
									[
										389791,
										389796
									],
									[
										389946,
										389951
									],
									[
										390158,
										390163
									],
									[
										390492,
										390497
									],
									[
										390843,
										390848
									],
									[
										391277,
										391282
									],
									[
										391857,
										391862
									],
									[
										392148,
										392153
									],
									[
										392450,
										392455
									],
									[
										392637,
										392642
									],
									[
										392803,
										392808
									],
									[
										393081,
										393086
									],
									[
										393388,
										393393
									],
									[
										393557,
										393562
									],
									[
										393883,
										393888
									],
									[
										394235,
										394240
									],
									[
										394569,
										394574
									],
									[
										394888,
										394893
									],
									[
										395057,
										395062
									],
									[
										395346,
										395351
									],
									[
										395515,
										395520
									],
									[
										395652,
										395657
									],
									[
										395842,
										395847
									],
									[
										396106,
										396111
									],
									[
										396381,
										396386
									],
									[
										396684,
										396689
									],
									[
										396855,
										396860
									],
									[
										397107,
										397112
									],
									[
										397349,
										397354
									],
									[
										397640,
										397645
									],
									[
										397970,
										397975
									],
									[
										398325,
										398330
									],
									[
										399094,
										399099
									],
									[
										399561,
										399566
									],
									[
										401149,
										401154
									],
									[
										404387,
										404392
									],
									[
										406529,
										406534
									],
									[
										406809,
										406814
									],
									[
										408017,
										408022
									],
									[
										408313,
										408318
									],
									[
										408577,
										408582
									],
									[
										409500,
										409505
									],
									[
										409793,
										409798
									],
									[
										410283,
										410288
									],
									[
										410432,
										410437
									],
									[
										410499,
										410504
									],
									[
										410691,
										410696
									],
									[
										410863,
										410868
									],
									[
										411051,
										411056
									],
									[
										411260,
										411265
									],
									[
										411408,
										411413
									],
									[
										411563,
										411568
									],
									[
										411743,
										411748
									],
									[
										411883,
										411888
									],
									[
										412055,
										412060
									],
									[
										412270,
										412275
									],
									[
										412482,
										412487
									],
									[
										412626,
										412631
									],
									[
										412828,
										412833
									],
									[
										412987,
										412992
									],
									[
										413240,
										413245
									],
									[
										413444,
										413449
									],
									[
										413654,
										413659
									],
									[
										413849,
										413854
									],
									[
										414071,
										414076
									],
									[
										414241,
										414246
									],
									[
										414449,
										414454
									],
									[
										414600,
										414605
									],
									[
										414783,
										414788
									],
									[
										414955,
										414960
									],
									[
										415142,
										415147
									],
									[
										415307,
										415312
									],
									[
										415504,
										415509
									],
									[
										415666,
										415671
									],
									[
										415904,
										415909
									],
									[
										416249,
										416254
									],
									[
										416604,
										416609
									],
									[
										416886,
										416891
									],
									[
										417147,
										417152
									],
									[
										417447,
										417452
									],
									[
										417626,
										417631
									],
									[
										417921,
										417926
									],
									[
										418273,
										418278
									],
									[
										418549,
										418554
									],
									[
										418764,
										418769
									],
									[
										419063,
										419068
									],
									[
										419180,
										419185
									],
									[
										419417,
										419422
									],
									[
										419694,
										419699
									],
									[
										419905,
										419910
									],
									[
										420155,
										420160
									],
									[
										420351,
										420356
									],
									[
										420553,
										420558
									],
									[
										420828,
										420833
									],
									[
										420975,
										420980
									],
									[
										421272,
										421277
									],
									[
										421476,
										421481
									],
									[
										421743,
										421748
									],
									[
										421913,
										421918
									],
									[
										422325,
										422330
									],
									[
										422606,
										422611
									],
									[
										422822,
										422827
									],
									[
										423005,
										423010
									],
									[
										423171,
										423176
									],
									[
										423401,
										423406
									],
									[
										423569,
										423574
									],
									[
										423853,
										423858
									],
									[
										424039,
										424044
									],
									[
										424295,
										424300
									],
									[
										424542,
										424547
									],
									[
										424702,
										424707
									],
									[
										424929,
										424934
									],
									[
										425211,
										425216
									],
									[
										425373,
										425378
									],
									[
										425533,
										425538
									],
									[
										425674,
										425679
									],
									[
										425844,
										425849
									],
									[
										425985,
										425990
									],
									[
										426201,
										426206
									],
									[
										426397,
										426402
									],
									[
										426566,
										426571
									],
									[
										426706,
										426711
									],
									[
										426910,
										426915
									],
									[
										427109,
										427114
									],
									[
										427342,
										427347
									],
									[
										427558,
										427563
									],
									[
										427840,
										427845
									],
									[
										428056,
										428061
									],
									[
										428239,
										428244
									],
									[
										428405,
										428410
									],
									[
										428635,
										428640
									],
									[
										428803,
										428808
									],
									[
										429087,
										429092
									],
									[
										429273,
										429278
									],
									[
										429529,
										429534
									],
									[
										429776,
										429781
									],
									[
										429936,
										429941
									],
									[
										430163,
										430168
									],
									[
										430445,
										430450
									],
									[
										430607,
										430612
									],
									[
										430767,
										430772
									],
									[
										430913,
										430918
									],
									[
										431116,
										431121
									],
									[
										431275,
										431280
									],
									[
										431445,
										431450
									],
									[
										431672,
										431677
									],
									[
										431880,
										431885
									],
									[
										432096,
										432101
									],
									[
										432292,
										432297
									],
									[
										432461,
										432466
									],
									[
										432601,
										432606
									],
									[
										432805,
										432810
									],
									[
										433004,
										433009
									],
									[
										433237,
										433242
									],
									[
										433453,
										433458
									],
									[
										433752,
										433757
									],
									[
										434029,
										434034
									],
									[
										434245,
										434250
									],
									[
										434551,
										434556
									],
									[
										434845,
										434850
									],
									[
										435075,
										435080
									],
									[
										435243,
										435248
									],
									[
										435527,
										435532
									],
									[
										435713,
										435718
									],
									[
										435969,
										435974
									],
									[
										436216,
										436221
									],
									[
										436376,
										436381
									],
									[
										436603,
										436608
									],
									[
										437006,
										437011
									],
									[
										437286,
										437291
									],
									[
										437446,
										437451
									],
									[
										437716,
										437721
									],
									[
										437919,
										437924
									],
									[
										438202,
										438207
									],
									[
										438372,
										438377
									],
									[
										438719,
										438724
									],
									[
										439046,
										439051
									],
									[
										439262,
										439267
									],
									[
										439458,
										439463
									],
									[
										439627,
										439632
									],
									[
										439767,
										439772
									],
									[
										439971,
										439976
									],
									[
										440170,
										440175
									],
									[
										440403,
										440408
									],
									[
										440619,
										440624
									],
									[
										440931,
										440936
									],
									[
										441232,
										441237
									],
									[
										441391,
										441396
									],
									[
										441485,
										441490
									],
									[
										441725,
										441730
									],
									[
										441991,
										441996
									],
									[
										442279,
										442284
									],
									[
										442455,
										442460
									],
									[
										442704,
										442709
									],
									[
										442995,
										443000
									],
									[
										518632,
										518637
									],
									[
										522257,
										522262
									],
									[
										522496,
										522501
									],
									[
										523141,
										523146
									],
									[
										558036,
										558041
									],
									[
										622435,
										622440
									],
									[
										624295,
										624300
									],
									[
										652825,
										652830
									],
									[
										653039,
										653044
									],
									[
										662599,
										662604
									],
									[
										715968,
										715973
									],
									[
										728137,
										728142
									],
									[
										729767,
										729772
									],
									[
										744365,
										744370
									],
									[
										756791,
										756796
									],
									[
										770549,
										770554
									],
									[
										788782,
										788787
									],
									[
										799443,
										799448
									],
									[
										848230,
										848235
									],
									[
										861802,
										861807
									],
									[
										863116,
										863121
									],
									[
										898786,
										898791
									],
									[
										908090,
										908095
									],
									[
										960842,
										960847
									],
									[
										962133,
										962138
									],
									[
										963301,
										963306
									],
									[
										965577,
										965582
									],
									[
										999719,
										999724
									],
									[
										1000241,
										1000246
									],
									[
										1003066,
										1003071
									],
									[
										1010575,
										1010580
									],
									[
										1011813,
										1011818
									],
									[
										1012001,
										1012006
									],
									[
										1017542,
										1017547
									],
									[
										1020362,
										1020367
									],
									[
										1022390,
										1022395
									],
									[
										1083051,
										1083056
									],
									[
										1284445,
										1284450
									],
									[
										1354317,
										1354322
									],
									[
										1480747,
										1480752
									],
									[
										1481070,
										1481075
									],
									[
										1482883,
										1482888
									],
									[
										1485923,
										1485928
									],
									[
										1486989,
										1486994
									],
									[
										1487266,
										1487271
									],
									[
										1487437,
										1487442
									],
									[
										1487720,
										1487725
									],
									[
										1487879,
										1487884
									],
									[
										1488145,
										1488150
									],
									[
										1488466,
										1488471
									],
									[
										1488669,
										1488674
									],
									[
										1488969,
										1488974
									],
									[
										1489241,
										1489246
									],
									[
										1489528,
										1489533
									],
									[
										1489648,
										1489653
									],
									[
										1489814,
										1489819
									],
									[
										1490080,
										1490085
									],
									[
										1490412,
										1490417
									],
									[
										1490560,
										1490565
									],
									[
										1490809,
										1490814
									],
									[
										1491082,
										1491087
									],
									[
										1491309,
										1491314
									],
									[
										1491617,
										1491622
									],
									[
										1491922,
										1491927
									],
									[
										1492263,
										1492268
									],
									[
										1492603,
										1492608
									],
									[
										1492895,
										1492900
									],
									[
										1493172,
										1493177
									],
									[
										1493321,
										1493326
									],
									[
										1493443,
										1493448
									],
									[
										1493783,
										1493788
									],
									[
										1493941,
										1493946
									],
									[
										1494048,
										1494053
									],
									[
										1494194,
										1494199
									],
									[
										1494415,
										1494420
									],
									[
										1494522,
										1494527
									],
									[
										1494668,
										1494673
									],
									[
										1494884,
										1494889
									],
									[
										1494991,
										1494996
									],
									[
										1495136,
										1495141
									],
									[
										1495356,
										1495361
									],
									[
										1495625,
										1495630
									],
									[
										1495901,
										1495906
									],
									[
										1496087,
										1496092
									],
									[
										1496364,
										1496369
									],
									[
										1496631,
										1496636
									],
									[
										1496854,
										1496859
									],
									[
										1497136,
										1497141
									],
									[
										1497372,
										1497377
									],
									[
										1497625,
										1497630
									],
									[
										1497883,
										1497888
									],
									[
										1498133,
										1498138
									],
									[
										1498410,
										1498415
									],
									[
										1498721,
										1498726
									],
									[
										1498992,
										1498997
									],
									[
										1499282,
										1499287
									],
									[
										1499585,
										1499590
									],
									[
										1499820,
										1499825
									],
									[
										1499925,
										1499930
									],
									[
										1500069,
										1500074
									],
									[
										1500289,
										1500294
									],
									[
										1500394,
										1500399
									],
									[
										1500538,
										1500543
									],
									[
										1500792,
										1500797
									],
									[
										1501087,
										1501092
									],
									[
										1501367,
										1501372
									],
									[
										1501610,
										1501615
									],
									[
										1501878,
										1501883
									],
									[
										1502096,
										1502101
									],
									[
										1502401,
										1502406
									],
									[
										1502570,
										1502575
									],
									[
										1502727,
										1502732
									],
									[
										1503002,
										1503007
									],
									[
										1503191,
										1503196
									],
									[
										1503301,
										1503306
									],
									[
										1503489,
										1503494
									],
									[
										1503711,
										1503716
									],
									[
										1503918,
										1503923
									],
									[
										1504123,
										1504128
									],
									[
										1504463,
										1504468
									],
									[
										1504716,
										1504721
									],
									[
										1504930,
										1504935
									],
									[
										1505241,
										1505246
									],
									[
										1505399,
										1505404
									],
									[
										1505579,
										1505584
									],
									[
										1505763,
										1505768
									],
									[
										1505887,
										1505892
									],
									[
										1506096,
										1506101
									],
									[
										1506310,
										1506315
									],
									[
										1506551,
										1506556
									],
									[
										1506618,
										1506623
									],
									[
										1506770,
										1506775
									],
									[
										1506891,
										1506896
									],
									[
										1507075,
										1507080
									],
									[
										1507274,
										1507279
									],
									[
										1507420,
										1507425
									],
									[
										1507564,
										1507569
									],
									[
										1507766,
										1507771
									],
									[
										1507925,
										1507930
									],
									[
										1508178,
										1508183
									],
									[
										1508382,
										1508387
									],
									[
										1508592,
										1508597
									],
									[
										1508787,
										1508792
									],
									[
										1509009,
										1509014
									],
									[
										1509179,
										1509184
									],
									[
										1509387,
										1509392
									],
									[
										1509538,
										1509543
									],
									[
										1509721,
										1509726
									],
									[
										1509893,
										1509898
									],
									[
										1510080,
										1510085
									],
									[
										1510245,
										1510250
									],
									[
										1510442,
										1510447
									],
									[
										1510604,
										1510609
									],
									[
										1510887,
										1510892
									],
									[
										1511045,
										1511050
									],
									[
										1511225,
										1511230
									],
									[
										1511409,
										1511414
									],
									[
										1511558,
										1511563
									],
									[
										1511625,
										1511630
									],
									[
										1511754,
										1511759
									],
									[
										1511963,
										1511968
									],
									[
										1512111,
										1512116
									],
									[
										1512232,
										1512237
									],
									[
										1512432,
										1512437
									],
									[
										1512721,
										1512726
									],
									[
										1512920,
										1512925
									],
									[
										1513055,
										1513060
									],
									[
										1513257,
										1513262
									],
									[
										1513416,
										1513421
									],
									[
										1513669,
										1513674
									],
									[
										1513873,
										1513878
									],
									[
										1514083,
										1514088
									],
									[
										1514278,
										1514283
									],
									[
										1514500,
										1514505
									],
									[
										1514670,
										1514675
									],
									[
										1514878,
										1514883
									],
									[
										1515029,
										1515034
									],
									[
										1515212,
										1515217
									],
									[
										1515384,
										1515389
									],
									[
										1515571,
										1515576
									],
									[
										1515736,
										1515741
									],
									[
										1515933,
										1515938
									],
									[
										1516095,
										1516100
									],
									[
										1516375,
										1516380
									],
									[
										1516533,
										1516538
									],
									[
										1516713,
										1516718
									],
									[
										1516897,
										1516902
									],
									[
										1517021,
										1517026
									],
									[
										1517230,
										1517235
									],
									[
										1517444,
										1517449
									],
									[
										1517685,
										1517690
									],
									[
										1517752,
										1517757
									],
									[
										1517904,
										1517909
									],
									[
										1518025,
										1518030
									],
									[
										1518209,
										1518214
									],
									[
										1518408,
										1518413
									],
									[
										1518554,
										1518559
									],
									[
										1518698,
										1518703
									],
									[
										1518900,
										1518905
									],
									[
										1519059,
										1519064
									],
									[
										1519312,
										1519317
									],
									[
										1519516,
										1519521
									],
									[
										1519726,
										1519731
									],
									[
										1519921,
										1519926
									],
									[
										1520143,
										1520148
									],
									[
										1520313,
										1520318
									],
									[
										1520521,
										1520526
									],
									[
										1520672,
										1520677
									],
									[
										1520855,
										1520860
									],
									[
										1521027,
										1521032
									],
									[
										1521214,
										1521219
									],
									[
										1521379,
										1521384
									],
									[
										1521576,
										1521581
									],
									[
										1521738,
										1521743
									],
									[
										1522077,
										1522082
									],
									[
										1522361,
										1522366
									],
									[
										1522428,
										1522433
									],
									[
										1522685,
										1522690
									],
									[
										1522999,
										1523004
									],
									[
										1523318,
										1523323
									],
									[
										1523527,
										1523532
									],
									[
										1523804,
										1523809
									],
									[
										1524088,
										1524093
									],
									[
										1524399,
										1524404
									],
									[
										1524674,
										1524679
									],
									[
										1524915,
										1524920
									],
									[
										1525259,
										1525264
									],
									[
										1525610,
										1525615
									],
									[
										1525812,
										1525817
									],
									[
										1525971,
										1525976
									],
									[
										1526224,
										1526229
									],
									[
										1526428,
										1526433
									],
									[
										1526784,
										1526789
									],
									[
										1527128,
										1527133
									],
									[
										1527497,
										1527502
									],
									[
										1527800,
										1527805
									],
									[
										1528008,
										1528013
									],
									[
										1528159,
										1528164
									],
									[
										1528342,
										1528347
									],
									[
										1528514,
										1528519
									],
									[
										1528701,
										1528706
									],
									[
										1528866,
										1528871
									],
									[
										1529063,
										1529068
									],
									[
										1529225,
										1529230
									],
									[
										1529556,
										1529561
									],
									[
										1529832,
										1529837
									],
									[
										1529899,
										1529904
									],
									[
										1530148,
										1530153
									],
									[
										1530454,
										1530459
									],
									[
										1530765,
										1530770
									],
									[
										1530974,
										1530979
									],
									[
										1531243,
										1531248
									],
									[
										1531519,
										1531524
									],
									[
										1531822,
										1531827
									],
									[
										1532089,
										1532094
									],
									[
										1532322,
										1532327
									],
									[
										1532658,
										1532663
									],
									[
										1533018,
										1533023
									],
									[
										1533284,
										1533289
									],
									[
										1533486,
										1533491
									],
									[
										1533645,
										1533650
									],
									[
										1533898,
										1533903
									],
									[
										1534102,
										1534107
									],
									[
										1534450,
										1534455
									],
									[
										1534786,
										1534791
									],
									[
										1535147,
										1535152
									],
									[
										1535442,
										1535447
									],
									[
										1535650,
										1535655
									],
									[
										1535801,
										1535806
									],
									[
										1535984,
										1535989
									],
									[
										1536156,
										1536161
									],
									[
										1536343,
										1536348
									],
									[
										1536508,
										1536513
									],
									[
										1536705,
										1536710
									],
									[
										1536867,
										1536872
									],
									[
										1537182,
										1537187
									],
									[
										1537468,
										1537473
									],
									[
										1537631,
										1537636
									],
									[
										1537911,
										1537916
									],
									[
										1538149,
										1538154
									],
									[
										1538458,
										1538463
									],
									[
										1538725,
										1538730
									],
									[
										1538996,
										1539001
									],
									[
										1539283,
										1539288
									],
									[
										1539584,
										1539589
									],
									[
										1539689,
										1539694
									],
									[
										1540006,
										1540011
									],
									[
										1540286,
										1540291
									],
									[
										1540567,
										1540572
									],
									[
										1540884,
										1540889
									],
									[
										1541087,
										1541092
									],
									[
										1541413,
										1541418
									],
									[
										1541711,
										1541716
									],
									[
										1541916,
										1541921
									],
									[
										1542082,
										1542087
									],
									[
										1542285,
										1542290
									],
									[
										1542600,
										1542605
									],
									[
										1542839,
										1542844
									],
									[
										1543096,
										1543101
									],
									[
										1543260,
										1543265
									],
									[
										1543562,
										1543567
									],
									[
										1543818,
										1543823
									],
									[
										1543944,
										1543949
									],
									[
										1544093,
										1544098
									],
									[
										1544216,
										1544221
									],
									[
										1544492,
										1544497
									],
									[
										1544618,
										1544623
									],
									[
										1544767,
										1544772
									],
									[
										1544890,
										1544895
									],
									[
										1545163,
										1545168
									],
									[
										1545499,
										1545504
									],
									[
										1545612,
										1545617
									],
									[
										1545944,
										1545949
									],
									[
										1546251,
										1546256
									],
									[
										1546560,
										1546565
									],
									[
										1546876,
										1546881
									],
									[
										1547035,
										1547040
									],
									[
										1547129,
										1547134
									],
									[
										1547383,
										1547388
									],
									[
										1547696,
										1547701
									],
									[
										1547822,
										1547827
									],
									[
										1547971,
										1547976
									],
									[
										1548096,
										1548101
									],
									[
										1548397,
										1548402
									],
									[
										1548558,
										1548563
									],
									[
										1548849,
										1548854
									],
									[
										1549033,
										1549038
									],
									[
										1549193,
										1549198
									],
									[
										1549373,
										1549378
									],
									[
										1549509,
										1549514
									],
									[
										1549673,
										1549678
									],
									[
										1549840,
										1549845
									],
									[
										1549979,
										1549984
									],
									[
										1550129,
										1550134
									],
									[
										1550176,
										1550181
									],
									[
										1550386,
										1550391
									],
									[
										1550562,
										1550567
									],
									[
										1550735,
										1550740
									],
									[
										1550912,
										1550917
									],
									[
										1551088,
										1551093
									],
									[
										1551262,
										1551267
									],
									[
										1551416,
										1551421
									],
									[
										1551570,
										1551575
									],
									[
										1551696,
										1551701
									],
									[
										1551852,
										1551857
									],
									[
										1551978,
										1551983
									],
									[
										1552237,
										1552242
									],
									[
										1552417,
										1552422
									],
									[
										1552533,
										1552538
									],
									[
										1552806,
										1552811
									],
									[
										1553171,
										1553176
									],
									[
										1553458,
										1553463
									],
									[
										1553744,
										1553749
									],
									[
										1553924,
										1553929
									],
									[
										1554272,
										1554277
									],
									[
										1554394,
										1554399
									],
									[
										1554649,
										1554654
									],
									[
										1554897,
										1554902
									],
									[
										1555030,
										1555035
									],
									[
										1555190,
										1555195
									],
									[
										1555353,
										1555358
									],
									[
										1555488,
										1555493
									],
									[
										1555633,
										1555638
									],
									[
										1555678,
										1555683
									],
									[
										1555883,
										1555888
									],
									[
										1556231,
										1556236
									],
									[
										1556338,
										1556343
									],
									[
										1556616,
										1556621
									],
									[
										1556963,
										1556968
									],
									[
										1557089,
										1557094
									],
									[
										1557238,
										1557243
									],
									[
										1557363,
										1557368
									],
									[
										1557600,
										1557605
									],
									[
										1557769,
										1557774
									],
									[
										1557941,
										1557946
									],
									[
										1558227,
										1558232
									],
									[
										1558475,
										1558480
									],
									[
										1558773,
										1558778
									],
									[
										1559030,
										1559035
									],
									[
										1559217,
										1559222
									],
									[
										1559484,
										1559489
									],
									[
										1559808,
										1559813
									],
									[
										1560079,
										1560084
									],
									[
										1560361,
										1560366
									],
									[
										1560641,
										1560646
									],
									[
										1560810,
										1560815
									],
									[
										1561157,
										1561162
									],
									[
										1561414,
										1561419
									],
									[
										1561734,
										1561739
									],
									[
										1562084,
										1562089
									],
									[
										1562334,
										1562339
									],
									[
										1562573,
										1562578
									],
									[
										1562882,
										1562887
									],
									[
										1563099,
										1563104
									],
									[
										1563333,
										1563338
									],
									[
										1563444,
										1563449
									],
									[
										1563564,
										1563569
									],
									[
										1563876,
										1563881
									],
									[
										1563976,
										1563981
									],
									[
										1564133,
										1564138
									],
									[
										1564368,
										1564373
									],
									[
										1564468,
										1564473
									],
									[
										1564625,
										1564630
									],
									[
										1564918,
										1564923
									],
									[
										1565246,
										1565251
									],
									[
										1565575,
										1565580
									],
									[
										1565881,
										1565886
									],
									[
										1566167,
										1566172
									],
									[
										1566509,
										1566514
									],
									[
										1566707,
										1566712
									],
									[
										1566918,
										1566923
									],
									[
										1567034,
										1567039
									],
									[
										1567235,
										1567240
									],
									[
										1567365,
										1567370
									],
									[
										1567700,
										1567705
									],
									[
										1567796,
										1567801
									],
									[
										1568144,
										1568149
									],
									[
										1568325,
										1568330
									],
									[
										1568581,
										1568586
									],
									[
										1568736,
										1568741
									],
									[
										1568986,
										1568991
									],
									[
										1569122,
										1569127
									],
									[
										1569415,
										1569420
									],
									[
										1569588,
										1569593
									],
									[
										1569861,
										1569866
									],
									[
										1570089,
										1570094
									],
									[
										1570424,
										1570429
									],
									[
										1570769,
										1570774
									],
									[
										1570951,
										1570956
									],
									[
										1571107,
										1571112
									],
									[
										1571470,
										1571475
									],
									[
										1571676,
										1571681
									],
									[
										1571891,
										1571896
									],
									[
										1572196,
										1572201
									],
									[
										1572531,
										1572536
									],
									[
										1572810,
										1572815
									],
									[
										1572963,
										1572968
									],
									[
										1573218,
										1573223
									],
									[
										1573506,
										1573511
									],
									[
										1573744,
										1573749
									],
									[
										1573893,
										1573898
									],
									[
										1574015,
										1574020
									],
									[
										1574256,
										1574261
									],
									[
										1574555,
										1574560
									],
									[
										1574892,
										1574897
									],
									[
										1575012,
										1575017
									],
									[
										1575263,
										1575268
									],
									[
										1575555,
										1575560
									],
									[
										1575785,
										1575790
									],
									[
										1576068,
										1576073
									],
									[
										1576329,
										1576334
									],
									[
										1576574,
										1576579
									],
									[
										1576822,
										1576827
									],
									[
										1576957,
										1576962
									],
									[
										1577242,
										1577247
									],
									[
										1577378,
										1577383
									],
									[
										1577598,
										1577603
									],
									[
										1577845,
										1577850
									],
									[
										1577947,
										1577952
									],
									[
										1578124,
										1578129
									],
									[
										1578225,
										1578230
									],
									[
										1578384,
										1578389
									],
									[
										1578681,
										1578686
									],
									[
										1578903,
										1578908
									],
									[
										1579217,
										1579222
									],
									[
										1579578,
										1579583
									],
									[
										1579818,
										1579823
									],
									[
										1580037,
										1580042
									],
									[
										1580200,
										1580205
									],
									[
										1580527,
										1580532
									],
									[
										1611389,
										1611394
									],
									[
										1614184,
										1614189
									],
									[
										1614347,
										1614352
									],
									[
										1614448,
										1614453
									],
									[
										1614603,
										1614608
									],
									[
										1614751,
										1614756
									],
									[
										1615078,
										1615083
									],
									[
										1615241,
										1615246
									],
									[
										1615342,
										1615347
									],
									[
										1615497,
										1615502
									],
									[
										1615636,
										1615641
									],
									[
										1615898,
										1615903
									],
									[
										1616113,
										1616118
									],
									[
										1616268,
										1616273
									],
									[
										1616536,
										1616541
									],
									[
										1616751,
										1616756
									],
									[
										1616906,
										1616911
									],
									[
										1617148,
										1617153
									],
									[
										1617307,
										1617312
									],
									[
										1617566,
										1617571
									],
									[
										1617856,
										1617861
									],
									[
										1618164,
										1618169
									],
									[
										1618302,
										1618307
									],
									[
										1618576,
										1618581
									],
									[
										1618780,
										1618785
									],
									[
										1618905,
										1618910
									],
									[
										1619015,
										1619020
									],
									[
										1619153,
										1619158
									],
									[
										1619314,
										1619319
									],
									[
										1619467,
										1619472
									],
									[
										1619776,
										1619781
									],
									[
										1620091,
										1620096
									],
									[
										1620384,
										1620389
									],
									[
										1620826,
										1620831
									],
									[
										1621169,
										1621174
									],
									[
										1621478,
										1621483
									],
									[
										1621720,
										1621725
									],
									[
										1621847,
										1621852
									],
									[
										1622026,
										1622031
									],
									[
										1622166,
										1622171
									],
									[
										1622307,
										1622312
									],
									[
										1622460,
										1622465
									],
									[
										1622626,
										1622631
									],
									[
										1622801,
										1622806
									],
									[
										1623090,
										1623095
									],
									[
										1623360,
										1623365
									],
									[
										1623470,
										1623475
									],
									[
										1623683,
										1623688
									],
									[
										1623855,
										1623860
									],
									[
										1624152,
										1624157
									],
									[
										1624262,
										1624267
									],
									[
										1624475,
										1624480
									],
									[
										1624647,
										1624652
									],
									[
										1624916,
										1624921
									],
									[
										1625181,
										1625186
									],
									[
										1625276,
										1625281
									],
									[
										1625375,
										1625380
									],
									[
										1625625,
										1625630
									],
									[
										1625972,
										1625977
									],
									[
										1626152,
										1626157
									],
									[
										1626312,
										1626317
									],
									[
										1626456,
										1626461
									],
									[
										1626731,
										1626736
									],
									[
										1627076,
										1627081
									],
									[
										1627350,
										1627355
									],
									[
										1627795,
										1627800
									],
									[
										1628190,
										1628195
									],
									[
										1628538,
										1628543
									],
									[
										1628718,
										1628723
									],
									[
										1628878,
										1628883
									],
									[
										1629022,
										1629027
									],
									[
										1629272,
										1629277
									],
									[
										1629444,
										1629449
									],
									[
										1629747,
										1629752
									],
									[
										1629930,
										1629935
									],
									[
										1630218,
										1630223
									],
									[
										1630399,
										1630404
									],
									[
										1630687,
										1630692
									],
									[
										1630837,
										1630842
									],
									[
										1631186,
										1631191
									],
									[
										1631349,
										1631354
									],
									[
										1631450,
										1631455
									],
									[
										1631605,
										1631610
									],
									[
										1631744,
										1631749
									],
									[
										1632042,
										1632047
									],
									[
										1632267,
										1632272
									],
									[
										1632615,
										1632620
									],
									[
										1632992,
										1632997
									],
									[
										1633313,
										1633318
									],
									[
										1633545,
										1633550
									],
									[
										1633857,
										1633862
									],
									[
										1636423,
										1636428
									],
									[
										1641131,
										1641136
									],
									[
										1641347,
										1641352
									],
									[
										1641584,
										1641589
									],
									[
										1641824,
										1641829
									],
									[
										1642230,
										1642235
									],
									[
										1642591,
										1642596
									],
									[
										1642856,
										1642861
									],
									[
										1643013,
										1643018
									],
									[
										1643331,
										1643336
									],
									[
										1643562,
										1643567
									],
									[
										1643911,
										1643916
									],
									[
										1644274,
										1644279
									],
									[
										1644427,
										1644432
									],
									[
										1644715,
										1644720
									],
									[
										1645018,
										1645023
									],
									[
										1645309,
										1645314
									],
									[
										1645683,
										1645688
									],
									[
										1645899,
										1645904
									],
									[
										1646183,
										1646188
									],
									[
										1646460,
										1646465
									],
									[
										1646727,
										1646732
									],
									[
										1646943,
										1646948
									],
									[
										1647242,
										1647247
									],
									[
										1647542,
										1647547
									],
									[
										1647859,
										1647864
									],
									[
										1648174,
										1648179
									],
									[
										1648493,
										1648498
									],
									[
										1648767,
										1648772
									],
									[
										1649033,
										1649038
									],
									[
										1649188,
										1649193
									],
									[
										1649459,
										1649464
									],
									[
										1649641,
										1649646
									],
									[
										1649809,
										1649814
									],
									[
										1650091,
										1650096
									],
									[
										1650404,
										1650409
									],
									[
										1650572,
										1650577
									],
									[
										1650860,
										1650865
									],
									[
										1651146,
										1651151
									],
									[
										1651434,
										1651439
									],
									[
										1651817,
										1651822
									],
									[
										1652063,
										1652068
									],
									[
										1652316,
										1652321
									],
									[
										1652675,
										1652680
									],
									[
										1652955,
										1652960
									],
									[
										1653239,
										1653244
									],
									[
										1653711,
										1653716
									],
									[
										1653956,
										1653961
									],
									[
										1654065,
										1654070
									],
									[
										1654203,
										1654208
									],
									[
										1654349,
										1654354
									],
									[
										1654667,
										1654672
									],
									[
										1654938,
										1654943
									],
									[
										1655279,
										1655284
									],
									[
										1655546,
										1655551
									],
									[
										1655672,
										1655677
									],
									[
										1655821,
										1655826
									],
									[
										1655944,
										1655949
									],
									[
										1656200,
										1656205
									],
									[
										1656342,
										1656347
									],
									[
										1656716,
										1656721
									],
									[
										1657065,
										1657070
									],
									[
										1657328,
										1657333
									],
									[
										1657599,
										1657604
									],
									[
										1657898,
										1657903
									],
									[
										1658203,
										1658208
									],
									[
										1658291,
										1658296
									],
									[
										1658544,
										1658549
									],
									[
										1658839,
										1658844
									],
									[
										1659031,
										1659036
									],
									[
										1659206,
										1659211
									],
									[
										1659389,
										1659394
									],
									[
										1659489,
										1659494
									],
									[
										1659656,
										1659661
									],
									[
										1659975,
										1659980
									],
									[
										1660124,
										1660129
									],
									[
										1660212,
										1660217
									],
									[
										1660496,
										1660501
									],
									[
										1660676,
										1660681
									],
									[
										1660839,
										1660844
									],
									[
										1660927,
										1660932
									],
									[
										1661228,
										1661233
									],
									[
										1661519,
										1661524
									],
									[
										1661726,
										1661731
									],
									[
										1661875,
										1661880
									],
									[
										1661963,
										1661968
									],
									[
										1662258,
										1662263
									],
									[
										1662407,
										1662412
									],
									[
										1662495,
										1662500
									],
									[
										1662781,
										1662786
									],
									[
										1662988,
										1662993
									],
									[
										1663137,
										1663142
									],
									[
										1663225,
										1663230
									],
									[
										1663486,
										1663491
									],
									[
										1663788,
										1663793
									],
									[
										1663937,
										1663942
									],
									[
										1664025,
										1664030
									],
									[
										1664241,
										1664246
									],
									[
										1664466,
										1664471
									],
									[
										1664748,
										1664753
									],
									[
										1664970,
										1664975
									],
									[
										1665205,
										1665210
									],
									[
										1665420,
										1665425
									],
									[
										1665570,
										1665575
									],
									[
										1665733,
										1665738
									],
									[
										1665974,
										1665979
									],
									[
										1666142,
										1666147
									],
									[
										1666411,
										1666416
									],
									[
										1666678,
										1666683
									],
									[
										1666952,
										1666957
									],
									[
										1667160,
										1667165
									],
									[
										1667420,
										1667425
									],
									[
										1667765,
										1667770
									],
									[
										1667954,
										1667959
									],
									[
										1668197,
										1668202
									],
									[
										1668427,
										1668432
									],
									[
										1668624,
										1668629
									],
									[
										1668853,
										1668858
									],
									[
										1669088,
										1669093
									],
									[
										1669380,
										1669385
									],
									[
										1669490,
										1669495
									],
									[
										1669703,
										1669708
									],
									[
										1669875,
										1669880
									],
									[
										1670241,
										1670246
									],
									[
										1670543,
										1670548
									],
									[
										1670827,
										1670832
									],
									[
										1671100,
										1671105
									],
									[
										1671297,
										1671302
									],
									[
										1671404,
										1671409
									],
									[
										1671658,
										1671663
									],
									[
										1671915,
										1671920
									],
									[
										1672062,
										1672067
									],
									[
										1672282,
										1672287
									],
									[
										1672445,
										1672450
									],
									[
										1672828,
										1672833
									],
									[
										1673138,
										1673143
									],
									[
										1673432,
										1673437
									],
									[
										1673721,
										1673726
									],
									[
										1673937,
										1673942
									],
									[
										1674107,
										1674112
									],
									[
										1674413,
										1674418
									],
									[
										1674733,
										1674738
									],
									[
										1674990,
										1674995
									],
									[
										1675265,
										1675270
									],
									[
										1675398,
										1675403
									],
									[
										1675566,
										1675571
									],
									[
										1675902,
										1675907
									],
									[
										1676224,
										1676229
									],
									[
										1676455,
										1676460
									],
									[
										1676842,
										1676847
									],
									[
										1676961,
										1676966
									],
									[
										1677181,
										1677186
									],
									[
										1677371,
										1677376
									],
									[
										1677589,
										1677594
									],
									[
										1677860,
										1677865
									],
									[
										1678158,
										1678163
									],
									[
										1678255,
										1678260
									],
									[
										1678561,
										1678566
									],
									[
										1678781,
										1678786
									],
									[
										1679123,
										1679128
									],
									[
										1679464,
										1679469
									],
									[
										1679806,
										1679811
									],
									[
										1680140,
										1680145
									],
									[
										1680470,
										1680475
									],
									[
										1680763,
										1680768
									],
									[
										1680969,
										1680974
									],
									[
										1681162,
										1681167
									],
									[
										1681353,
										1681358
									],
									[
										1681532,
										1681537
									],
									[
										1681850,
										1681855
									],
									[
										1682190,
										1682195
									],
									[
										1682526,
										1682531
									],
									[
										1682859,
										1682864
									],
									[
										1683245,
										1683250
									],
									[
										1683569,
										1683574
									],
									[
										1683806,
										1683811
									],
									[
										1684063,
										1684068
									],
									[
										1684309,
										1684314
									],
									[
										1684528,
										1684533
									],
									[
										1684764,
										1684769
									],
									[
										1685025,
										1685030
									],
									[
										1685253,
										1685258
									],
									[
										1685409,
										1685414
									],
									[
										1685582,
										1685587
									],
									[
										1685931,
										1685936
									],
									[
										1686165,
										1686170
									],
									[
										1686294,
										1686299
									],
									[
										1686386,
										1686391
									],
									[
										1686677,
										1686682
									],
									[
										1686769,
										1686774
									],
									[
										1687060,
										1687065
									],
									[
										1687152,
										1687157
									],
									[
										1687317,
										1687322
									],
									[
										1687548,
										1687553
									],
									[
										1687794,
										1687799
									],
									[
										1687886,
										1687891
									],
									[
										1688146,
										1688151
									],
									[
										1688161,
										1688166
									],
									[
										1688423,
										1688428
									],
									[
										1688629,
										1688634
									],
									[
										1688917,
										1688922
									],
									[
										1689172,
										1689177
									],
									[
										1689380,
										1689385
									],
									[
										1689549,
										1689554
									],
									[
										1689657,
										1689662
									],
									[
										1690046,
										1690051
									],
									[
										1690361,
										1690366
									],
									[
										1690693,
										1690698
									],
									[
										1690994,
										1690999
									],
									[
										1691271,
										1691276
									],
									[
										1691476,
										1691481
									],
									[
										1691642,
										1691647
									],
									[
										1691845,
										1691850
									],
									[
										1692186,
										1692191
									],
									[
										1692480,
										1692485
									],
									[
										1692783,
										1692788
									],
									[
										1692988,
										1692993
									],
									[
										1693154,
										1693159
									],
									[
										1693357,
										1693362
									],
									[
										1693677,
										1693682
									],
									[
										1693983,
										1693988
									],
									[
										1694290,
										1694295
									],
									[
										1694495,
										1694500
									],
									[
										1694661,
										1694666
									],
									[
										1694864,
										1694869
									],
									[
										1695188,
										1695193
									],
									[
										1695500,
										1695505
									],
									[
										1695813,
										1695818
									],
									[
										1696018,
										1696023
									],
									[
										1696184,
										1696189
									],
									[
										1696387,
										1696392
									],
									[
										1696717,
										1696722
									],
									[
										1697031,
										1697036
									],
									[
										1697346,
										1697351
									],
									[
										1697551,
										1697556
									],
									[
										1697717,
										1697722
									],
									[
										1697920,
										1697925
									],
									[
										1698252,
										1698257
									],
									[
										1698568,
										1698573
									],
									[
										1698885,
										1698890
									],
									[
										1699090,
										1699095
									],
									[
										1699256,
										1699261
									],
									[
										1699459,
										1699464
									],
									[
										1699793,
										1699798
									],
									[
										1700104,
										1700109
									],
									[
										1700416,
										1700421
									],
									[
										1700621,
										1700626
									],
									[
										1700787,
										1700792
									],
									[
										1700990,
										1700995
									],
									[
										1701319,
										1701324
									],
									[
										1701635,
										1701640
									],
									[
										1701952,
										1701957
									],
									[
										1702157,
										1702162
									],
									[
										1702323,
										1702328
									],
									[
										1702526,
										1702531
									],
									[
										1702860,
										1702865
									],
									[
										1703172,
										1703177
									],
									[
										1703485,
										1703490
									],
									[
										1703690,
										1703695
									],
									[
										1703856,
										1703861
									],
									[
										1704059,
										1704064
									],
									[
										1704389,
										1704394
									],
									[
										1704701,
										1704706
									],
									[
										1705014,
										1705019
									],
									[
										1705219,
										1705224
									],
									[
										1705385,
										1705390
									],
									[
										1705588,
										1705593
									],
									[
										1705918,
										1705923
									],
									[
										1706261,
										1706266
									],
									[
										1706398,
										1706403
									],
									[
										1706724,
										1706729
									],
									[
										1707035,
										1707040
									],
									[
										1707240,
										1707245
									],
									[
										1707406,
										1707411
									],
									[
										1707609,
										1707614
									],
									[
										1707937,
										1707942
									],
									[
										1708249,
										1708254
									],
									[
										1708562,
										1708567
									],
									[
										1708767,
										1708772
									],
									[
										1708933,
										1708938
									],
									[
										1709136,
										1709141
									],
									[
										1709466,
										1709471
									],
									[
										1709744,
										1709749
									],
									[
										1710073,
										1710078
									],
									[
										1710276,
										1710281
									],
									[
										1710614,
										1710619
									],
									[
										1710924,
										1710929
									],
									[
										1711129,
										1711134
									],
									[
										1711295,
										1711300
									],
									[
										1711498,
										1711503
									],
									[
										1711825,
										1711830
									],
									[
										1712084,
										1712089
									],
									[
										1712370,
										1712375
									],
									[
										1712687,
										1712692
									],
									[
										1712892,
										1712897
									],
									[
										1713058,
										1713063
									],
									[
										1713261,
										1713266
									],
									[
										1713595,
										1713600
									],
									[
										1713909,
										1713914
									],
									[
										1714224,
										1714229
									],
									[
										1714429,
										1714434
									],
									[
										1714595,
										1714600
									],
									[
										1714798,
										1714803
									],
									[
										1715130,
										1715135
									],
									[
										1715441,
										1715446
									],
									[
										1715753,
										1715758
									],
									[
										1715958,
										1715963
									],
									[
										1716124,
										1716129
									],
									[
										1716327,
										1716332
									],
									[
										1716656,
										1716661
									],
									[
										1716970,
										1716975
									],
									[
										1717285,
										1717290
									],
									[
										1717490,
										1717495
									],
									[
										1717656,
										1717661
									],
									[
										1717859,
										1717864
									],
									[
										1718191,
										1718196
									],
									[
										1718506,
										1718511
									],
									[
										1718822,
										1718827
									],
									[
										1719027,
										1719032
									],
									[
										1719193,
										1719198
									],
									[
										1719396,
										1719401
									],
									[
										1719729,
										1719734
									],
									[
										1720040,
										1720045
									],
									[
										1720352,
										1720357
									],
									[
										1720557,
										1720562
									],
									[
										1720723,
										1720728
									],
									[
										1720926,
										1720931
									],
									[
										1721255,
										1721260
									],
									[
										1721567,
										1721572
									],
									[
										1721880,
										1721885
									],
									[
										1722085,
										1722090
									],
									[
										1722251,
										1722256
									],
									[
										1722454,
										1722459
									],
									[
										1722784,
										1722789
									],
									[
										1723095,
										1723100
									],
									[
										1723407,
										1723412
									],
									[
										1723612,
										1723617
									],
									[
										1723778,
										1723783
									],
									[
										1723981,
										1723986
									],
									[
										1724310,
										1724315
									],
									[
										1724622,
										1724627
									],
									[
										1724935,
										1724940
									],
									[
										1725140,
										1725145
									],
									[
										1725306,
										1725311
									],
									[
										1725509,
										1725514
									],
									[
										1725839,
										1725844
									],
									[
										1726154,
										1726159
									],
									[
										1726470,
										1726475
									],
									[
										1726675,
										1726680
									],
									[
										1726841,
										1726846
									],
									[
										1727044,
										1727049
									],
									[
										1727377,
										1727382
									],
									[
										1727636,
										1727641
									],
									[
										1727987,
										1727992
									],
									[
										1728290,
										1728295
									],
									[
										1728495,
										1728500
									],
									[
										1728661,
										1728666
									],
									[
										1728864,
										1728869
									],
									[
										1729184,
										1729189
									],
									[
										1729498,
										1729503
									],
									[
										1729813,
										1729818
									],
									[
										1730018,
										1730023
									],
									[
										1730184,
										1730189
									],
									[
										1730387,
										1730392
									],
									[
										1730719,
										1730724
									],
									[
										1731023,
										1731028
									],
									[
										1731328,
										1731333
									],
									[
										1731533,
										1731538
									],
									[
										1731699,
										1731704
									],
									[
										1731902,
										1731907
									],
									[
										1732224,
										1732229
									],
									[
										1732492,
										1732497
									],
									[
										1732774,
										1732779
									],
									[
										1732954,
										1732959
									],
									[
										1733033,
										1733038
									],
									[
										1733177,
										1733182
									],
									[
										1733315,
										1733320
									],
									[
										1733544,
										1733549
									],
									[
										1733729,
										1733734
									],
									[
										1733992,
										1733997
									],
									[
										1734177,
										1734182
									],
									[
										1734354,
										1734359
									],
									[
										1734615,
										1734620
									],
									[
										1734882,
										1734887
									],
									[
										1735162,
										1735167
									],
									[
										1735433,
										1735438
									],
									[
										1735707,
										1735712
									],
									[
										1736016,
										1736021
									],
									[
										1736359,
										1736364
									],
									[
										1736643,
										1736648
									],
									[
										1736984,
										1736989
									],
									[
										1737250,
										1737255
									],
									[
										1737577,
										1737582
									],
									[
										1737906,
										1737911
									],
									[
										1738195,
										1738200
									],
									[
										1738467,
										1738472
									],
									[
										1738749,
										1738754
									],
									[
										1738991,
										1738996
									],
									[
										1739207,
										1739212
									],
									[
										1739377,
										1739382
									],
									[
										1739660,
										1739665
									],
									[
										1739957,
										1739962
									],
									[
										1740225,
										1740230
									],
									[
										1740517,
										1740522
									],
									[
										1740830,
										1740835
									],
									[
										1741170,
										1741175
									],
									[
										1741426,
										1741431
									],
									[
										1741743,
										1741748
									],
									[
										1742073,
										1742078
									],
									[
										1742280,
										1742285
									],
									[
										1742614,
										1742619
									],
									[
										1742799,
										1742804
									],
									[
										1743079,
										1743084
									],
									[
										1743154,
										1743159
									],
									[
										1743421,
										1743426
									],
									[
										1743525,
										1743530
									],
									[
										1743659,
										1743664
									],
									[
										1743781,
										1743786
									],
									[
										1743894,
										1743899
									],
									[
										1744091,
										1744096
									],
									[
										1744212,
										1744217
									],
									[
										1744492,
										1744497
									],
									[
										1744821,
										1744826
									],
									[
										1745142,
										1745147
									],
									[
										1745300,
										1745305
									],
									[
										1745469,
										1745474
									],
									[
										1745647,
										1745652
									],
									[
										1745855,
										1745860
									],
									[
										1746029,
										1746034
									],
									[
										1746182,
										1746187
									],
									[
										1746355,
										1746360
									],
									[
										1746519,
										1746524
									],
									[
										1746685,
										1746690
									],
									[
										1746868,
										1746873
									],
									[
										1747042,
										1747047
									],
									[
										1747234,
										1747239
									],
									[
										1747420,
										1747425
									],
									[
										1747595,
										1747600
									],
									[
										1748000,
										1748005
									],
									[
										1748158,
										1748163
									],
									[
										1748284,
										1748289
									],
									[
										1748437,
										1748442
									],
									[
										1748610,
										1748615
									],
									[
										1748774,
										1748779
									],
									[
										1748940,
										1748945
									],
									[
										1749123,
										1749128
									],
									[
										1749297,
										1749302
									],
									[
										1749489,
										1749494
									],
									[
										1749675,
										1749680
									],
									[
										1749850,
										1749855
									],
									[
										1750264,
										1750269
									],
									[
										1750458,
										1750463
									],
									[
										1750768,
										1750773
									],
									[
										1750962,
										1750967
									],
									[
										1751279,
										1751284
									],
									[
										1751601,
										1751606
									],
									[
										1751793,
										1751798
									],
									[
										1752107,
										1752112
									],
									[
										1752265,
										1752270
									],
									[
										1752434,
										1752439
									],
									[
										1752612,
										1752617
									],
									[
										1752820,
										1752825
									],
									[
										1752994,
										1752999
									],
									[
										1753147,
										1753152
									],
									[
										1753320,
										1753325
									],
									[
										1753484,
										1753489
									],
									[
										1753650,
										1753655
									],
									[
										1753833,
										1753838
									],
									[
										1754007,
										1754012
									],
									[
										1754328,
										1754333
									],
									[
										1754643,
										1754648
									],
									[
										1754801,
										1754806
									],
									[
										1755045,
										1755050
									],
									[
										1755345,
										1755350
									],
									[
										1755668,
										1755673
									],
									[
										1755846,
										1755851
									],
									[
										1756247,
										1756252
									],
									[
										1756405,
										1756410
									],
									[
										1756531,
										1756536
									],
									[
										1756684,
										1756689
									],
									[
										1756857,
										1756862
									],
									[
										1757021,
										1757026
									],
									[
										1757187,
										1757192
									],
									[
										1757370,
										1757375
									],
									[
										1757544,
										1757549
									],
									[
										1757864,
										1757869
									],
									[
										1758022,
										1758027
									],
									[
										1758191,
										1758196
									],
									[
										1758369,
										1758374
									],
									[
										1758577,
										1758582
									],
									[
										1758751,
										1758756
									],
									[
										1759057,
										1759062
									],
									[
										1759379,
										1759384
									],
									[
										1759694,
										1759699
									],
									[
										1759852,
										1759857
									],
									[
										1759978,
										1759983
									],
									[
										1760270,
										1760275
									],
									[
										1760649,
										1760654
									],
									[
										1760952,
										1760957
									],
									[
										1761197,
										1761202
									],
									[
										1761458,
										1761463
									],
									[
										1761645,
										1761650
									],
									[
										1761811,
										1761816
									],
									[
										1762209,
										1762214
									],
									[
										1762598,
										1762603
									],
									[
										1762898,
										1762903
									],
									[
										1763239,
										1763244
									],
									[
										1763460,
										1763465
									],
									[
										1763704,
										1763709
									],
									[
										1763937,
										1763942
									],
									[
										1764236,
										1764241
									],
									[
										1764341,
										1764346
									],
									[
										1764595,
										1764600
									],
									[
										1764705,
										1764710
									],
									[
										1764918,
										1764923
									],
									[
										1765059,
										1765064
									],
									[
										1765207,
										1765212
									],
									[
										1765386,
										1765391
									],
									[
										1765670,
										1765675
									],
									[
										1765941,
										1765946
									],
									[
										1766067,
										1766072
									],
									[
										1766216,
										1766221
									],
									[
										1766339,
										1766344
									],
									[
										1766599,
										1766604
									],
									[
										1766748,
										1766753
									],
									[
										1766870,
										1766875
									],
									[
										1767118,
										1767123
									],
									[
										1767287,
										1767292
									],
									[
										1767611,
										1767616
									],
									[
										1767901,
										1767906
									],
									[
										1768219,
										1768224
									],
									[
										1768345,
										1768350
									],
									[
										1768494,
										1768499
									],
									[
										1768619,
										1768624
									],
									[
										1768883,
										1768888
									],
									[
										1769150,
										1769155
									],
									[
										1769276,
										1769281
									],
									[
										1769425,
										1769430
									],
									[
										1769550,
										1769555
									],
									[
										1769809,
										1769814
									],
									[
										1769939,
										1769944
									],
									[
										1770093,
										1770098
									],
									[
										1770222,
										1770227
									],
									[
										1770344,
										1770349
									],
									[
										1770542,
										1770547
									],
									[
										1770736,
										1770741
									],
									[
										1770918,
										1770923
									],
									[
										1771200,
										1771205
									],
									[
										1771385,
										1771390
									],
									[
										1771653,
										1771658
									],
									[
										1771779,
										1771784
									],
									[
										1771933,
										1771938
									],
									[
										1772059,
										1772064
									],
									[
										1772280,
										1772285
									],
									[
										1772531,
										1772536
									],
									[
										1772789,
										1772794
									],
									[
										1773153,
										1773158
									],
									[
										1773438,
										1773443
									],
									[
										1773727,
										1773732
									],
									[
										1774204,
										1774209
									],
									[
										1774425,
										1774430
									],
									[
										1774586,
										1774591
									],
									[
										1774877,
										1774882
									],
									[
										1775061,
										1775066
									],
									[
										1775222,
										1775227
									],
									[
										1775402,
										1775407
									],
									[
										1775538,
										1775543
									],
									[
										1775702,
										1775707
									],
									[
										1775869,
										1775874
									],
									[
										1776008,
										1776013
									],
									[
										1776158,
										1776163
									],
									[
										1776205,
										1776210
									],
									[
										1776415,
										1776420
									],
									[
										1776591,
										1776596
									],
									[
										1776764,
										1776769
									],
									[
										1776941,
										1776946
									],
									[
										1777117,
										1777122
									],
									[
										1777291,
										1777296
									],
									[
										1777471,
										1777476
									],
									[
										1777597,
										1777602
									],
									[
										1777856,
										1777861
									],
									[
										1778007,
										1778012
									],
									[
										1778128,
										1778133
									],
									[
										1778411,
										1778416
									],
									[
										1790220,
										1790225
									],
									[
										1791892,
										1791897
									],
									[
										1792213,
										1792218
									],
									[
										1792823,
										1792828
									],
									[
										1793630,
										1793635
									],
									[
										1793885,
										1793890
									],
									[
										1794559,
										1794564
									],
									[
										1794713,
										1794718
									],
									[
										1795614,
										1795619
									],
									[
										1795771,
										1795776
									],
									[
										1812529,
										1812534
									],
									[
										1817407,
										1817412
									],
									[
										1817728,
										1817733
									],
									[
										1818175,
										1818180
									],
									[
										1828048,
										1828053
									],
									[
										1830006,
										1830011
									],
									[
										1834012,
										1834017
									],
									[
										1834527,
										1834532
									],
									[
										1834780,
										1834785
									],
									[
										1835183,
										1835188
									],
									[
										1845804,
										1845809
									],
									[
										1898270,
										1898275
									],
									[
										1912770,
										1912775
									],
									[
										1913103,
										1913108
									],
									[
										1913273,
										1913278
									],
									[
										1913690,
										1913695
									],
									[
										1918316,
										1918321
									],
									[
										1918431,
										1918436
									],
									[
										1919026,
										1919031
									],
									[
										1919281,
										1919286
									],
									[
										1921543,
										1921548
									],
									[
										1921815,
										1921820
									],
									[
										1921848,
										1921853
									],
									[
										1922179,
										1922184
									],
									[
										1937142,
										1937147
									],
									[
										1938699,
										1938704
									],
									[
										1946899,
										1946904
									],
									[
										1960791,
										1960796
									],
									[
										1961104,
										1961109
									],
									[
										1973249,
										1973254
									],
									[
										1973408,
										1973413
									],
									[
										1974204,
										1974209
									],
									[
										1975052,
										1975057
									],
									[
										1976904,
										1976909
									],
									[
										1978947,
										1978952
									],
									[
										2034646,
										2034651
									],
									[
										2034772,
										2034777
									],
									[
										2034921,
										2034926
									],
									[
										2035046,
										2035051
									],
									[
										2035290,
										2035295
									],
									[
										2035550,
										2035555
									],
									[
										2035699,
										2035704
									],
									[
										2035821,
										2035826
									],
									[
										2036130,
										2036135
									],
									[
										2036298,
										2036303
									],
									[
										2036638,
										2036643
									],
									[
										2036796,
										2036801
									],
									[
										2037057,
										2037062
									],
									[
										2037247,
										2037252
									],
									[
										2037390,
										2037395
									],
									[
										2037602,
										2037607
									],
									[
										2037789,
										2037794
									],
									[
										2038009,
										2038014
									],
									[
										2038156,
										2038161
									],
									[
										2038295,
										2038300
									],
									[
										2038481,
										2038486
									],
									[
										2038700,
										2038705
									],
									[
										2038831,
										2038836
									],
									[
										2038967,
										2038972
									],
									[
										2039106,
										2039111
									],
									[
										2039245,
										2039250
									],
									[
										2039424,
										2039429
									],
									[
										2039562,
										2039567
									],
									[
										2039782,
										2039787
									],
									[
										2039897,
										2039902
									],
									[
										2040004,
										2040009
									],
									[
										2040137,
										2040142
									],
									[
										2040280,
										2040285
									],
									[
										2040431,
										2040436
									],
									[
										2040695,
										2040700
									],
									[
										2040996,
										2041001
									],
									[
										2041172,
										2041177
									],
									[
										2041394,
										2041399
									],
									[
										2041510,
										2041515
									],
									[
										2041673,
										2041678
									],
									[
										2041925,
										2041930
									],
									[
										2042041,
										2042046
									],
									[
										2042202,
										2042207
									],
									[
										2042496,
										2042501
									],
									[
										2042703,
										2042708
									],
									[
										2042975,
										2042980
									],
									[
										2043146,
										2043151
									],
									[
										2043453,
										2043458
									],
									[
										2043627,
										2043632
									],
									[
										2043741,
										2043746
									],
									[
										2043990,
										2043995
									],
									[
										2044213,
										2044218
									],
									[
										2044573,
										2044578
									],
									[
										2044915,
										2044920
									],
									[
										2045272,
										2045277
									],
									[
										2045596,
										2045601
									],
									[
										2045782,
										2045787
									],
									[
										2045975,
										2045980
									],
									[
										2046164,
										2046169
									],
									[
										2046342,
										2046347
									],
									[
										2046619,
										2046624
									],
									[
										2046800,
										2046805
									],
									[
										2047051,
										2047056
									],
									[
										2047319,
										2047324
									],
									[
										2047555,
										2047560
									],
									[
										2047848,
										2047853
									],
									[
										2047974,
										2047979
									],
									[
										2048115,
										2048120
									],
									[
										2048241,
										2048246
									],
									[
										2048490,
										2048495
									],
									[
										2048813,
										2048818
									],
									[
										2049041,
										2049046
									],
									[
										2049362,
										2049367
									],
									[
										2049636,
										2049641
									],
									[
										2049960,
										2049965
									],
									[
										2050142,
										2050147
									],
									[
										2050445,
										2050450
									],
									[
										2050627,
										2050632
									],
									[
										2051047,
										2051052
									],
									[
										2051287,
										2051292
									],
									[
										2051487,
										2051492
									],
									[
										2051821,
										2051826
									],
									[
										2051954,
										2051959
									],
									[
										2052167,
										2052172
									],
									[
										2052265,
										2052270
									],
									[
										2052602,
										2052607
									],
									[
										2052765,
										2052770
									],
									[
										2052866,
										2052871
									],
									[
										2053021,
										2053026
									],
									[
										2053160,
										2053165
									],
									[
										2053388,
										2053393
									],
									[
										2053632,
										2053637
									],
									[
										2053760,
										2053765
									],
									[
										2054039,
										2054044
									],
									[
										2054346,
										2054351
									],
									[
										2054595,
										2054600
									],
									[
										2054760,
										2054765
									],
									[
										2054927,
										2054932
									],
									[
										2055037,
										2055042
									],
									[
										2055156,
										2055161
									],
									[
										2055338,
										2055343
									],
									[
										2055510,
										2055515
									],
									[
										2055630,
										2055635
									],
									[
										2055803,
										2055808
									],
									[
										2055979,
										2055984
									],
									[
										2056302,
										2056307
									],
									[
										2056461,
										2056466
									],
									[
										2056622,
										2056627
									],
									[
										2056726,
										2056731
									],
									[
										2056839,
										2056844
									],
									[
										2057015,
										2057020
									],
									[
										2057184,
										2057189
									],
									[
										2057304,
										2057309
									],
									[
										2057477,
										2057482
									],
									[
										2057653,
										2057658
									],
									[
										2057984,
										2057989
									],
									[
										2058143,
										2058148
									],
									[
										2058304,
										2058309
									],
									[
										2058408,
										2058413
									],
									[
										2058521,
										2058526
									],
									[
										2058697,
										2058702
									],
									[
										2058866,
										2058871
									],
									[
										2058986,
										2058991
									],
									[
										2059159,
										2059164
									],
									[
										2059335,
										2059340
									],
									[
										2059666,
										2059671
									],
									[
										2059825,
										2059830
									],
									[
										2059986,
										2059991
									],
									[
										2060090,
										2060095
									],
									[
										2060203,
										2060208
									],
									[
										2060379,
										2060384
									],
									[
										2060548,
										2060553
									],
									[
										2060668,
										2060673
									],
									[
										2060841,
										2060846
									],
									[
										2061017,
										2061022
									],
									[
										2061343,
										2061348
									],
									[
										2061508,
										2061513
									],
									[
										2061675,
										2061680
									],
									[
										2061785,
										2061790
									],
									[
										2061904,
										2061909
									],
									[
										2062086,
										2062091
									],
									[
										2062258,
										2062263
									],
									[
										2062378,
										2062383
									],
									[
										2062551,
										2062556
									],
									[
										2062727,
										2062732
									],
									[
										2063058,
										2063063
									],
									[
										2063217,
										2063222
									],
									[
										2063378,
										2063383
									],
									[
										2063482,
										2063487
									],
									[
										2063595,
										2063600
									],
									[
										2063771,
										2063776
									],
									[
										2063940,
										2063945
									],
									[
										2064060,
										2064065
									],
									[
										2064233,
										2064238
									],
									[
										2064409,
										2064414
									],
									[
										2064778,
										2064783
									],
									[
										2065043,
										2065048
									],
									[
										2065238,
										2065243
									],
									[
										2065493,
										2065498
									],
									[
										2065779,
										2065784
									],
									[
										2065999,
										2066004
									],
									[
										2066255,
										2066260
									],
									[
										2066467,
										2066472
									],
									[
										2066821,
										2066826
									],
									[
										2067061,
										2067066
									],
									[
										2067245,
										2067250
									],
									[
										2067417,
										2067422
									],
									[
										2067641,
										2067646
									],
									[
										2067951,
										2067956
									],
									[
										2068228,
										2068233
									],
									[
										2068458,
										2068463
									],
									[
										2068931,
										2068936
									],
									[
										2069158,
										2069163
									],
									[
										2069812,
										2069817
									],
									[
										2069924,
										2069929
									],
									[
										2071157,
										2071162
									],
									[
										2072436,
										2072441
									],
									[
										2074087,
										2074092
									],
									[
										2074356,
										2074361
									],
									[
										2074624,
										2074629
									],
									[
										2074871,
										2074876
									],
									[
										2075104,
										2075109
									],
									[
										2075392,
										2075397
									],
									[
										2075654,
										2075659
									],
									[
										2075933,
										2075938
									],
									[
										2076128,
										2076133
									],
									[
										2076383,
										2076388
									],
									[
										2076669,
										2076674
									],
									[
										2076942,
										2076947
									],
									[
										2077198,
										2077203
									],
									[
										2077410,
										2077415
									],
									[
										2077764,
										2077769
									],
									[
										2077948,
										2077953
									],
									[
										2078206,
										2078211
									],
									[
										2078390,
										2078395
									],
									[
										2078562,
										2078567
									],
									[
										2078786,
										2078791
									],
									[
										2079096,
										2079101
									],
									[
										2079395,
										2079400
									],
									[
										2079868,
										2079873
									],
									[
										2080095,
										2080100
									],
									[
										2080749,
										2080754
									],
									[
										2080861,
										2080866
									],
									[
										2082094,
										2082099
									],
									[
										2083373,
										2083378
									],
									[
										2085024,
										2085029
									],
									[
										2085293,
										2085298
									],
									[
										2085561,
										2085566
									],
									[
										2085732,
										2085737
									],
									[
										2085932,
										2085937
									],
									[
										2086200,
										2086205
									],
									[
										2086462,
										2086467
									],
									[
										2086743,
										2086748
									],
									[
										2086965,
										2086970
									],
									[
										2087207,
										2087212
									],
									[
										2087484,
										2087489
									],
									[
										2087679,
										2087684
									],
									[
										2087909,
										2087914
									],
									[
										2088247,
										2088252
									],
									[
										2088636,
										2088641
									],
									[
										2088876,
										2088881
									],
									[
										2089201,
										2089206
									],
									[
										2089602,
										2089607
									],
									[
										2089837,
										2089842
									],
									[
										2090151,
										2090156
									],
									[
										2090417,
										2090422
									],
									[
										2090715,
										2090720
									],
									[
										2091003,
										2091008
									],
									[
										2091206,
										2091211
									],
									[
										2091535,
										2091540
									],
									[
										2091818,
										2091823
									],
									[
										2092097,
										2092102
									],
									[
										2092390,
										2092395
									],
									[
										2092626,
										2092631
									],
									[
										2092979,
										2092984
									],
									[
										2093170,
										2093175
									],
									[
										2093396,
										2093401
									],
									[
										2093673,
										2093678
									],
									[
										2093868,
										2093873
									],
									[
										2094136,
										2094141
									],
									[
										2094422,
										2094427
									],
									[
										2094695,
										2094700
									],
									[
										2094951,
										2094956
									],
									[
										2095163,
										2095168
									],
									[
										2095517,
										2095522
									],
									[
										2095757,
										2095762
									],
									[
										2095983,
										2095988
									],
									[
										2096155,
										2096160
									],
									[
										2096367,
										2096372
									],
									[
										2096519,
										2096524
									],
									[
										2096789,
										2096794
									],
									[
										2097054,
										2097059
									],
									[
										2097409,
										2097414
									],
									[
										2097719,
										2097724
									],
									[
										2098018,
										2098023
									],
									[
										2098604,
										2098609
									],
									[
										2098831,
										2098836
									],
									[
										2099485,
										2099490
									],
									[
										2099597,
										2099602
									],
									[
										2100830,
										2100835
									],
									[
										2101506,
										2101511
									],
									[
										2102320,
										2102325
									],
									[
										2103971,
										2103976
									],
									[
										2104240,
										2104245
									],
									[
										2104508,
										2104513
									],
									[
										2104704,
										2104709
									],
									[
										2104972,
										2104977
									],
									[
										2105310,
										2105315
									],
									[
										2105591,
										2105596
									],
									[
										2105813,
										2105818
									],
									[
										2106055,
										2106060
									],
									[
										2106332,
										2106337
									],
									[
										2107071,
										2107076
									],
									[
										2107720,
										2107725
									],
									[
										2107986,
										2107991
									],
									[
										2108284,
										2108289
									],
									[
										2108572,
										2108577
									],
									[
										2108775,
										2108780
									],
									[
										2109136,
										2109141
									],
									[
										2109542,
										2109547
									],
									[
										2109782,
										2109787
									],
									[
										2110029,
										2110034
									],
									[
										2110264,
										2110269
									],
									[
										2110607,
										2110612
									],
									[
										2111001,
										2111006
									],
									[
										2111246,
										2111251
									],
									[
										2111628,
										2111633
									],
									[
										2111819,
										2111824
									],
									[
										2112147,
										2112152
									],
									[
										2112342,
										2112347
									],
									[
										2112610,
										2112615
									],
									[
										2112896,
										2112901
									],
									[
										2113169,
										2113174
									],
									[
										2113425,
										2113430
									],
									[
										2113637,
										2113642
									],
									[
										2113991,
										2113996
									],
									[
										2114231,
										2114236
									],
									[
										2114460,
										2114465
									],
									[
										2114638,
										2114643
									],
									[
										2114892,
										2114897
									],
									[
										2115157,
										2115162
									],
									[
										2115512,
										2115517
									],
									[
										2115822,
										2115827
									],
									[
										2116099,
										2116104
									],
									[
										2116329,
										2116334
									],
									[
										2116915,
										2116920
									],
									[
										2117142,
										2117147
									],
									[
										2117796,
										2117801
									],
									[
										2117908,
										2117913
									],
									[
										2119141,
										2119146
									],
									[
										2119817,
										2119822
									],
									[
										2120631,
										2120636
									],
									[
										2122282,
										2122287
									],
									[
										2122551,
										2122556
									],
									[
										2122819,
										2122824
									],
									[
										2122990,
										2122995
									],
									[
										2123190,
										2123195
									],
									[
										2123458,
										2123463
									],
									[
										2123796,
										2123801
									],
									[
										2124077,
										2124082
									],
									[
										2124299,
										2124304
									],
									[
										2124541,
										2124546
									],
									[
										2124818,
										2124823
									],
									[
										2125557,
										2125562
									],
									[
										2126134,
										2126139
									],
									[
										2126364,
										2126369
									],
									[
										2126702,
										2126707
									],
									[
										2127091,
										2127096
									],
									[
										2127331,
										2127336
									],
									[
										2127719,
										2127724
									],
									[
										2127910,
										2127915
									],
									[
										2128246,
										2128251
									],
									[
										2128441,
										2128446
									],
									[
										2128709,
										2128714
									],
									[
										2128995,
										2129000
									],
									[
										2129268,
										2129273
									],
									[
										2129524,
										2129529
									],
									[
										2129736,
										2129741
									],
									[
										2130090,
										2130095
									],
									[
										2130330,
										2130335
									],
									[
										2130559,
										2130564
									],
									[
										2130737,
										2130742
									],
									[
										2130991,
										2130996
									],
									[
										2131256,
										2131261
									],
									[
										2131611,
										2131616
									],
									[
										2131921,
										2131926
									],
									[
										2132198,
										2132203
									],
									[
										2132428,
										2132433
									],
									[
										2133014,
										2133019
									],
									[
										2133241,
										2133246
									],
									[
										2133895,
										2133900
									],
									[
										2134007,
										2134012
									],
									[
										2135240,
										2135245
									],
									[
										2135916,
										2135921
									],
									[
										2136730,
										2136735
									],
									[
										2138381,
										2138386
									],
									[
										2138650,
										2138655
									],
									[
										2138918,
										2138923
									],
									[
										2139089,
										2139094
									],
									[
										2139289,
										2139294
									],
									[
										2139557,
										2139562
									],
									[
										2139895,
										2139900
									],
									[
										2140176,
										2140181
									],
									[
										2140398,
										2140403
									],
									[
										2140640,
										2140645
									],
									[
										2140917,
										2140922
									],
									[
										2141656,
										2141661
									],
									[
										2142233,
										2142238
									],
									[
										2142463,
										2142468
									],
									[
										2142801,
										2142806
									],
									[
										2143190,
										2143195
									],
									[
										2143430,
										2143435
									],
									[
										2143809,
										2143814
									],
									[
										2144004,
										2144009
									],
									[
										2144259,
										2144264
									],
									[
										2144545,
										2144550
									],
									[
										2144765,
										2144770
									],
									[
										2145021,
										2145026
									],
									[
										2145233,
										2145238
									],
									[
										2145587,
										2145592
									],
									[
										2145827,
										2145832
									],
									[
										2146011,
										2146016
									],
									[
										2146183,
										2146188
									],
									[
										2146395,
										2146400
									],
									[
										2146547,
										2146552
									],
									[
										2146824,
										2146829
									],
									[
										2147348,
										2147353
									],
									[
										2147603,
										2147608
									],
									[
										2147844,
										2147849
									],
									[
										2148233,
										2148238
									],
									[
										2148554,
										2148559
									],
									[
										2148947,
										2148952
									],
									[
										2149283,
										2149288
									],
									[
										2149475,
										2149480
									],
									[
										2149640,
										2149645
									],
									[
										2149831,
										2149836
									],
									[
										2150219,
										2150224
									],
									[
										2150599,
										2150604
									],
									[
										2150931,
										2150936
									],
									[
										2151222,
										2151227
									],
									[
										2151448,
										2151453
									],
									[
										2151793,
										2151798
									],
									[
										2152162,
										2152167
									],
									[
										2152452,
										2152457
									],
									[
										2152638,
										2152643
									],
									[
										2152789,
										2152794
									],
									[
										2153073,
										2153078
									],
									[
										2153439,
										2153444
									],
									[
										2153699,
										2153704
									],
									[
										2154024,
										2154029
									],
									[
										2154274,
										2154279
									],
									[
										2154579,
										2154584
									],
									[
										2154853,
										2154858
									],
									[
										2155179,
										2155184
									],
									[
										2155304,
										2155309
									],
									[
										2155414,
										2155419
									],
									[
										2155552,
										2155557
									],
									[
										2155713,
										2155718
									],
									[
										2155866,
										2155871
									],
									[
										2156205,
										2156210
									],
									[
										2156482,
										2156487
									],
									[
										2156623,
										2156628
									],
									[
										2156865,
										2156870
									],
									[
										2157113,
										2157118
									],
									[
										2157398,
										2157403
									],
									[
										2157693,
										2157698
									],
									[
										2157971,
										2157976
									],
									[
										2158319,
										2158324
									],
									[
										2158784,
										2158789
									],
									[
										2159188,
										2159193
									],
									[
										2159518,
										2159523
									],
									[
										2159808,
										2159813
									],
									[
										2160075,
										2160080
									],
									[
										2160351,
										2160356
									],
									[
										2160704,
										2160709
									],
									[
										2161026,
										2161031
									],
									[
										2161235,
										2161240
									],
									[
										2161570,
										2161575
									],
									[
										2161979,
										2161984
									],
									[
										2162287,
										2162292
									],
									[
										2162599,
										2162604
									],
									[
										2162945,
										2162950
									],
									[
										2163106,
										2163111
									],
									[
										2163272,
										2163277
									],
									[
										2163610,
										2163615
									],
									[
										2163838,
										2163843
									],
									[
										2164222,
										2164227
									],
									[
										2164632,
										2164637
									],
									[
										2165112,
										2165117
									],
									[
										2165581,
										2165586
									],
									[
										2166065,
										2166070
									],
									[
										2166325,
										2166330
									],
									[
										2166495,
										2166500
									],
									[
										2166658,
										2166663
									],
									[
										2166835,
										2166840
									],
									[
										2166998,
										2167003
									],
									[
										2167139,
										2167144
									],
									[
										2167282,
										2167287
									],
									[
										2167565,
										2167570
									],
									[
										2167674,
										2167679
									],
									[
										2167793,
										2167798
									],
									[
										2167923,
										2167928
									],
									[
										2168072,
										2168077
									],
									[
										2168269,
										2168274
									],
									[
										2168498,
										2168503
									],
									[
										2168674,
										2168679
									],
									[
										2168939,
										2168944
									],
									[
										2169130,
										2169135
									],
									[
										2169287,
										2169292
									],
									[
										2169506,
										2169511
									],
									[
										2169653,
										2169658
									],
									[
										2169756,
										2169761
									],
									[
										2169987,
										2169992
									],
									[
										2170278,
										2170283
									],
									[
										2170559,
										2170564
									],
									[
										2170867,
										2170872
									],
									[
										2171078,
										2171083
									],
									[
										2171372,
										2171377
									],
									[
										2171486,
										2171491
									],
									[
										2171577,
										2171582
									],
									[
										2171739,
										2171744
									],
									[
										2171879,
										2171884
									],
									[
										2176474,
										2176479
									],
									[
										2188084,
										2188089
									],
									[
										2191597,
										2191602
									],
									[
										2192021,
										2192026
									],
									[
										2192747,
										2192752
									],
									[
										2194430,
										2194435
									],
									[
										2196225,
										2196230
									],
									[
										2208598,
										2208603
									],
									[
										2209588,
										2209593
									],
									[
										2213148,
										2213153
									],
									[
										2214920,
										2214925
									],
									[
										2216203,
										2216208
									],
									[
										2231187,
										2231192
									],
									[
										2239139,
										2239144
									],
									[
										2254373,
										2254378
									],
									[
										2257345,
										2257350
									],
									[
										2258423,
										2258428
									],
									[
										2259058,
										2259063
									],
									[
										2259492,
										2259497
									],
									[
										2260045,
										2260050
									],
									[
										2260750,
										2260755
									],
									[
										2262081,
										2262086
									],
									[
										2262723,
										2262728
									],
									[
										2268010,
										2268015
									],
									[
										2271714,
										2271719
									],
									[
										2275862,
										2275867
									],
									[
										2283591,
										2283596
									],
									[
										2287651,
										2287656
									],
									[
										2311650,
										2311655
									],
									[
										2334788,
										2334793
									],
									[
										2335611,
										2335616
									],
									[
										2342812,
										2342817
									],
									[
										2343221,
										2343226
									],
									[
										2343552,
										2343557
									],
									[
										2343767,
										2343772
									],
									[
										2344080,
										2344085
									],
									[
										2344372,
										2344377
									],
									[
										2344539,
										2344544
									],
									[
										2344985,
										2344990
									],
									[
										2345118,
										2345123
									],
									[
										2345393,
										2345398
									],
									[
										2345683,
										2345688
									],
									[
										2345856,
										2345861
									],
									[
										2346207,
										2346212
									],
									[
										2346460,
										2346465
									],
									[
										2346798,
										2346803
									],
									[
										2347127,
										2347132
									],
									[
										2347341,
										2347346
									],
									[
										2347618,
										2347623
									],
									[
										2347893,
										2347898
									],
									[
										2348092,
										2348097
									],
									[
										2348243,
										2348248
									],
									[
										2348514,
										2348519
									],
									[
										2348825,
										2348830
									],
									[
										2349142,
										2349147
									],
									[
										2349549,
										2349554
									],
									[
										2349796,
										2349801
									],
									[
										2350264,
										2350269
									],
									[
										2350402,
										2350407
									],
									[
										2350653,
										2350658
									],
									[
										2350979,
										2350984
									],
									[
										2351145,
										2351150
									],
									[
										2351438,
										2351443
									],
									[
										2351717,
										2351722
									],
									[
										2352048,
										2352053
									],
									[
										2352273,
										2352278
									],
									[
										2352531,
										2352536
									],
									[
										2352694,
										2352699
									],
									[
										2353013,
										2353018
									],
									[
										2353324,
										2353329
									],
									[
										2353508,
										2353513
									],
									[
										2353728,
										2353733
									],
									[
										2353862,
										2353867
									],
									[
										2354126,
										2354131
									],
									[
										2354366,
										2354371
									],
									[
										2354518,
										2354523
									],
									[
										2354709,
										2354714
									],
									[
										2355038,
										2355043
									],
									[
										2355294,
										2355299
									],
									[
										2355378,
										2355383
									],
									[
										2355675,
										2355680
									],
									[
										2355875,
										2355880
									],
									[
										2356075,
										2356080
									],
									[
										2356225,
										2356230
									],
									[
										2356416,
										2356421
									],
									[
										2356609,
										2356614
									],
									[
										2356783,
										2356788
									],
									[
										2356958,
										2356963
									],
									[
										2357157,
										2357162
									],
									[
										2357300,
										2357305
									],
									[
										2357533,
										2357538
									],
									[
										2357687,
										2357692
									],
									[
										2357881,
										2357886
									],
									[
										2358134,
										2358139
									],
									[
										2358459,
										2358464
									],
									[
										2358614,
										2358619
									],
									[
										2358769,
										2358774
									],
									[
										2358964,
										2358969
									],
									[
										2359261,
										2359266
									],
									[
										2359512,
										2359517
									],
									[
										2359778,
										2359783
									],
									[
										2360045,
										2360050
									],
									[
										2360353,
										2360358
									],
									[
										2360601,
										2360606
									],
									[
										2360832,
										2360837
									],
									[
										2361018,
										2361023
									],
									[
										2361160,
										2361165
									],
									[
										2361508,
										2361513
									],
									[
										2361821,
										2361826
									],
									[
										2362135,
										2362140
									],
									[
										2362356,
										2362361
									],
									[
										2362600,
										2362605
									],
									[
										2362924,
										2362929
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								2362914,
								2362914
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										2362682,
										2362683
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"default_dir": "C:\\Users\\Tyler\\rideStyler\\widgets\\com.burkson.ridestyler.widgets\\widgets\\showcase\\src\\styles\\components",
							"detect_indentation": false,
							"git_gutter_is_enabled": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 2,
								"tabSize": 2
							}
						},
						"translation.x": 0.0,
						"translation.y": 325963.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 67.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 120.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "mobileView.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 414.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
